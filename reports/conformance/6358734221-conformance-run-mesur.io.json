{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3b832f63-09f7-4a1f-90b3-709dbbe17709",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8672439d-272d-4d7d-ab76-22a773b19713",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1021ac0-a685-4706-9f78-1da5280d713c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "82c32a00-e006-47f0-a897-07d93f8bdbac"
                }
              }
            ]
          },
          {
            "id": "6a772355-a9f2-483a-803c-347f2d7e82fe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f80ae152-03f5-4da9-b5d9-c57ceb8f8d74",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3a11e7bc-8973-4c9a-853a-4e1d1e6b8e9a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c48220e7-21f1-41d9-be11-9048b4b390eb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "10bf646e-c665-4887-9c54-20e978cc47e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d09fcf11-1e95-48ba-ab9b-321eada859f0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de36c98e-222e-4939-8720-363d66bc6296",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf03efaf-35c0-42c8-af2a-5edc7feafece"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cce89f4f-571b-488c-801f-7b6830d5527f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4f1c4b7-cdfb-4dea-b7bf-84ba68913221"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a9df5da-a8ba-4db5-97de-596dfa1d4708",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e79e9b95-86a8-4c55-8410-412f4650e8f0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d141dd32-41a2-46b4-b811-f81e9d8c7f60",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "50b973d9-24cc-409c-9996-e65e316996f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62da055f-9e43-4b40-a3a3-a7b98eb9d341",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "455c7117-d061-41e3-a39f-a228a366a76d"
            }
          }
        ]
      },
      {
        "id": "7d5f18ed-3c05-49a3-acbc-2619add2684f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a81cf868-d680-4500-8749-b7384c6e8480",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b0ff054-8daa-40be-9297-b7c278ab8ee9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d61d1b3-8933-4fe4-80e0-fca3b6d285e0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf8497d-e8d7-4ed3-9725-6e00460537e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eac9fdc2-f46f-45af-8bd6-e4509828dd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee38862-7907-46af-9414-a8a239d7bb3b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed041cd-e893-488e-b8b5-84a582042294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a647439-5e39-4f37-86f4-f702f36dcc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08137aa-6dd8-4509-8675-87efed3350b6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1ca17d-c4a6-4266-8d7e-2404032df7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "903e8270-1e9d-4569-8d7c-4534ec423a5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0f601ba-a3f0-4707-8b4b-57580018c73e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00159387-d035-4ae7-8cda-54c54e3c56fd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c964be8f-70d4-4129-bc4e-57e73c167ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da9a51b4-ee3e-47ed-bfbb-4788c75b1774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe31450-7724-4f6a-9dc1-24aca15b0174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e51134c-2a0d-4c8f-80e4-97046e5ffc72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "64c8c9b8-c8ad-4525-b006-c2d3f1bf82d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fe93e97-11e8-4c3a-808f-65fc7feedb58",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ed9e388-ebd3-4937-aff3-54b32a476b66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fcaf1c08-df1d-403c-bb9b-836a47721a2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36493876-3315-4980-a2f5-39d37ce6e0ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "822cba87-799a-4eaf-83e9-e14eae1824f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65e843e4-c4e0-419f-bbf6-239d62c3cfe8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60a6ca8c-1577-4682-9638-22ea02641835"
            }
          }
        ]
      },
      {
        "id": "d0d90e07-d8de-4712-b530-3e472d9976d3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "302c5860-da4c-4cdb-a996-b06b79b6c5c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31780afa-0028-4076-b52a-4755125490f6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e8d0d1a9-310f-456a-9227-8db154732f8b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b10712-08db-4048-865e-9000838c4c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6321be4b-c585-4f0d-9f7e-1a97d40c8aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd781bfa-553c-4cbd-a54d-76ecf6cbc2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12a20d4e-10ea-4998-8eb5-09988e1d59bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda21f81-7188-4a19-af84-96556ab7646e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8509dcb-1472-402f-811f-86cdcdc96dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b4ebc1-8cab-416a-a97c-adfa2f2ea882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9257c1af-f630-4d2b-9789-cfe47f84ffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37589c50-145a-4bd8-b111-61fbb94a527f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faae8804-21d5-47de-80f6-84d6bd01c39f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9650a09c-25c8-4e7b-bd92-a3a8f1eed0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd9e10e-da64-45d2-b9f2-64dea9938501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99aec17d-446d-4df8-8949-0d4c3d889eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79ccc063-0a16-4138-a0ee-867f030ed597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294d4f2b-772b-4edd-91a9-02cf8a4d0194",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbaaa8e-b3dd-494b-9d99-39f889b73ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e30144f-3288-4c6d-b11f-c88af3cfa8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebabf075-7945-43c3-bd9c-5bde79a84b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2648699b-fa6b-4bbc-90bf-41b45f844384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08be9ab-8e6a-44fe-ac38-7c498dcfe3a1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd866a0-5c18-4d00-90ff-9dccffd67f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5cb1ad4-6590-4b9b-8556-ecc03abbf46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d230c13-c21c-4980-abb7-3e49681330d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bd28fd2-3bbc-4ee8-a86a-924be1dc512c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3e8f56-7af7-470e-8732-ed714bdf1a7a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255a2d90-ae65-40c3-952b-2a37737d2d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3760eca3-b280-468b-ba53-b9f396cccf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a847c096-e71a-4d75-8984-1cbb615a23c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6bf15c5-fd05-40b6-b731-3c9e3fb8f90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69c365c-baaf-4d27-80fa-0128d6d9f9cf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ce836f-c2d3-4dfe-aeb8-b6645bdc72a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038fde0b-89dd-40c3-a570-b60e04b13373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba30ea9-d2b4-435a-802a-1664893ea964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fff42131-65bb-4dc9-86c0-33efea797aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9ba05e-96f9-460c-967e-fb3d7f616a78",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768c0815-037e-449e-90da-92965c089161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3235f7d-75f9-459c-80f6-9f3a773c6a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85cfedb-ba17-4c4d-981d-b1f0a71303be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b2ff7d6-af9f-4379-b486-30880395fd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa8411f-050d-4af3-86e6-e786e85af1a4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4fd5ed-77c6-4266-b9e6-322971db8fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51acbe7d-bb54-4b3f-934d-75c5f27a4bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064d579a-6df1-469c-9761-e28e43dcd433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13185b0b-fcec-4bbe-b063-470285eb2f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd4ef2f-2ff5-4d6d-a28d-c2126409b669",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5078b9a2-c2e2-403e-b1fc-a1d4f09b44f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bba270-b522-4402-8bd1-f6825ddbac6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467db8d6-5337-45d9-ba67-7c9cdc779ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14e69dc9-8379-4e09-ae96-fbd70efe7b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d33d9e-91b9-4ad3-a3ac-e511aa5ca679",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36edf316-6413-4187-af19-cbaa893822fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93155c7d-a9e5-434c-8adb-e21b42904aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebfe0c1-8832-4de1-98f5-afbacd3ff943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d2bf49a-e335-4406-b298-81c1d3c6fd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3fbc50-122d-4c4d-b9bd-1078d4dcc7a5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cd10ac-8748-4010-a20d-1bd24708fb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b960dadc-2541-4735-a71a-0fbb84d3d0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0931b5d-5375-4c2f-b4f4-9e52ccfad274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9249d3f-cb1e-497f-a5a3-6778fa6cef52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ffd7f1-8321-4d4e-9306-46b06dbe1798",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea7f5ac-15b9-4681-add6-1b22bf514fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21501d0-ce8c-45c3-a095-450fdcd4a293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4f7fc5-7798-4819-9683-2acb36825325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "947c2ee3-7430-4cc3-9d23-806a6d8fd4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4b91c2-2da8-4fbf-91f2-ab45b721a1de",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35142dbb-7d28-41d6-9a5f-7c7425c44f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9644d5-2932-4aaf-89e4-8c853e0bb9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ff8ba1-75f9-4400-a5a2-895a78b20b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bce40196-9648-4983-80d9-619510ed2c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad364cbb-ec94-4eb5-b2a3-62bb342265b7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9535439-cbbc-4551-aa94-f02eabc7ffed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5382cf-9ab6-48a0-b55b-9803a4123c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b85c916-9e79-4466-8e75-c50866e8052d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff1e0467-44de-4271-a30a-bdf328b3251f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c62b3f-2726-464a-b054-f7ea4ad1fbfe",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff16cda-9a10-4953-95be-fccbf6ed129a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4399bf75-8333-47a1-8973-e400bd0fbd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3af957-3cf3-4bc4-8244-939f293888cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ae242a2-eaa6-4cb5-8502-06630f72773b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cd9545-3dbc-4ce4-badd-0f24a28aa891",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a879a6f-d852-45a8-a563-28274919d2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f027ab0e-de65-426b-8ecc-812aa7f80620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4392c7-3cc2-4b10-bc40-2e1d19d8f59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fa29ad1-087b-4524-aa08-89a41ea71b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988beb5b-5e0b-4d60-a19e-d24f7c1c12ae",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451e3ccf-2ac9-419b-aefe-258708479f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a48cbb-d788-4caa-bedc-7a5c626ebf3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763f1c14-bb5e-4a80-a743-4e52cebadf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "15f4987c-2b3c-44a7-80fd-abed87ef7d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81399e9b-a380-4fa8-b067-934d9692f4cd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5046ca22-e9f5-40e7-9890-7599985bfa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc1bd02-2db9-4293-9bd2-a9aa0cb5ac66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aefeb8c-9d24-41eb-b396-ae8136b993e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd93a9c7-7dc3-45a8-a438-82ab5cdbcffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa85a2af-17c9-4074-a697-6b0dd5b40e83",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32f8e9b-a893-42ee-80df-baee05db7aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683728a7-1f87-40ad-b92a-2b8bb3f4989d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952075a6-bc3f-4ba5-92f1-eaf1f84b61ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "740d3147-56e2-40a0-b338-ff483a73d5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086b6776-b69a-48ee-a9d6-b718437e43b9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bdf24d-97b5-445a-b884-ec7bcdd74e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38432609-b8be-4225-9b60-fd494f15ff7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dea9bf-a5ef-4291-b40d-710520f0f4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26d00d83-f681-4ad0-88b9-5801d7646e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d60dde1-7eb6-41a9-a903-20b5dc103bb4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ffe937-b210-4848-a428-37d8b886911f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d4f80a-9307-4f35-acba-c946cbd3c1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8302997d-2573-4a3d-a40f-7b683dc4591b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8395680-2ffb-4e7f-8b1a-7aa2126623c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb1e852-aa03-4880-9205-6f464129e333",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea69141f-2ef1-43f6-9e08-54dee4e141ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1877cdf1-8d2e-4652-98f2-d99376ba7a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3d1f05-3995-46f2-a605-28ecf5ba3e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb299453-f302-4b36-8ae2-67fce2e68701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce520fab-8c6f-4afe-9e9b-6a7a6b404353",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f8c21b-c514-468f-9696-bee0c9369a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea973c54-c4cb-426b-94f6-ad08521550ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9057fb3b-9dae-4edf-8331-6ddb33ba3111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f16f79f-d348-41ff-830c-a5498ecc485d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876965f1-13cf-4648-af93-6786f640cd7a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d1698b-505c-4693-b519-a0e9fe86f6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52a0650-b156-431f-881c-e74a013570b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3c9cdc-c653-4194-a8e6-b8cb3d15d4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "337189a6-4f41-436b-b9a3-8193afad4be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52416248-170c-4609-8b2a-e815632915bb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c7e063-767b-4069-9623-1776b5c544fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94420328-99ec-4291-8812-4a53fbf774bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a77e8bd-80c1-4177-9bc8-eace0a063790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3e008b-4215-41bd-83a1-987a340c168a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dec840-2734-408f-93cf-b09a481346b3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4cbe56-44f5-48d2-aa0d-8f2cb099347c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9442b1d-b48d-49ee-911f-67639d72993b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1234d38-9680-4784-b558-43202c64d7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bba214c-bd43-4484-a157-4fc1ac2493bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a277c9b-05d8-4140-934b-8cc4ab488fb2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682a19a9-83ce-4099-bac0-026287727f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76d57f2-5dc5-4de9-9478-a8f0c22499fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72166bf-00f2-461d-9232-ae53afbf0cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c935748a-ebe5-49fb-8cbe-5eefd13b80cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ba0010-6159-4050-b263-6abdb7259024",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ef9eb6-3161-4aea-8b97-2386bc62885d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb06f8b7-95a7-4734-afde-bd083218ace1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256de2ba-ffe6-4137-8b55-c5dc1f408481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c420484-2799-41ce-8ae0-0a7fd30cbf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f42ad12-f051-4018-98e8-7344e3414bdd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a20814c-487f-446d-91b2-63090dadb1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0391e960-fccc-41a9-b68d-02bdbdeed2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c42920-7cf3-4b61-9b31-632612d349fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e0dae9-ef84-4da1-a230-4ea764041dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5420fa68-0395-4403-9147-5b0e621d3f56",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e4c87d-e844-4d74-9d6a-1b505022fefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95dedb9-8f89-49e2-87d9-382566c2444b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3162dc2c-7968-4535-9179-984e09ce8b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70cfc6d2-fd59-4254-bc5d-2d87336cb0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5ae0d2-5e31-4241-beac-52cebc69c0e3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2e827d-a926-491d-9b6c-b6e07eb83832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb83592-7b54-4248-a4a0-631923482048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476730c8-1251-405d-8320-13f7c8839bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96cbc9b7-b09b-4404-817d-b46b3d26553f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49cca77-acfd-49d7-bfa3-3d133e291e4c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f64f6ad-de59-4e06-84e4-ba6260e08315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fe1162-541c-4f72-9bf1-3eac3aa35867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c62fb28-64b8-4f40-9d83-70e0e33978d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66e01c2e-447f-46b4-8e01-03ecf114606b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96663f8-99d7-47ac-94b2-661b724ffe77",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbb7e55-c616-4376-84c0-e623312ff504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f085be0c-52db-446e-b935-24aac3d8121f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33b3516-2c15-4043-bf5e-88e1c4cf1314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "332241de-2a75-4e3d-9c1d-4093dbcbae18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21dd00a-b72b-4574-8de8-161b69924f89",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf31b7d-c2a2-4595-a01a-909f2d94172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c9f4e7-1089-4818-a115-444336c126d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae9dcef-3724-4127-bf34-4da8b6b797c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f06091e9-ad61-4aa9-8422-3c1d11efbcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8aecc3d-52df-4e6f-883e-d9b75094f94a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41d0c81-fdbb-4e6e-b4a8-f1388853930e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76c2ae44-8342-454b-b935-b4214c832f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25def2c3-8de5-4f0f-94f9-4d3bcc630c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9835a19-6d3b-4c0e-a414-c7ee0be61457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3879e0b-9600-4151-987d-e6fc5e867c34",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72becb86-3f0c-4610-8cad-cc252a61d003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57710fc6-dc1b-4129-a3be-5a6dfe120c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09642f7e-7f15-45f6-932b-b299f7695f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1942c1-72e9-4727-992b-b2ccd1fec8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b725aa-4c38-4d61-a605-66da20b0ef95",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3135da8-2406-4995-8170-e61722dc383b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d25b694-1ff4-48c7-87ce-0c5bd325843d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c27586a-b10c-488c-81f4-a73ca4865c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb74320c-983b-474f-9669-adc1e4f4b80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af69bd68-8c01-4d5b-93bf-859563a1e44c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef10851-1922-48b2-9b2f-0fd4239f95d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd7a67c-88ed-402b-9bd0-b7c5610b4790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d52653-1f86-48ca-b94b-d7cf06da5173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9783c6-3221-4a90-a9e6-f979c5c06492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2038e2-51b3-40a4-84ea-a2c01eeb1084",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd30b48-378d-4fe8-8226-9a01fb084e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3240662-7508-4309-8e57-44ad56de6652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfee3f8-07be-4cf0-b7ce-1d379dafda23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d70ec798-fbf2-4f88-b045-8d0b2fc590fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c97ec3c-ca8e-4f8f-bae4-fefe4693c7d4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0e7ef9-b3ee-4a4a-8ae0-c2a0e622c689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75bf5ce-0fff-44ac-8f9d-9da7d1db6582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1a524a-3a61-4fa6-b75a-608c581436f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7a44a8-e587-4e6a-a57e-764316907168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0701fe7f-db5e-439b-a1e4-0f93eef89f00",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1819b3af-7ce5-4ad6-8470-ae46e79b7d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a931f911-ce7e-4aa5-803b-54a2abda7678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941bb238-9304-4987-9c95-b03ab7cb4701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e76f099f-d688-4c69-a37e-622c3acef0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47db5868-1ad3-4ff9-a21a-f46b75ad9974",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1763a1bd-4cbe-4be1-baae-862f96df9d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5fb030-87de-4423-8ca5-011d1283ef21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc607039-35f4-43fb-9e65-4ee388894331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae99daf6-b90a-4394-9907-20dc002d7c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c3b3e8-49f4-43f0-8827-a05457c2590a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4caf551-10eb-4ef5-b429-69160494bd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fb789e-2f50-4405-8763-e74eed001108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328362d9-47ea-4bbd-a8a8-7b40203ec1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ac3a03-ee79-40b9-862a-5c61bd65f9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1e607f-a365-4130-89b5-371f828608a4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cef1457-501c-44fe-9674-fe32f7c9a977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0f457b-e47a-4d92-9376-a6138b807fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1101abc5-9b9d-4357-9623-e4a2d279560e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "258cfb1f-4b6d-4630-a5f1-1c29fe1f6588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce8057e-2346-4539-9e27-6d3f1a0228d2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01c4416-5021-4cf1-9884-342455de9374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d1887b-ac63-4857-bd82-5706f0b2b4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6cd966-530d-4671-b8f1-e4fee67f256e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0574d953-ce7e-4638-aa23-8b31e3a1f6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20160d9a-2780-45d8-979c-056d7d3322e5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a71cae3-42fd-4201-b812-14e1e249e811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ee437b-4e90-43b0-983d-5ff4ab99584d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d07b1b-1cf7-470c-8974-a6b20fb61bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e292790-d82f-416b-a845-765192e346fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ddc09f-a10a-4b1b-b5c3-81275828dfaf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a723d32-9dfc-4aea-ae7b-f23f25d950ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9ee394-43e3-457f-bc36-40c7ff76dda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67675d7c-318f-4c04-be18-1f8cd924c934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "811227e6-b704-4717-9d25-c920628fe876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340ebcc5-6087-4eca-b75f-25d2e987e303",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af11443-0a65-45f6-834f-0200b5e618ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860ce967-18c7-4e10-8cdb-bc0d13db8ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc0b725-9bd6-4a31-a636-e23f7ddbb424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9173f445-44ac-4575-8f67-cd66a013f1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbebbbd-e251-4101-976a-d7be22a63693",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572e63af-479f-4dfd-a069-cf5cecb81b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64665153-1ded-4b22-ae20-28942b1e80a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7deabdce-fe43-40cd-b973-d619806d1be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "476eb880-4bbf-4a75-94e0-1882259f0c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7707509d-f431-4640-8c95-1fbbc2cc838d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb70075-1d3c-4581-ac7e-749f1bd9759e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bf8b1b-3d2b-43c9-8c64-8ca19d51a58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba3c094-90c3-4437-8d5c-c3911231a33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e1f37b-5fb7-4a99-9179-abdd48866913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6fe55e-dc93-4b27-bd1a-7001125f83bc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db5e5f6-28f3-485d-b959-c0707255134f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e97b09d-d883-45ff-9ac6-281c3a8bebf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f3a096-018e-4251-95dd-20d6c45191bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cea4fdd-a946-40cc-91db-24b5f2713518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef777aad-0cd9-47bc-a7b8-d285292535d7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653cd0da-aa92-462b-aeb6-76913fa24f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5257386-340e-488a-b8d3-98e937729ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6007736b-2e12-45f6-9242-c1accebf2a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f734c5e-468c-4643-b6e4-a87bc88a206b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b55364-76ed-46aa-a2cb-3632e7550b6f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae3e7cb-3dbb-4a30-8dfa-2467723f746b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9a0e2b-3708-4138-ba44-796b9f5efc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4013f1-87cb-4b6f-98d8-88fd4140fd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f745b1-8197-4438-86b8-f52c112533c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963ac292-c3ab-43be-ba28-8db29bc322d4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2089f85-6dd3-40e5-a0d6-eda6be2cec53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb94daa-e0a8-4a3d-8e05-af66bc40da9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12547271-1bbe-49d0-8a3a-d50e5169e36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89a84da2-7b81-4920-a36a-295df8ce0cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37fb799-439b-4cc8-91df-42952de29dc7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79bd1b4-4fa3-42a7-82ae-26f94c6ff05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4961f749-5dfa-451a-8248-048e95cefe1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41e05e1-4245-4664-8c5d-fd1f505bb575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ee631327-2077-429b-b9e4-b37b27ab1d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ec0e27-fdcb-4d8b-a81e-bb31060ad084",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84326acc-1bac-4bff-942b-9b0fbeeed480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39f1666-1e3e-4226-9840-07a2c870770e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68038e66-fb89-4e7f-a9a0-e8a692d278c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4578cb61-20d5-453e-8aad-b874835734e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1eebdf-536c-4698-857d-9345e8be1b32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f28c2f9-6672-4a28-96e7-5338352f6e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b463f6c-70e4-45cf-a54b-f947f8f190fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d14b98-5787-4a8c-ac9a-866ddd9690d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7429eb39-80b7-4dcb-9f77-0045e99ecee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08a22be-aff5-4d6d-afb6-948f38dbca0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d166ab01-3a61-49f4-852d-c0e2e75e6d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470653a2-b87e-4a21-af91-7c4476aa251a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee63ab86-0ace-4d96-b29c-5e705e393e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bccfdda-89bd-4bd6-a82e-05f7e0da8f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f8f176-5385-4dd8-9b65-0589379421b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eca7139-54f0-4576-84d2-4e785a763de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768c6dd9-0fd4-442e-bec6-f38358d5b3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dea8db-6601-4f3f-b727-219b09bd431c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "748fcbd1-3f34-4267-b532-637171d268c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1295adfe-ad1d-4a2e-ae16-7a42c89a399a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b823261a-f715-4ba3-a322-8ab304459464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e5bb79-b76a-4a59-81eb-0885b49c1b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcb773a-a0da-4a80-9402-cbace02c3705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5bd33b-9f90-4e12-a2db-2827252fd9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b3dafe-29fd-41bb-8856-64fa6c2b9304",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d091e3-1aa2-4c35-8366-79b4b3740882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0cd189-c7f2-45a0-bb00-e27c63c82a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d18aa9-de96-4146-8056-e18a017a7478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "27c5c160-c962-440d-9656-8a518ad76542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd9086c-fc6a-4149-b0b8-7cab48ebc24d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775518c9-d6ec-4a9f-8d01-2cb0ab27c1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2db766-3562-4c61-8eb0-09c208ffb30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f598b1-0ebc-4ff9-9a86-2569b6f5712b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba1dbcf-c149-4a84-adfb-94f47244b5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c6ff37-12a2-4565-a716-fa4572b07dfc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a79baf-256e-44c7-a6e6-a8bb2826ac8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2049b0af-50fd-4390-b774-75e582b27efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e179289f-7d3c-49b0-8a86-3f8d0a8444fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "400f3d30-c4ed-434c-91b5-d37e17c1abce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23b3ec9-ebee-4e81-9897-ef731a85cc7b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d46ad6a-d0ae-47c6-bdad-fbf5ddad91d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35e0772-8226-4407-848b-4522e8d6f585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e89163-27a9-403b-b1f4-6f02343ed0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f6f6f5-9766-423e-a9a5-87fb94dfba0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0752d0cb-38f6-42d5-806f-618557713303",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4487b0-d713-4b46-8c02-5d9956dc4e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6535ff54-461f-4dd5-b29d-49966752a26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c476f2b-715f-46f4-8b77-e015f5e0e53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9868636-1c14-49a8-b542-1a025cfcfd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34423da0-ebfa-400a-b658-8773ffb6422c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377645aa-1c77-40f6-9118-ee6545a3257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a5f352-51a4-4dde-a26f-eb7c8b88368c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b72626-cb6b-457d-b969-9755e5be8ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e3fba1-2239-45d3-a129-4d8c4c69cb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a43cc3-4d62-47c1-ad77-e609a4184119",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186bb845-ef8c-4826-bc1c-35f2b39521a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e10ff1c-240b-4486-a2c0-246c3cd8c45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563bea76-3b15-4e8d-aa88-b3ea1e24f8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddf19fc-7e4e-45ac-a9c2-5210f3be16a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a3f6c4-d0d2-4593-90cd-10d6cbb6f05b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee2de3b-94f5-474d-bede-547ce3f9d681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb389439-b6ca-4e9f-adae-265f936d4f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660cefc7-30df-45c2-bb99-980f9a754d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a94453a3-54f3-448f-adfe-7de5f36482ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921cd4e0-ca1c-4246-be0c-f7d8395f0272",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2f0a95-9138-4eff-bb75-942850482866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2958fb-ba3e-471d-8db0-54c65303be1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fcf195-5ffe-416e-98e2-107628613874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d22f6e43-325f-42c5-a5ab-3ff6c025806e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f237e1-ca61-4860-9505-aff780ff3d02",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a09d0fc-420d-4506-9210-5500b307e10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f4ff62-70b2-47e0-bc54-b53c7712c421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a1fe2a-de2f-42b4-b133-fd3d6fac581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dffeb19-b595-4aff-a595-5c4a55f6d187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ff4eda-6bc4-4e8a-9837-cb14ade13474",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97d16df-43fa-4a06-9a3e-a3689a1989ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23aca59e-ddc6-4f51-ab91-121429127f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a24b90-a31c-493c-bcfc-5ebbd9cc55cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6e7af0-436b-4135-91af-708fde3a4f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90985f1-d109-4d04-833b-3225b8420f92",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e9e911-0410-436a-88d3-b9e24c1fbc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9f8452-481c-4215-8b65-7548485ecb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b92224-3746-4903-a3d4-e37e89c4cb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7583c8-d0e3-4917-9cc6-06564e7105aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fa773a-0be7-4eb8-9fc8-b31c751d601c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad66d9e-0416-4732-90fb-193060861536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4fa170-d270-406b-aa15-efcb68226dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90034bb-eed6-42ee-a3d9-6f288ed42429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "470e1cb2-e1f7-4e48-afd9-2cca5c41e733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490dab31-ee5e-4a33-8b8d-955cf34bdfd4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f2446d-6162-4565-bd2a-fd6858d4b518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e41e5c-d996-431e-88fa-d53c413e2dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7212afa2-9237-4321-a3f9-e2345c829335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e962663-1aea-432e-bd40-eb40a972ac23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f28df24-a49b-4986-8ddb-9b2caec3a008",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a179987-ef5b-425a-a3c4-761a4e7925a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f1c842-e001-45fa-b2af-a1bff1261762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216477a1-b3f5-4ccd-90fd-0213cd799356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d69fc86-32f9-4262-a535-1b9e9b380a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3109fc59-bbb0-4621-b11d-9b28f8eebee1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053ba136-4640-48a6-a8e7-dc0a2d3f6735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d262042-d80a-44f0-8d3a-627da4b20646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020bdb51-0189-420f-9b52-5795dec341a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c60cb4-3c69-430d-9e87-a3fb6488728b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6c9871-c80b-4e95-9cab-ee61f168dfb2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb942b9-c292-4765-bba0-a53b839e79e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16a6b87-c24f-4ffc-88bf-302be4714705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58adf8d6-7a5c-4247-bb5e-a7e97a615a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0baaf482-5d33-4c5e-93a6-d7938c40afaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a84a58-3293-4aef-b529-d99ad75d0306",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc17b27-fb42-45a4-9aa0-2faae52b8534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc7cc6e-073b-477e-8928-ca69be2f802e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede28a3b-736d-4bb4-a98f-fb91b4a300aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e1ee71-fd9b-47da-8ad7-93dbb082072d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fa508b-7802-450b-a6de-f0f1d0c96ca8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2593d3-21f8-4639-ad6d-081026bd0dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628f1991-3c65-4eb2-ba8b-c0dd3ce32ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4b3f8a-eff1-4dc2-b44f-af2bac71b51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "958bd9bc-1142-4560-8c6f-0a0af8b8e443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193f4eed-c01e-4087-a416-3024c94ca817",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a11553-c544-4fdf-aafd-eff2bcad129e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a638f55f-6840-48a5-a56c-50e923a967aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094b079e-bd46-4c11-ac10-34c194d05fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99bd2c8b-74fb-441c-a962-30ea1f722ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c7b079-34d7-46bb-9f77-fab5d8ee0d9f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d88d53-69b9-41d1-8038-00b6cf318630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cd0c7b-a163-4b2b-a843-b1314b705733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4cb220-5e5e-4c17-8778-f6e0790e125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7bbff2-bdd9-4919-aa21-10ba163dac90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fb60a4-2d24-4126-bbc1-e75e3e6777ef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f103e08-53ea-4df0-af79-c66ab21665f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcc76bd-82f3-421a-b738-1a7d03c62c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d3fa8e-4088-4b17-807a-d0a166991d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d8b6ff-bd2f-42d0-85b6-3514ade74dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f86ea2d-3b01-4efe-80f6-4fd0918b674f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d007bdee-cec4-4e72-9f59-b0a3eda96ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae262318-ade0-4961-b2e8-a22414a1ee2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bfc770-244a-4299-b6d4-6e045c04eaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e22ef268-6fc6-4bf7-963c-40ce7f9d3518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38eb407d-02bf-4081-9d55-e3307d64e5a8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb9cfaf-39f2-464d-99c4-037c7fa3780b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ecda9a-37ec-4861-9549-379fb62d91d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cb095a-e655-41f1-823b-da5164e8ff00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2fc1cc-f629-42cc-923a-d72457024e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0914dd6-e940-432d-9664-833c0c11b1f7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba91757-27b4-49d0-9c38-81897a6410e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c27ba11-0a7e-4362-8f4a-9227d70cf398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbdcf3a-02e8-4b64-bb83-7fc8d69befdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df26c5d3-d555-4c1a-8c1e-fd638b61091e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192ad995-0bbe-424b-91bf-45c116a88b6a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ca5f79-28c8-4b95-bf15-3e624cab58d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a22b33b-50c2-4c00-a589-b831d25de9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8477f4e4-ae7c-4a40-a764-1b314fb541a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f57477d7-4f94-4cfc-860d-398bd4f0ffc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5539eb2e-5b8d-48c8-a27e-5e4b16475af6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6693a8-3ec1-429f-8ff9-8be62aaef8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae9bb27-2b95-49b1-ac7e-70c2395c93b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a508343f-5675-4701-95a6-cec7dd2870c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c42f473a-0e96-4262-be44-dbfe0a88156e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f96b08b-3be9-4e0d-9d05-bacca8a56bfc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284ef7b7-65ba-49aa-8e24-c3d639df231d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb6aa80-7e75-4ba3-bc9d-fb0d0aa347a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b434bcf-14f3-493c-acaf-1b6bd7442c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b92ebdcf-d25b-47ac-b89b-ad92f3a608ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b6597e-fa12-4c20-a062-867f0e8c8f83",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3156f63d-5dfb-4dce-9c40-e3238b06132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0142b56e-c628-49e4-824f-dba50eb10f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1058a12f-67d5-4edf-9cd6-1c4477437f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "23d212c7-f240-4ef8-ab78-5d15690c3eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266da470-71d4-4693-b0d9-9d36cacb40ca",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87e862f-6d6c-4490-a87f-6bd98631ec3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb3cbcd-8439-42ae-8b72-9e609809fd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d845e04-6237-4ad8-a117-91ca5dd6605c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "83145d4c-2393-4aea-a5ef-ef4628107252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed260b6-acb8-4e40-af48-d3c62256d6df",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe47d4b5-cf11-436b-ba67-5ae192d5f2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a49eb47-8fd9-409b-b1cb-06dd94bd60a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c2f1a7-d607-4f43-bfc9-5b40a6118a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2b5dc6-a54e-4c40-981b-21a9f643824b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0ba3f079-d43a-40b3-883c-3e2d8e51e65d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ecd4a7a-8811-41cc-9aa8-130c9f67c0d8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174ea6a6-d29e-468c-96f0-fb78f05fd0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7afd5c3a-c00e-4379-89f4-4eab1ca46b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d49de2-6c6b-4f0b-968b-028641eb603b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d9e02cf-421e-4e34-a59e-2ecbdc4f4fd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80e72ed9-fff4-4eba-9a20-7dd55bd37d8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bde016e3-6951-4056-afd6-83dba1a2a20e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a37aea6-6ee1-42be-b435-82ec097415ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c06b7f9a-45c9-44b6-b1c6-ee575f1b83f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "625ceea0-bac6-4be1-a7b1-6712b35bb3bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e27a1f2-6372-4f56-b1e2-63c4a147c1c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c03cfac-5f29-446d-b876-7a70cf587c45",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96b33256-1c0f-4a63-a3d1-05863b122a98"
                }
              }
            ]
          },
          {
            "id": "ef5f40a6-2ea9-439e-8a5b-793e86e5b205",
            "name": "Positive Testing",
            "item": [
              {
                "id": "17e291aa-22d4-4b3b-bc2d-9e7b159a102d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39c80533-cc7e-4ad5-898e-680233b5ab0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38f99937-50ab-43b5-96f4-6d204778c0cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f13cdbe-bdb7-4b21-81c2-e081f65e1266",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72e3b5a3-56b5-42bb-9091-e0e9b06b4858"
                    }
                  }
                ]
              },
              {
                "id": "0e361561-73bb-4e95-b503-0b74aad3ca29",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e1698cb-0d83-4546-90a4-53972849e032",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be339cf5-b95b-4b51-9123-dd5e8a487cce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb2e74b5-69cb-45e1-9fb6-ac13d1c3969c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "05620fde-2d6a-49bb-9841-99a19916c634"
                    }
                  }
                ]
              },
              {
                "id": "ff472b85-1433-4ef4-9436-2e585c474d55",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5f4e5ac-fa56-471a-b52a-48fa2b694375",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68bbe784-b76f-446b-b5e3-65f8c255bdf2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82ad5a57-f599-4fb2-9327-d703f5b86c98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "21d567e7-636c-4df2-a63d-a3c060bae012"
                    }
                  }
                ]
              },
              {
                "id": "00545046-b0ed-45b1-9b3e-aee41b467e83",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5704d186-ef95-4f00-bc2e-74d773c0fbb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53ebe2d7-358c-48d2-9c7b-67dc13d61605"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d25fdbd-f3f6-49f1-ae48-2b2cec82d9a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "17fbe550-809e-490c-a366-c349b8e54c05"
                    }
                  }
                ]
              },
              {
                "id": "054d73aa-d692-44d9-b410-90157b3752f3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "170920be-4ff9-4d2d-937d-a70fcf84e297",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0760fc11-bda4-444e-a63c-2c0bb2ee2c0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd1620cd-c462-427a-a040-066d61ddfa43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c0712a37-0828-45d0-9069-e0506d265b12"
                    }
                  }
                ]
              },
              {
                "id": "5659061c-4c81-4b05-8ee8-f13f348b2c1c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f249affb-0aaf-4ec8-b6f7-2385e71c5538",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b5f235f-e949-4624-91b8-87dcffdfd864"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da3bcc9e-b21a-4cbd-9a9c-af1bc8bd57eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73d2d0ae-a99d-469e-8142-00b7363549cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f3a0238-1db4-4652-9155-1bf853d71c94",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "376d2fec-bd7e-41a8-a881-a45a28c5d0c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "38799591-4165-40b6-9840-363d1e1b2886",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12000a6e-2751-43c7-a9a0-ba2eca3d0d9b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd8908f9-3b45-4540-9c5f-5f21e3ab9431",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0366a54b-a9e6-4270-83f3-d2f494879f98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d467ac3-5f21-40c5-a92b-2b6ca02b8798",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e73ac979-3e9a-481a-90a8-07587ba19a15"
            }
          }
        ]
      },
      {
        "id": "ddd7867e-0d35-4744-b420-878ebbf33831",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "08a206c7-03bc-4eeb-9d8b-69314520beba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c69ae90-3d39-4a3e-ac60-074b51210fc3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd0dd265-59d9-49ac-91bf-7a3fcddd7054",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72728e2-55dc-4fe3-a3c9-4c1dc7d90c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538405f1-52ca-4e17-8b3d-8ede6a2296be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9917e8ef-034b-48c8-9479-4b984e80fa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "695e5d15-2e5f-4304-bdba-c08f0782b7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0badafe8-a66f-4fa1-862d-69f797035f08",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a428ae7-ad04-40dc-b2e9-4cf90b10583a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd52496-3421-46a7-a08d-df2aa128c1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca84b0e8-40ce-4c7d-ac68-605f6aec64ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3630cef2-a76f-4703-9e2d-dcb4388d2242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6ab905-ab8f-47f6-b4ef-7cd3065342c8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c3dc28-2d95-40af-a498-162acfa94635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ed915c-a420-4c24-893e-0b28dae48c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9262c0ba-5c81-485e-93a2-edb322332c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24801e5e-c223-4839-a7dc-cd322813b626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb831ff6-dae9-4787-ad16-5476f63cd072",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8dc260-049f-4cc1-9d51-f3fdbec3f740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64611766-a592-48cc-a9ea-4901ffe8596f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6659411-fe4d-4d7e-a2f9-2ff268318781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50b8e721-b226-4260-bb64-718c8ca561d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ebc6c0-5df9-4191-8772-7fbcb35af0bf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94ce223-4f1c-4a39-b97a-251123eba914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a782a4-ddb2-4ce3-ad42-68fbbfebb35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6828ad-80c8-40e8-bbb8-987f21f1c331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e97b7416-28b3-4f6e-b93a-cf8e3373c5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca3bd1c-59c2-47e7-98a2-b449c5c7dc47",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc558ee4-87c5-4ef1-be5d-15f7f604dd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98726eea-78b1-4687-8631-dd0c1773567a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1bafe7-6791-46f9-ad4f-b7c2c93aa108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba519233-e0d2-4055-ad22-8312156b0159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3422be58-012b-41a6-8b82-0ce458263a0b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d233c8be-c458-427b-9f5f-964ae7563885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9738fef9-2c39-41f3-9a0c-f59a1d17afd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fead96ab-d466-4f55-a402-2c2859f1c75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "767af1fc-447e-467d-afac-0499812ce433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6368a58-bbc0-4c09-bd94-8849e5566257",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86c3927-b4bb-40ab-8623-c53399a3be63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974f2801-135a-4997-805b-385a2dff1970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04567c57-e7d4-4131-817a-abaf3cd19eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6d62ef-fa69-4b6c-bcea-cece5796d38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dce072-140b-4bcc-994a-769b7cf18fe1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c743094-0bce-4814-8456-3189a370028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301e7e23-bbf0-4e7c-8d9d-4422288db3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c94d22e-6a09-453a-b80f-387f8fd54eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4781ee15-6294-4f78-88be-718a3961905d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c735a465-1845-4d32-8937-d7930b8dc4fa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08810558-6491-43bc-9973-86dfd0ea8491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50680fb-2482-4275-820f-bab005523e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d0e1f2-2e8a-4398-91f5-bcb8989954f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8baf28f9-b455-4f35-918f-ba07b667c5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7d584c-f3c2-4031-89fb-5c4623e8b9e9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261ab949-b26f-46b5-8ab2-bf6913a0d2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bf60e8-0dff-4f5e-b0db-34a96ed22e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ae220b-2ed8-47b5-bb56-acc773868eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a91c6f05-ac75-45e8-acc8-7b6a2f3dc9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cddacb-71fe-4998-80b8-466c18c774f9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e63b79-ce79-4e43-9525-29daf1de6529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f203e2-f278-4756-8a21-1c793e63bae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3ecd9d-d16b-4340-813d-ad169aaabef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef31dfe3-4f71-4c96-9652-6d852a0bfd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6948321-aaac-4248-adde-592b3f83c4ee",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c87e9c-c900-48a9-bd65-59b1330be243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dca88bd-f0c4-4809-ac3c-3e42641de941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d068abba-72e1-45f9-b925-da186438a6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c88ce694-72b3-4a0e-a4c1-c9a146d9a15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110fac34-c6dd-42da-b1bd-fcd854d9e9a5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcc0e39-d0c1-4c42-866f-b7217593e8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4243cfbb-335d-46e6-818a-22a25c797a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c0025b-58b2-47f6-b7f8-6ce50a189f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4033a39-aa6e-4534-ae59-d4211ec52321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa8d58a-9ce2-4a1a-9106-2200648f466a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf6b48e-be62-4204-9def-dde473663598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bec3982-1f32-46ee-9fec-0f346c2e23c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a9ad84-09e6-40c4-bbf6-c453da7f103f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d420d5f-65b5-4615-8992-10c98eddd420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f4c7da-964e-41df-b31d-1f0d760d6d05",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d18a3d0-c12c-4545-aec4-f8438b8f0ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5545d9ce-78eb-4dbc-8ca4-c5fad0dbb343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b7183a-47e2-4e60-8785-0d1e15101df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "16260b4b-1e1f-4ecd-927f-347b28d69d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd24bf9-747f-4ac3-a121-6058cb399c1f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b76ab23-44a8-4366-9f8d-6af2896aec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af3b772-5644-4896-9111-6a706a84fb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc3db0e-aa83-4bed-ac06-ec01bd4af24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f469286-451c-4523-9567-d058df0332c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f304be2-3e80-43f0-897d-e0fa9cbd707e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b747892-5c07-4a01-ad0a-cb629e3513ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9656e4e-719c-4926-a388-b4c3c383b100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82967870-f1d3-4ff5-b3a3-da3f583f2100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dee4edb-8fd1-4b53-a6a8-31d0ce0bc1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdf28bb-2e0e-4e7a-9ae5-9e8efbef0e33",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35e347a-6bff-4b36-98ef-aaca0df277ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7080c576-6f34-490c-bba4-352606660513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0939297-a0d3-4147-b560-4204990e4156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34078574-dcda-4c5c-bf37-d8dabb3c7f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb5831a-a9f9-47ec-a1e5-7514a2e4005a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847ac88b-03ac-4ece-a573-0a7f1bbdd96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd62aa8-530e-4e94-9911-9b0510a24c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf5673c-f001-4b2a-b280-f99997a2748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e16e4c3-7c1c-4856-8f3b-a56d40c6fed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e7a828-7a6f-42d8-b61b-92e9dd88ce93",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2b9def-89c6-4db3-86ef-eed55a51240e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4161f2-c3cb-4486-99f3-1586f5e91e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcb807e-f06e-4665-a679-88c8f42c144c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52630848-3329-48f4-b159-df552f22cf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03369de-1c3e-4547-9f0e-ca3693b09388",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f7c156-051f-4e4c-ac5c-fda02ec1b57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6798b0f-767a-4ec3-9614-3d37cf1abee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d33eb4a-8162-40df-a613-ed0ea37c6b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fced1641-f1ef-4026-bd26-7869bb0b2ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d17c4ca-4407-49a6-9cc0-c04c0ad46b44",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8385e2e-e4fa-4f7a-bd8e-0da1aeb1f9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b5601b-7062-4073-b475-658db72c2c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd20974d-537f-4356-97a2-7ca58fbc368a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4abb12-c473-46b4-80db-3238abee38a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d5ba48-429e-4590-9939-331ad22c6d58",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10de8acf-4009-4c15-8713-86168b249082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eedac1e-134f-40d3-8045-c31f2d130250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee19991-d369-4e15-b500-3742557f4b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b6be22-d15b-4bea-9c8b-9c98ab6baaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8d788f-1d07-4f69-b7aa-61255fb80f8b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db6e155-aecb-4766-bff5-0684515ee5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4730ca-7c3a-4f8a-8ecb-6f8d98c2cbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47782bce-e456-426c-b009-c1ff7e0f6a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0670e5-fd74-4c3b-b183-3c3cdad0c713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848feb65-fcef-4f6f-8cdd-2aa7a70342b3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95f451e-343d-488d-838c-ed102545d6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1030be7-09f8-43bb-b187-6dcca8bb90c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1ac067-0ffb-4b1a-bbb9-75d6bd3e5071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c4b0a9-936b-43e9-a76e-76491a6f9dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60db0c0b-ce58-4922-af8f-35d1c8b1bfd8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599ad69a-8e05-4e90-ad79-7fc161403693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134b37fd-cfa3-4ce3-b5af-207b552302ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cfdf76-01d2-4f1a-b035-4248c4e4d456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9885f0-9738-45d8-bfbd-360c93217a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd9583d-a7dc-4bcb-957d-46d8839423b1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a36c6f9-be85-441d-9c07-313634bc6972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd04cd48-85fa-48c8-99c7-60d5c758fb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69ffb57-81a2-4294-958d-33a0631a2b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8546c6-cd92-47b4-835d-09bfe316e8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963a07f0-2bfd-415f-a88a-0c87ea5d0a78",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beb4ec1-9da7-446a-96d0-aaeccef3c265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba22e693-6c96-46b2-bd07-3b5a2b27c25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7ca3f3-5541-4586-bd57-041f730a808a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fd40b6-e03d-4bb9-babf-22ad0b19f981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472dc030-2b04-4341-b6bc-8867e4cac25f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7900fdc9-bef0-4d82-82aa-a0ba97262413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7749ac-3673-4100-bfd7-adbfaead0a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cebb1f6-7b5c-4fab-84eb-ee35ca89561d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "802e8573-411d-4de7-8d77-907459cff069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6582caa3-7e12-4e59-a0ca-c160e8f143b7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eb74c8-a8a9-40a1-87f9-0aee49e7bc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a58bd5-ca07-4726-9004-107b99bd5829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d00b32c-ecaa-4562-95f6-9f6c2c14c58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d48f28f2-8d79-43b4-afd0-7db2f278d61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b685a0d8-3ed9-4e86-9f02-6f5cdca08b77",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc765f8e-4ac0-419a-9e9b-63cdbaeda6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d0057a-a912-41c4-b4c5-04a6ce6cfe06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93f0830-db29-4ea6-a56c-e83b0e3d0ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d89a4d5-4cf2-4113-8daa-db63cb91560a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d43dd6e7-3704-466c-837a-35ce438a84ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53c2b090-3072-4c9d-bc28-2e465253abe7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00918ca-f700-4fa0-b670-16a1f6bbbf0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a039e44e-9ee9-4287-a0ad-7e93c9c637a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d03c677-3da4-4b82-8868-cf3edfa809cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "449170e2-196f-45cb-aa44-4aca31f7896d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1af1492f-0101-4414-847c-416e34ec8f03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f0f3414-c7d3-4d97-8120-aef25808657f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97732f05-1026-45bf-a03e-83ff0ff896b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0aacccea-4741-42b9-8906-5c74fdaf3aef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c81c6ca-e9a2-4757-b36a-b8510b6e973b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "794031b0-c6b4-4b0b-8997-69b6109c294f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a34d350-31ff-4277-af2c-82643cf33563",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6bb0eb9-6b18-4e0b-a0c7-be762f7fdf35"
            }
          }
        ]
      },
      {
        "id": "9cde1d81-a642-4876-a212-33ad0be369be",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c78e4946-c64b-48fe-9b6e-0bbe173ce4e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffaba3da-e79a-4407-a52b-73ab88aba68e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6227f6bf-7575-4e61-9dcc-400aa0e6f404",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75ae377-07dd-46eb-8829-1401dc628b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5418fd92-0b69-4b32-884c-89e02ef30038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4652903a-709f-45c3-981e-cd6a08a88c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee145325-e162-4bec-9d9e-85b686799c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311e2ac5-2a40-4af6-8bad-4185f261f67f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83763834-701b-4f9b-8d13-7bfa741b0145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875a9c2e-d52f-4123-bc67-68fda3ece0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f22bdd1-7eee-434d-b378-d1b8ed76b641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afbe357e-e3ab-47c8-abe8-c2cb6a42a6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbeb383-380e-490d-813a-06d7e1a93567",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084f8ac4-002d-4f2c-bcee-ab0d35c8f37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576cba71-63db-48ea-8cfd-21264febbf28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cff42b-de1e-4b4b-bccf-ad10db270d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "147cfead-2498-492e-81d3-1803707ff72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79faf74c-2e15-4068-b502-bacc8ed126a2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcad9819-d102-4a1e-a08c-5643f7571162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63eaf87b-795c-48f8-9ebd-d1b5d96496cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936f5507-b86f-4b13-afd1-082ed4553a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25216767-146d-4d08-8990-9046561485c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26af135-2c9b-4b11-8754-7f793b3240a4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cecf619-dab4-4467-83c3-b0b7b92b21a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e15f3fd-0264-46ab-8262-35a46ddd9def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3e7ff7-d7b9-4405-b20e-421d5e78a1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14bd7074-c1b1-4760-97b1-883773078bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93264d5-e7a0-41be-a88f-47f5ad3c844b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a927ce-e4ef-46f8-b4fe-133dc42cdd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd11f60-f0d2-43bd-9e6d-da2a73f371b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931fc4e7-3867-4591-b2b5-2ad4c837b966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4e6e35-0fa2-4efa-95dc-f4aad07a5c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef18464c-9667-49a9-a620-6ec80c6dea97",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a0a110-b8d8-4725-a770-1092f2ee4312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7c3764-fb0f-4523-a302-5dcddb00ae95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256a6486-a358-43fd-9b52-99b4e14a2308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "50158914-dd1d-48b4-958e-86360c3dc625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8d4b92-8789-44f5-b9bb-5bae0cfc777d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989d8c9c-a8d1-430f-a3ff-b159e3cc3f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d2f49f-35e2-4bab-b873-00a85d032d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03aefdf-7bf8-4089-a982-e146b8e305dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "988f2452-004e-4670-859e-6e04b1127871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dcd842-711b-41f6-a6b7-50ca4bec3538",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab0afea-a144-4d4b-b57d-0dcc1beca117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e847d626-aeec-47a5-912f-b9bf7bfa29b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c834efa9-a132-4ca6-9059-0bf3754fc704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c66d8013-ab92-4cdf-9c26-57d92cf47981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aeceaab-4084-4379-a8b4-7a72cd7163fd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b0726c-cf6a-4201-bbd1-9c0230f54af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf440f1-f135-4b2b-b327-171ee6b00306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232f2ebf-9173-4636-ac80-311f5bfbdadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b0d7c6-0b41-4e87-8c86-a170c8f3cf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bff1076-ecb1-4f63-bda5-c33a256c62d0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02cb485-9822-4924-a968-9a2501f48898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfae5445-ad2e-4960-96a4-67a2c2d44d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd15aff8-ba56-46e7-a9a3-d0dd6792af62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e82e90a3-ac5c-4022-bf92-dcd95758df0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78b5d7f-9fd2-44dd-9129-f48b6be5b469",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f261f8a-18dd-4c52-b751-eb272bcd4c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7f01c0-640e-4de0-adb5-854a5307c62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e417e347-de47-49dc-9dc6-b8000e19f9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2a2125-a8eb-4dbb-8dbf-53f1cbe40d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fb045f-fc39-4f90-9334-e598ef9803c6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d9ac19-b357-4baf-a49e-1bab8742b9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872ba3ab-e403-4045-99e8-bcb7abe6240c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e61d2f6-fd38-4fdd-ba19-bdd53c375ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "499e5ea2-b0d6-43f0-8513-8e114e224fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ace001d-efe9-4b3b-aff2-32184a3c7ca6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbf5b73-0993-4e48-95ad-23bac698de4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3559ec-6e13-490e-abdd-49390a4bb36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054a9bd7-bed2-43f7-8a9b-9641d63b8bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7d1b8c-68ad-4db9-8be7-b92a1cb0e4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eadd4f7-1d62-4e8e-a0ac-c2d3546cf0a0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2a55e2-6a0c-4b6d-b61d-c36b1441a1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b659a7-b532-4836-a4cd-3d5d3169a4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a896bc1-b9d2-47c6-b631-d0fa8bcddc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c04d82f1-0dc4-4b32-a1c4-b955651ab3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b8748b-314a-4b62-a98e-f2aa9b22a23b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0ba536-3f65-4e0e-952b-de4c06d90508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6c5a79-8b61-4a33-ab47-f68285ef6c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c9f345-45ee-4c07-bfc0-33ee1cca11de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76ff210c-8bad-4c56-baab-e0b75b01af24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0c80be-70d6-4746-82f9-bff176ff1286",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3025adca-f89a-4680-b28c-62e14b6ff9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68b0e22-110c-4e43-af32-b9de68f2e469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d2f8a7-13ad-4cef-ba79-3e231467009c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6719d9db-7e1b-4c5d-9f86-3f4e085b7f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ef358d-dc17-40da-87e0-22ad201249bd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1551e1b-7290-4ad5-95c1-9facd70958b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2916f60-1add-4c53-8b53-30c5a294bf2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea18467-0a6c-48eb-9692-b68d9452700f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc637f00-2fc2-4d6d-858d-ab0d018a7f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf09260-e7b9-4a51-bc78-fae687980401",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20166e18-aec7-4ab1-8086-b3fde0c730f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422fc7b6-88b5-4011-b36c-f8f3327b7de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10febcf2-d1cd-4a53-a0ef-fdb4545906ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "047246b6-0268-4056-9aa8-dcfabd8c14b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ebf2f3-06a2-4c0f-abf0-5ee1d3214400",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ed911a-80c0-4384-a3b8-9b010d404a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae36f55c-bc5c-4fba-a13e-18e0415b82f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f087f2ae-d27c-4562-9f23-80138aa54096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ce860c-72e4-4e69-844b-d2fce22e2154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1bf2ef-3b0a-48dd-ab7c-1c327de19000",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26256648-d149-4158-bee7-f33de07e4294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754deb39-10e6-41cb-8e54-cf2dbb668e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d742afc-3901-4452-99fb-19ef66f4beec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab288d0-27be-491e-a4f9-6233e50342fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9e43a7-d694-48b0-9daf-f75e3b85f084",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3e3ae9-3d5f-42f4-931e-84e77d35cfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121aaa89-ff73-44d8-975a-42ba7b3f2a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb781ac-4db9-4dca-8560-8da31ec6602e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05893356-2587-4175-932b-db7768d28908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c679e9-889a-4850-afdd-0c024ea3fde0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c19325-047b-41c5-8113-e83e4d00d7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdfd110-c91d-406e-bf2b-3cd4abe76b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45bdab9-2fe4-426d-84c1-37388cfb1786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70352696-166f-495c-bd79-375b01d7314f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0ad6ee-f384-44bd-b736-9cd431779371",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0dbfac-01d6-40fc-b9a3-4d5d4bb70afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7287301-5688-46ae-8b75-d4c26c52eeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e901f3f0-f216-4a46-9d38-9e86fa5d7386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0527bba7-24c4-4ae5-a7a2-28d5a08f2ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0615907d-ef2a-4e7d-8d31-0fb7504d97ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8009fa-4f0a-43c1-91ca-c18569d3e0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc186fe-c892-48cf-aae6-8aa39d5fdbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6620ac-7322-4731-8a28-3e7c00abec55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9787ef80-4deb-4b12-9c15-d0b19868769f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff71c63-d3cf-4a04-8f30-b283932e38f4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49247ad7-306e-4f5e-b798-04fdf5b96e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a8f1fc-2ae3-48bf-8e21-e14ac98901c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ef1cf7-45ff-4892-a28f-20d02877ecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35911378-d621-41d5-b430-ad1235058b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9fed71-24d6-467f-89d9-9ab946ca2469",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c487ed9-8342-44c6-97ce-d4410b81ba1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7a1ec6-1966-4bf5-9cf5-5a8a016d932c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fcfa5c-bfb9-4313-a577-d020b7304fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fa7e9b-3cf9-4b15-9f6e-4b464bfa4c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f7b9a6-60ab-411e-b12d-9b6d924fc1b3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e7627f-cf86-4e7d-8bc9-038eb13d9524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf607b4-f8f3-4e60-8179-d9a002a69380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cd2e01-080f-4d3a-a1b2-2e4218edc123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b42122-b22c-4c2e-ace8-f271172b6a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4ea5f4-11db-40f5-847c-2a661e3879e7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9333e4a-e9bb-4bc0-81f0-cb2395b8334a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d37330-7c4e-41b3-9618-b3116db05e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3ac342-c408-492b-82e0-b68e1b922d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5f4e76-5195-44f9-b94a-1207a0dbfa6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7708924-8c49-4d02-beb3-a597132e0c97",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3449856-eeb3-4ad6-93b3-b666e3ae1831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9255ef-16c9-4e10-9695-d806e44c91bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33e02d0-c2bf-4f3a-9aae-daaac74ba814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1029ebb-34ef-45e2-8ab9-c4fc6a224985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d85e82-33c2-40ac-8aa9-090d8c3239a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f914b616-8b05-49d4-bf24-9b85c9b6f07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c10ce43-f4cf-4d3a-b97e-44516a808275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1521c152-f865-4980-bfc3-ab2504f96e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b165efe7-83c3-4cb7-a276-6c5c464eba78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdbe952-2a1d-42b2-86a6-ef17f7fc3cca",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b57112f-d00a-42e1-b71e-e8a4e946da08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b408c8-cd8a-45f6-8b7b-272ec6a51004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8bacb1-7ef0-469a-b85c-9b435d3ac530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f293633f-cb2f-4983-b754-7e1f89d99cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96f5fa5-dfe3-4bd2-a7e4-08ffcd8b29df",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e7bb18-b208-449e-bc5f-9b942d4720e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf887040-36a1-4e0d-95fc-1be62c8fdb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eab1b89-1bb7-496c-a6dd-72f7240ae979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60f3c57-7e96-4e59-bf5e-207311e79392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b27699-fa53-4e78-bc59-d48279301dd8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3605660f-5967-42c4-9b2c-578e21f432b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803adc83-6bb3-4b97-8d8b-fe1399daea8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a98ccb-461c-45a1-b2b0-653882d44fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa69b886-5af3-4b96-97f1-aea2479ac2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2db1c1a-10c2-4504-9417-7ee4b61e2749",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7693ac8-69b8-46bd-a3f6-736233869017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7fd1158-9836-4c5a-8698-22815ba55dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bec99a-2933-470b-887f-01636d56b918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14356de-d213-44a6-b1cb-ede3673cab56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc5b32d-9baa-4a15-8459-e68b4ef6fa4b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081d52fe-9dde-4888-9c46-47691a0b7d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b4bb7a-6041-4584-9167-55eec94a1234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184131c4-122c-4526-82fd-ab8ee512c76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d88fafdd-913e-49ae-9ddf-135c91886c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71195aa4-6293-4098-8f5c-9d3bb68348da",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f52146b-9992-42da-8f18-acbdfb0e3653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262de1ee-0a00-4de3-ad73-3325c50178e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ff6ead-66d5-4c36-899a-9bc0ecc87023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "579485df-e404-4ad7-98e2-cfeb9a1e5e4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c626c051-817d-434a-9ba1-89126018ed78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2f60297-39be-4b43-858a-686ff8c115e6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4260b6-bbf8-4f30-8768-f044e9eba7b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58e3d090-81f8-4d44-9d3e-877a6e177a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbeedc7-f892-456d-ae6f-ba96472c2657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71820bd3-014a-4101-8a5a-fa901835e279"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3ba43cc-160f-4d6e-b95e-152119cf2b46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13e0ff2d-6a44-4a30-b2c8-712ee3f684be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ea4be59-5c1d-4ab4-b4bb-956783842a8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caffa9fa-cae9-4be7-bf92-560a9c6cff55"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "926b9d86-7117-44bb-a310-82a7e4a593d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3ba0d38c-fb32-4c69-91b8-cc296d8db243"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b74410e-791c-4424-9d0e-60e370c6a2a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73b3911a-af13-4389-b36f-d6fcf290b6d5"
            }
          }
        ]
      },
      {
        "id": "74db7f0b-a250-42a5-b64e-a2e1313a0ca8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "469f1bf9-5f8e-41ff-8542-84842c7b3eb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33d6ecb2-e97c-4dab-830f-150bf021bd0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "810ddcdf-be85-47b3-bb00-faa9573b2cc6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d164dc-619c-4ca0-95dd-a6aceec3b60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68aae9ca-461c-4dc4-a9e5-dce673be926b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84189e8-9d34-42b5-b38e-b865fbdaf3f9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001cabfa-9226-42ed-9d03-9eb5491ed945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d666c467-3d36-4fa3-945c-de017a212968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65793172-80d3-42bf-a40a-c3764bf09ba1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a39987-9a93-498e-9ab3-de46ee589e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce1ee0f-b706-4bee-a0a7-f5ada14ff09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede39ca4-2e00-4d66-9b6b-d6c63b2b10f3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c585f24c-fc0a-43ce-95da-a3122772477c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89860679-1c57-4629-a4ae-6e15617de332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1b717a-09a1-42dd-a268-761d3c8ef943",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7ce0d8-69a2-4464-8ccd-8d5944110a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01042c2b-f023-434f-842c-0a859f79fcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6a7c5a-e23c-45b1-8d84-e1c34f4ece30",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7991df9-2e99-4ad3-afb0-497cded79bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093a6fa2-ac61-48a7-9da4-56ebb3efe9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ffe14d-7d89-416a-8ae9-90f4edb3cd1c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141e4bd8-69c5-4d70-a47d-ede635959eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f3f16e-c6a8-4831-a74c-a7632af3f4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0a8cb5-0d8d-4d69-95e9-0ba7e63de5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a97ddc-f10d-461d-84bc-87029ade2895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749a25d2-367d-4f14-8ab5-06527a1595e3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7e2000-a399-4185-b28b-33d582541eec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63845c9-b730-497c-adbb-38d6fe979766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fd3a8a-4791-4d9b-80d6-8858bb0e64c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0d1082-2c9e-41c5-99c5-80e8b08e1621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85cc4a8-d65a-4e44-88a8-6490ea63f362",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1ba46a-4888-4c94-8d37-cd04d84bbceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35da4669-7d79-4998-9d97-41a8b7f1ee8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3632f9-6604-455a-8db8-ad9984e4bc9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126539c4-932e-45c0-b2b1-a812a8f61f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9039b75d-2a80-427f-aac0-0ee036199e40",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f295b4e-4df4-403a-ba7d-2db1a647e5e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ac2267-bc64-47fe-b7e6-bfb4a58b95ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927a827e-8681-42cd-a024-7e99c787a674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9e61a2-3c9b-408e-aa90-3f953d7cd841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4913e3f1-a075-4763-bd94-6e85eda0b5da",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b221784-55e2-47c7-a41c-bf24c09d87d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0dda04-b46b-436a-b137-44b5f34fa8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd11dbd-7de9-44a8-8384-772ecdebdbfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e408634-2d34-4126-82f2-8e1bc1180832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16608c1e-139a-4a80-86d9-e903738d34a4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab05f016-1878-4736-8123-21738c8c3986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c707498c-847f-43da-97f6-ec92f973b1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0e6f5c-af7c-4e80-a12b-5d3b0e37ca80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35fed79-21e2-4b69-842e-53ceb7e5110c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3795b5e2-659e-4855-9dd4-62bab8f88563",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1f11fb-d11b-4f5a-972f-5eef54fb18be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d4d2fd-40b8-4980-991f-4184708781dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bb69c5-8e0c-4737-8975-efc3fd04bf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee354cf7-8a8f-4b61-a96c-36596c8686b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8dfb20-3a0b-4bff-8edb-6d440650b908",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab62824-2739-4879-be3e-b8990d32aaee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0d98a4-f422-4b24-b139-afe35dbcf994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74207361-92dd-49df-8126-a51859b6f7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1255d55e-750d-4f8b-aba9-0bdb7102087a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a914adea-a89d-4d5e-a603-07ea7542257c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276292a3-342e-4ca1-b898-68ff71978a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce6887ba-f518-4933-8245-e7e72f4c1d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896daccb-831f-4e3e-8abd-16713a6a85b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71022b86-36cd-4c9b-b482-fa7aaca7941c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78733985-be63-4666-8805-9d0a26c47a8e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea839a7-fc08-4034-8ac1-2694ba77302c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b725ec80-ebb8-4468-9586-6d08dc2addde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4380c27-3abb-426c-80ea-bb2488c65487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d187b3b6-0801-4d43-b5ed-5e01fdba2fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f194d3fd-2944-414c-87ab-c415b19d572b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334c8331-ea63-446f-b6e1-d7a8476803a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b3f445-1f1f-410a-9dc8-4b96663f5d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26f93c4-f759-46c0-ba8e-3d3482c43232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2768360-b360-43fa-b9b1-5a22c88f2451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703d5b59-bc84-4c5c-80a8-e2fe99985bab",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4494fb-9aa8-4c44-b98a-cd779f421cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260c2579-73d8-4a9e-990b-493c6a0a266d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e250e63-4352-41e6-816a-46b42cdd0981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa12d08-a418-4d6a-a515-2c91305bc026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb7a430-4a27-4555-8312-b958eeae0f48",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01710e34-ab26-49e8-9bb3-b46ba969a4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80a6068-70c4-4920-8731-490a0ed6c09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee95b68-26cf-4929-b853-70fc61d6c8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5752a2-47e6-407c-8268-4de8b1790a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489e9833-4375-4c62-8efe-695230d5727b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ca8f88-56da-43f3-86e1-e846c2bf7ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55518d04-cacc-4bda-b177-1f4d011c6e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef23be6-6832-4cfa-be63-12be060906dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a83303-65d5-4ab0-a495-242e84d10949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb93c5bc-ba05-4255-a4c7-802d0e1e77cc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1141d36-017b-4bcc-9601-8432f04a4656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c32ff5-28c4-48eb-a618-9968bdfd3bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e2271a-4b8f-40b1-aaae-2a586688a8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b4bc21-f931-4b01-b5a0-97247b243717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcd5219-658b-4489-9ddb-4c01b3af9f7b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc727ae-fe93-413e-8c83-12acf81ad7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca29d37-045f-417a-a23b-22fc94a4ac70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227894fb-64d6-470c-9019-062647d0db0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3830c2c1-e7fa-4069-953d-81518033accf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f2cbd6-49a2-4b81-b993-28ad3c770274",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055b81e6-8d55-4313-8e40-33b7d06a7808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cc069c-a052-460d-9851-f6c7166d0058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba44154f-d35f-43f2-ae03-54f4996065c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbc88fd-873f-4eff-b7ba-bfac1e3d7783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7869f9-291a-4545-883c-0af2a25f9434",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cf1311-0837-4494-9e36-f2f4d1a2e9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f54ad977-be63-40e5-ad15-a828b471805b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65846b2-52cc-4f22-9ad1-74f5fdfc7d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cc1c07-06d7-4a8e-a1f7-c15465d224bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a30731a-7bd5-4469-a690-fbdbdff7b77e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f939a1d7-65f3-4a99-9b37-b27930cadd4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b8ad82a-5f67-469f-b39c-1512e5297820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59e33b7-2975-41bf-a777-e8362f54b814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0807b4e2-9324-4ade-9b7a-739c7330083a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885a9cf1-531e-4795-bf7c-55e79809e631",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02660c6b-f955-4860-9a04-e8201adce880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9daf60b-b12f-4d9b-b623-f298d79bdd43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1076dc3f-2477-4909-b313-c0dffba3c700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d16aeca-eb5b-4a5a-9270-36a1a3d25807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4cdfc0-1f5d-4641-b930-f2eb89b15224",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b684e8ca-45b9-4ce4-8104-eee27ae2809c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b04850cd-5d72-4349-862f-e679c22c2cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a9d469-d284-4fa9-85ba-a784db40ea1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ec13d0-1b02-46fd-ba2a-24d93d9f4f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622820a9-50de-4adb-96d1-a68642dfbe17",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d9c606-27ce-46ac-8e38-5975ddce055a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c587a8d-432a-41d8-8ebb-463db57f9876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa4e064-62c1-4876-bc33-d66ce033dda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2520ccc-f12b-4f54-b329-7ac91547810f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7238e561-52c6-4a82-a5c5-8834c9bd3656",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d006aa-13ae-4c4b-b16a-d60195613191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c212bd04-a264-4688-9245-44b4006f54f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b41ebb5-3971-44b7-8c56-a64b933440de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e695d3-b5bd-454e-b09b-d33727302a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a215001-7ec0-4be3-8e95-91569a9359ce",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d6d4bb-c694-4e21-86a2-cd0cda39bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b806c509-b7d3-4c36-abee-51d8f213121d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9662f34-9cb0-4ee3-9586-2ee2832588c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10fd3a0-6a30-4b6f-b401-5b629a644421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d7db83-398c-4050-b90f-2a85d08ad227",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509fb728-8d67-43b0-b5b6-2e0b53a6f835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23471a93-7012-42df-899d-032f0777bf87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbb7bc9-adc5-4325-8934-883371196bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83c07f3-a6c7-428f-a244-2a0a3d802f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57fe1b0-53b6-4f88-8851-6abc7c071d18",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10875107-aa3c-499a-8f6c-215ce34095e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afc0f9cc-3736-4dfe-9018-5207ec680859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294ac7bf-9921-4fd3-b447-1ce3819c1fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2506c11-48d0-4658-872d-7b2e867c784e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c53f08-2e1a-4d02-95a6-7dd3d652a0ce",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01915ec-b4af-4039-8fed-41e2bfda91b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601f6396-b74e-4b96-81d9-e27c5fe4c953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0751f4e2-72da-4a48-b312-c832d285c0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a991f7a-b75d-4dba-8abe-3709c61e93a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e12f82-dee4-4c98-bfee-7d55a85c5280",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af7bbdd-5091-4ff4-8cda-abfa295d25a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f360d8-0a55-47a8-a3f5-99e4d13c1359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d678be3e-3623-4e39-a223-284673f63a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cfa245-c696-418b-8e05-1923c7d95e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739ed99a-8b3e-47d7-8587-83e9a501588e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33339891-952b-4182-b056-d2a5cda94193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9698ba79-daea-4d7d-ab33-1445d141f13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c82dc15-76ff-44e8-af6b-10d2202315d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872fabff-f099-4e56-a634-e95cf00d711e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcd2c3e-24db-44dd-ab8d-1ec4e3a02244",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9a6b2b-bec5-4bf7-9e4e-7657e4c3fa9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554ccd2e-c0ed-4c4e-b848-ee2c4c3c13ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026dfebe-bbc2-45ec-a63a-8942f4c0467b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40cd870-b55c-4f31-b1b7-52cc38d1a18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59eb599-514b-41be-85b5-191fb69d86eb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6b3007-6196-450a-958f-8141c3117ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb19476c-6b55-4f04-a62d-2bcc37d4144d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc978fb-4e59-405f-9fcf-96dd1a66f7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa47289-a7a7-4dfb-ab18-bf56b92cf0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dc918d-2a57-4cbc-803b-7fbf61eb280a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1041369b-746a-4d4c-a8e6-3603dbe2a176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9285966-4fa5-4e20-bc37-13b0260ef396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1915b9d-23f4-4f23-9c7c-f9abd0ccb6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4caa0271-3657-4f3c-88a3-67b57ab11ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb83ec45-14fe-4844-9ffd-50056938fb6a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82b45e5-94d1-4e5d-ae6e-fd5b0688348e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7968b1-f31d-42f4-8315-8d6e109e3486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6eb106-24ab-4a11-9c0a-1274655edb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadc6268-533f-423b-84b4-c3443d5d7d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03074269-c3e5-4037-991c-4d7b6d1fac20",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7a73c6-bdb5-43cf-91b5-899ed701078c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90cb5c1-c020-4d2a-b0ed-dbcc0e9b42c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc149ab-c20b-4cd3-96ea-7260ef168fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3602d24-b798-4ba9-81a2-1190ba227542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cb018f-416b-4a12-9254-e491298b2e8f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a8184e-4654-4d00-8784-51a080ac6e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53da1666-8bd1-4e55-8c39-01fd2ddfe48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a287de-7543-4f85-9776-72fe13fbbd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c03dc1-5bf5-414e-bbb6-7cdf500090bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dbe6c5-c29f-4d0e-9b0a-c2bf114c7ac6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18c1b35-6535-413f-937f-b962c14c4d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d5d425-2115-46f5-b9e7-23e9c81555b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791339b4-22ee-40a5-9c8c-4c2cca31deed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4e952b-68b2-48d3-ad78-5472b390a200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6147070-ed4a-437b-acc2-310905ad23b7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84661c0d-8128-452d-829d-e3a77dcda2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616f453c-5e5f-4e6c-ad64-6f34359b6fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c448f9-3b5e-4082-bff8-b68c150bc4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad8a94a-b4a0-44c1-8326-e741ea9d951e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6807db-a097-4c89-9fab-f810018cb270",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad44c63c-d31b-4517-84eb-be177072c1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68979ea-0362-48a1-a7da-d8d2a9d762d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287c7a71-cfff-4b11-99c7-742de7a18239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a860d535-15ea-4084-8edb-86adf8b32253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae447f2f-c385-43ad-9c10-8ee24e983989",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb30cf02-de64-498f-9e57-7e03cd34aaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c50d8c-416e-4a0a-aee1-500b9dfc72ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6ffccd-eb3a-44b7-beae-4cf9714753ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63103431-a235-4deb-b2c4-66fb3ecd298b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef750cc8-1e21-49f7-a281-ab13de413234",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9014a425-b83e-4fa5-aad1-e379f05a3439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c074167-2922-4ac6-9d57-876b2e8bf122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032dd10b-1a9c-41ea-b260-f5569b67e7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57afc6e0-3344-4add-b463-d67c29433c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06260e39-7c9a-4226-9ff7-c23cfa5ca232",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939cfa60-b92f-4d6f-8822-105676f65f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9f7084-a431-4b77-b69e-7e0baa1d39c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53755fa4-e316-4675-b701-b42156f1e35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3ff494-b377-4f1a-a14a-7a4ceb329f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e09b38-9ff5-404b-8a3c-a2ddbf02114f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90454daf-01ab-4364-8fc5-58d75a9b44d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46736843-f220-499a-b45d-33379cf5b56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5317a5bf-09b7-4698-838b-f050fef8e148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0b725a-315f-4638-9759-d856dcaa0a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10551ea2-a135-48c3-ad5a-8ef0884c75e8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb240c25-914c-44fb-9b2b-3c1a92c9758c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7899d3f0-873b-49f2-a64e-67c05344df21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82da79e3-a5e9-446a-a6ef-fe47585e57df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d81d58-c256-49bc-a498-1d4fadc8b6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d20ef47-0e64-40da-a77f-d43408c4b59a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31bb2dc-f11b-4523-a04a-306b4408ce0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b06b284-8068-4602-a99b-6267bfed82fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e882233d-c69e-402e-a1ea-5c5c7d875367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c27f34-9543-4744-870d-fad6a78012cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999b8c3e-bbed-4ce5-901a-50a2b0272c15",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c966f480-b493-4377-928a-77541bf1bebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3272f2b-4f8f-45da-8fe6-1503a3e611d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20edb06f-7ce1-4a66-b805-af473b34cbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb7b89e-c1d7-4121-8d06-4949b68d90d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae318433-90b5-405e-ad97-82c6516669ed",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b3c519-c99a-4158-b44f-ab2faf23fc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f38bbcf-8ade-46b3-992f-68b210c87cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d407970-5526-474d-8e44-41de97e6525c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6929f0cc-8eb9-4720-b25d-1812a5a044b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229801d5-bb7a-4bef-95aa-135af00dd3d4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6093c7a1-2102-4a64-be61-dba3d1230378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11373db2-15a9-45ef-931a-96055ce3d014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccc80cd-e54b-4263-b846-2062acef2c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f924bb34-f51a-43f6-bcfd-2a1514fe14ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d80c61-979e-432a-bd7d-556433c6d483",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae5857d-d299-4d7c-ba34-88855a575b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95104c1-defc-4258-83d2-0a12261634b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e7c47c-1250-4d45-8367-92ee5d56943f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018ff95d-1c2a-4391-b96b-a5aaabbfbbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0176472-124f-413e-839b-633d1ed3975f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf843927-10fb-4e8a-a183-36a5e3ea3bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8950566-f25f-406c-ac36-0ed89040dba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cd1503-ffb0-4822-ad8f-34e01c5da70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c5ece5-b9d6-484f-8a40-9fa0f9026d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a108c172-bd56-42db-b898-3dd4e8bb2f60",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bff15e-a408-45fd-a140-5fd3d94329f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bede2c-9fd3-4106-93e7-5499464397fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bef1b45-cc85-40a5-964d-06304e4af05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6788adf6-558e-4bc9-94dc-85d58aa30634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76934f0-6279-41fb-9823-caea51e88b43",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a10f44-84d4-4a59-96d8-93215532111e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9ba732-dde7-4f15-8ec7-c7c9e4a98075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b79cd1-b1a7-423b-b401-390802aedbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670e9800-0fcc-4b91-8481-0e5db1d09aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ade1bc-ebbe-477f-b1c5-ec0e3a891e49",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786fb179-60d6-4e4c-a1ff-4472be60fd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940745da-a25f-4bec-9c20-a99cdd506f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7bde08-9780-44c8-a015-7b3da6faec56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba92ff31-40fd-4940-87b3-f27c730fc82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b244193e-0733-45f6-835d-84344018b5f0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29182726-1779-4476-8206-463d54bf83d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2041757-f790-4ca3-9195-8967a75a3f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a07ad9c-bf74-4252-81fe-e9d4444c6fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be16a37f-fd33-4ff4-92c2-ba84eede39bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8d44e0-49af-42a3-931d-d8270e0d3be1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7943540a-9bb2-4fef-aa1c-2aa750029df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f483c4ea-bf09-4e0f-bcb7-502bb60b6a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfc5ca0-ff35-444a-967e-5ce47bd3d958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3061b1dc-61f9-4702-9616-566ddac74279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a641dbdd-465e-4408-9169-8d1e00db3435",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ed31c1-f678-46ad-bab2-61a31f1e3936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1abdb5-0970-487d-8640-a749da7620c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f32771e-8eb5-46dc-b156-5f85dfb7b3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b624526-87a5-4fc9-81b9-30c61cbeea6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b6ae61-2ae9-45f8-8d3b-34e5783b657a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d009571-5553-45fe-aa6d-cfa88619332e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b62141-19d1-425d-b490-6c69ed7b45b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f2bc26-14cc-468f-93fe-7f4ed8c7897b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4da48ba-126c-449e-8f90-fb4d99d3f88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ea98a1-b61e-4247-90c8-f357a4a9bce3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4805c62e-cf14-4fa1-bc80-5404bac7f08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d47d70-1f61-443d-9620-cf6e65d165b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703a77a2-f8b6-4505-b9a7-e6c2d318d733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b470162-6aed-49a7-b5fa-be3de9130434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6d9d7d-2846-43dd-a75b-c1ebedeaf355",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80115db0-b6c5-455a-92af-770d6a842846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b82e62b-c96b-4677-8a8c-85989cf714b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e3a2b8-091a-4efb-b158-c49cd371c3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff88322-9a3e-4143-a700-6eeb5e6187a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234e4acf-1136-4a18-b3bb-5be78e7ade5d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97529d8d-c482-4900-a498-5febf79adb4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "731f075d-87d9-4ea3-b3db-e5b522b7d4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d967ef-58ac-42d0-9727-c26b3e72411f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406d06b8-f5e2-4a1e-b488-ad06b20323bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a85e3d-7c50-451b-8582-51dae149d6e8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e81908-4b97-4146-bda6-33fff3100aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34332ec-1471-4fee-af24-184a93bc2727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977c8d9b-6772-4195-9b49-035e89396239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3906c855-5c8e-48c4-9f6a-18abc3d1588c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc39d74d-30ee-4d22-a732-5c2a7876fae1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61134726-474b-4274-a1a4-2afb0e9fc622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f52f156-3e91-47c4-b0d6-9feee2d48db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc19227f-b20a-48f7-aa07-3669f1451e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd49e8c2-3ac8-487d-a888-f212ad873e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b02fe3-36d1-4c0b-a5c1-f683b0d52aea",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac24e13-5d63-4d9d-a1cc-38c95de7de69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b42f268-6405-4b76-a456-69566ad5aa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e6a2aa-0435-4a76-8281-d1eb9108a4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1456d8d-f62a-4ca0-bac9-2176e2c0f38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dc1570-d910-4971-9b78-f0e482d3c842",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d0804a-36dc-46ff-ae88-859887d8c392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f85c443d-fe0b-4207-846e-799fa742f0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5de1c8f-c12f-44c5-bc8c-7bbdbe208418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc0d68a-17d7-4830-ba22-01c8368fa9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d34d729-7597-4b53-9f1d-555194710d80",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5fe822-e8c0-4fbb-a7ee-3118973eec36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b62fd9-3495-4ddb-a248-5e7d80fd7f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b95290f-019c-4e17-a1c0-a4bbfbae66a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192a3b7f-6970-4fe2-9d7a-2dc11313eae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b2769e-d252-412b-ba7a-767f13a9347e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef39c68-011f-4541-b5b4-90a7cdbf26ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b9cbf7-6224-47c5-a382-f485b9b3ce9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1e3642-5c67-4256-b022-872cc4fa6af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b6855f-adb1-44e4-b52c-7893cea8f41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195a6fa9-94e6-4ff6-8f3e-80233741162e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a892a16f-26b9-43a6-ad92-114813807160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b367a9cd-2491-4f30-9171-c1e10919e21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582ffdbc-81c3-427b-8fa9-47211383bfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b280fc-9ec3-4ea6-bc97-3af4ed6a9cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efd7b28-0f60-4ccd-a046-11756e8aab08",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e1666a-ec9d-4c99-9b1f-c3b6262c4b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "757b1d9e-3808-4f41-9b1f-2863cb52a240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85d7f6e-ef26-437b-b73a-edb3096b76bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cc08b5-2057-43b4-9a4a-e2160118540a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f64e11-65aa-40f0-a5d3-ad83e7089de5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347bc151-35bd-43d7-9c7f-fc160302f29f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e77994b8-c2fb-4936-960e-f314c41fb59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bacd8b8-3740-456a-ac79-c51577c7f325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729391b7-4cd5-40da-a47f-220e1958acc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13c30ab-9142-4238-a7d8-4223f601e3d0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64064e2e-ddc0-4537-82ec-00ab3a2a83d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5ef3b1-8e9f-4388-bbe0-1412fa2badf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8ed4e8-7e99-47e9-a53e-cade7cd564b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdf81cb-0e69-4f7f-bae6-8283e54e7974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f3911e-98ae-49e0-87c3-069217950d95",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6f2c5b-b513-4e13-92d0-be01b3714ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8449032d-9f34-4a50-a3ea-b1f30345b829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ef32ec-579d-4d4a-8524-ef66bf5bbb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a61999-492e-4161-9053-78b4c2ee5912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a4bdf0-3f7d-40b1-ae5f-aeecbe998b29",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daae692a-37bf-47e8-8728-36a9c5710567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab1c26c8-2dcd-4328-93e7-bbd9493e0658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d1df73-0047-42e3-a6a1-d4d35fa07940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb909ac-d8b1-4800-9aa8-201cb1ee72ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67ab980-e327-4090-bd28-0fac1cac65a5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa7c3d1-6d3e-4181-b7f7-81b376c85e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c36a66-13a6-41cf-833b-e2b0f12c5f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3b4b50-a339-48c7-a305-9a4b25d4e31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276098a8-43f8-48e2-848f-69181d9f3337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce680730-2fc6-4eae-80ff-4855577dbfde",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3596fc3-663c-4f32-be9e-4ca8d9beaea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39875977-8fbf-4d53-b8d0-e7052ffcfde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd62eb40-f598-4ea9-9163-82de231700ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fd24c7-6746-4906-a54f-fec2ab278db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b378ca27-9334-47ad-93e2-c8bcf7c3f0ea",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7098b37b-e642-4818-96b4-2a7a61d1176f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496a936e-e7ad-4917-a27f-a2590b7e86f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d354e70c-e8ec-46fc-9b42-404e3c6b2cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c740403c-323f-40cd-9d4b-5e8df573c409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b134a96-40a9-4ebd-a4b3-0fec48c5be4f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dac58d-fa18-441f-8575-fa31143f8ff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c64f4d-fc16-4c7e-ac14-ca9cf053c3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf9906c-299f-4266-a351-d78f889d2ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2e6872-f457-41aa-8c47-cc703e4ccc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61e43c6-cee0-4be4-b37e-b91697ee6b38",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bd3245-b1af-48c6-a97d-afc4d6e48223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b68d82e-d569-4e26-a0c4-5465d21e0726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc41311-81d9-4a05-9056-e09bb3052d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9265ffad-9b3b-4a64-b38e-05634c18a58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fd8d11-82cf-4964-a9bc-4feb2796d3ed",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f4ebd8-cf0a-4741-a3a4-7d0672e36f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56109669-7b44-44b5-bb4f-ce2ae84c73f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0bcb9c-f24e-41c4-bff2-a80504d4a282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf837579-c093-441c-910f-8e1b110ec5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85fdf8b-7223-4198-aec2-91aa8ed69852",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e166cc83-1b9e-42f2-942d-ffb195885990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1b726b-3cc6-4c96-9e57-aff4c200b959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0177b1cc-f0b0-4af6-bd68-6e553465ed73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7614a2c7-77a6-4d5d-a8f8-b4398ef4f13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ed64ca-88fd-439b-beb4-25c9309a9383",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd54f6f-76da-4015-b318-86d40aff1373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab8279d7-f386-4c52-b007-e687ac9a87a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da601543-79b2-475e-864d-264e7993d8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f77c69-de95-433b-a495-af5bcc822256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1305a3b9-eba8-4832-a2e4-0582bf96d0a3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9402f2-0b71-41c8-888a-413d7a5a7512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4436e378-b781-4566-9c63-ac45c02fd036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3d220b-9ad5-41dd-acbf-7c2de019df74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fafb361-4290-41d0-b5bc-7375b557ae05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c47f4e5-957c-4230-8e5c-b3564b43b021",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d70802-89b1-4b2a-a934-d5e454f8c3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a29dcc-6158-492e-b3c3-23b9dc1d09f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0c426c-8125-40ef-98d5-c4fa792cde0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15696b03-8e8d-43a2-b249-3ca06bd23a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bb61c1-b2ee-4dbc-b9f4-32cced74b932",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dac3938-49d2-4a19-9e77-f54e16080fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80fcd8bf-06fd-497a-b0fa-2fb8f6a428be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4353b86-89b9-4d37-9f2b-c3ef75eec3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0351af90-d590-4101-8678-ae9214937b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a42031c-6b2b-4157-b50e-4770603a1bda",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f24084-99b2-44f9-954e-7834880d2440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5315995-0d93-4739-86bb-1ebbbe560e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b16bf02-1256-4cc2-91a1-f5d3a0560caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3df4d0-35a0-4bc1-b0d8-145168509bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c44a9e-1e7e-4b77-84b7-fc97a2cc9fa0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd80107f-9142-403e-be17-f91d86e80a86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a42024af-1178-4a45-9b5b-afc514e65a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d26d8f1-05b7-4bac-9981-8e644c55bc41",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db95219b-2c6b-482a-9e36-fea987a35fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb3d331-3f88-432a-b50a-fcb6ff9aab27",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82260eb-a6b1-47ab-95c3-fd4529e3a60d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "719c74db-4d64-402c-aac2-479b94c8d4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd74aa01-4fb9-42e6-9118-dfcb61ff983d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d266f4-5dc9-48b1-ad47-5504ff01ed1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f372603d-c3a3-40f8-9d60-6ca5e2393e5b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d397ac-44a5-4ad9-91e1-815af66a6019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84312516-16fc-4ef3-b260-e79620ba3316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5362014b-d55c-42ef-8f77-6af0fd6ac658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ea74e0-4f88-4619-9d81-61fed8effb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bd248b-30fc-4955-a203-c77d574ec54d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4371d6c7-2497-47b3-9153-60f24577f90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4765cb67-9c25-4b12-971e-a7fa94d81d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62eb48df-c0d2-4cfa-8597-1b3cd1ae563d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6fd232-8764-4d63-815c-e2f83d935f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273017f7-f960-4842-8e59-f500d437a617",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac96aebd-c89f-4a3e-be1d-4ab6c0e754e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36532705-9e28-4098-9313-631368c41920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27ab35d-1169-409e-8e86-7f48807b92c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a2f28a-55e4-453a-bfb3-97c7f0da5128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6feac4e3-cd7e-43e1-a5a0-66859dcf778e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5d9118-1a42-4635-8d16-949e4602dc14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ff93df-de72-42f5-ade7-157e9d6d329b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec5eeb0-ef0c-4e66-873e-e873fc64657a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a03e9e-3844-4127-ac47-73e11e74a70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f368cc61-922c-49c8-bac5-359a044175f9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719f55fe-1b47-4474-bd53-795290002b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d951d9a2-7248-444e-8f36-35b541eaf9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a51a020-64cd-4418-a2c5-f3fa97311871",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1167660-cd3f-4a90-a90b-547b249c1094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f45c9b-19f2-4ad5-886c-969a65cd39c7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3330540a-8797-46af-9c80-0634aea51137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277de0df-e7af-41c2-8553-c5a63ee11822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cf6f90-6e3d-4ddf-ae6a-fc1e4c62a45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da03fcd5-cd9b-4386-85cb-c1597a6aa4f9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33d4c51c-e6d2-480f-89b4-46dc8cd69938",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82f0dfb9-5576-411f-b707-cd3b4c7b4790"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44656841-c3c9-43af-a69f-930403619d6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96e4852e-f8e4-4358-9665-87a45f8118cb"
                    }
                  }
                ]
              },
              {
                "id": "da45ebdf-e1ff-4065-b1be-c83b73af0020",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fd56d78-3ae8-4925-af53-a1d88e39e6df",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcf1f97-de41-465c-ad8c-c9a7a831abc6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "26dade68-b63e-45f3-b443-04d4a13d5177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0556c8-9779-4e50-b267-9a34a31b0ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2659eb53-4503-4c71-a53d-2d88ee18e4ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5129a538-d075-4102-bae7-144066047266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf5d13e2-d1d4-4bae-99bb-5c05690d88c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f485e29-e12f-4d03-b498-a9d784dc38c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6f3926e-4462-40b7-bb9a-63979c5f10d0"
                    }
                  }
                ]
              },
              {
                "id": "459894e9-ea0c-4b03-ae82-ca9cb641e64c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "485ba4a3-ab58-42aa-8e57-46c0fae41f49",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd82d310-4f8a-4846-b9cd-7cc178e5fa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9559eb66-2af7-4776-8ee0-ef5340c92dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743896e5-f3f5-4f6e-8459-a1119afee018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e1b028-9ac7-4147-b5ae-240f2e45664b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "818e9cf6-63fc-4c9d-adad-880c568518a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "03a247ed-8bf2-4ad4-9a49-76f4a3b6f726",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ac133a7-9a20-48b4-96c3-3c19867ee90d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6bc773b8-de29-4d84-83de-d37e269044e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0543665b-5a48-41c7-907b-634eaac219a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "476607b3-629a-4a77-8b82-127fbc3d5808"
                    }
                  }
                ]
              },
              {
                "id": "8d6db3cc-bb76-4fe7-bedc-f3ffb18ee6e0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05f5b2ff-e8e7-404d-8003-f39d809b6d6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "686f7485-21e7-4274-b7ca-a6273a3aa313"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4605090e-58d7-4e83-a4c6-fcc4b0d93068",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afd61c02-0222-46d7-ad58-7d048652192c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "656e84de-1181-40a1-b220-b07ec2ae8bb1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b62e9049-d0dc-4dfb-bd61-f01ca588d7f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e3de480-49cc-4d2f-86b6-bd6af9f634d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86f31b4b-700e-496f-bd76-b112c3da2518"
            }
          }
        ]
      },
      {
        "id": "e1c8ab5d-8812-4425-ad4a-072c2c96946c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f517ae9e-5f4c-48c0-a0b0-921a3dc4ce29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "375300cb-1185-445a-a88d-75275a43cd77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c9302a2-739d-40be-9e2c-030ffeb05023",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf2f6a1-ecf4-4eac-b174-675a35bf2860",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3cb40f5c-74f8-494a-88e0-798b01111db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294d38fb-965d-4cf9-8de5-a263cd817428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea961146-ce14-45f0-b373-7f7900f06e1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba62d343-481c-43bf-9e10-08eefe394d72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87c55e6d-1621-4a32-ace6-b40ea325e6c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e688699-2cd6-4d32-bf35-ec3fce1ed081",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6e18d35-8c69-4bc5-b48c-924431552840"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e793876-fd4a-481a-aca0-6a2e972cf3b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a4c3c171-beb5-47ed-a5c3-a8bc474bc99c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2eda26af-4076-4f9b-8b7d-7d74158a172e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9334abd6-f8ef-4e03-882f-6d9f3fc85f7f"
            }
          }
        ]
      },
      {
        "id": "5aaed90b-ceaf-4260-a0d4-38dc631f4d3a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1da04ded-9046-4ef8-b0d6-330893465490",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95ba7974-31e7-43f5-a00a-9d426bf607b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "740c67ba-7027-4dd6-bbdd-5422c87c002b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e2b657-3886-4407-ae46-5df56da8b05b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e1c6aea-9eee-408e-aa31-54f9dc6d7861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f86aaaa-fe39-4914-bfcd-1dd3a68fcbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f46faaf1-abcf-4362-b1f3-9f27809a8fe1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4809c33e-538e-4e23-98b6-de251a3247f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c94397cc-ebd6-42ae-bb4a-9b71a9d78095"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25944ac9-e6cd-41c2-9eef-48d700071521",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "338be582-ecf7-4b33-8d54-f9897c031c08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1ccb834-8111-4d99-825e-87ffeebf0ea5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "373e8a10-ab68-4a2e-9631-c2cab684c61c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a67bd334-ab6d-4946-b8d1-9d8eb978ef50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1d151e1-c936-4bdb-8d72-2c72cff9ebe3"
            }
          }
        ]
      },
      {
        "id": "2eefb389-9d72-4652-a32d-a3d37819eb37",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "db7d123f-c5d0-4266-ac69-c630b0f2842c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78e0edf0-f057-47eb-8ff2-24e2e690f537",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92a1f3db-51a6-490c-8154-d8fbcdc95e33",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9129e14a-2d16-4d78-bc0d-c183cd6df70c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df0d8683-90c4-449c-aebc-b16459b5f861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8265a6c5-8b20-4fea-8a19-a606ca5cb72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c4914ba-8825-4c23-8cd3-b63dffcb736c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e15c201f-78ea-4500-bced-ca36b39ef6f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1034639d-c007-4bfe-94f3-c4cf37739e2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f080fc2-a623-499e-8ba0-f24c0eef17cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c926906b-7f27-4b7d-a900-47e7254d335e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c1a607e-8428-41e9-8885-7face7e833a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "acc1a5a2-58c5-4f31-a4ee-47381a39d563"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2a72ceb-1cd3-4a49-a98f-9e8206393741",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "967ff2a3-acc7-41a1-b131-a567ece28ad5"
            }
          }
        ]
      },
      {
        "id": "36bbdcfd-4e1a-4357-beef-3ea1a3b199ac",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d55b733b-5cbb-4d94-a930-4de09969a19d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5fd9c33-6190-40f7-86b9-e62cead72d9d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "23535eb3-dc7f-4820-9adf-317a5aba1b2a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd42ca21-c95f-4842-adfb-2447ea4291ef",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0470acce-5e29-4cc7-955e-7a2e8fb29a70",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.27112676056336,
      "responseMin": 10,
      "responseMax": 333,
      "responseSd": 26.667364347936992,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696033954579,
      "completed": 1696033990415
    },
    "executions": [
      {
        "id": "8672439d-272d-4d7d-ab76-22a773b19713",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "897a38dd-4d6b-49a1-a822-ce503a31d387",
          "httpRequestId": "9eeade0c-73b5-4706-8cdd-fa0b38b6fdb1"
        },
        "item": {
          "id": "8672439d-272d-4d7d-ab76-22a773b19713",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "07fcef9d-6a80-4aa4-977f-0eed303fcc73",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "6a772355-a9f2-483a-803c-347f2d7e82fe",
        "cursor": {
          "ref": "ea2317b7-dfb3-496b-a84a-c43236908482",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0320d5b3-1cb9-4e37-8d8e-2bdd59537c08"
        },
        "item": {
          "id": "6a772355-a9f2-483a-803c-347f2d7e82fe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "54fadabc-6441-4a26-89b6-5386dc5bf4c7",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "d09fcf11-1e95-48ba-ab9b-321eada859f0",
        "cursor": {
          "ref": "532c726a-8164-4873-9a3a-7796a3abf77f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "639e145c-4725-472b-bd30-1921c19790f4"
        },
        "item": {
          "id": "d09fcf11-1e95-48ba-ab9b-321eada859f0",
          "name": "did_json"
        },
        "response": {
          "id": "23d2e0ce-d4a4-4a2b-bbab-7e1e7f6a4baa",
          "status": "OK",
          "code": 200,
          "responseTime": 328,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d61d1b3-8933-4fe4-80e0-fca3b6d285e0",
        "cursor": {
          "ref": "7dd47434-c9e5-4c67-ade3-853a215421ee",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c568c9b0-d723-4af0-90a6-79968ea7bfcb"
        },
        "item": {
          "id": "9d61d1b3-8933-4fe4-80e0-fca3b6d285e0",
          "name": "did:invalid"
        },
        "response": {
          "id": "fc45c938-b883-42af-a157-0f500246384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d61d1b3-8933-4fe4-80e0-fca3b6d285e0",
        "cursor": {
          "ref": "7dd47434-c9e5-4c67-ade3-853a215421ee",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c568c9b0-d723-4af0-90a6-79968ea7bfcb"
        },
        "item": {
          "id": "9d61d1b3-8933-4fe4-80e0-fca3b6d285e0",
          "name": "did:invalid"
        },
        "response": {
          "id": "fc45c938-b883-42af-a157-0f500246384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee38862-7907-46af-9414-a8a239d7bb3b",
        "cursor": {
          "ref": "20bf9f58-307e-4c3a-99df-e86910021eca",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1e2c2ca3-3f84-4b18-b2c3-a5f76a06dcf8"
        },
        "item": {
          "id": "fee38862-7907-46af-9414-a8a239d7bb3b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b0840e81-80e3-4c35-93a8-550cbc4d8d86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 160,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08137aa-6dd8-4509-8675-87efed3350b6",
        "cursor": {
          "ref": "315bfb9e-051d-4532-9323-675067b828be",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "adf71327-9240-49ec-9e92-ea889da2dc5c"
        },
        "item": {
          "id": "e08137aa-6dd8-4509-8675-87efed3350b6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "218dc312-323b-46e1-b8ee-2d3a08d10bc6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00159387-d035-4ae7-8cda-54c54e3c56fd",
        "cursor": {
          "ref": "c77f2640-8ecd-4935-846c-12dfbe2a5454",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "594d72c0-bf3d-4b76-8e7e-2689c49ea13e"
        },
        "item": {
          "id": "00159387-d035-4ae7-8cda-54c54e3c56fd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d5f444ee-53f8-4adf-a007-ba51788fc9b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe93e97-11e8-4c3a-808f-65fc7feedb58",
        "cursor": {
          "ref": "37982fdf-d88c-411a-8933-cdea3b0e2273",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eac7cc9b-85fa-48cc-b45c-1d3cc9ea9a6f"
        },
        "item": {
          "id": "7fe93e97-11e8-4c3a-808f-65fc7feedb58",
          "name": "identifiers"
        },
        "response": {
          "id": "43f15c60-cd18-427a-b87e-5fa374c34f53",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d0d1a9-310f-456a-9227-8db154732f8b",
        "cursor": {
          "ref": "2e05faee-1977-4771-97a3-b259ec5cc8d4",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d05ca483-3450-4558-84ff-09725cdab39b"
        },
        "item": {
          "id": "e8d0d1a9-310f-456a-9227-8db154732f8b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7b9c8bb1-8a01-4270-acf3-a769a0197543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda21f81-7188-4a19-af84-96556ab7646e",
        "cursor": {
          "ref": "990b1cb8-b08b-40ae-88f0-ec18160fd8ab",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5eb99419-6146-4879-9afc-60c46ccdbe53"
        },
        "item": {
          "id": "fda21f81-7188-4a19-af84-96556ab7646e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "030775d3-276e-4e60-9e94-6142abda0e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faae8804-21d5-47de-80f6-84d6bd01c39f",
        "cursor": {
          "ref": "4e0faf9b-05df-4275-acd8-4c5d93fd354a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "13b4fe43-7daa-41e5-834e-8384fe59dbd2"
        },
        "item": {
          "id": "faae8804-21d5-47de-80f6-84d6bd01c39f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "876a9328-5a1d-4d5e-ad02-866b07c5885a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294d4f2b-772b-4edd-91a9-02cf8a4d0194",
        "cursor": {
          "ref": "bbdc0091-cbb1-4e2e-b334-54f3867b3f77",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b867d4cd-3915-4a8d-a0a4-2e622f0a560a"
        },
        "item": {
          "id": "294d4f2b-772b-4edd-91a9-02cf8a4d0194",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c2b8808f-f514-4790-907d-32ff49ce5668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08be9ab-8e6a-44fe-ac38-7c498dcfe3a1",
        "cursor": {
          "ref": "e441dddb-6396-4df1-ba7b-7c96b994a500",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ded40fc8-d016-4e1f-ba3a-c8acedf661d6"
        },
        "item": {
          "id": "b08be9ab-8e6a-44fe-ac38-7c498dcfe3a1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a7fe6ab9-92bd-43b2-b3d5-38599d3f1490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3e8f56-7af7-470e-8732-ed714bdf1a7a",
        "cursor": {
          "ref": "55fe1ac1-fe9b-4550-a556-1e66a8079e2d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ed806805-deca-4539-94e5-83f07529a805"
        },
        "item": {
          "id": "2e3e8f56-7af7-470e-8732-ed714bdf1a7a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1374c49e-199c-4bcd-a669-f88a09b266ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69c365c-baaf-4d27-80fa-0128d6d9f9cf",
        "cursor": {
          "ref": "460bc63e-949e-4e09-a5b4-90bc9bf3cc7e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "02bb6dea-3eae-49a2-92d0-5dcecb619f16"
        },
        "item": {
          "id": "e69c365c-baaf-4d27-80fa-0128d6d9f9cf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8fc1b823-7cf7-44a3-8c81-b7e2dee46352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9ba05e-96f9-460c-967e-fb3d7f616a78",
        "cursor": {
          "ref": "6a36a6f0-320e-4131-a21a-6e4166a79708",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b3a7b35c-4e23-478e-bf38-c77012d7e14a"
        },
        "item": {
          "id": "ba9ba05e-96f9-460c-967e-fb3d7f616a78",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7d3a7ea4-bcc1-435b-9217-b0aeacbd2937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa8411f-050d-4af3-86e6-e786e85af1a4",
        "cursor": {
          "ref": "9d2d4a15-5aba-4839-8413-7d9dd949d502",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "65052761-ec7c-4229-ba3e-6e09b9a54c3d"
        },
        "item": {
          "id": "faa8411f-050d-4af3-86e6-e786e85af1a4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "742036ba-f59a-46e7-8ed2-a91ec13bf885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd4ef2f-2ff5-4d6d-a28d-c2126409b669",
        "cursor": {
          "ref": "8c5f3fa1-a78f-49d7-b4cf-2db440498cb1",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3466466a-99a7-427f-8781-612a9f0c578b"
        },
        "item": {
          "id": "4bd4ef2f-2ff5-4d6d-a28d-c2126409b669",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "41ecee25-29ff-422c-bc4e-6488c521236c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d33d9e-91b9-4ad3-a3ac-e511aa5ca679",
        "cursor": {
          "ref": "2e1d650f-8108-4f33-a2bb-91de38dded67",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "da0dddaf-8d32-48fd-a6ae-ef54d3a06385"
        },
        "item": {
          "id": "55d33d9e-91b9-4ad3-a3ac-e511aa5ca679",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1a079295-114d-42d9-9a9a-3b14515fe1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3fbc50-122d-4c4d-b9bd-1078d4dcc7a5",
        "cursor": {
          "ref": "f9a84dcd-0c48-4aec-9805-5ac1d2597361",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "de8ee3c2-5e6f-4709-9ec0-ce56b41019c8"
        },
        "item": {
          "id": "7a3fbc50-122d-4c4d-b9bd-1078d4dcc7a5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "57c6e22d-9f58-491c-8669-98765590dfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ffd7f1-8321-4d4e-9306-46b06dbe1798",
        "cursor": {
          "ref": "ee6eb27e-f37d-4f8c-b99f-cca6a9c6239e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "24b7aab8-0827-402b-a50b-436f902bf2fd"
        },
        "item": {
          "id": "71ffd7f1-8321-4d4e-9306-46b06dbe1798",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ae171f16-88ed-4012-a3dc-45ae5bc2e014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4b91c2-2da8-4fbf-91f2-ab45b721a1de",
        "cursor": {
          "ref": "4e40611c-cc70-4dc0-972b-5576c8344638",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "29ea9162-c77d-4629-9afa-6a684fd2e9f7"
        },
        "item": {
          "id": "db4b91c2-2da8-4fbf-91f2-ab45b721a1de",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2ffbfa78-b5e1-4f5c-8d3b-221f57c5f65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad364cbb-ec94-4eb5-b2a3-62bb342265b7",
        "cursor": {
          "ref": "f3a7c3ef-e549-4d64-9048-121cc2bcf48d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4b794a17-09b9-4384-910e-f793d3f48614"
        },
        "item": {
          "id": "ad364cbb-ec94-4eb5-b2a3-62bb342265b7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e455f827-193a-42d3-91fe-739423514cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c62b3f-2726-464a-b054-f7ea4ad1fbfe",
        "cursor": {
          "ref": "b58a22d0-4911-4e54-b85a-2254be953790",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "abd6ec9d-ece7-4035-9261-3705fbb70c38"
        },
        "item": {
          "id": "d1c62b3f-2726-464a-b054-f7ea4ad1fbfe",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "68bb2e62-8d28-489d-8713-33cef4d8f48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cd9545-3dbc-4ce4-badd-0f24a28aa891",
        "cursor": {
          "ref": "b158392f-c1e6-4b2a-a196-0a2e5eaf2650",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "81dca635-3e32-4937-8198-16070a5aeb5c"
        },
        "item": {
          "id": "93cd9545-3dbc-4ce4-badd-0f24a28aa891",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ec3ea5a6-4e6a-45ab-8149-187da31a91d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988beb5b-5e0b-4d60-a19e-d24f7c1c12ae",
        "cursor": {
          "ref": "9d45b9b8-c7b2-440e-bf91-743d9ba85de0",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "05944afa-5757-4ab6-ac68-1d0aa7e529a6"
        },
        "item": {
          "id": "988beb5b-5e0b-4d60-a19e-d24f7c1c12ae",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "336fdf75-1312-40cf-b790-e0200cc2f2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81399e9b-a380-4fa8-b067-934d9692f4cd",
        "cursor": {
          "ref": "31eaf68e-6354-4941-a265-2848c72693ff",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "97ff3651-d191-4099-975b-f89452444f5c"
        },
        "item": {
          "id": "81399e9b-a380-4fa8-b067-934d9692f4cd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9d42a1e0-f65a-458c-be10-2b3e39c9b66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa85a2af-17c9-4074-a697-6b0dd5b40e83",
        "cursor": {
          "ref": "0cc7655e-bb76-4d12-b42b-3aa6e9ea5d1a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ff184e4e-b2de-496a-bcb1-883992333216"
        },
        "item": {
          "id": "aa85a2af-17c9-4074-a697-6b0dd5b40e83",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cc4ad240-dba1-4a9b-9f92-98f70848a175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086b6776-b69a-48ee-a9d6-b718437e43b9",
        "cursor": {
          "ref": "66ef8018-53b8-4ca0-805a-87faa36e5c0e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "47102e6b-1158-46b9-a31e-1e20bc30fc34"
        },
        "item": {
          "id": "086b6776-b69a-48ee-a9d6-b718437e43b9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6932ea51-538a-40e5-9773-af04c5ae57d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d60dde1-7eb6-41a9-a903-20b5dc103bb4",
        "cursor": {
          "ref": "8acad058-fbb1-46c7-b603-4568b94791c6",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "985b3a1c-6437-4f8d-af6d-1c8b1d7986df"
        },
        "item": {
          "id": "5d60dde1-7eb6-41a9-a903-20b5dc103bb4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dbf42c8b-9d18-43cc-a08f-383312c73ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb1e852-aa03-4880-9205-6f464129e333",
        "cursor": {
          "ref": "97b88f3d-7782-4fd9-a417-c7c99af55f2d",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f447a229-1e0e-45a6-bfee-b979020f46f6"
        },
        "item": {
          "id": "bbb1e852-aa03-4880-9205-6f464129e333",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "569af83d-95d8-4c01-b793-d33649d3b65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce520fab-8c6f-4afe-9e9b-6a7a6b404353",
        "cursor": {
          "ref": "25a91505-22e8-40bd-834e-a50d9e33c8f6",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "70a3a0d2-0c5b-4435-93fe-affa1b41815e"
        },
        "item": {
          "id": "ce520fab-8c6f-4afe-9e9b-6a7a6b404353",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1495e684-e79a-4977-a4bd-79d8956e692e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876965f1-13cf-4648-af93-6786f640cd7a",
        "cursor": {
          "ref": "47354bb1-c6af-4a75-bc66-c6ad1c649150",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "905eb564-c810-4d79-a4da-96fd6901b559"
        },
        "item": {
          "id": "876965f1-13cf-4648-af93-6786f640cd7a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "16dea31d-0b88-4eb5-af33-fdd289eeef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52416248-170c-4609-8b2a-e815632915bb",
        "cursor": {
          "ref": "51344da5-0fb4-4067-81eb-00bca2487087",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "22b71990-362f-42ec-9304-254a9dab3536"
        },
        "item": {
          "id": "52416248-170c-4609-8b2a-e815632915bb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4f5303d8-bf87-4a65-90fd-7eb05ce93d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dec840-2734-408f-93cf-b09a481346b3",
        "cursor": {
          "ref": "6bd7c869-50fc-42c6-9d74-50bd9d942728",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f3b1cefd-2f21-4874-958e-084a7566275b"
        },
        "item": {
          "id": "60dec840-2734-408f-93cf-b09a481346b3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "37ea8712-d48a-4477-bfef-23727fc2b762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a277c9b-05d8-4140-934b-8cc4ab488fb2",
        "cursor": {
          "ref": "3893a9ed-2d9f-4e2b-a4ad-203b41036f60",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a7cf58a0-8da8-438f-9de2-9dba338313bf"
        },
        "item": {
          "id": "6a277c9b-05d8-4140-934b-8cc4ab488fb2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1f6c2341-ab5d-4294-b568-ff1255cbb316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ba0010-6159-4050-b263-6abdb7259024",
        "cursor": {
          "ref": "a6ef244e-2d3f-46df-ac16-a9978583d287",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f4235041-1b13-4f73-b97a-3b44d2d71531"
        },
        "item": {
          "id": "e4ba0010-6159-4050-b263-6abdb7259024",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e4026d72-8698-4ce9-952d-c553ea6ab586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f42ad12-f051-4018-98e8-7344e3414bdd",
        "cursor": {
          "ref": "38fe829d-ba7b-4111-80f0-abf3f2e172ff",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "890c5b51-7854-4060-b1ac-07b127004e9c"
        },
        "item": {
          "id": "8f42ad12-f051-4018-98e8-7344e3414bdd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f3ad91eb-971c-4597-a65d-87517fa139d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5420fa68-0395-4403-9147-5b0e621d3f56",
        "cursor": {
          "ref": "b484b4f5-9463-4ff8-ad1b-4eb8ba11f67b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "01e31f47-746b-4594-b461-dc4301bdef64"
        },
        "item": {
          "id": "5420fa68-0395-4403-9147-5b0e621d3f56",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9bd88383-cbea-4da1-8cde-dddc56012d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5ae0d2-5e31-4241-beac-52cebc69c0e3",
        "cursor": {
          "ref": "6a99ca08-04bd-433d-bba5-26b4d41cff49",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "95ee1873-a6ed-4f26-b094-3e7c9530c667"
        },
        "item": {
          "id": "9e5ae0d2-5e31-4241-beac-52cebc69c0e3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0a8cea73-dbc1-4a00-9771-c0bb65dcc4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49cca77-acfd-49d7-bfa3-3d133e291e4c",
        "cursor": {
          "ref": "5ce02e40-684e-4185-9a16-b15f36a9182e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e191b3a1-39dc-4905-b195-8232fc979b6f"
        },
        "item": {
          "id": "e49cca77-acfd-49d7-bfa3-3d133e291e4c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a82592ad-da6d-4025-be09-58c1492adcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96663f8-99d7-47ac-94b2-661b724ffe77",
        "cursor": {
          "ref": "974378ad-c865-4bfd-b415-f6a0646437bf",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b2bee6a8-9ed4-4481-81f3-2b237271c584"
        },
        "item": {
          "id": "d96663f8-99d7-47ac-94b2-661b724ffe77",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4be97692-912a-42fc-af05-373a0b5a5dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21dd00a-b72b-4574-8de8-161b69924f89",
        "cursor": {
          "ref": "d9ac93d8-c7e4-4790-82ee-28cb95ebb73d",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1656e885-0222-4bcf-9b62-268d37308c0e"
        },
        "item": {
          "id": "c21dd00a-b72b-4574-8de8-161b69924f89",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aabafaf8-f788-4290-ae50-544c2b923ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8aecc3d-52df-4e6f-883e-d9b75094f94a",
        "cursor": {
          "ref": "88383d26-03d7-4bc0-88ef-b8d7b2e0f8f8",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2a0ae205-68e1-4a94-8175-ac21731d2744"
        },
        "item": {
          "id": "c8aecc3d-52df-4e6f-883e-d9b75094f94a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "15fc7cd8-105a-425b-81f5-dc88be225ab3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 91,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3879e0b-9600-4151-987d-e6fc5e867c34",
        "cursor": {
          "ref": "964c27a6-c5af-4597-a42b-933685cfc0af",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "91c67ebf-d1eb-40ae-b094-872fae5d5258"
        },
        "item": {
          "id": "a3879e0b-9600-4151-987d-e6fc5e867c34",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "652f6b04-ab07-4591-99c1-09f4e10cba2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b725aa-4c38-4d61-a605-66da20b0ef95",
        "cursor": {
          "ref": "89af5b69-0172-4e03-b567-2a9fc235772a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "19e527e7-1e73-4cd8-863f-c325deda3400"
        },
        "item": {
          "id": "e1b725aa-4c38-4d61-a605-66da20b0ef95",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "262ecd40-be97-4017-882b-3c3ce1807500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af69bd68-8c01-4d5b-93bf-859563a1e44c",
        "cursor": {
          "ref": "6ea07573-9ce6-4a8d-b5c2-b7a776dd3d07",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "65681770-c686-4502-a80b-778090585dc7"
        },
        "item": {
          "id": "af69bd68-8c01-4d5b-93bf-859563a1e44c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b4bc3929-5d6e-414c-8204-ecdd052312df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2038e2-51b3-40a4-84ea-a2c01eeb1084",
        "cursor": {
          "ref": "178cb172-7407-4e53-9f5c-dd77e5108cdc",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b6887bd3-c154-4be1-9aff-c6ec18bdf978"
        },
        "item": {
          "id": "8a2038e2-51b3-40a4-84ea-a2c01eeb1084",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "be39ae7d-5a87-4a3f-8a33-2e7674d756ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c97ec3c-ca8e-4f8f-bae4-fefe4693c7d4",
        "cursor": {
          "ref": "ac670708-6de0-4efd-8ba7-33f06f0fccd0",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "21e3aba2-6767-4639-8c52-d09755524a40"
        },
        "item": {
          "id": "5c97ec3c-ca8e-4f8f-bae4-fefe4693c7d4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a19b8880-4794-4e2e-bd81-7937384bd6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0701fe7f-db5e-439b-a1e4-0f93eef89f00",
        "cursor": {
          "ref": "61f85a6b-38a2-40cd-9721-effb92987bed",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8c608e3d-4e41-4a53-aa10-27feb8b9c1a1"
        },
        "item": {
          "id": "0701fe7f-db5e-439b-a1e4-0f93eef89f00",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "99f98030-e1aa-4fec-8670-46c2f9120af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47db5868-1ad3-4ff9-a21a-f46b75ad9974",
        "cursor": {
          "ref": "6fbe68c0-e6e3-4bc4-a7ea-e2cabc1bc6f2",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "09e50102-46f2-416a-88ba-a600f058982f"
        },
        "item": {
          "id": "47db5868-1ad3-4ff9-a21a-f46b75ad9974",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7e199331-b4b1-4682-9eb5-da57ac8e9d96",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c3b3e8-49f4-43f0-8827-a05457c2590a",
        "cursor": {
          "ref": "9fca1f73-6843-4625-ab9c-a77672559bd9",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c416a028-0ba4-4c89-81a4-7e71049332c5"
        },
        "item": {
          "id": "22c3b3e8-49f4-43f0-8827-a05457c2590a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d1bfed3e-9119-4965-ae47-17e8fbf854ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1e607f-a365-4130-89b5-371f828608a4",
        "cursor": {
          "ref": "687a47ba-75fc-49f3-8bb2-0ee12813352c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7b97449c-2123-430c-8af6-ee890d46cade"
        },
        "item": {
          "id": "af1e607f-a365-4130-89b5-371f828608a4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c4175da0-6439-4977-be82-903995a5ea9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce8057e-2346-4539-9e27-6d3f1a0228d2",
        "cursor": {
          "ref": "c390b9ef-f120-4d3c-a61e-41b6dfd6a9bb",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "efb18fc5-73ce-4d14-bebf-b2f5c676aaa8"
        },
        "item": {
          "id": "bce8057e-2346-4539-9e27-6d3f1a0228d2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e4b621d7-68cb-4485-85b9-08e0b5756c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20160d9a-2780-45d8-979c-056d7d3322e5",
        "cursor": {
          "ref": "9cf8045d-6c3e-4659-b7a0-0b43ff5e3d1f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "665bcaf2-f07f-4b9a-a653-bfbd76ad8f96"
        },
        "item": {
          "id": "20160d9a-2780-45d8-979c-056d7d3322e5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5172a719-3952-473e-a670-136ee534b865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ddc09f-a10a-4b1b-b5c3-81275828dfaf",
        "cursor": {
          "ref": "414af315-621c-4cd9-861e-f9dc3d43b5bb",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "07dc335e-7328-4832-a97c-2337aadae37f"
        },
        "item": {
          "id": "47ddc09f-a10a-4b1b-b5c3-81275828dfaf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1c91e066-2814-4cb3-9e0b-216ae66ae503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340ebcc5-6087-4eca-b75f-25d2e987e303",
        "cursor": {
          "ref": "59df2950-e392-4374-8ef2-6988b732d942",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "55335d76-0e04-40e4-adc9-4770498ddb06"
        },
        "item": {
          "id": "340ebcc5-6087-4eca-b75f-25d2e987e303",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c2680816-fdfe-40de-a3c8-a1faacb7fa00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbebbbd-e251-4101-976a-d7be22a63693",
        "cursor": {
          "ref": "308607a2-3485-41e0-94bd-2cc3c61c8bd5",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8ce2c2ec-59ba-4a86-9688-ed6e0f00611d"
        },
        "item": {
          "id": "cbbebbbd-e251-4101-976a-d7be22a63693",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "555441a5-8ff6-45fc-a9e3-b57b6908ee1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7707509d-f431-4640-8c95-1fbbc2cc838d",
        "cursor": {
          "ref": "b5a13d01-67c5-484b-b535-9a7d54a2a3ed",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d9fee8a1-b6e5-489d-be31-792769abcb9f"
        },
        "item": {
          "id": "7707509d-f431-4640-8c95-1fbbc2cc838d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "254c3eae-d8dc-4123-8d63-c75635d86dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6fe55e-dc93-4b27-bd1a-7001125f83bc",
        "cursor": {
          "ref": "5bac3da3-3a71-4990-8e5b-1bc41e669f44",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6f3c906f-8ec5-4f59-845b-7eeb599c09a9"
        },
        "item": {
          "id": "9d6fe55e-dc93-4b27-bd1a-7001125f83bc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "62fe8504-5221-41b5-aeac-8139620a742a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef777aad-0cd9-47bc-a7b8-d285292535d7",
        "cursor": {
          "ref": "10a17573-95ea-4462-befc-4d31c6251149",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e9e1523f-0123-438d-9f8c-f83b0060b842"
        },
        "item": {
          "id": "ef777aad-0cd9-47bc-a7b8-d285292535d7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d2cf775a-ae61-484e-b14a-3560a5c149fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b55364-76ed-46aa-a2cb-3632e7550b6f",
        "cursor": {
          "ref": "ae2de798-2f5e-4b50-a69f-715231bd6ba5",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0d6f71dc-c7ac-44a9-ac36-85e8d2745e0e"
        },
        "item": {
          "id": "29b55364-76ed-46aa-a2cb-3632e7550b6f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "636bfb05-71e1-424b-95bf-5a2d23d087d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963ac292-c3ab-43be-ba28-8db29bc322d4",
        "cursor": {
          "ref": "61c0c183-203d-40ea-a55d-d91571a1e5fb",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0431d746-97b3-4688-9035-4e3c54fb29fa"
        },
        "item": {
          "id": "963ac292-c3ab-43be-ba28-8db29bc322d4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "26fad51e-dfdb-4a13-b44c-1063fb6c65c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37fb799-439b-4cc8-91df-42952de29dc7",
        "cursor": {
          "ref": "c3d00c8b-3eba-4b55-bc5e-a33b8f38fcfa",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "172933f4-1982-4d34-9d10-c9c1c2b6ac63"
        },
        "item": {
          "id": "a37fb799-439b-4cc8-91df-42952de29dc7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "30a4b77c-9ffc-4d02-a897-44f16c641b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ec0e27-fdcb-4d8b-a81e-bb31060ad084",
        "cursor": {
          "ref": "e77d6a7f-4404-4349-a8fc-0a116398c29d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e13f2672-fe78-44b9-bab0-275c0bfe8fc8"
        },
        "item": {
          "id": "17ec0e27-fdcb-4d8b-a81e-bb31060ad084",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "be3d5373-0572-462b-abea-b5ebc5e40ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1eebdf-536c-4698-857d-9345e8be1b32",
        "cursor": {
          "ref": "5076d10e-d93b-408c-bb3d-0cc3cec3f4cd",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4b1181da-0902-46f1-90d7-27ece24cb947"
        },
        "item": {
          "id": "ff1eebdf-536c-4698-857d-9345e8be1b32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1b4abd45-5497-4c2d-aa2d-9b724b0fd5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08a22be-aff5-4d6d-afb6-948f38dbca0b",
        "cursor": {
          "ref": "fd4fb109-c3bc-45ec-9ffa-654d9032c693",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3a7efc33-fabc-4532-879c-4050131c58eb"
        },
        "item": {
          "id": "a08a22be-aff5-4d6d-afb6-948f38dbca0b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "288fd164-d617-442f-94f6-a7981c0cd89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f8f176-5385-4dd8-9b65-0589379421b2",
        "cursor": {
          "ref": "8dc3fa00-0221-4fed-84b6-731736654e07",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "71425447-38b4-4f09-9220-f00ab54b4f81"
        },
        "item": {
          "id": "95f8f176-5385-4dd8-9b65-0589379421b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7a36c9b3-e0f0-4f5a-990b-bf1ca71f7137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1295adfe-ad1d-4a2e-ae16-7a42c89a399a",
        "cursor": {
          "ref": "feedf658-fde9-45f1-bbf8-235ac14dcb23",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bbb1b3aa-9508-4c26-be30-2465d76918e7"
        },
        "item": {
          "id": "1295adfe-ad1d-4a2e-ae16-7a42c89a399a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "759912fc-951d-41c2-a277-b45b1ce61847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b3dafe-29fd-41bb-8856-64fa6c2b9304",
        "cursor": {
          "ref": "a348c899-46ce-4ba3-b820-ae7fe9bb9ab1",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f55f5d5b-a7f7-4b39-aa92-a3ae83c5af34"
        },
        "item": {
          "id": "a7b3dafe-29fd-41bb-8856-64fa6c2b9304",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "36673f0b-63b6-4d86-b489-a2b5d28d6027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd9086c-fc6a-4149-b0b8-7cab48ebc24d",
        "cursor": {
          "ref": "ac4dd1d3-aed5-4b32-bcef-d9cbd02673e5",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1e45d788-faea-4ecd-80c2-9a45eab7e3c2"
        },
        "item": {
          "id": "cbd9086c-fc6a-4149-b0b8-7cab48ebc24d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d0b23ba8-65f6-4b4c-b2b7-ba359acaa583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c6ff37-12a2-4565-a716-fa4572b07dfc",
        "cursor": {
          "ref": "68c97743-1c85-41ae-b803-70a213ccea04",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dbe76dbd-9ae2-487b-aeb1-ab9f767cb8a7"
        },
        "item": {
          "id": "39c6ff37-12a2-4565-a716-fa4572b07dfc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2037cb32-3fcf-453c-8569-181732bc6b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23b3ec9-ebee-4e81-9897-ef731a85cc7b",
        "cursor": {
          "ref": "3e8d6b20-7dbf-449c-bb26-9668c061c096",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b370b899-becc-4ecb-84f5-c299737d42aa"
        },
        "item": {
          "id": "d23b3ec9-ebee-4e81-9897-ef731a85cc7b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "74ef830a-ea82-4f60-9f63-2de899ddba3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0752d0cb-38f6-42d5-806f-618557713303",
        "cursor": {
          "ref": "4dc6ca1e-9aa3-456e-a7c4-5a774bd87901",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0066f0d0-74e0-4806-a7f5-4d90892d28e0"
        },
        "item": {
          "id": "0752d0cb-38f6-42d5-806f-618557713303",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "632618c4-a774-4cc8-a33f-a1f7408fc044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34423da0-ebfa-400a-b658-8773ffb6422c",
        "cursor": {
          "ref": "124b61be-1fc7-457c-8ad4-73e6fee023aa",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "596659db-c63f-4f34-a9ba-72d431b559ce"
        },
        "item": {
          "id": "34423da0-ebfa-400a-b658-8773ffb6422c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8cc412d2-f7cf-4041-af41-83c740c22875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a43cc3-4d62-47c1-ad77-e609a4184119",
        "cursor": {
          "ref": "b4309868-596a-4cd0-952c-52bb3c8e343d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9f58fef0-1d29-4925-bcae-ca384637cc0b"
        },
        "item": {
          "id": "f9a43cc3-4d62-47c1-ad77-e609a4184119",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8a639573-e5c6-4746-b927-5b68da367f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a3f6c4-d0d2-4593-90cd-10d6cbb6f05b",
        "cursor": {
          "ref": "ef5ffd9e-b92e-47e5-b718-8bd53d7b3066",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ece49251-1475-429e-88c8-f697e65c1432"
        },
        "item": {
          "id": "96a3f6c4-d0d2-4593-90cd-10d6cbb6f05b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1a431892-6ee8-4fa2-8f77-5def45e4b251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921cd4e0-ca1c-4246-be0c-f7d8395f0272",
        "cursor": {
          "ref": "cd32c055-750f-46f5-9b6c-9f023aa9fcb2",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ded5dadb-56d5-4744-a92c-1c112aa64135"
        },
        "item": {
          "id": "921cd4e0-ca1c-4246-be0c-f7d8395f0272",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cef340f8-d55c-460a-bc4b-103e6360b006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f237e1-ca61-4860-9505-aff780ff3d02",
        "cursor": {
          "ref": "0779204f-b808-4838-8a41-30467a84eded",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9394effc-4c55-4d3c-837a-17d90483103c"
        },
        "item": {
          "id": "f9f237e1-ca61-4860-9505-aff780ff3d02",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bab1963b-4e80-4069-a4a5-ab216ebbf674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ff4eda-6bc4-4e8a-9837-cb14ade13474",
        "cursor": {
          "ref": "ee003f3e-2aef-4e3e-9a45-ed3e1b9fa98c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "db2f5088-4a03-4c4a-bb26-9bb32b269cf0"
        },
        "item": {
          "id": "e3ff4eda-6bc4-4e8a-9837-cb14ade13474",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b5754e4d-28da-4f50-8aeb-03d03edd01db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90985f1-d109-4d04-833b-3225b8420f92",
        "cursor": {
          "ref": "c7590209-a35b-45c8-a718-b0f38341092a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6b603765-9b51-49e7-84f0-612e8b33823e"
        },
        "item": {
          "id": "f90985f1-d109-4d04-833b-3225b8420f92",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bc454503-8763-48e4-97d6-306187fde0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fa773a-0be7-4eb8-9fc8-b31c751d601c",
        "cursor": {
          "ref": "db918e19-aa7e-47c0-8081-6cec4f8b5b57",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a6e66398-ca7c-4315-b6dd-54b65340adc1"
        },
        "item": {
          "id": "e9fa773a-0be7-4eb8-9fc8-b31c751d601c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9da0e1ef-7d76-4cdd-8b63-0955b8fb58c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490dab31-ee5e-4a33-8b8d-955cf34bdfd4",
        "cursor": {
          "ref": "2292fd64-88ca-4e63-9a63-1d0d9bc61cc1",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "283204bc-35cb-4939-b019-3eddf5e88c24"
        },
        "item": {
          "id": "490dab31-ee5e-4a33-8b8d-955cf34bdfd4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "16f3e014-a5bf-4f24-9d61-f57538b747f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f28df24-a49b-4986-8ddb-9b2caec3a008",
        "cursor": {
          "ref": "35c74e6a-a82f-4574-ab97-538fa72bba61",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0bb57afb-a489-4e3e-ad25-ee2b57f749a4"
        },
        "item": {
          "id": "4f28df24-a49b-4986-8ddb-9b2caec3a008",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d8b1464c-86f9-4ece-a069-e5c6db3ed803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3109fc59-bbb0-4621-b11d-9b28f8eebee1",
        "cursor": {
          "ref": "97c1a720-1c7f-48fd-a010-f5145f9f4178",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a8689bc6-e147-46fc-afe6-7f70a54a074c"
        },
        "item": {
          "id": "3109fc59-bbb0-4621-b11d-9b28f8eebee1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1c9b4a52-da5c-4a71-bb93-bff75c060f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6c9871-c80b-4e95-9cab-ee61f168dfb2",
        "cursor": {
          "ref": "f0b781fb-dc10-46ab-87be-12123e3f2379",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b0b7a97a-c265-4cc0-88af-151694e057b1"
        },
        "item": {
          "id": "8d6c9871-c80b-4e95-9cab-ee61f168dfb2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5f246cb4-9da6-46da-8d51-a574535aad60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a84a58-3293-4aef-b529-d99ad75d0306",
        "cursor": {
          "ref": "f946199c-ae3c-4dc1-9da0-252ecc303bf0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7a28146d-1f6c-4e00-a310-87b2fa7a8f55"
        },
        "item": {
          "id": "84a84a58-3293-4aef-b529-d99ad75d0306",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d0bbdb94-e9fa-4607-903c-af50b14f4adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fa508b-7802-450b-a6de-f0f1d0c96ca8",
        "cursor": {
          "ref": "88a9e8a9-ee9d-4dd3-a7e9-7c909df3c712",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7e6b3b13-c14b-455e-8724-855e93baec74"
        },
        "item": {
          "id": "36fa508b-7802-450b-a6de-f0f1d0c96ca8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "33dd7fa2-f8d5-4810-b332-9bd24015f4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193f4eed-c01e-4087-a416-3024c94ca817",
        "cursor": {
          "ref": "43fcc44b-4519-46db-a6e4-0eb6a9e62d23",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3549f8c8-ece4-4350-b38f-86898a6115a6"
        },
        "item": {
          "id": "193f4eed-c01e-4087-a416-3024c94ca817",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2ed495ae-e404-4683-b776-6a0985456633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c7b079-34d7-46bb-9f77-fab5d8ee0d9f",
        "cursor": {
          "ref": "3ffd71dc-c3a9-4530-bbaa-8aebeaee081a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2d71baf3-874d-43df-a632-8b0ffdba8822"
        },
        "item": {
          "id": "67c7b079-34d7-46bb-9f77-fab5d8ee0d9f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6e66ad03-2dd2-4048-acf7-d9f6b8d62428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fb60a4-2d24-4126-bbc1-e75e3e6777ef",
        "cursor": {
          "ref": "f74df226-3bff-4909-9cb5-c543c244734d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f61d84e4-fa60-4d1a-a472-4d93008a8f94"
        },
        "item": {
          "id": "80fb60a4-2d24-4126-bbc1-e75e3e6777ef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d2ac8de4-3808-4202-a9e8-7a33a493d7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f86ea2d-3b01-4efe-80f6-4fd0918b674f",
        "cursor": {
          "ref": "5528e666-7fa5-4c36-8700-653e09c61001",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "11e5576b-723e-4fac-8b50-1ecaba3891ef"
        },
        "item": {
          "id": "1f86ea2d-3b01-4efe-80f6-4fd0918b674f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ce88aa29-9c57-4f7e-9059-1bf87dbe70d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38eb407d-02bf-4081-9d55-e3307d64e5a8",
        "cursor": {
          "ref": "51728ace-aef6-436c-8e37-d8d61f2df6ee",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cf38787b-2583-431c-8896-2b91dc38b03a"
        },
        "item": {
          "id": "38eb407d-02bf-4081-9d55-e3307d64e5a8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "63574241-a829-46a8-9401-3dbfa7c70937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0914dd6-e940-432d-9664-833c0c11b1f7",
        "cursor": {
          "ref": "43d9cf08-62ac-4a14-a36e-504c300d6966",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "95956bd5-7bca-4f52-aad2-a2c669ac2df7"
        },
        "item": {
          "id": "f0914dd6-e940-432d-9664-833c0c11b1f7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f596a902-9ef9-4254-9792-23568708fd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192ad995-0bbe-424b-91bf-45c116a88b6a",
        "cursor": {
          "ref": "4148145a-0577-490b-a207-068e9b208d8e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "78d74ed7-d943-46fc-b745-566caab26314"
        },
        "item": {
          "id": "192ad995-0bbe-424b-91bf-45c116a88b6a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3657b11f-41be-418f-952c-6e5b18a5d87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5539eb2e-5b8d-48c8-a27e-5e4b16475af6",
        "cursor": {
          "ref": "b11394ec-1b33-4927-8af3-d6503c598958",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bf4577ff-3d15-4916-abdb-7cb143883e9e"
        },
        "item": {
          "id": "5539eb2e-5b8d-48c8-a27e-5e4b16475af6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0e2944c8-002d-4302-b16f-9adbbab0d8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f96b08b-3be9-4e0d-9d05-bacca8a56bfc",
        "cursor": {
          "ref": "75bb0e86-a2e3-414b-a83e-797697ce6ee4",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c0a167d0-4129-41bb-886c-57e14ce0fb7a"
        },
        "item": {
          "id": "6f96b08b-3be9-4e0d-9d05-bacca8a56bfc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "450b63d4-d7c9-4c99-9c50-0d654c386e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b6597e-fa12-4c20-a062-867f0e8c8f83",
        "cursor": {
          "ref": "4dbaccbf-d74f-4e00-b61d-e35f01b06248",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "47ddf65e-7c3f-4a06-a563-46d71d1a305f"
        },
        "item": {
          "id": "20b6597e-fa12-4c20-a062-867f0e8c8f83",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "96fa3fe8-0cf9-429c-b3f5-13849ffa3e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266da470-71d4-4693-b0d9-9d36cacb40ca",
        "cursor": {
          "ref": "1160060c-cf1f-4865-b65d-e5cbf836257d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "65adb885-c8f0-4a8f-8605-ea95924071a2"
        },
        "item": {
          "id": "266da470-71d4-4693-b0d9-9d36cacb40ca",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d1ff9220-31ed-4a72-bcdd-cef4610d4ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed260b6-acb8-4e40-af48-d3c62256d6df",
        "cursor": {
          "ref": "c9bf9f32-c170-428c-b84b-acdf30f35a02",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7c71313b-ba8e-449d-9dbb-6a97f326d74b"
        },
        "item": {
          "id": "9ed260b6-acb8-4e40-af48-d3c62256d6df",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "90498d74-a30a-43a4-a0ab-011025738f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecd4a7a-8811-41cc-9aa8-130c9f67c0d8",
        "cursor": {
          "ref": "926aab9d-b524-4513-948a-1d95113ff8cd",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "52aac0de-7ff3-497f-9955-84d5149e725c"
        },
        "item": {
          "id": "2ecd4a7a-8811-41cc-9aa8-130c9f67c0d8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a7df7c46-dfa2-42b5-b473-e6908cb560a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e291aa-22d4-4b3b-bc2d-9e7b159a102d",
        "cursor": {
          "ref": "784303cc-243b-41e2-a12c-b9154f60d96a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "28ef5725-551c-4e9a-a4b3-10c3d8aa692d"
        },
        "item": {
          "id": "17e291aa-22d4-4b3b-bc2d-9e7b159a102d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f2563dc4-5a40-4c81-bc50-5653d9c4ace2",
          "status": "Created",
          "code": 201,
          "responseTime": 104,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e361561-73bb-4e95-b503-0b74aad3ca29",
        "cursor": {
          "ref": "82d799d0-218b-4474-baed-15eba701bfe3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7fd7a73e-a18f-4dd6-8a17-3bb984657fb5"
        },
        "item": {
          "id": "0e361561-73bb-4e95-b503-0b74aad3ca29",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "224e1e9d-c2c0-4140-9903-e74b776e11d0",
          "status": "Created",
          "code": 201,
          "responseTime": 333,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff472b85-1433-4ef4-9436-2e585c474d55",
        "cursor": {
          "ref": "04e75f14-a135-4cb6-aa35-ca534d735557",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5dc692ae-19fc-41ce-8173-4a062c2fe3df"
        },
        "item": {
          "id": "ff472b85-1433-4ef4-9436-2e585c474d55",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e13e47ce-d504-49c9-bab6-4c67a9acafe0",
          "status": "Created",
          "code": 201,
          "responseTime": 112,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "00545046-b0ed-45b1-9b3e-aee41b467e83",
        "cursor": {
          "ref": "791bc70b-57a6-4fb3-a3c9-b1a865dab59d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "02b1342e-138a-4c6b-a362-702b3dfe1b2d"
        },
        "item": {
          "id": "00545046-b0ed-45b1-9b3e-aee41b467e83",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cbcf2270-cfca-45fe-a0c8-2a2821f432f6",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "054d73aa-d692-44d9-b410-90157b3752f3",
        "cursor": {
          "ref": "1c3ecd88-fc3f-4189-9bf8-15d333929304",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2d68b715-4688-43ea-9249-b55ea4e1c3b3"
        },
        "item": {
          "id": "054d73aa-d692-44d9-b410-90157b3752f3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1ae373d1-58c9-42f5-a2a9-7c172e2b55c5",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5659061c-4c81-4b05-8ee8-f13f348b2c1c",
        "cursor": {
          "ref": "24898304-d085-476f-923e-cba55b47c8ad",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e391e9d6-3819-408a-ad78-b7a704bc2f32"
        },
        "item": {
          "id": "5659061c-4c81-4b05-8ee8-f13f348b2c1c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1ddee2d9-4d75-4534-b3bd-9d3ded34b71d",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0dd265-59d9-49ac-91bf-7a3fcddd7054",
        "cursor": {
          "ref": "8e13ae78-2a9d-4a0b-a222-dbdc6ce278fe",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1e7e2303-2277-4497-8b79-ea2afb92a206"
        },
        "item": {
          "id": "fd0dd265-59d9-49ac-91bf-7a3fcddd7054",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8618352a-3923-4b2f-8e2d-b62952ac9e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0badafe8-a66f-4fa1-862d-69f797035f08",
        "cursor": {
          "ref": "37a1972c-6f36-4d59-a519-a2d5e3f02b26",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d4ce981e-1e57-4e60-bdc6-a47826d3149c"
        },
        "item": {
          "id": "0badafe8-a66f-4fa1-862d-69f797035f08",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4c5735e1-c88a-425d-b9b8-c088a85c0b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6ab905-ab8f-47f6-b4ef-7cd3065342c8",
        "cursor": {
          "ref": "6dd17327-ac64-4e81-9826-0d35ec2d8b1a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "df3b84c7-c17b-4e90-94a7-14c9fe76f719"
        },
        "item": {
          "id": "0f6ab905-ab8f-47f6-b4ef-7cd3065342c8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d16e22c5-ed12-45b3-a6f7-d00e0d5f9d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb831ff6-dae9-4787-ad16-5476f63cd072",
        "cursor": {
          "ref": "25587683-8def-4cd6-b22b-6cc95c0128fc",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1bbd3b2a-351e-410a-8190-9ba562d72a99"
        },
        "item": {
          "id": "cb831ff6-dae9-4787-ad16-5476f63cd072",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3b9cb490-a6e5-41e1-9bf6-6b02c249a08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ebc6c0-5df9-4191-8772-7fbcb35af0bf",
        "cursor": {
          "ref": "e853ba53-c7f0-41f5-983a-0cf1de3ee90d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d5530345-0844-4e90-9137-5870b8891d62"
        },
        "item": {
          "id": "66ebc6c0-5df9-4191-8772-7fbcb35af0bf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cb9f5348-5bda-48d7-9405-885503e3d498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca3bd1c-59c2-47e7-98a2-b449c5c7dc47",
        "cursor": {
          "ref": "a85473c7-437b-47d7-9ef9-048417f579f8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7a9cb8b2-d914-4fb0-82e8-68ccb23f316e"
        },
        "item": {
          "id": "1ca3bd1c-59c2-47e7-98a2-b449c5c7dc47",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5de0acee-97bf-4fd2-9e1f-ae366c75331a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3422be58-012b-41a6-8b82-0ce458263a0b",
        "cursor": {
          "ref": "b2325668-69cc-45c6-b410-4f9692f15842",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3bdc3ee6-f446-4e30-9742-41b1cbab5747"
        },
        "item": {
          "id": "3422be58-012b-41a6-8b82-0ce458263a0b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3be97487-3e01-44b0-a53a-f543c3597340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6368a58-bbc0-4c09-bd94-8849e5566257",
        "cursor": {
          "ref": "de8e4e04-08c4-4ff7-ad7f-0e03ab07b70f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d6df9652-413a-43b7-b95c-ee81f535dc13"
        },
        "item": {
          "id": "b6368a58-bbc0-4c09-bd94-8849e5566257",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d2c812f7-5ee4-4554-9734-be71060b6342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dce072-140b-4bcc-994a-769b7cf18fe1",
        "cursor": {
          "ref": "a6a060e4-8d50-4b5f-a8f7-0592392550c9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "94071bfb-6574-4374-9b0f-1bb131c24c8e"
        },
        "item": {
          "id": "e4dce072-140b-4bcc-994a-769b7cf18fe1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e8f9c9ee-7378-4988-9884-9609911f56c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c735a465-1845-4d32-8937-d7930b8dc4fa",
        "cursor": {
          "ref": "7f6a5b0c-ab31-4eef-bd4a-c77176ea247a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7c4e3eee-204c-44ae-8d31-ec584db57872"
        },
        "item": {
          "id": "c735a465-1845-4d32-8937-d7930b8dc4fa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cf8b73d1-bda6-4427-87bc-6a3e1cc9d5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7d584c-f3c2-4031-89fb-5c4623e8b9e9",
        "cursor": {
          "ref": "520d52da-defd-47fc-97a7-00b623b6c4f1",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6e74c217-e179-4c13-871a-50e3a3c23517"
        },
        "item": {
          "id": "dc7d584c-f3c2-4031-89fb-5c4623e8b9e9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7654f30b-826e-4411-84ac-cb415f25971f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cddacb-71fe-4998-80b8-466c18c774f9",
        "cursor": {
          "ref": "92e27de9-1787-4544-9763-692c49a8e237",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e0feb4ae-c10a-4a46-b630-99834e274b5c"
        },
        "item": {
          "id": "68cddacb-71fe-4998-80b8-466c18c774f9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "392b950d-e06d-460f-8ff0-46f13dc0d3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6948321-aaac-4248-adde-592b3f83c4ee",
        "cursor": {
          "ref": "4ae67b4f-b2a7-4fb6-8b1f-822b1f795980",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6a93c185-add7-4a1f-9a12-16fdec94fdba"
        },
        "item": {
          "id": "f6948321-aaac-4248-adde-592b3f83c4ee",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1de78656-b9e0-4606-975c-50af0f9c54f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110fac34-c6dd-42da-b1bd-fcd854d9e9a5",
        "cursor": {
          "ref": "4b7f4abc-a3fd-42dc-ade9-3f0217aeea3d",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fef93158-eb3e-4b8e-be61-445aa6a13162"
        },
        "item": {
          "id": "110fac34-c6dd-42da-b1bd-fcd854d9e9a5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "262ace1e-2a84-406f-a75e-94c17e9ce58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa8d58a-9ce2-4a1a-9106-2200648f466a",
        "cursor": {
          "ref": "fda362b6-002f-40d9-acd7-4789bc6d9987",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e019d216-dc59-43cb-9ce9-9db7bec25875"
        },
        "item": {
          "id": "5aa8d58a-9ce2-4a1a-9106-2200648f466a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5db50461-4389-493c-892b-b52d0e10bf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f4c7da-964e-41df-b31d-1f0d760d6d05",
        "cursor": {
          "ref": "fe38e367-92e8-4624-bdf3-ae94a30dcb72",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "252e0c4d-fa2c-43ff-a52c-a85011602f90"
        },
        "item": {
          "id": "d3f4c7da-964e-41df-b31d-1f0d760d6d05",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8cd110ea-2ad6-4eda-8932-20b07af17bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd24bf9-747f-4ac3-a121-6058cb399c1f",
        "cursor": {
          "ref": "e335e579-e72b-40f0-9952-b4bcd794ed2e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2516df5b-7fa5-4e7c-a841-23ddc7c3a00f"
        },
        "item": {
          "id": "8bd24bf9-747f-4ac3-a121-6058cb399c1f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b6b3d9b9-0871-4b7e-a017-68139decdad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f304be2-3e80-43f0-897d-e0fa9cbd707e",
        "cursor": {
          "ref": "ac3fc7aa-60d3-47e7-8fd6-fa3219ab15a0",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "453680ea-ebf1-42fa-b445-1b576728d0e7"
        },
        "item": {
          "id": "6f304be2-3e80-43f0-897d-e0fa9cbd707e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9e457c58-43b6-4344-bf51-3c809a91c92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdf28bb-2e0e-4e7a-9ae5-9e8efbef0e33",
        "cursor": {
          "ref": "258944aa-a64e-45af-99f2-51c5ee5539fb",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8717fd1c-74f1-4194-b04c-ac89de854a9a"
        },
        "item": {
          "id": "1cdf28bb-2e0e-4e7a-9ae5-9e8efbef0e33",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "69c39c4e-7092-4ca4-8faa-8aa7f356decd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb5831a-a9f9-47ec-a1e5-7514a2e4005a",
        "cursor": {
          "ref": "fe9e1063-0fe6-46ee-833a-0ff6af51abf0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "57b0992d-2bcd-41e0-8def-42e954180fd9"
        },
        "item": {
          "id": "0bb5831a-a9f9-47ec-a1e5-7514a2e4005a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bf7c7feb-7154-4581-9c9f-3699c470a0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e7a828-7a6f-42d8-b61b-92e9dd88ce93",
        "cursor": {
          "ref": "381bcf2d-d170-4287-aa6f-7daa0a25b3e6",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4ed5f641-4b48-40cb-97b6-6e04b528e975"
        },
        "item": {
          "id": "16e7a828-7a6f-42d8-b61b-92e9dd88ce93",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a7a32470-01ad-4d32-bccd-39649fafa16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03369de-1c3e-4547-9f0e-ca3693b09388",
        "cursor": {
          "ref": "5d2c611e-4098-4a68-84b1-df88385a3340",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "83194286-fd72-4329-824f-3c41678c4c99"
        },
        "item": {
          "id": "b03369de-1c3e-4547-9f0e-ca3693b09388",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6fe7569e-32f0-4926-82a1-8e0f03b61abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d17c4ca-4407-49a6-9cc0-c04c0ad46b44",
        "cursor": {
          "ref": "2d8c4c54-180a-45d9-b481-3ad5a0d90757",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f8fa2a35-f82f-431d-a542-ba112537d541"
        },
        "item": {
          "id": "3d17c4ca-4407-49a6-9cc0-c04c0ad46b44",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7fa78e48-762a-4cb2-b34d-7fde6258965f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d5ba48-429e-4590-9939-331ad22c6d58",
        "cursor": {
          "ref": "d53662b6-3005-4058-adfd-6d10ceb8d911",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0cf47959-1631-4c48-8f80-c7afb3ab24a3"
        },
        "item": {
          "id": "35d5ba48-429e-4590-9939-331ad22c6d58",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5478aa53-58f5-42ee-b9e9-afea2e754ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8d788f-1d07-4f69-b7aa-61255fb80f8b",
        "cursor": {
          "ref": "32f8cda1-aa1e-4781-8cc0-ccce7a6d68d5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fb801603-ad67-45f6-9b66-d0f40da3b310"
        },
        "item": {
          "id": "ce8d788f-1d07-4f69-b7aa-61255fb80f8b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "73ee89c2-3a70-4732-a626-de1893b97af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848feb65-fcef-4f6f-8cdd-2aa7a70342b3",
        "cursor": {
          "ref": "d507462e-a090-4ad3-b2dd-9136b86c6702",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b3027919-b61c-4da1-959e-b4edb8997c5c"
        },
        "item": {
          "id": "848feb65-fcef-4f6f-8cdd-2aa7a70342b3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e3e94ace-4ba7-4593-bbb2-2302d1e77e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60db0c0b-ce58-4922-af8f-35d1c8b1bfd8",
        "cursor": {
          "ref": "7d31c763-9061-48f6-998b-3fa7c285314d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9720e2db-38fb-4282-8ca5-6dc7bbdd36df"
        },
        "item": {
          "id": "60db0c0b-ce58-4922-af8f-35d1c8b1bfd8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "200c7562-f531-4d1e-a1d1-45c6fea39ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd9583d-a7dc-4bcb-957d-46d8839423b1",
        "cursor": {
          "ref": "eb259fac-72b6-4283-a83c-3aa98e8ac1e8",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dc838a3a-4f58-4562-bdb7-d2df5c4259d2"
        },
        "item": {
          "id": "9fd9583d-a7dc-4bcb-957d-46d8839423b1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9546d15b-dea2-4a86-95a4-00e62524b768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963a07f0-2bfd-415f-a88a-0c87ea5d0a78",
        "cursor": {
          "ref": "fa403602-65c7-4c7a-83fc-ce3be5b9b49d",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f2d44529-d558-474c-ae76-967224fb751d"
        },
        "item": {
          "id": "963a07f0-2bfd-415f-a88a-0c87ea5d0a78",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "86a5b033-b6ea-4885-a2a5-8d216251f303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472dc030-2b04-4341-b6bc-8867e4cac25f",
        "cursor": {
          "ref": "554ca906-fd97-4d9a-a112-461cfd321d04",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3042b7a9-7c7e-48ff-b1b1-0acef14012b8"
        },
        "item": {
          "id": "472dc030-2b04-4341-b6bc-8867e4cac25f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf9f54e8-89d0-4a13-8413-c11f952a35ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6582caa3-7e12-4e59-a0ca-c160e8f143b7",
        "cursor": {
          "ref": "dfbf434b-92cb-487c-b5ae-fd603283f662",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "68f3d339-b67c-451a-944a-6bfcb0ec8e4c"
        },
        "item": {
          "id": "6582caa3-7e12-4e59-a0ca-c160e8f143b7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6d8037de-8722-4e67-9dcd-4ba018a8b74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b685a0d8-3ed9-4e86-9f02-6f5cdca08b77",
        "cursor": {
          "ref": "2be45b55-7e3a-43ec-9a49-0f35e92b5f9e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "04dee46f-dc98-47e9-8fca-e5e460161cbe"
        },
        "item": {
          "id": "b685a0d8-3ed9-4e86-9f02-6f5cdca08b77",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c99918b1-8845-4e42-9157-5c8dfbb9ded4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c2b090-3072-4c9d-bc28-2e465253abe7",
        "cursor": {
          "ref": "59d1c1ab-40d5-4693-8fca-c11e88d5117c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ff0c6df0-19a0-4bd8-b52f-0518e6617fa3"
        },
        "item": {
          "id": "53c2b090-3072-4c9d-bc28-2e465253abe7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "526fbb10-f199-48dc-90af-0bc92f71f3bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6227f6bf-7575-4e61-9dcc-400aa0e6f404",
        "cursor": {
          "ref": "372c127c-b88e-4747-ba4d-b319aaf6dbc4",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3bd0caf8-2c45-4e8f-9975-db0ba01b8da9"
        },
        "item": {
          "id": "6227f6bf-7575-4e61-9dcc-400aa0e6f404",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "19afc4ee-f294-427d-ae9b-b73fe81c768d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311e2ac5-2a40-4af6-8bad-4185f261f67f",
        "cursor": {
          "ref": "a5776570-8324-445a-acf2-6c99a4fb052b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "53979ccf-9594-4c86-969d-5d6f30302857"
        },
        "item": {
          "id": "311e2ac5-2a40-4af6-8bad-4185f261f67f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "92f6326f-ba98-4961-8bd6-22338e19c1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbeb383-380e-490d-813a-06d7e1a93567",
        "cursor": {
          "ref": "79b379ad-1170-48f8-84a0-0ec6ec6bfa69",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8c026fdb-c008-4225-a8a8-f3cba423bc1e"
        },
        "item": {
          "id": "dbbeb383-380e-490d-813a-06d7e1a93567",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "27a12220-9289-42b8-bdc7-5ba5f0c463ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79faf74c-2e15-4068-b502-bacc8ed126a2",
        "cursor": {
          "ref": "0a45e5f6-8a5c-4508-be8b-f61f44f199b7",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ef768d63-e8e7-412f-91ec-12cd6906616f"
        },
        "item": {
          "id": "79faf74c-2e15-4068-b502-bacc8ed126a2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "492502d6-669e-4b9f-b810-9c816edb6bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26af135-2c9b-4b11-8754-7f793b3240a4",
        "cursor": {
          "ref": "6a56c734-ebc8-4fee-b835-066240383577",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "84a0a6e7-6af8-43c7-9076-b5e2ed442088"
        },
        "item": {
          "id": "b26af135-2c9b-4b11-8754-7f793b3240a4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c17ad6f4-7d39-4918-b18a-9a9a9f462917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93264d5-e7a0-41be-a88f-47f5ad3c844b",
        "cursor": {
          "ref": "1f94b2eb-02b2-4e04-ab62-71c124146182",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "78341427-3769-49df-a855-7d508d7531e8"
        },
        "item": {
          "id": "b93264d5-e7a0-41be-a88f-47f5ad3c844b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "beea9a44-bb57-455e-9bbc-8cdb753d8b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef18464c-9667-49a9-a620-6ec80c6dea97",
        "cursor": {
          "ref": "f256e1e6-eaab-46e6-918f-c06a5e08cfaa",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "72c5a80d-e56b-487b-b87a-04f28a8ae075"
        },
        "item": {
          "id": "ef18464c-9667-49a9-a620-6ec80c6dea97",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "db6b2288-405f-47a0-86e0-2dd1d60bcab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8d4b92-8789-44f5-b9bb-5bae0cfc777d",
        "cursor": {
          "ref": "45617ebb-bb40-439e-a1c5-f682779e9766",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "641387d9-bc25-4d50-9a38-4236c1c47b7c"
        },
        "item": {
          "id": "7a8d4b92-8789-44f5-b9bb-5bae0cfc777d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8957d239-aadf-4510-bd52-efaa37712303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dcd842-711b-41f6-a6b7-50ca4bec3538",
        "cursor": {
          "ref": "46a86206-047e-41c6-84b9-3fe45964ef72",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "879a0d4d-2304-4936-aa27-556e897e2757"
        },
        "item": {
          "id": "07dcd842-711b-41f6-a6b7-50ca4bec3538",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "34a4c8c2-2ae2-4801-8182-c697fd2f6c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aeceaab-4084-4379-a8b4-7a72cd7163fd",
        "cursor": {
          "ref": "43cb26c2-6ec9-4907-bb64-14750af6a0ff",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "56200146-9945-4fc6-a31d-f33c9b0043ad"
        },
        "item": {
          "id": "2aeceaab-4084-4379-a8b4-7a72cd7163fd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f63be52c-7f7a-4081-8b7a-7da1f1bce461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bff1076-ecb1-4f63-bda5-c33a256c62d0",
        "cursor": {
          "ref": "d4dcd8ca-3505-4d4d-8260-20e739f6ba1f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f1f9b706-e764-4012-9d4f-f946728fab45"
        },
        "item": {
          "id": "3bff1076-ecb1-4f63-bda5-c33a256c62d0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c294b190-cae7-48e9-8095-ef365d8e43fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78b5d7f-9fd2-44dd-9129-f48b6be5b469",
        "cursor": {
          "ref": "ffb7d79c-04d7-4655-b590-4be5024b36d4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d903b355-8689-4776-971a-331020811734"
        },
        "item": {
          "id": "f78b5d7f-9fd2-44dd-9129-f48b6be5b469",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d5094a16-25a7-4fc5-9706-30b0c8909cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fb045f-fc39-4f90-9334-e598ef9803c6",
        "cursor": {
          "ref": "cfa949db-bf2c-4306-bd4b-4e7bd988a5a8",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4253b23f-5632-48d8-a2ae-62644c9e2315"
        },
        "item": {
          "id": "e5fb045f-fc39-4f90-9334-e598ef9803c6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4c453083-8b89-48ea-966b-1b26bcf862a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ace001d-efe9-4b3b-aff2-32184a3c7ca6",
        "cursor": {
          "ref": "ee22667a-e115-4dbb-a8c5-a024e38063f8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fc0511c7-ba7a-4479-8f57-dc541261d650"
        },
        "item": {
          "id": "1ace001d-efe9-4b3b-aff2-32184a3c7ca6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ed1e3e43-4319-4664-931b-8d02746cef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eadd4f7-1d62-4e8e-a0ac-c2d3546cf0a0",
        "cursor": {
          "ref": "7431ac3d-fd2a-419c-9cc7-71c216349f3c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f3015a31-6686-4106-8d9f-b43e6bd81f4e"
        },
        "item": {
          "id": "4eadd4f7-1d62-4e8e-a0ac-c2d3546cf0a0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bfe9a3be-1e7c-42c1-a7df-be4c983a821d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b8748b-314a-4b62-a98e-f2aa9b22a23b",
        "cursor": {
          "ref": "fef7b120-c5a3-4c64-82f5-7f2296ae8a2a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5c1996b7-1289-4a5d-b069-6d547d8f3a49"
        },
        "item": {
          "id": "e0b8748b-314a-4b62-a98e-f2aa9b22a23b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1d0b0cf3-9048-43ce-9347-45c337896361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0c80be-70d6-4746-82f9-bff176ff1286",
        "cursor": {
          "ref": "d3be732c-441d-4c01-9347-1d45452bf864",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cf59e724-d574-4bf6-9665-41381a97d824"
        },
        "item": {
          "id": "3f0c80be-70d6-4746-82f9-bff176ff1286",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7c44712c-7432-4045-a91f-557dc1092b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ef358d-dc17-40da-87e0-22ad201249bd",
        "cursor": {
          "ref": "830271e0-93fc-4b9b-af27-7c1217a3a62a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "48002f5e-b216-4c3c-8fd5-1e417512e879"
        },
        "item": {
          "id": "f0ef358d-dc17-40da-87e0-22ad201249bd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d13937b5-d339-4413-a2ce-ca657c749ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf09260-e7b9-4a51-bc78-fae687980401",
        "cursor": {
          "ref": "d57a4257-fb7c-43e2-a978-c34adf8b1046",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0a4cdeaf-cc1e-4150-aed1-ff2796d935dd"
        },
        "item": {
          "id": "4cf09260-e7b9-4a51-bc78-fae687980401",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4830b4bf-6b3d-4ed6-8ca9-02092270a7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ebf2f3-06a2-4c0f-abf0-5ee1d3214400",
        "cursor": {
          "ref": "b06d0720-e4b2-4265-b787-9182e5c775b4",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e82ed4a8-16ba-4154-a054-bb95433a46fc"
        },
        "item": {
          "id": "43ebf2f3-06a2-4c0f-abf0-5ee1d3214400",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b70df260-7dbd-42a2-b162-797d1c1a684a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1bf2ef-3b0a-48dd-ab7c-1c327de19000",
        "cursor": {
          "ref": "6f389fef-5c38-46bc-8d9d-b14d670bf5e1",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "60b6fa69-1e72-49a3-a0e9-285066f0c3f3"
        },
        "item": {
          "id": "3f1bf2ef-3b0a-48dd-ab7c-1c327de19000",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ee96442b-416e-4602-a41f-950bd3697d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9e43a7-d694-48b0-9daf-f75e3b85f084",
        "cursor": {
          "ref": "04070898-8c47-4e58-a3f2-d0ed0d21dde6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "769c408d-39eb-4969-b52e-25a9e007b1a0"
        },
        "item": {
          "id": "af9e43a7-d694-48b0-9daf-f75e3b85f084",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "684fe9ea-27c2-4658-9c74-13d5ed0e04b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c679e9-889a-4850-afdd-0c024ea3fde0",
        "cursor": {
          "ref": "6fda6adb-3311-4274-8690-d4384b41203d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8cdfadc1-9403-41ca-8777-c5e96a9b4b1f"
        },
        "item": {
          "id": "65c679e9-889a-4850-afdd-0c024ea3fde0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4b9592c5-4fc1-4736-bc5c-4d7dde03da4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0ad6ee-f384-44bd-b736-9cd431779371",
        "cursor": {
          "ref": "faa12ee8-baaf-4df1-943c-d20a9d37d7ae",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cd3f0bf2-01de-4df2-8d21-58357540edbd"
        },
        "item": {
          "id": "aa0ad6ee-f384-44bd-b736-9cd431779371",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "16a10365-1953-4f73-bbf1-7fde49fdc512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0615907d-ef2a-4e7d-8d31-0fb7504d97ed",
        "cursor": {
          "ref": "e365768c-dc4a-4c37-b923-b321d7901238",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1450fb61-bda1-4aa9-b74f-243ed7d79f45"
        },
        "item": {
          "id": "0615907d-ef2a-4e7d-8d31-0fb7504d97ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dcdf4700-77ea-4420-b239-85c1dc67e1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff71c63-d3cf-4a04-8f30-b283932e38f4",
        "cursor": {
          "ref": "17239b75-976b-4215-b2cc-abe288b46b51",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5c232e3f-7817-4b7e-8a20-d67e02c01b92"
        },
        "item": {
          "id": "aff71c63-d3cf-4a04-8f30-b283932e38f4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "94070d81-657a-4bbf-b3b5-10b6d43117bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9fed71-24d6-467f-89d9-9ab946ca2469",
        "cursor": {
          "ref": "72cc983a-abe3-47e9-9b6c-8f7b89565e65",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4e912d6f-0379-4cd9-914a-4222d33b5835"
        },
        "item": {
          "id": "da9fed71-24d6-467f-89d9-9ab946ca2469",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4ebc5393-2008-4251-b0e6-ae08211a8778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f7b9a6-60ab-411e-b12d-9b6d924fc1b3",
        "cursor": {
          "ref": "0d820a4a-b8f7-45af-a968-6a5f575ab4aa",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "204ec904-3bf1-4a3d-8ba8-a5e510dfbac9"
        },
        "item": {
          "id": "70f7b9a6-60ab-411e-b12d-9b6d924fc1b3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cb0d9a1b-2bbc-4df5-b48c-7e58a26e1dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4ea5f4-11db-40f5-847c-2a661e3879e7",
        "cursor": {
          "ref": "22c8682f-4cf6-4fd3-863e-cf4f3c8ef01c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "684716c3-e762-4803-96a9-1ab058d64b3e"
        },
        "item": {
          "id": "ab4ea5f4-11db-40f5-847c-2a661e3879e7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fa997777-64ff-49df-b1e6-ecfe9eddf3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7708924-8c49-4d02-beb3-a597132e0c97",
        "cursor": {
          "ref": "f46505c0-8e80-4dcc-b259-73f37b23892c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "27332b5d-095e-4062-8c80-2032df6c4e9e"
        },
        "item": {
          "id": "c7708924-8c49-4d02-beb3-a597132e0c97",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d833bb32-0079-44e6-bcec-2de17bb5bba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d85e82-33c2-40ac-8aa9-090d8c3239a4",
        "cursor": {
          "ref": "a47eff81-3ed2-42da-9a09-70f3ebea8141",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7ff9ef92-e9ec-4c1b-a724-fb3e7e73c0b8"
        },
        "item": {
          "id": "a2d85e82-33c2-40ac-8aa9-090d8c3239a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ffb23a50-6ab5-4799-8dab-53de0a75fba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdbe952-2a1d-42b2-86a6-ef17f7fc3cca",
        "cursor": {
          "ref": "7a689800-4089-4e0a-9fef-d9ef18b428b2",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9b21f57b-6dcb-4046-8e35-feb34255e1a4"
        },
        "item": {
          "id": "2bdbe952-2a1d-42b2-86a6-ef17f7fc3cca",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "43d14582-bd1f-487d-9dea-071adcec7bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96f5fa5-dfe3-4bd2-a7e4-08ffcd8b29df",
        "cursor": {
          "ref": "cd031fbd-a4c6-48ff-8d95-3099d9bda4dc",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "45a8387c-f778-4fea-a8b1-610bcf75766b"
        },
        "item": {
          "id": "a96f5fa5-dfe3-4bd2-a7e4-08ffcd8b29df",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8925c9eb-f71f-4668-a2b2-4fcd12090505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b27699-fa53-4e78-bc59-d48279301dd8",
        "cursor": {
          "ref": "b2395630-6428-43a2-b74e-69138b3f5524",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3880ded3-34be-4775-b6c0-aa78f2bd7c46"
        },
        "item": {
          "id": "36b27699-fa53-4e78-bc59-d48279301dd8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "65734a4b-a1af-4bc2-9c43-52d315ef8793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2db1c1a-10c2-4504-9417-7ee4b61e2749",
        "cursor": {
          "ref": "d00728d4-3086-435b-bddd-d2d2628b7d9a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6352739e-8fbb-4e36-902f-01cabe813f38"
        },
        "item": {
          "id": "a2db1c1a-10c2-4504-9417-7ee4b61e2749",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "154cc48c-6b09-48f8-93ee-878fbfe85596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc5b32d-9baa-4a15-8459-e68b4ef6fa4b",
        "cursor": {
          "ref": "139e99bb-d6a7-416e-b56b-3db392628ba0",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "56440a14-12da-424d-b22f-219a45808888"
        },
        "item": {
          "id": "3fc5b32d-9baa-4a15-8459-e68b4ef6fa4b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9da1a833-b95b-4718-b6db-f0850f200069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71195aa4-6293-4098-8f5c-9d3bb68348da",
        "cursor": {
          "ref": "be18446f-fa48-4276-834a-f11c3a33d10e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ed0bcb7a-eb27-49b8-af3e-e9341252c78f"
        },
        "item": {
          "id": "71195aa4-6293-4098-8f5c-9d3bb68348da",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4a70ecca-2361-4f02-a91a-07906ae31822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f60297-39be-4b43-858a-686ff8c115e6",
        "cursor": {
          "ref": "99a31fe1-2765-4643-af8e-f29ce6591bc0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b9e7b714-219c-4f37-942c-2fb7bfccedc5"
        },
        "item": {
          "id": "e2f60297-39be-4b43-858a-686ff8c115e6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2b561883-46a7-4b21-8df2-498ca65b392f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810ddcdf-be85-47b3-bb00-faa9573b2cc6",
        "cursor": {
          "ref": "59165729-2108-477a-9a9d-6232c78533d3",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b2424e68-9116-4b3f-8862-c92d818e44cd"
        },
        "item": {
          "id": "810ddcdf-be85-47b3-bb00-faa9573b2cc6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "05065b9f-5235-41cb-a7c0-857288d9e06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84189e8-9d34-42b5-b38e-b865fbdaf3f9",
        "cursor": {
          "ref": "3ac5c042-da6d-47b0-baf2-43cbb19b0e37",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0810be6a-8304-4b43-841e-393d902c4382"
        },
        "item": {
          "id": "d84189e8-9d34-42b5-b38e-b865fbdaf3f9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "64d21e55-f81d-4b80-a776-7ce4b7871055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65793172-80d3-42bf-a40a-c3764bf09ba1",
        "cursor": {
          "ref": "8fd46d95-1352-444d-aebf-76e6661239da",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "31ba3895-e39b-4b78-915a-690057709686"
        },
        "item": {
          "id": "65793172-80d3-42bf-a40a-c3764bf09ba1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1d5f6b2f-86de-4979-9172-590e1fca0525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede39ca4-2e00-4d66-9b6b-d6c63b2b10f3",
        "cursor": {
          "ref": "42b517fa-3fa1-45cb-a516-eb85a2075daf",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4ee44a11-d7a5-4b36-b525-cfcf19031a59"
        },
        "item": {
          "id": "ede39ca4-2e00-4d66-9b6b-d6c63b2b10f3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9492a197-66cd-425a-98a4-0e3122153ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1b717a-09a1-42dd-a268-761d3c8ef943",
        "cursor": {
          "ref": "ead6b09f-b417-48f6-b0ea-8902dcdcce4c",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ae14661f-bfc6-409e-bdf5-0d1f1a3c3037"
        },
        "item": {
          "id": "0d1b717a-09a1-42dd-a268-761d3c8ef943",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f1082301-6270-4c0a-be41-cf5d1940ffec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6a7c5a-e23c-45b1-8d84-e1c34f4ece30",
        "cursor": {
          "ref": "4c74a8fc-9ae4-4059-b771-273efbf7829c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "aa2484e2-1ce6-44c9-9dfa-763d386cf8e8"
        },
        "item": {
          "id": "3c6a7c5a-e23c-45b1-8d84-e1c34f4ece30",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9a5d7d6d-998d-476a-b04e-7159084e8865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ffe14d-7d89-416a-8ae9-90f4edb3cd1c",
        "cursor": {
          "ref": "ca141661-cc1a-4e4a-9d9c-eea3eeee3e33",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "69efae08-af8e-4159-afaa-ca147d9ec0af"
        },
        "item": {
          "id": "51ffe14d-7d89-416a-8ae9-90f4edb3cd1c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ff6f762c-b4de-420d-b624-d0f2408941e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749a25d2-367d-4f14-8ab5-06527a1595e3",
        "cursor": {
          "ref": "c5a62dc3-f17b-4e5b-852e-209fae2a0a45",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "21b6c8fc-ca6d-47cf-9fd6-eedd90bc54c2"
        },
        "item": {
          "id": "749a25d2-367d-4f14-8ab5-06527a1595e3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "49bd0244-5204-4323-ba17-5888147b873a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85cc4a8-d65a-4e44-88a8-6490ea63f362",
        "cursor": {
          "ref": "537f0f61-dc6d-485f-8c48-f1feaefe26bd",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8822f81b-59b0-482e-8d60-3bc1b09aa5a3"
        },
        "item": {
          "id": "b85cc4a8-d65a-4e44-88a8-6490ea63f362",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d01d6fb1-8f4e-4cc6-8b4e-f0df960d89af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9039b75d-2a80-427f-aac0-0ee036199e40",
        "cursor": {
          "ref": "8530ed7d-5f1a-41dc-82b0-a82a9edd9fe8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "df4dce67-683c-4ac2-8f72-78105c2abd23"
        },
        "item": {
          "id": "9039b75d-2a80-427f-aac0-0ee036199e40",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7fa9f73c-c284-4664-b98b-8ae33f6683dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4913e3f1-a075-4763-bd94-6e85eda0b5da",
        "cursor": {
          "ref": "3855b79a-396a-471f-b453-f1dd1bd3d6cc",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "61142afc-9cfb-4096-a744-40315c6fbd21"
        },
        "item": {
          "id": "4913e3f1-a075-4763-bd94-6e85eda0b5da",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6ea0bd03-d290-45c3-bcb5-c70840238de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16608c1e-139a-4a80-86d9-e903738d34a4",
        "cursor": {
          "ref": "7e264cec-5150-4e16-9859-52b2df9b11a0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "579e889d-0cd9-478d-98c6-9456fe26edc7"
        },
        "item": {
          "id": "16608c1e-139a-4a80-86d9-e903738d34a4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4a142732-e6a7-4cfe-a194-0d9fa3dde8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3795b5e2-659e-4855-9dd4-62bab8f88563",
        "cursor": {
          "ref": "d4a56628-0c54-406b-baf5-46e9ca892973",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "94d052a7-0425-44dc-8141-6d00b40fb2d1"
        },
        "item": {
          "id": "3795b5e2-659e-4855-9dd4-62bab8f88563",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b29a29ef-dd6b-4fd4-96c1-730989f51a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8dfb20-3a0b-4bff-8edb-6d440650b908",
        "cursor": {
          "ref": "de4f510e-c894-4595-9522-81ed9c42af62",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cfdab141-bd35-4602-8632-93202d1b2fb0"
        },
        "item": {
          "id": "ef8dfb20-3a0b-4bff-8edb-6d440650b908",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "63cda594-0100-403b-ab8c-e7365a8a2ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a914adea-a89d-4d5e-a603-07ea7542257c",
        "cursor": {
          "ref": "2c1441d3-d888-4128-ae19-4cf1a4f287be",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4fa4077d-4f68-43be-afb6-7e7ca7254ae3"
        },
        "item": {
          "id": "a914adea-a89d-4d5e-a603-07ea7542257c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c0fa7783-74d2-48c4-9553-0c996ab60561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78733985-be63-4666-8805-9d0a26c47a8e",
        "cursor": {
          "ref": "1a0735e7-68bf-4c2f-b7c7-8cba17cc944c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f763493c-9e37-4f98-8f84-758fba6a11b8"
        },
        "item": {
          "id": "78733985-be63-4666-8805-9d0a26c47a8e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "545f02cb-1bf5-40da-ad16-5cea4dcc1117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f194d3fd-2944-414c-87ab-c415b19d572b",
        "cursor": {
          "ref": "f7bfafd7-4e45-4a8b-8a47-95cedf892aec",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7368e92c-606c-45b1-be8f-3e930d0c68c3"
        },
        "item": {
          "id": "f194d3fd-2944-414c-87ab-c415b19d572b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1a0fa2a1-46aa-48fe-9864-2c4007f5f234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703d5b59-bc84-4c5c-80a8-e2fe99985bab",
        "cursor": {
          "ref": "68879db5-cb76-4e17-9694-ea95837dab1b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4e065d78-33ba-44ea-94bb-a72c03f7b9f7"
        },
        "item": {
          "id": "703d5b59-bc84-4c5c-80a8-e2fe99985bab",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "39d59f1d-984d-489c-a0f6-0fd499c02e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb7a430-4a27-4555-8312-b958eeae0f48",
        "cursor": {
          "ref": "8b24e94a-eda5-4b02-ab43-add84c17b6c3",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4394d54c-5dd2-44ff-9245-1505e4e6d2dc"
        },
        "item": {
          "id": "3eb7a430-4a27-4555-8312-b958eeae0f48",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4b5325e2-eed8-43fb-b9c9-ea6e147f3c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489e9833-4375-4c62-8efe-695230d5727b",
        "cursor": {
          "ref": "3245cd12-dea2-41a9-a30c-bba0a671f3cb",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e5ee98a5-ccba-40ba-853c-75e4f29ae5ac"
        },
        "item": {
          "id": "489e9833-4375-4c62-8efe-695230d5727b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "43815bb6-f3f7-47c1-babf-0505b02ac3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb93c5bc-ba05-4255-a4c7-802d0e1e77cc",
        "cursor": {
          "ref": "17d8d21c-bbd4-4c10-9794-2075c292d5ae",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ae3ab30d-8403-4096-9922-f5da041e5cdc"
        },
        "item": {
          "id": "eb93c5bc-ba05-4255-a4c7-802d0e1e77cc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d68caf6c-7884-4c5a-9894-cf8cb83697e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcd5219-658b-4489-9ddb-4c01b3af9f7b",
        "cursor": {
          "ref": "bea08544-dd90-4daf-86a5-432f676313f4",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2c4c7dca-9d97-496f-bb2f-a0d5f1e00e59"
        },
        "item": {
          "id": "3dcd5219-658b-4489-9ddb-4c01b3af9f7b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0ef85f7f-e3ee-42af-a49c-b6891d847a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f2cbd6-49a2-4b81-b993-28ad3c770274",
        "cursor": {
          "ref": "86e4abb4-3448-4213-a923-8f49cea51ff7",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "888707e7-5ee4-4a5b-8cae-396e3f26a50d"
        },
        "item": {
          "id": "b4f2cbd6-49a2-4b81-b993-28ad3c770274",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9e6b818a-cdc2-45cf-81fc-761f25fadec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7869f9-291a-4545-883c-0af2a25f9434",
        "cursor": {
          "ref": "1c6123a5-f0c4-49b9-876c-8e9ad0664f23",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3ad1ba03-544f-4883-8f76-d75e9d67a5a3"
        },
        "item": {
          "id": "2c7869f9-291a-4545-883c-0af2a25f9434",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "62e27a95-641d-47be-9eb0-efa5f726903b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a30731a-7bd5-4469-a690-fbdbdff7b77e",
        "cursor": {
          "ref": "952f4ecb-6dbd-4681-b30a-7b5c40cb20aa",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "777897f1-67c2-4540-8925-6129004d02e6"
        },
        "item": {
          "id": "5a30731a-7bd5-4469-a690-fbdbdff7b77e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "28cc5a26-4d75-434c-a3b7-594fc6e47e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885a9cf1-531e-4795-bf7c-55e79809e631",
        "cursor": {
          "ref": "e2ea1c63-53fc-4bca-a658-574c081ef819",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8af49586-3291-46f8-a284-b3bf8911708d"
        },
        "item": {
          "id": "885a9cf1-531e-4795-bf7c-55e79809e631",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a3df6fe1-860e-4174-8f11-1e1e6289b5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4cdfc0-1f5d-4641-b930-f2eb89b15224",
        "cursor": {
          "ref": "6d399dad-15d1-4bee-bd20-bb45037105c8",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9a2ff5d8-799e-48e7-b959-9abd17554ae2"
        },
        "item": {
          "id": "2b4cdfc0-1f5d-4641-b930-f2eb89b15224",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b5da643c-a7c4-4bc7-bb3e-38a1469ee048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622820a9-50de-4adb-96d1-a68642dfbe17",
        "cursor": {
          "ref": "0312bae0-dd1a-4167-abcb-47806377f371",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c9ffb5e6-cc6b-45dd-b2d8-595b65925f25"
        },
        "item": {
          "id": "622820a9-50de-4adb-96d1-a68642dfbe17",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e93e605a-6f48-4a8a-94b4-cc670ccbc5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7238e561-52c6-4a82-a5c5-8834c9bd3656",
        "cursor": {
          "ref": "2a0bde30-1d93-43f4-b53b-4cc544a8a173",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "45f6abba-1539-4ecd-a45b-0874ef68c9c1"
        },
        "item": {
          "id": "7238e561-52c6-4a82-a5c5-8834c9bd3656",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a2b81167-15ab-4cc3-b8be-8fe848a59335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a215001-7ec0-4be3-8e95-91569a9359ce",
        "cursor": {
          "ref": "d14bbf1c-62e1-4520-bd96-27be6607fc4c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "90763a5a-5f54-467d-b84e-84f862489657"
        },
        "item": {
          "id": "7a215001-7ec0-4be3-8e95-91569a9359ce",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b733708c-6b8e-444f-8dc6-2f3466781806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d7db83-398c-4050-b90f-2a85d08ad227",
        "cursor": {
          "ref": "ffad7a99-10dc-4c9c-a358-b0a6a532b605",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1fbe5254-bf1c-4338-955f-5647eec38e78"
        },
        "item": {
          "id": "d1d7db83-398c-4050-b90f-2a85d08ad227",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "08c1198e-584a-43a4-94c4-d7c434f6d9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57fe1b0-53b6-4f88-8851-6abc7c071d18",
        "cursor": {
          "ref": "24aa74ea-6b41-4a8d-852f-600248f79252",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c1dffef7-88c4-44cf-afc6-2c98e8d3682e"
        },
        "item": {
          "id": "e57fe1b0-53b6-4f88-8851-6abc7c071d18",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "679100a4-eeb6-411d-acbc-6c6765427104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c53f08-2e1a-4d02-95a6-7dd3d652a0ce",
        "cursor": {
          "ref": "23a7cbee-d6f4-4fca-bfca-0105018ef81a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "14452d10-2f34-48fd-b09d-6fc554d91b8f"
        },
        "item": {
          "id": "b0c53f08-2e1a-4d02-95a6-7dd3d652a0ce",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a6d32df4-1108-4c85-a8ad-40f7c3609344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e12f82-dee4-4c98-bfee-7d55a85c5280",
        "cursor": {
          "ref": "f34ad5e3-e463-4cb8-8a8d-46da175d1351",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9ef27151-29e0-4b89-b9bc-c083c8705f86"
        },
        "item": {
          "id": "76e12f82-dee4-4c98-bfee-7d55a85c5280",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7a4bbc1b-96e2-4e76-b86b-08d9c25d9873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739ed99a-8b3e-47d7-8587-83e9a501588e",
        "cursor": {
          "ref": "36edec8e-ada8-42be-b4ae-cafeb6b04936",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "50b30a10-54d2-4df1-ad88-38b97dbc11cd"
        },
        "item": {
          "id": "739ed99a-8b3e-47d7-8587-83e9a501588e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a0c85272-6932-46ff-8abc-8bfd4053dd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcd2c3e-24db-44dd-ab8d-1ec4e3a02244",
        "cursor": {
          "ref": "98a36c46-b4f8-442a-b415-0949d3d1dd7f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ed0039c2-cd7b-4260-a7e5-9f51c17c4d62"
        },
        "item": {
          "id": "efcd2c3e-24db-44dd-ab8d-1ec4e3a02244",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f599539b-009e-48d8-b4a3-d2d34eceafee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59eb599-514b-41be-85b5-191fb69d86eb",
        "cursor": {
          "ref": "26900840-fa80-4422-884a-c83298f91215",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "87bbe5e4-cefd-4562-b812-eada583f097d"
        },
        "item": {
          "id": "e59eb599-514b-41be-85b5-191fb69d86eb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "829ff1b9-3d79-4deb-b23b-580813608164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dc918d-2a57-4cbc-803b-7fbf61eb280a",
        "cursor": {
          "ref": "693c7d92-ef62-455d-9ff4-4f5367e87112",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6b085e05-ca95-4c8c-a7a9-d4efe834fad6"
        },
        "item": {
          "id": "99dc918d-2a57-4cbc-803b-7fbf61eb280a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6f9361e2-9e24-4f7a-b4fa-c4b3ce16e8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb83ec45-14fe-4844-9ffd-50056938fb6a",
        "cursor": {
          "ref": "538ac3c7-8bed-431e-b547-3813e654d92b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "146fd4ec-451d-4102-ad92-509600436fec"
        },
        "item": {
          "id": "fb83ec45-14fe-4844-9ffd-50056938fb6a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c84393b1-223b-4480-9937-1a8f9a0b220c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03074269-c3e5-4037-991c-4d7b6d1fac20",
        "cursor": {
          "ref": "4c97eee5-8a49-4e24-ad05-a7a35472b7a3",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9774888f-f8d8-4f3b-b33f-575cffa4f02b"
        },
        "item": {
          "id": "03074269-c3e5-4037-991c-4d7b6d1fac20",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f5ca5f22-a095-4308-a7e2-adfb459c29b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cb018f-416b-4a12-9254-e491298b2e8f",
        "cursor": {
          "ref": "0a52a543-82aa-4a3b-810f-8d93c46ce10e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "59be0b6f-a738-4464-a1a2-631777fd03ad"
        },
        "item": {
          "id": "26cb018f-416b-4a12-9254-e491298b2e8f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "45431b05-c16c-455e-95fe-d28fd7a8d161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dbe6c5-c29f-4d0e-9b0a-c2bf114c7ac6",
        "cursor": {
          "ref": "e633e52d-0567-47d1-9b93-8198d8c8715f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "170d15f2-458d-4765-82e9-72b6cff0c25f"
        },
        "item": {
          "id": "45dbe6c5-c29f-4d0e-9b0a-c2bf114c7ac6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "62452091-d9b8-4468-9d62-8da3513d7cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6147070-ed4a-437b-acc2-310905ad23b7",
        "cursor": {
          "ref": "32d8364b-5cb1-4081-8ae6-33491166cf1d",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eaf1a535-2dc7-4294-a378-17e3faf337a1"
        },
        "item": {
          "id": "f6147070-ed4a-437b-acc2-310905ad23b7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ce27943f-7717-43e0-b5bf-3c843a40da9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6807db-a097-4c89-9fab-f810018cb270",
        "cursor": {
          "ref": "75a5f8c1-d3f2-4d48-b12a-4a8e7997b713",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2b89fdf2-4848-4f3d-a19b-e577c8a5a856"
        },
        "item": {
          "id": "ce6807db-a097-4c89-9fab-f810018cb270",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0249ac91-5457-42cf-89fc-d03f754b4f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae447f2f-c385-43ad-9c10-8ee24e983989",
        "cursor": {
          "ref": "957fa1e0-1012-445c-9039-cc5ed578e00d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "443224ac-1061-4bee-b5d4-bed7fe078b1c"
        },
        "item": {
          "id": "ae447f2f-c385-43ad-9c10-8ee24e983989",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bc40c22e-66da-463f-af48-03e2edc55ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef750cc8-1e21-49f7-a281-ab13de413234",
        "cursor": {
          "ref": "83598e5e-7f94-4236-9783-415faa9fbcf1",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "49fa92c8-00f5-46ca-9b74-a5854c00eb75"
        },
        "item": {
          "id": "ef750cc8-1e21-49f7-a281-ab13de413234",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9b33bba3-beae-429d-bc8f-8b5c0b3a11f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06260e39-7c9a-4226-9ff7-c23cfa5ca232",
        "cursor": {
          "ref": "25bcf56e-fdd9-49d0-aee3-95c000507b53",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "504f40f8-6834-4753-831a-2a496940de14"
        },
        "item": {
          "id": "06260e39-7c9a-4226-9ff7-c23cfa5ca232",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de37c2db-b802-40db-a6f9-bdea677d8270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e09b38-9ff5-404b-8a3c-a2ddbf02114f",
        "cursor": {
          "ref": "97975533-873b-421b-8936-75c48b21f2db",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "690943dd-831d-4b5c-9420-3a5ab1413b52"
        },
        "item": {
          "id": "91e09b38-9ff5-404b-8a3c-a2ddbf02114f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e0e60cc1-e398-482b-b2e6-607feed6d6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10551ea2-a135-48c3-ad5a-8ef0884c75e8",
        "cursor": {
          "ref": "cf98a028-0e06-4380-8e73-309066c00626",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b5d65f21-ba7f-43af-9ede-e081e2c00c1f"
        },
        "item": {
          "id": "10551ea2-a135-48c3-ad5a-8ef0884c75e8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "338d296d-a783-4cce-9c28-43105ebbcc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d20ef47-0e64-40da-a77f-d43408c4b59a",
        "cursor": {
          "ref": "70f6a401-503e-4b08-9f6d-07147d122c99",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5e1307f1-b9cf-4738-8da8-badc3a42cac3"
        },
        "item": {
          "id": "8d20ef47-0e64-40da-a77f-d43408c4b59a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c65bd15c-ca70-4623-b543-f74a0c5ff2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999b8c3e-bbed-4ce5-901a-50a2b0272c15",
        "cursor": {
          "ref": "e94d3d67-aec2-4e31-b9d8-9299d142fe68",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a66d99a3-a314-4693-87af-9156a3e6474b"
        },
        "item": {
          "id": "999b8c3e-bbed-4ce5-901a-50a2b0272c15",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3dea4258-b128-4690-9f8c-738e18030aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae318433-90b5-405e-ad97-82c6516669ed",
        "cursor": {
          "ref": "62ed9ec2-d2b2-4f34-8248-0ed673f828ef",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "96200ab2-e712-4d36-9de4-25e3933b2290"
        },
        "item": {
          "id": "ae318433-90b5-405e-ad97-82c6516669ed",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a0d8ba9b-4fd0-4900-985a-54156f136f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229801d5-bb7a-4bef-95aa-135af00dd3d4",
        "cursor": {
          "ref": "37c817ef-ed2f-470b-b178-3cdffc791f02",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1b6e4887-3d72-41a3-90f9-1a4eaf831880"
        },
        "item": {
          "id": "229801d5-bb7a-4bef-95aa-135af00dd3d4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "776f1e29-9ba2-4668-98e0-03919e6fed25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d80c61-979e-432a-bd7d-556433c6d483",
        "cursor": {
          "ref": "20c8294e-7b2d-440f-aadb-89f976745776",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "090e1246-b376-42b0-9d63-63fcd267faaf"
        },
        "item": {
          "id": "30d80c61-979e-432a-bd7d-556433c6d483",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "adecf3a7-064b-4999-ae65-27091091bc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0176472-124f-413e-839b-633d1ed3975f",
        "cursor": {
          "ref": "81d397df-ee1b-4fd9-95d2-ee6c8c2ed9be",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "252d84f9-892b-4f4a-9bd6-29a722cfd4d6"
        },
        "item": {
          "id": "f0176472-124f-413e-839b-633d1ed3975f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bf467c01-0d90-478f-bb3b-8f603a20fead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a108c172-bd56-42db-b898-3dd4e8bb2f60",
        "cursor": {
          "ref": "0f3f128e-3e7e-46d4-b474-7b12f68891f7",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e2b46656-3aef-46e6-87de-9e7a465e494a"
        },
        "item": {
          "id": "a108c172-bd56-42db-b898-3dd4e8bb2f60",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bf5fe77d-f81f-49ca-bc8e-157f2fd629e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76934f0-6279-41fb-9823-caea51e88b43",
        "cursor": {
          "ref": "c43786f0-1ee7-4a33-a7b2-ece6be38ecbd",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c98bc451-d06e-4691-9efd-c8750e281feb"
        },
        "item": {
          "id": "f76934f0-6279-41fb-9823-caea51e88b43",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dbdb586e-2ec0-46be-82a1-a0d017ac98f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ade1bc-ebbe-477f-b1c5-ec0e3a891e49",
        "cursor": {
          "ref": "9f7132e8-6dd3-4deb-bdba-d44167d792c9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d19cf35e-5445-4bb9-9643-553ba5ff1f7b"
        },
        "item": {
          "id": "e5ade1bc-ebbe-477f-b1c5-ec0e3a891e49",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f34ff135-ef42-46f2-9285-7e33982416fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b244193e-0733-45f6-835d-84344018b5f0",
        "cursor": {
          "ref": "3a0bfee7-814e-4a86-9eb0-f50b4a505127",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fb5fc770-940e-42cc-87f6-1af0505d46c0"
        },
        "item": {
          "id": "b244193e-0733-45f6-835d-84344018b5f0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eed75fb3-fa82-4437-a046-0fe4641ca689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8d44e0-49af-42a3-931d-d8270e0d3be1",
        "cursor": {
          "ref": "dd774d3b-e651-45b8-b6ba-36016eb5764f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "db93bf5f-eade-4580-96a6-fac93716adbf"
        },
        "item": {
          "id": "3e8d44e0-49af-42a3-931d-d8270e0d3be1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bf258983-e26c-4d41-9494-2ff4af552c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a641dbdd-465e-4408-9169-8d1e00db3435",
        "cursor": {
          "ref": "7d73e206-7277-43cc-bd50-010eda917419",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f782a136-0b1c-435c-9077-5e55a182f211"
        },
        "item": {
          "id": "a641dbdd-465e-4408-9169-8d1e00db3435",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "abf7ddac-f0e1-47a0-9724-a950612f708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b6ae61-2ae9-45f8-8d3b-34e5783b657a",
        "cursor": {
          "ref": "b3077a25-c78f-42fc-bb90-e034286acb52",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5c698326-6510-4550-97a7-5e73a63fa9c1"
        },
        "item": {
          "id": "b4b6ae61-2ae9-45f8-8d3b-34e5783b657a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2415e1e0-93c9-4ee5-9887-8acad76f8505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ea98a1-b61e-4247-90c8-f357a4a9bce3",
        "cursor": {
          "ref": "07a4a8a3-ff18-411b-ac12-fbf91561c242",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5ee0d446-4cb1-49e4-8608-743a07cee40d"
        },
        "item": {
          "id": "f7ea98a1-b61e-4247-90c8-f357a4a9bce3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0aa72854-e56f-4f0c-a292-6ec40b377d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6d9d7d-2846-43dd-a75b-c1ebedeaf355",
        "cursor": {
          "ref": "c0b58a11-3be3-4e38-bd09-57760d7d99d4",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3c1ca220-ab75-4527-83da-e884f4082c90"
        },
        "item": {
          "id": "7f6d9d7d-2846-43dd-a75b-c1ebedeaf355",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5d7b86d0-6f27-4653-8ccb-f2e52010e54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234e4acf-1136-4a18-b3bb-5be78e7ade5d",
        "cursor": {
          "ref": "764fd0fd-99b8-4a3b-b39b-0cd20a0576d6",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "405a4e0e-8fbd-432b-b812-b1b1e4a4b7bb"
        },
        "item": {
          "id": "234e4acf-1136-4a18-b3bb-5be78e7ade5d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "89909e1b-d778-4197-9289-a5264c620895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a85e3d-7c50-451b-8582-51dae149d6e8",
        "cursor": {
          "ref": "f1aa352c-4d0a-4b9b-aa15-b38d069d26ec",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "87619e7b-c1b3-49d0-be3c-2925e0317a20"
        },
        "item": {
          "id": "63a85e3d-7c50-451b-8582-51dae149d6e8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d4950fc1-145a-4dde-a7ca-84776f5dcdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc39d74d-30ee-4d22-a732-5c2a7876fae1",
        "cursor": {
          "ref": "2caf8601-9237-454c-bf89-93d90c45ad02",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "44994fba-9b9e-4a7c-be80-6be2c3ffd79c"
        },
        "item": {
          "id": "bc39d74d-30ee-4d22-a732-5c2a7876fae1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "48709c03-fa16-45be-8a51-7df50a2524e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b02fe3-36d1-4c0b-a5c1-f683b0d52aea",
        "cursor": {
          "ref": "84f0b9a1-b2be-43b4-a0d4-6893e887354e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "197d7cdf-4bc2-437c-b88a-21f4f3a5adee"
        },
        "item": {
          "id": "13b02fe3-36d1-4c0b-a5c1-f683b0d52aea",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5ab5655a-6aa8-442f-acc3-5a7d79d9ea9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dc1570-d910-4971-9b78-f0e482d3c842",
        "cursor": {
          "ref": "2acaedb2-1583-4903-bb4c-9f4f828d6cb6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ef94ad79-1e31-4fe1-8c9e-0fc5f21719d2"
        },
        "item": {
          "id": "97dc1570-d910-4971-9b78-f0e482d3c842",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5b70b3ab-a97f-4ddb-9866-7c3e423f9f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d34d729-7597-4b53-9f1d-555194710d80",
        "cursor": {
          "ref": "a376ed04-5ca7-4c7a-b880-f2b397d969af",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05cebaf6-00cd-4244-bc6c-4802cb323512"
        },
        "item": {
          "id": "1d34d729-7597-4b53-9f1d-555194710d80",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b2722aa3-02aa-499a-a38a-7ed10311cb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b2769e-d252-412b-ba7a-767f13a9347e",
        "cursor": {
          "ref": "d5d13ff0-1ef4-40e7-a3a1-5fe7fe0c9d27",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ceba2be4-fcc2-490a-bbf8-d8d6b1016345"
        },
        "item": {
          "id": "60b2769e-d252-412b-ba7a-767f13a9347e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a70d6fed-2351-4431-8054-209b1045af50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195a6fa9-94e6-4ff6-8f3e-80233741162e",
        "cursor": {
          "ref": "13d03b7f-55d2-43f2-a987-51fb857fb6e5",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fc57db38-f99c-4939-b9ff-d00ad6197454"
        },
        "item": {
          "id": "195a6fa9-94e6-4ff6-8f3e-80233741162e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5f3fb31e-942b-4a4d-b0c1-8dd1dcc3a58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efd7b28-0f60-4ccd-a046-11756e8aab08",
        "cursor": {
          "ref": "9f79def4-b54a-46f7-8ea7-11667d145cbd",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f0714080-b32c-4b4c-83ef-cc131517bdf0"
        },
        "item": {
          "id": "7efd7b28-0f60-4ccd-a046-11756e8aab08",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5966e039-bec7-4b6f-81d0-e3ea6d3b3504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f64e11-65aa-40f0-a5d3-ad83e7089de5",
        "cursor": {
          "ref": "7befc06c-f8b2-4665-a31b-275642c5f0fa",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "deeab677-0c26-449f-96dc-bcc07bc73ec4"
        },
        "item": {
          "id": "c4f64e11-65aa-40f0-a5d3-ad83e7089de5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "becbfd4a-7857-4b50-a1cb-5c1358f5fcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13c30ab-9142-4238-a7d8-4223f601e3d0",
        "cursor": {
          "ref": "cd0262ea-27a9-4ad8-b212-63cee476683b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "88827cd0-4fc3-432c-82d3-c2f50f6a46cc"
        },
        "item": {
          "id": "a13c30ab-9142-4238-a7d8-4223f601e3d0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0f8a074d-528d-4e91-a9a8-b56db9898596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f3911e-98ae-49e0-87c3-069217950d95",
        "cursor": {
          "ref": "e1eb777e-8dee-45bd-9cf9-c734385d026f",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f7895177-759a-40e8-90f0-c3c8828dac60"
        },
        "item": {
          "id": "b1f3911e-98ae-49e0-87c3-069217950d95",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6bdceaf6-68c4-4411-8b6d-3789f2797b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a4bdf0-3f7d-40b1-ae5f-aeecbe998b29",
        "cursor": {
          "ref": "e9f5d0e2-7f1d-445e-ba1f-0e270b6c9abc",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d7c42db8-0b42-43a1-b4e7-3ff423fbdffc"
        },
        "item": {
          "id": "d5a4bdf0-3f7d-40b1-ae5f-aeecbe998b29",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bae66806-1eaf-4cea-9502-930d3eb47ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67ab980-e327-4090-bd28-0fac1cac65a5",
        "cursor": {
          "ref": "704b92ed-b75a-4426-8203-08be177f5e56",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ed2341a9-c2a2-403f-969b-edf6172e267e"
        },
        "item": {
          "id": "b67ab980-e327-4090-bd28-0fac1cac65a5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7da29454-c56c-482d-a34e-58c90c2ff860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce680730-2fc6-4eae-80ff-4855577dbfde",
        "cursor": {
          "ref": "5358e5c1-bb75-4e36-a1e5-0a5c9f565bcb",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a24aaadc-368f-41bb-a19c-2c5da80e3eb4"
        },
        "item": {
          "id": "ce680730-2fc6-4eae-80ff-4855577dbfde",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2ffae5b5-2308-4e07-a2a9-10b521b01e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b378ca27-9334-47ad-93e2-c8bcf7c3f0ea",
        "cursor": {
          "ref": "3dfa7a78-a42e-4f0b-930e-47943d8a8c8a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f1a0c90a-2f1f-43d5-bbef-f671048ec0fe"
        },
        "item": {
          "id": "b378ca27-9334-47ad-93e2-c8bcf7c3f0ea",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3915cb99-86b7-4999-8c3c-d4d572fae04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b134a96-40a9-4ebd-a4b3-0fec48c5be4f",
        "cursor": {
          "ref": "89affb08-d81e-4f40-b0b1-45eb85cf7d6d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "affd7791-14fa-4a1e-bbb9-6154f8d58ef1"
        },
        "item": {
          "id": "7b134a96-40a9-4ebd-a4b3-0fec48c5be4f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1e76a70b-85b2-49a3-88f8-1daf71361cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61e43c6-cee0-4be4-b37e-b91697ee6b38",
        "cursor": {
          "ref": "7c994352-002c-456c-a543-88f9222f92b2",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "49324996-cc8a-4f18-be58-909a0a6be8be"
        },
        "item": {
          "id": "b61e43c6-cee0-4be4-b37e-b91697ee6b38",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4cf54c42-e53e-48fa-9a3b-fc2710b79461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fd8d11-82cf-4964-a9bc-4feb2796d3ed",
        "cursor": {
          "ref": "82a5d74e-3599-4e98-9b38-b19a881afca4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7806e088-4052-450b-8019-3d601863b3e0"
        },
        "item": {
          "id": "a4fd8d11-82cf-4964-a9bc-4feb2796d3ed",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9594fb8b-25d7-4d5a-8ad8-90454e9fd132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85fdf8b-7223-4198-aec2-91aa8ed69852",
        "cursor": {
          "ref": "394c0fe2-4918-4560-8ed9-6a042f72c5cd",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d8d0f07b-f4d2-4217-a08c-cafabd122beb"
        },
        "item": {
          "id": "f85fdf8b-7223-4198-aec2-91aa8ed69852",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "87223997-9531-4b07-997d-59abe152f1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ed64ca-88fd-439b-beb4-25c9309a9383",
        "cursor": {
          "ref": "bbfe19db-61bb-43a6-8e24-b5797dce8866",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1646a188-8546-4289-9a6b-a760b49ad1ea"
        },
        "item": {
          "id": "74ed64ca-88fd-439b-beb4-25c9309a9383",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9f8e7748-9418-49d9-bf79-806df47323c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1305a3b9-eba8-4832-a2e4-0582bf96d0a3",
        "cursor": {
          "ref": "132d9271-739c-4d84-a992-29502b621329",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "373c50bb-d215-4030-b4e5-ced219c9e3e5"
        },
        "item": {
          "id": "1305a3b9-eba8-4832-a2e4-0582bf96d0a3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "81f122c5-b4e3-47ad-8dc6-9e8f5c8d039e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c47f4e5-957c-4230-8e5c-b3564b43b021",
        "cursor": {
          "ref": "ba8f907b-85e6-4ac0-9063-2745b0acd252",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "631d9cc5-2c82-415c-9f69-469fbaf2aabd"
        },
        "item": {
          "id": "0c47f4e5-957c-4230-8e5c-b3564b43b021",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "70e4ed5e-4d21-4232-bbf4-0fae82bb43eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bb61c1-b2ee-4dbc-b9f4-32cced74b932",
        "cursor": {
          "ref": "f27ebcbe-d9e3-4c0a-b316-fb22f652ef6f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "33a97707-d0b4-44ef-b51e-56ff878ed2bd"
        },
        "item": {
          "id": "25bb61c1-b2ee-4dbc-b9f4-32cced74b932",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "27c91f2f-280d-4a73-8ee0-97e8560f7cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a42031c-6b2b-4157-b50e-4770603a1bda",
        "cursor": {
          "ref": "481debce-e65b-43de-9567-5350595d0e07",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "eddb8a99-40df-45cb-9793-cc32ffffac8f"
        },
        "item": {
          "id": "7a42031c-6b2b-4157-b50e-4770603a1bda",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "672f7c2d-df8e-4b7a-9cff-91096ca978be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c44a9e-1e7e-4b77-84b7-fc97a2cc9fa0",
        "cursor": {
          "ref": "78cb7443-9451-4656-a31b-4728b9a9ac3d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fbbcd838-eec7-4b65-a409-4b0769c3ffb4"
        },
        "item": {
          "id": "18c44a9e-1e7e-4b77-84b7-fc97a2cc9fa0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "95cb233c-774b-4fb5-aa65-e74e52e03854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb3d331-3f88-432a-b50a-fcb6ff9aab27",
        "cursor": {
          "ref": "cb87d20a-7447-42d2-a1b2-b4d46e954cb0",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "93c8e7cd-8821-407a-a00b-148262067d61"
        },
        "item": {
          "id": "eeb3d331-3f88-432a-b50a-fcb6ff9aab27",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cc71f2d9-42ac-4581-9da4-2ea7ca20af83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f372603d-c3a3-40f8-9d60-6ca5e2393e5b",
        "cursor": {
          "ref": "717c0818-dd2e-4cce-be7b-f257105cf538",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "eecdbb54-ee96-45f7-8aa4-e74dc48f8d6a"
        },
        "item": {
          "id": "f372603d-c3a3-40f8-9d60-6ca5e2393e5b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "335a9194-f54e-46f3-b72f-836173d25bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bd248b-30fc-4955-a203-c77d574ec54d",
        "cursor": {
          "ref": "0913f13a-7eaf-4df7-ad3f-5c71eb37e838",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c7edd38a-68de-43f2-a99f-4cb5b55dfe6c"
        },
        "item": {
          "id": "65bd248b-30fc-4955-a203-c77d574ec54d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0415e54e-52a2-4da2-83a5-6210d9b1e7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273017f7-f960-4842-8e59-f500d437a617",
        "cursor": {
          "ref": "27a1ebc9-8345-4405-a75a-be0764164d23",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ab34dda2-769c-4888-b955-b2152d042097"
        },
        "item": {
          "id": "273017f7-f960-4842-8e59-f500d437a617",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "45ca0eb7-5ecb-4cdc-9a9e-8ace34ddd276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6feac4e3-cd7e-43e1-a5a0-66859dcf778e",
        "cursor": {
          "ref": "5496b44a-660b-4e86-a79d-b47bd3fd305b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f05b70df-6bd3-4836-a461-055830760117"
        },
        "item": {
          "id": "6feac4e3-cd7e-43e1-a5a0-66859dcf778e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "09b06409-7ee6-40db-a4d8-945e9441958f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f368cc61-922c-49c8-bac5-359a044175f9",
        "cursor": {
          "ref": "f79b8b71-7864-4ec7-ad62-1cc820d0702b",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b2796386-46f7-4d6b-9287-939d2a8049c7"
        },
        "item": {
          "id": "f368cc61-922c-49c8-bac5-359a044175f9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d5e2c74f-8d1a-4e21-8e85-2ff520920389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f45c9b-19f2-4ad5-886c-969a65cd39c7",
        "cursor": {
          "ref": "e0a13a76-5a31-4894-bf38-10bf4e8fb70a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ed74ba94-0b54-42fe-ba81-2cd03144cfb6"
        },
        "item": {
          "id": "39f45c9b-19f2-4ad5-886c-969a65cd39c7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b1dc86f8-c774-4805-80e5-98167128c7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd56d78-3ae8-4925-af53-a1d88e39e6df",
        "cursor": {
          "ref": "bfd689d7-4342-4829-8eac-dfb808e90118",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "48ca28f5-5d95-4450-ae6a-4831d7cd3a22"
        },
        "item": {
          "id": "2fd56d78-3ae8-4925-af53-a1d88e39e6df",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b4d20a24-9789-4e0a-8ab1-2bc4730d1bee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485ba4a3-ab58-42aa-8e57-46c0fae41f49",
        "cursor": {
          "ref": "0f8713e3-80a4-4bf1-b9c3-c91932aebed7",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d5167cac-6f22-4fa9-a05e-842598235e37"
        },
        "item": {
          "id": "485ba4a3-ab58-42aa-8e57-46c0fae41f49",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b1eab634-d462-4674-81c9-b87b218c9edc",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a247ed-8bf2-4ad4-9a49-76f4a3b6f726",
        "cursor": {
          "ref": "33cfa94b-7224-47dd-94e4-790f357405d2",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1981495c-9fe0-4fa7-b702-83bbfd57e9d2"
        },
        "item": {
          "id": "03a247ed-8bf2-4ad4-9a49-76f4a3b6f726",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ee60b985-1267-4297-a2b1-c294c367a8e4",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6db3cc-bb76-4fe7-bedc-f3ffb18ee6e0",
        "cursor": {
          "ref": "ae0e017e-dc6e-4889-9324-d1ebf74ef2af",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "fba37f90-4efb-47da-9424-7f9fb9bdc061"
        },
        "item": {
          "id": "8d6db3cc-bb76-4fe7-bedc-f3ffb18ee6e0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "34dcd2ab-a2ce-40bd-a71c-777846235890",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9302a2-739d-40be-9e2c-030ffeb05023",
        "cursor": {
          "ref": "957c9336-582f-48bd-8ade-d76575c40520",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e566f965-dedc-44b2-9c3c-ca7a832fb38d"
        },
        "item": {
          "id": "4c9302a2-739d-40be-9e2c-030ffeb05023",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7edf82c-b64b-4704-9031-642f5bed006b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9302a2-739d-40be-9e2c-030ffeb05023",
        "cursor": {
          "ref": "957c9336-582f-48bd-8ade-d76575c40520",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e566f965-dedc-44b2-9c3c-ca7a832fb38d"
        },
        "item": {
          "id": "4c9302a2-739d-40be-9e2c-030ffeb05023",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7edf82c-b64b-4704-9031-642f5bed006b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740c67ba-7027-4dd6-bbdd-5422c87c002b",
        "cursor": {
          "ref": "ab3a4d7c-e192-4982-b38a-c7a2a05738e6",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "92d6f3c0-43a4-4c49-a96a-ee3ccbfd1fde"
        },
        "item": {
          "id": "740c67ba-7027-4dd6-bbdd-5422c87c002b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ff35c5bb-9f91-4e28-9f0f-6b5d20995854",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a1f3db-51a6-490c-8154-d8fbcdc95e33",
        "cursor": {
          "ref": "0f87b071-088f-4e19-bb4a-b20024da30f2",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "66a735b7-c70a-4cc1-ac07-ca40118fc9fb"
        },
        "item": {
          "id": "92a1f3db-51a6-490c-8154-d8fbcdc95e33",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d4022b47-bfec-4195-97da-3b2159ec4398",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}