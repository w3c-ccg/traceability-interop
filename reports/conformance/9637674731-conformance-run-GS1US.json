{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0c0f4852-f78e-4174-9b43-52e6bbcb1433",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3f50e7db-a266-4341-a0b5-8a27667a39e2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "733a382b-4d82-4a84-8977-ca98af12f4f9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "994e2bbf-a7eb-42f6-acf5-046280698300"
                }
              }
            ]
          },
          {
            "id": "aa28bd74-04b1-4a79-892c-f57dcafbc7dc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e2319c8-cbc5-40c3-b47d-5ab8b9674a6f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8cc4ed59-aa11-4058-81f8-672b218560a3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c13b07d0-e114-43a1-89f9-2f95740c8dc2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d00f059b-c7f7-442a-8311-5502981eb376",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb03152a-77dc-47b9-9587-87a311ccbc35",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b8c25f1-4a2c-45da-8f06-738d837239dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a155ea87-2ed0-404f-afc6-84f9b9bda97b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4450ecbc-3280-4472-9e1f-07f56b084d1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "575f0a5d-6bca-4cb3-8b99-458c292ac911"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "34cd91dc-ae52-4e69-9a86-213c0943af2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "024d1d72-289c-431e-ad73-1bd2c9d4eb7e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90a15c6e-321e-4b88-919c-ddbfa2f1700a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3d7b8c2f-9939-49fa-916b-9fb97195e454"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52441f27-02cf-4641-9c60-ee2cc00e82db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b616baa9-8628-4f88-94d9-800082b74278"
            }
          }
        ]
      },
      {
        "id": "37228057-1283-40e0-91a6-d8d51e945b0c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "17b4e493-3549-4071-ac04-fa90f9db739a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abbae6ae-5f5c-453a-9821-7d2b54779973",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "12f47438-0896-483f-9d52-4bb2822110a1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06a0c6b-4ed6-49c2-8f8c-164e93dba82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f882c4d-e9d7-45e4-8b46-ccfac83a8f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f49f98-9f4e-46ab-98eb-6c6f4a3f8a7d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84128bb-3fac-42b0-872d-e497e1ff098e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb681f09-edc2-45b0-9785-13ce11e48caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7572b7c7-9602-4e5c-947e-523f9a435c3b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984fc248-2e5e-4452-b7a3-1818c14973cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abf73a95-2036-4940-8cb8-fc93aea67546"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fcf2100b-eb4e-4a9f-ac74-cb594283c4b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30d31b15-ce0c-4c14-b5f3-1e1b7ef38ea6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dadd247-37c5-472e-835f-0c13f529594f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c24e2711-0aab-473b-9fbb-b3188182a8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b5520d-a30a-41c6-8aeb-2dd2dcfa6202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e7f35c-d4e1-4e53-b04e-109881a2ad5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "60f20661-714e-4be8-8527-55e1b5d18031",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b83bd11-6438-4fbb-b934-fcdf411d8e14",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce569075-ac22-4402-82ee-8d189d486ff3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fcfc0f83-3bc2-4e54-aa92-c0f96ecb79cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e35cf95e-4431-44ae-ac1a-0e2aeed89892",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a9d695d5-fafc-449a-8868-80c06c41e71f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b96c4d8b-290d-45e8-9edf-baad842e2666",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05ba79a3-9749-45da-891f-f73b490734a7"
            }
          }
        ]
      },
      {
        "id": "a350dec2-b205-4b3a-a38d-8c53142dc5e1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d803dde3-fbdc-42bf-a1c6-2166c20e8a58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6ae1f71-2f66-4b29-8f44-3f31fff40b1e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3c229c59-d097-44f9-b732-065fef66a348",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eba31b4-68c6-4444-8e86-48402734c829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b605d61-42e4-466c-b71b-987b713299f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dce8565-9a1a-434d-8958-57e3dfaf8256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8b5e802-be9e-476f-bc7a-625724331383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f2dc95-2145-4bce-a093-8744cef31116",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f081ec79-46d2-4dda-b62b-7afb1ab5d76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6b081f-63ee-4d16-8ab5-029f0c67dc6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47694582-a726-436e-99b8-301bdefc59f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97520143-1e30-4b78-a515-1822af963a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22504de1-2dbf-4974-b525-c80f1953c916",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07488bc9-6640-4438-beb8-8d8e7c76526e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d937837e-eea5-44c3-b082-5ab2b5ac1808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3ce723-9e31-459d-bf79-03dac1ce98f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e2ce2a9-da36-470f-80bc-a2347724a4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bc235a-6173-445e-b863-82e21c31c536",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15b194c-418a-4dfc-a139-c4edc0fdf695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ac2cc4-ecb1-4482-9c16-1f84b2dbb9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c182b3e-5bdf-4ab3-9c27-4a85d771d437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d8a4f03-88f7-463c-8010-d5e1652bc758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66bb070-ef36-41d2-a551-f30d17ae40a1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca11252-4c51-4b52-8f59-17bccb3a44a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551f9781-0e06-4b51-8749-9595509b7560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd11f28-5ce4-4621-800a-f01e5ebed3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f602037e-22c2-4ed8-8c5d-09a33c731436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28788c9-bca7-412b-b08a-8f26a1d08b21",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138441fd-7776-4694-877f-4320542f2881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6f0337-6d0c-46d6-839e-99634b231ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739fb59d-244c-497c-9607-fe64239bfcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac350a94-f29d-4fe5-87f5-332905db5c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c39c15-69ff-41e2-93ad-067d312dbf78",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78a1ffa-4cc6-4139-b180-3f802777842c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0537163d-00ec-4bef-9f87-0f744f1bd8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2051108-d3d9-4de7-b5a7-b9acdda17448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c4712bb-c977-4b67-80f3-0df16619245b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e07a1fa-247d-48b8-a914-64706ce0bbe8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc317516-5723-4f2c-a596-e3210337fbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4949c2d4-91b3-491d-b6c3-71364ad7e182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5602b7-cf21-4536-aac1-51fc048d463f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ed3572c-0fe9-4ffa-93f3-590a513b8c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7c7199-d361-492f-9217-d456394a2e06",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87271559-990b-4f8e-9f80-ed395da4b381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032db6b5-abf7-494f-a350-632de9ea4888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53926332-7d0b-4a41-9fd6-73af2470d299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a30768b8-ea6b-4412-bf5a-2a7c99594a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913f5e8b-32b1-4b4b-8bc0-31b18e8bcdcc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fc0f40-3699-48bd-aced-610b35c8a045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7155bb18-3e9a-4e83-97a9-56365c7c180c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee1f6d3-66ed-4142-bf10-593013a52841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fc26806-1056-4454-979a-6e907d249a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fa5848-3098-4467-a5c8-d8c773d635d0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb6ecc2-2386-464d-9e97-a162b503778a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1986d806-dd03-41c2-a3e6-f8a8ab97ebe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528436f3-8ed4-46ee-a74d-c618830e31a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "708d6532-2d46-40f4-8390-b15f0b9e87b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ca862d-04a6-4aeb-bc31-fe0393f05f3a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569e4820-ffdc-4c86-a65b-3307cc946be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce07e396-1a03-45f3-96f0-4f7e81401c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af12ef81-efc0-4c60-8a9f-161ebe619cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a4b523d-b285-48bd-a3cf-772864d4e9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b73491-f1e6-403d-a264-a0a7e7f2f439",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545e4da5-8adc-479f-bdc1-eaf06938a63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ab8de6-bba1-4ef7-a2ce-b9c884f646bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc868eb-daca-4fc8-b6a6-fc436c7630b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62e8224a-9e36-453f-ae5a-81aef4c5d49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1349b9-81ef-4ce0-af70-61fc99e13dcb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1564e5c-57b5-4c69-ac1e-3659373de612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9844fe7d-b2d0-4321-92a7-83d547f0fe9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63454347-497b-4040-8a2e-bba18babaa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e255d69f-2cc8-462b-9685-bd2e34717ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91936c5-4556-4c74-9de9-f7f38a5418fc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e824f12e-82b1-4131-b3c2-88f773fcd8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6f2a83-6252-4934-8a2c-ba4e6dab9362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c8d0cd-7d1f-48c4-9992-0022d4f3e67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d9a48dd-a5fc-4327-8a79-b8574aa0c234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8b5e28-d7aa-41c6-8afc-90435312c852",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fefa86-7c30-4ab8-822b-760693cfd688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fd7c6e-01ec-482e-b36f-0e6585df3d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b67078b-bea2-4749-a5aa-030b628ba479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b8ea935-fdf8-411e-8fd5-cfcd6ae5c84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a4bee8-7404-42fe-892b-6621bad70f10",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a5b50b-ebd4-483f-ba21-025bfd7507b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2704491f-ce9b-45c2-8a0d-259f9b1f62e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437d0956-2c40-4d91-b0ae-0fd3961b5f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3164a701-364a-4e20-8daf-8210425e0547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3956eb-eee2-4963-87e0-72b7675fb78f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc1412b-de61-4317-b30f-fee9e6876ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26ffcc8-653c-4f77-a1ae-e35f7421a240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717117fa-33cb-4bad-a259-62a6bbdf32d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b33cef2-acdb-437a-8be8-ede27b430de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ee40a4-6882-4980-bb34-bf9d965272f7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80805f09-9bd6-4cf5-9d69-337beeb17b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb90404-1071-43b3-bd2f-0d8004218a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8cacc3-516e-4f69-85a0-31379b357d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6293e82b-33bf-405d-b6bc-49979d9b1efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36a5ddb-bb88-439f-b938-b9130fea3a02",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282f57e1-4476-49cd-b1b8-da581f5f83a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431671b6-f0d4-43c3-9c95-551b8813d224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760be7fb-2b28-495c-bd80-aa6ac6e6209b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6eb2e9-3657-4f41-bf46-1d5de93c09c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16acf631-2540-4b75-955c-288ced6723da",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc49ed5-367a-48a8-b3d7-deb86b39aeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfd7fa7-af5b-4968-9db2-856430089705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ff7871-8745-459e-80c7-ad3a0f96f0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "048a7529-734f-4b21-8eba-7eb1fb1f576f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c2821f-bf50-400d-873c-a08af5166e5c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adaa11c-7f1b-4816-b2e4-dbf0e46b7859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558d5b2f-b364-48a5-9a3a-5cb976e6628b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbe7e09-9fb0-45c6-a36b-2c8dd48b81a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7a8fc7-8890-49a0-80e5-499cdc7db366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc67c6e2-f0ed-40bd-9242-f8d1d80545bd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ff1d56-f116-4377-a15c-bedafe268908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4761ce2-8f97-4617-a82c-a6520e56d805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a06100-9581-4785-90ed-23cbe0774b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc7806f-c56a-4ff8-be8b-830a2fb7e593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4b8ae4-fcac-4957-bcf4-8a48c0f56e64",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0f3c11-8ba8-438c-87ec-ac6338fc0b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7bccb5-5c54-4fc1-8e71-0b112c3c52d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0971913-3223-4d2a-8e69-68f56b829f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa54628f-14d7-42ad-b6c3-1e6ddfef4963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593535d0-242f-4630-91e3-f5893e6b24a0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cbf41f-70d6-458e-8574-5b8befcc6b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cae6d7-a262-4c1b-a01f-d5b338c5ba72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8a1f36-15b9-4a5e-ab0f-288d001ad5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30bdcfac-f49f-40fe-a3c8-895a7c949e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f819dba-d443-40d8-b65a-72a1d9d57098",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d94b4ea-1d99-43a5-ac16-35636c94065e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678726c3-976f-4f04-b389-7dbadf722b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec751e2b-78d9-4b25-872a-a718d550f5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d9ac3a-2e43-48b4-a8cf-5d76065aa7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a77ca57-2e49-4506-9290-1cfad6d4daa3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a1a240-ef76-45cf-8eeb-7910d320ddd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325b925c-7a18-42e2-9eb8-e4cc8d325182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dc15fc-9f11-4783-9a9f-d894fa759720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c79fa0-4cbc-4016-a64a-7917f7006f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70c665e-f966-482d-a509-373151e5cacf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7c1c81-3e42-4e97-9528-e3d423992723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6251749-618b-4234-9e73-c0eb04957a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58190dad-3bf2-4fc3-b598-bcd269ee9f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91975396-a0c2-4470-bdf9-ea9fd6248a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac8845e-27b1-488b-a919-65290bf28388",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf638f05-ec77-41f6-8845-d85b5821541d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963dda92-a9fc-4344-8a59-78d2aad8e56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06100ed1-8c51-4cc2-9439-e8ca294b81a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa30f8af-7a53-4493-98c8-f220b642fbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e447d0d-3d01-4ae9-baf0-88a4ae7bca0b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea50fa9-4e8f-4623-9859-7a419087eece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b8317d-3ec4-4f3e-914a-0d950fa62152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8392960-f1fc-4201-992c-0a5b4681e712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4ec977-2e94-47d4-9e13-4454471445c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266ae163-8a6e-495d-8f8f-dd6aadb92ff4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7458da2-8327-4646-b705-2429006400de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5310d883-1512-4b29-80f5-7fb372bda063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b993289a-51f5-48b1-a3fa-f0d58b0ceac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf11a19-6d71-4b1c-bed3-76a2f298f133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13660bca-929f-4915-b9ad-59c719cb3609",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98caf28-f432-4dd0-90d8-73f5cf3cdc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d360e19-85f7-4332-b910-549afe692af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f0e32f-28ec-41d2-86b4-b123b894998d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce400517-37b3-4323-a3b5-2a5ac673ec77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283833b9-bf5f-4618-8ce0-f6750b004769",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d4ed9d-7821-4ae0-97fb-eac8a2828e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ebdff2-4ca4-43b0-8bba-e15ef5df3a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90b77c8-1ea0-4704-9417-f95a8053f1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7d86e6-02db-4083-a3ec-ba3428a7639d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b53f69-8286-4710-8f87-5f40f673bb5e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a269b0-dc0f-4592-b147-af407229f8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8680d956-5301-49a4-9f63-b518c3fa6660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b9f285-8cc7-4403-b117-5ce17609e76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f498040-8d8b-4b51-bfb9-849149f77552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1ba414-19fb-4a6f-8b21-b75c8740d0d0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f58435-a1e1-4f31-86c9-64f2bb6f168a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3f9b38-1dcd-481a-b2a6-460d04e60f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e501ed7-81f4-4568-be26-43a09ccffe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "38d3b469-e4fc-499c-8858-7af314cbb574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27a6412-7cf6-44be-a430-e5d9e48a659f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996d572d-8c47-4a53-8cf5-f50a8201450f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f07e96bd-37cd-493d-88e7-68f120895ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c875563-80b6-4b7a-a8e6-64e3aec616a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0d7711-0eff-491b-9091-5bcce003b9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ab8633-3647-4bf5-bd59-9423f63394f5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a15046b-2785-400c-b0eb-3bafe8375f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2738797-5580-44b4-a960-42dc37a17010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ba1779-b3fe-4e4d-bf88-86db43946a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4929facd-96ab-4d71-b8bd-2271214c6add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c94a10c-a72d-4fea-b8ba-2cfa96407e4c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1426636-48e2-462f-85b3-5dc7611ced8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40ffe01-5b2a-4c0a-bfbe-a7b7532afda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bd989a-9d15-4b2c-a57a-983a0fadd369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c04c2f-3d95-40ff-82ab-e33479e3fc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b11033-0c49-4272-94e9-ba3b98fb0294",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5a925b-6baa-4c3a-9107-c8aac4c5176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c3d1a3-d113-4b89-b291-b42a4717f227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca40c50b-a7d2-4557-b85e-32a186c4103b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "77cf4cc8-eb91-425e-80b2-9a73f2f10cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4f156f-466a-4f7b-b5fa-7b16e6870113",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40b4132-60ea-4858-98e6-ca0f7b2e1bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bc039f-744d-4a66-8726-3e2634bdca9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b6094d-d448-4239-a26a-243decd989a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ba734f-91a1-42fa-960e-3a9e2df522c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae423531-6cc6-4d0a-a81f-e8050b65be24",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8991a6b5-4250-4f75-875a-31d40d39b957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d057bf-f2ef-4585-be36-a2244fe2c031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fcb656-2a2e-4e65-9421-7f6ec4306ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3141e6-f61e-45a7-a476-c278ce4b01a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96e3542-5753-4122-abc9-a37debd4c866",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5388458d-b1d8-40cf-9216-ec88e94f54c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97988ba5-41c0-4183-8a65-d57203c09fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92db1971-7a24-41e0-b766-381d047d6649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae0a2ad-3a0b-4e5c-9755-63b1968d6a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f766d75-b02c-416a-b30f-e3403a19c6c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fd9009-c1f9-4fd8-b1d3-cc0b6b21d60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9c8ea6-f845-4720-bc89-96709e0483d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c8e04d-8c6d-48be-bd73-4cf4874d60f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a8f9ba-ee25-4564-a092-05f43e6b18af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ffe74a-c2cc-4384-bbec-ea4756693fcd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1641611-c86c-453b-b8cd-31ce0854da39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9940923-e779-41c9-af25-3856760d8729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b81b9db-eab6-45cf-9e97-e898e0942020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c39efa5-3514-4805-bf9c-b7d4452c1842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bf31c1-dd71-401a-a471-5d2bd65e3b55",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9698e2-5d19-4b8a-bd36-dd97d8d33b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44819895-c786-4be8-9736-c63e0966866c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef774a8a-daef-43a2-83b5-9b91bacc098b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "454af3f9-63bf-4dee-b8cc-cd2c8be03275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d471febe-2fc8-4294-83f5-b0514d2c55ad",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30bbfc0-8eb3-431d-a12d-ecb881096dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8548cf5-dbf4-44ea-8e18-6b4528f44a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c48b9c-0539-4ff7-9ec1-8c0527a1bdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6acad4cc-2f4a-498f-b5d8-457778681c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fbb841-0b09-4efc-b4b4-191e023cf5b4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44915bcf-f1b0-4fd6-b1c0-314b109ba9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768ab4c9-d09d-47f4-9eec-39e583572cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6683c777-1d9c-42b9-9964-c2abb2a0b5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2840d5-4f1b-4999-be28-8e9a78159736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d64b73-5cb5-4ca1-bba8-93bd14b06009",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5b0fcd-93ff-42b2-b1f4-1fa193d6ab6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7772fd7b-b3b8-439c-bf9e-cb67d3b3ac03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf4c081-350e-4d9d-b4ea-2d5aadfbce54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b11ab7-bb49-4b2e-9bf0-9e3090f0ad74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bd49f3-e849-40c9-96fd-89bcfb40a45d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f114089b-1df0-41c2-81f5-9649abd257d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a334b2-cbc6-49d2-8e89-928fed06b821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c28210d-f29b-458d-acc5-495b3f222213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f91d594-072a-4b8d-adfe-0856f7537514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28dfa05-94b6-40b3-9f40-6eaa943022a7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a9058e-f29d-4635-91a1-0a34f0931b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa1f643-ac87-4280-913d-fa1229a86656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f8a8c6-fdd1-4808-8ebe-6d732c5f8717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4983c798-c42f-4e7b-b427-b3a1706700f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc1e277-85dd-429c-b40c-551b021fe1cf",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffaaca2-08e1-4581-853d-3c1bd96e3a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658d7ba2-ca15-4d73-be86-2c9f78b1173a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81c5132-0498-4255-a248-aadf6cf5a30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d076af52-f755-49da-ab34-ccdf241dbf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a072a55d-8d91-4d31-afe4-83ba74ef63db",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6742edff-8369-4a00-b4f5-8778c9d9913f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5431c8d5-ee07-4dcc-892f-8d05246fcb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf7a8fb-b880-4d2d-affd-4b26ec230e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "873dba8c-cc61-44eb-8243-1fb14b88d1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0979bd5f-0c34-46e0-9606-3bbc684674e3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8193e2e-b4af-46ef-b4a7-896d07196d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041a73d3-1c8c-40c5-bbe2-29ab146f3c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c6af46-ac3f-4cea-bd46-dcf71163eff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9768db4-d466-4999-b347-62f0c307b300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0203b7eb-a0ed-462a-bfbf-13809289f5a1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df942787-9190-49b0-abe6-cb11432737d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2efc6b-7844-4be0-9353-bbd825feec37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e947bf-052a-4ffa-aed5-71dbaa7651cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d22e83-bf3c-4249-b1eb-027c09ca6d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e8e991-9edf-45fe-94d2-a53a1d59b933",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5823d8e0-bb6d-4ef2-9e23-a1f214458db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bac2fe3-d8be-4f7e-a55d-7b2318497def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd13c4a0-00af-4ce5-95cb-d647ce70088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5be08306-7cbf-4700-b3c4-cb46d5ee3df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f636475-e6f7-4a51-b685-2ce6360f9dc7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc9ab8f-82fa-4126-b516-5920122148ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669d30e1-3ad0-4442-887d-262b8bc10254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23814f76-5a95-481c-b6d7-072c8d2ab50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a8536afc-f471-4755-b1dc-8a7cd90198ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadd23d9-d44a-4c01-83e8-b338183eba61",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1791c94-7eed-4688-a5ba-7545e1d7b3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537e8a84-1dda-4afa-ab32-a15909453024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc372727-e2ab-444d-aa08-52dcaa3ae37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2edc8b3b-d411-42f4-bd22-368c525530b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe76ab5-1e7b-4deb-9c55-4c98c5c5166a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83fd13f-a241-41b3-9f88-8425936fec6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0676b698-1206-4611-8f63-3de877f7c84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bce675-8b82-4f08-8383-b2729a80f99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5766127-8cae-4145-8473-f5b75b58f962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e0f39f-ad39-4a46-a147-3284cf832d66",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c803ab-21e7-4865-8665-9ccc75efc363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce508857-d6b0-4e3c-b906-ce3f3c2a5195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958f1062-99ec-4fea-a1d0-b5d201cc1317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "798b5937-c54c-44b1-8ba0-05e438552e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c7add3-9239-4abe-b4c5-d73f6c40b6a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e745a9-ecc0-4de2-8973-49349050367d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d58390c-ca3f-416b-9fc1-d40ba2624a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60071afb-773d-48bd-ba19-2bfbcbafd785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76158534-f225-459d-943b-f5e72307ab07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4bb4d8-4662-49c6-8488-0fdae16c58ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f3cddd-9483-47ea-9a4e-1fcb84dbbc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ac8dcb-f0f8-432c-9a2f-42b889bfa1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ca3502-5ad3-4126-b917-8fa9d2c4c9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "537a4418-8bbd-40a1-a597-6c75019ca93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e632de2-174f-421b-83b7-066a466b8b45",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec49f68-fdba-4917-a780-5a8106c78f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc4f9f1-0729-4a37-bdbe-5fce7eea0208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d166f2-b265-4991-b14d-b621107cbb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6b05b7-ccd9-4791-b339-4e28d32ecae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79309a02-d04f-4b3d-ab93-4ad7fac0b5c6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2664de-2da1-4884-ac6a-4322bb8f7ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0670ceb-db56-4973-ab7a-7b5cbbff9ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8313554-5c71-4a3b-b9a1-9ba6b13675a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6ddf6d-085e-43af-b368-fe68c54407d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b313ff-f5ba-4d95-8f04-1c72e1bef3e7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a8682b-7a3a-497f-b594-cf53c619a8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3703e3-2091-44f8-8da3-5437ca379f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48928f9f-3233-48d9-bd96-5a38df411cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3eb6a4-aa2e-4303-a3c8-91cd6bfc3df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6131beb0-458e-4da3-a82c-6d65d4eca166",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7231ee5a-8dc2-4c88-b663-2f8050f92391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab6c24c-8886-4f9e-b12f-4267c83b4c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef424013-6a9a-4285-b841-848f8633f295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b466e2-5387-4b69-8621-c9fdf7ea5c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad3d0f1-a23d-480d-98d3-434e3aedfe72",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3be931-d3bf-4609-aa92-aeee76f7bf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c00719-31b7-4e35-987e-9ffc7d973979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33165b83-5be8-4ca9-a418-c95b18c0db4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c73a2e6-5369-41bf-915f-fa2ae3c6cf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080fe833-fafb-4ecd-a0c8-031db9418f2a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718b2ef1-a0ab-4484-8935-7fc5bb2d488a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107eb27f-4906-4ec5-9046-f823eb6ddb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2279409c-633e-4a98-be3a-4b9c0dee59bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af4637dd-c5a0-4d14-8a32-7a272676415e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa099f5-86ef-4a75-a751-f7c890ba4651",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e35ce3-a62a-41fc-bb05-77c916f01994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e348019-2cb4-4b05-a206-112430e64ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b43e6b-d73b-4168-af72-a24eba611775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6415c0-21f5-4fde-aee4-ac367fbde45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8b60cf-493a-4b58-a76e-39a19d3351ec",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c784a785-421b-4c55-80e6-9bd1582e0514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c402cbdc-9c04-4226-97c6-617daac8131e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47be128b-0b8e-4850-a57b-9f53d6ce95c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "41182fbf-9993-48ba-9709-728fdf2cd592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795f94bd-7426-42c0-a70b-b2914d2262dd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587b3de8-5089-4799-a0f3-3777530ca25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5472e082-1422-4175-b1ee-e20a84bab577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f48ea3-e7a9-4243-89ee-f4308bdb101d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3866b5-4478-4bd1-8e44-b66fdfeae150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f995f67-1d58-4247-a58d-605dab1ffcb4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193e9988-22ac-4a5d-97e0-9f97edb55c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d1b8d3-2c57-4593-902c-5cbf2d194d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a425b1ff-3062-453a-803e-193d9b1ae389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b570c6c0-1ee5-4a7d-a0f4-24b84e1edecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4704e7-1b75-419f-ba43-45db51579dbd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a042ab7-c397-4c71-9dfb-b5763048a4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ed83e2-8b05-48c5-9979-73cc6251477d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe90e91-7098-42d7-a962-cb8d70306a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1eb1e7-af31-4104-904b-9f54b3f8440f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b9de56-25e1-4f42-9c7c-a783842567c2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961cdc72-a083-4c8b-9d78-65fd79f84856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee2829d-d3e2-4e3d-b727-1c579adfa5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cc13c6-c3de-45a3-b061-c9ad3efd3e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7327fa12-6bbd-45fc-bd91-3944e3b18f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dee02f8-7b85-40b9-b7fd-5ba28a163e79",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f427119-8eee-48cf-8d3e-2cc585add8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699d7a45-ea2b-48d8-8028-e4a8ace80cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9aa8a4-e357-4f5b-9f9d-5c351c3500b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8d5e9a-479e-411c-a4a0-e22bc652633f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffa5d1c-97c0-44c3-b166-83bf8affd0d9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ff1146-b991-4dff-9d48-34812ddfe4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238e47a0-5b66-4dc7-bba0-17f9d5b83541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f5db54-fac3-4e0f-93be-6ca1f74a30cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e2cd7d-bd81-4f5b-992c-92c8627eee7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0832aaf-28e6-417c-8a4a-b7b537e87ffe",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52a6808-7b98-4994-87ac-0aad5c165956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e60421-590b-4de1-a131-73af15926572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391c6af6-0f42-4f8f-b7bf-ea5a615e1edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f30b44c-192b-48df-8405-32dace1fee99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59739cc-838c-4ddc-b59b-aa17a803a754",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355e3f27-3e40-45f7-a9ec-276f05822ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0824c80a-a98b-48a3-a9dd-90b99b32ef5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afd54d3-2cdd-47d6-83a9-8c0443c5c880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5095c3-a8da-47f5-b2b5-03589bc40ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f369e63-7c5d-482b-8ca1-417a88cdf365",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e20241b-5f22-45ef-b496-07c6b9f81f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fbafbb-7d43-4bf3-a500-de008f9b063d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04815127-ffed-420b-a52e-ba3b1d81de11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46355efe-3db5-4c3f-867d-5dbcd0605202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b58877-6e3b-4f24-8187-7f6524555a3d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe14345f-581d-4f96-b914-fcd355aacc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33877e5b-3e4c-4309-afd5-a2d788e1e460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4b558a-d966-4e74-9673-452f523f97d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa101a1-5cfa-47bb-9794-bfda9b8ad135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cfe837-df3e-4c37-abe4-557f32f39717",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1e8e05-e0a2-48a3-9cb3-7d3c6b1c9674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b28097f-76a6-4f7c-b05d-a3bb658c2348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbe234b-0c17-4e11-ad88-18abd37a8c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66ba97cd-8975-4177-ba55-1799bbc120c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff105e1-a0e5-4a67-b498-7a0e5921fa83",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed33dd30-7301-44fb-961b-9a830a51d09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97b8ebb-e4a3-4482-8322-132c72e2284f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043c46d1-d9e5-4a42-9411-0c0987790506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d1d148-7ef3-4e8f-b876-4fe8a80d44f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a1a9bb-9000-4268-9315-ee487647fdb0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3c876c-e57f-4b5e-8916-92ed332f924e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70f9bae-3736-4c4b-928f-978e02980a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c2f166-6535-45bc-8690-08befcec8c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e6e2d8-5ef4-4ccf-9ffe-879863abdf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebf567d-cd40-4537-85d7-1aa4bfdbf6d6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057ed6f9-7801-4c12-9c03-a1afff24dc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1878f8e2-2a71-4c49-ab96-38e8c75be32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2327aa-edcf-4f8d-9215-7b2874cb94aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c7230b-181f-4be8-8a8c-23a29b209ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b084d93c-a999-4281-93da-7cdb3051c355",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa48b9b3-04e3-44c2-b2ef-c75e8036b451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d629d754-08ad-4eec-914d-5fcb93bfc466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ac9390-d168-4200-b67c-c990df5f3c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b108045f-9851-4646-9783-5fe37e82f8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d60344-d47d-41b9-a466-9f21709be9d8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93148e8-58d3-4971-87b5-b61b97b0f8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd70fa25-9cd0-4e3c-9001-454f750a9dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05da579b-c7c4-4e75-a7dc-02cf80e12a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce75eb5-b868-40ac-b1f6-f324b9b1949e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06603ba1-f2e2-4cff-b675-af2a93676638",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6424e4a-4033-434e-9292-5914140d9d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f23639-676e-4a6b-9ee3-ac8be159ded6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ddfdf3-4e4e-47d5-9b6a-96983460f9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52fa30c9-1ece-4c58-828b-bf0d9e0473be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4b2389-9396-4f12-80ec-03cd80141558",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cfbf98-a4d0-4f6d-8a7b-f55a46397291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb28e445-15f3-4f5f-a658-5638a31c00b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26381122-cbdc-486e-bd97-8a129ca3e4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "18e63885-22cf-4da7-aeab-dec2a1ddbb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122256f8-d1b6-446d-a81d-0c247fbec0e2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c90569e-da5c-49cb-b4e2-e2ee3dd06951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f5cdb6-2bb4-451d-8042-634e99c72b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211cebe1-f29d-4245-958e-3dbccd2ac5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99bbad41-a4c2-436f-96e5-7d2cf153fe68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ee4d97-27bf-413e-a46f-039d07e346b1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b367398-c6bb-4a5f-9cfd-cf5ff86c2404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bfa7fd-be58-4b9c-ba8c-7db470645c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3167e79-9a07-403d-8d33-bb89e9189713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4729ee5-ec80-4257-af81-caba1b39a0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ac4431-616a-4d93-8722-9d85b0193e21",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93f4193-0dea-4309-b4e6-ae697096eefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1b0343-7415-45c1-8e78-da42e9f8117d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d6be75-e2b8-4462-b15d-baced546a2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2af22c30-b12b-46d8-9e84-9763f1a3a284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a6b248-e7cb-46e9-a6a4-26ddf5aee4a7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471a5048-83cc-42d4-be87-dc139c946203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd214bc3-646b-426d-8c92-ef97e7f966af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f4695c-9318-4e3c-b4b0-112a71398a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a173cd1-ca13-4cc7-9574-2a51dc575bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa2c3a5-be09-4d45-b91f-07435f19fa49",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc06d41-e555-4092-b672-5bfd2b8c454c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e0cba09a-8bb6-4d47-9b60-ca798ac9464a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dd74b3-78e6-476f-be6d-0864a5e64682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c64baef-0e48-4b37-97c8-2cfeb85704d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5db58835-c6ac-4b77-b764-cf3cb4eaf937",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2f0c88d-ce3e-4e6a-aa7c-8646115de20c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c7dbac-1c41-4bce-852d-45d6e68b137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb125cca-d91f-465a-84e3-e9e602f62196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8820c950-9fb8-4633-88f4-f35df46f5926",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b72992e-af64-4286-9bab-6f9cd04d9324"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf3119e0-6446-45cf-8fce-47fe463c3df2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c816c80-affb-4fff-b69b-2cda5e463c2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b63a16e-fb4e-42ed-87c5-4249ec9d24d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ec69b63-9b8a-41eb-8a96-9130aa2d61b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a25d921-a29c-4d18-859e-9ee61cfc05a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3843a985-8090-495c-b91e-098e8ea9a9bb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5548ae5c-573c-43c1-9bf0-7c5932ab7104",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0100b8a1-6a64-46ef-b40b-c3bcb1d63d10"
                }
              }
            ]
          },
          {
            "id": "bab43ea1-5ec2-456e-a577-79598a098a78",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32920061-b4ee-42bc-8e30-49bc22662070",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dbd6471a-5e2e-4a0d-b711-b7ecd2eefdef",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5051310d-0807-4d9e-a0b0-6b8632d3b393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "12032270-a685-4717-b4a6-7128b76af79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1345bac0-9f5e-45e0-bd70-c009c2eed2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0342ca06-241c-46db-9baf-6ebd4914a49e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41b490e3-f5ad-43b3-bd7f-a5592e07e8f5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "557128fe-5ab6-46c1-88fd-a403bca92d17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07226e7d-8e30-46fb-93ff-cc7a7829153c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d7e9add-c5bb-4a23-8d37-67e612968b41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c9e9aa0-8996-4f37-88c6-d3f3d4f2fd38"
                    }
                  }
                ]
              },
              {
                "id": "eb72eca7-607e-4a66-b6c6-495ed2a9a5e5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c1c463c-b21a-45b8-a0f7-ce95dd8a3710",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf8630ef-54d1-4690-9726-9bd3642cbe1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bd769c9-288a-4c83-928f-8dd72a76e085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03e8d2ef-060f-4691-8122-a6c9f27406ee"
                    }
                  }
                ]
              },
              {
                "id": "c2cf4b9a-3b0e-42ba-841e-67fb775354dc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28a138b4-cdcb-4de9-8107-dfcbfa87bffe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3307351c-2e30-4072-8aa7-db54cea99096"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bae3a852-7e60-413b-831b-86356dfef346",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc61b303-b202-49f0-8850-483b014d98c8"
                    }
                  }
                ]
              },
              {
                "id": "18951d85-0473-4269-a940-880544b68ff9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6bef96a-29ec-40a5-84bd-560bc40a1c89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "789a6adb-eec5-4e89-8684-05eec70d2b74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d659b058-2e74-4f09-9b2a-8ccc3af6318d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4b278e62-ced7-4821-b942-9fe305ad9399"
                    }
                  }
                ]
              },
              {
                "id": "6f2b7446-43f0-4265-88b6-cb2bec88c7bb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92a7c66f-be50-4cd8-83d8-d4b16a7be859",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b5a061c-c51d-4cbf-b8e8-0fd35f1c2ff8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77b95623-aa6d-4a73-97e5-11b104c71019",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "204e8b3b-007e-4b4c-be8f-d2351dfb7e21"
                    }
                  }
                ]
              },
              {
                "id": "f69636b6-043e-488c-bdd2-ceb00c8111a2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49c2b214-2aa2-4aa8-a743-de0f6da1896a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7342705a-7dd9-458d-a700-24a173224004"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dd78d8a-3692-461d-ae2e-6fd2a62992c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ac735c8-5204-47a3-b549-24a02db9052a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85bf7550-d65a-428a-bdd0-32a34b2d86b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dccd620b-bd82-4a29-a1de-42553ed2bbb8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1de1ee26-bb5d-47a4-8262-1e239519b3bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17ef5777-c25b-4d4d-b409-bd1a56d03010"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d44aa82d-722e-4a97-ae2a-7369aeb06307",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8b3736a9-15d5-48f8-bdfb-9c10aaa88d60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ed3d745-161f-4f8d-a031-9217462f537b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "689fea41-5dc5-4586-92eb-77952f0695c5"
            }
          }
        ]
      },
      {
        "id": "94a352d2-a2ab-4897-b131-8439f7f1b0c0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ec18c7a2-2ef7-4453-9694-87de12cfe84e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2405d9f4-cdb7-42a5-ad1f-53e6c0f2ea0d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5bc035a3-294d-4c56-b985-dd3a747491e1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b6855b-e655-4689-9e20-87c5bdd1a7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f40e20f-d36f-4eef-9282-8cb11e186988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519199c3-5d3f-442b-a76c-6c7263b6aaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ec1261-8113-4c40-9510-6b01ddfcbf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c266e9-2a30-4bc4-8210-668fd2fede1f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61336abb-2220-4127-aba8-69abe1396307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccd771b-dcf3-4548-a48f-128aa050a821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934368af-a630-4dd2-9ff2-0edb89613d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eca252d-079d-43c1-a825-3c24ad448d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48780f9-43c8-4425-b240-53b0b97712ce",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6b1b76-ec83-48a3-a089-65e155288cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffc6331-0446-403f-ae1b-aa5052782922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7af8c3-7790-4088-a0f1-6ee0335bd257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baada0fb-ed7a-4261-a8a4-3e3e54febc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6a253e-e9d4-40cc-b689-5ec55a89fccc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb5ad94-cab7-42e3-a9c8-a2f573b15e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a44ec2-9a75-4074-9294-26d01cbc0ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47bad96-dbff-4cdc-a966-0ee0013f0194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31429cbf-4467-4d29-82f9-da48d83d5d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4311df82-f147-4135-94e0-552aa09d2a47",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9089ee2b-d149-47c9-a0b1-28bfed08ce16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b81613-8ecf-4b25-9a04-3efaf32104a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf007fc4-780c-4a0a-9e07-83dcfb22467f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe550754-fbe0-4985-b335-67b3444be2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e4cd6d-49c7-407c-9f26-383a067d01d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ebbc77-3653-47bd-8c57-9ef60124866a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4e3f67-1da1-4e11-af29-3de3a7b01eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aed1ca6-4032-4567-a7f6-87708bb44994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b70b249-4b4e-4ede-bedd-c73b8480d6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aace003e-5a00-4053-a9d1-cd0500a5933c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34113bf0-cc74-46f5-aaf0-c9cf4c6cca16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54ce565-2748-4c3c-833a-3a53a17a9d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a88c6bd-9ecd-477c-9152-9901a99dc0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c517f89-17e2-4af2-9cf0-4d3973e11137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fcdc3e-cd9d-4c25-81b1-ebc0bb04f47e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf3cd34-c40e-4971-ac18-c2cae834f7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c71e19-83d9-4603-9bc6-d03afac3b0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0734e1-4f38-47ef-8373-cbf285ffdc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7d2508-569b-450f-a7aa-84ad3b4a466e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d90d2ec-5311-40f8-b056-81b079a91f15",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3dda61-5309-4f31-b0ed-078cd14ff2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964dc6d9-6093-4904-8418-dbe67d266ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ee0824-e189-4e8e-ac84-55a83a924acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1379ed-9ba5-4c24-bf1e-6b0ed741569a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6620e4fb-6f36-4a5e-a372-83b2831b3eda",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59e11c9-e582-4967-85fa-41fd40861107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348e7d97-78b0-4ee4-8e66-af7597673bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b60e27-3f91-494e-ad81-0aa5a275ad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d81f23d3-740e-41a2-b4d6-82d8c2b2c594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6992e347-29da-45ce-a26a-16bafc948b58",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffc51ff-c992-4ea1-9a7b-ab2539dbea72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b7dc22-f032-4d92-9c06-28fdaa6362bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f1577d-2bfb-450e-b754-0099b2d9f1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c36d13f8-64f7-4b91-aa0f-6c8267fb9c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141a6897-1019-4b11-9704-f6ae2c7d6200",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083b701b-60a6-4f6c-8a74-3250351bd21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5343628b-f73e-4e92-85b5-efcd71dad5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288e9646-3614-43c3-aa7a-6c8be43e252b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79aab4af-900a-4ed9-ba88-65f8f79cfaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5730b08c-00c1-462f-b966-117a8323b150",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bab100-a579-4b13-ae72-58a2ee932d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1968a21e-3213-4d48-a71a-5dbaab303cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a946835d-9129-457b-8fc1-f0221c7f3dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f80d6e19-160f-4b9e-b8a9-67dbf1442fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f7f9ae-9b3f-47cf-9e34-3e06949f02bf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b0754e-715f-47de-bc37-8f6e675ca502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5ee2e6-cf25-47eb-9c08-3f1d4d027b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb3164a-894d-4f55-ad97-810ea3a3ff20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f961444a-4816-4bdf-94b6-d9ef9929168b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3926f70-5b47-434c-81eb-4ff573486953",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01ee76a-03ea-4f65-bea2-ca783d1af136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c9d861-42e0-4499-8867-ae7a3d6e4667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663ce000-d19f-496d-ad50-96665a49dc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f91f44d7-e80e-4206-8235-acb318157ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538964c7-71ea-4ae6-995e-8cd9515df6be",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753e91f2-b812-433f-ac8f-c6a0cd7ae81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e93d92-5f79-42b3-9966-9dc8ca0aa945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d07e2c8-ed71-4017-9170-b237a6e76bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f30643da-ecc3-491a-b8e3-67d013e1e9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e1a5bd-e72e-4681-a45e-622d3ca1545c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b08202-b387-46b8-b2ae-05228ee5073e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957e10d2-059b-446e-b77b-9d7b99d1ae2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65298825-78ca-4a8d-afc0-30538d79ff39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdfa4e8-e91c-4766-9ef3-ce6b95bca094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fa961c-5263-45d6-8dd8-449c48b05883",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8606a1cf-fe09-459f-a6f9-71d543735ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c628d990-ccba-4627-9e1d-484679a930a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66441e17-eded-4a0f-9798-9f74f7b41828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "66980c5b-b2c0-43f0-af0a-fe5ce4472983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d11f34e-b29a-4ba2-9cbd-60d2e4619549",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e27349d-4f4f-4340-b7a7-45f210ec4330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f8c629-f67d-4007-9aa7-27bfca6deed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6752f3a8-40c1-4fb4-9c2d-9f0662b3fca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9286fcf5-ee99-4a98-b498-1b03b387b040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a738fd-a6ab-43f9-b9b4-42ec6444c313",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8d3069-2c11-43c4-86fb-850411214220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6853c05-7503-4b5a-a5ef-a1845882d9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17aad32-7a54-4385-b0ae-42b44f46d35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "217bfea5-00e8-4937-a12e-163d41430e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4135f9-e7e4-4e40-81f0-808da2d7f9c4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ee3817-6a1e-40bb-aa5d-c1de46c9bac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e9f9f3-80f3-4d7b-bd0d-1a72f58fbba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bb1ea7-fde4-465a-b7eb-3ee244a9a5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a823a3d-c991-4e86-a4e5-816d0faed513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be94de51-161c-4520-ac8d-94f0c540d41d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa9b765-bfd5-4d97-9f09-14d0ebe9ec6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafb36f5-f21a-48c8-9215-ba0996486dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85a8700-e4c0-4fac-ab7a-b64e6d2f5113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94436edf-1370-4b28-b088-4b589a983e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c51b0d-a7c6-4d87-b13f-c8656ab98d55",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6e8358-26c5-4963-ba0a-ea2f22346563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2f52cc-230f-40ce-8dfd-697af79933fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633e0364-7988-4fbe-b606-0d631735ac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81befea8-b497-4af2-9087-dce943c173a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be1cb31-77eb-48c9-ae61-920cfad729d7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0686f2d-7674-4567-aadb-548386c0d8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfafdf3-e5a4-46a5-8c85-198227d9dc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6999bb50-653b-4c4a-862a-bf3ea5ad9173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0b948a-c3c9-4978-9572-a9ec66a5f3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541311ce-8d8c-4bbd-a281-c5bd5a0473ea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d6e239-e2dc-406f-8bef-291c7ffb2808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d1286b-1909-4ac4-973d-24a7b4416d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b16580f-ef31-40db-a89a-9528450e4e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fe57fa-a531-4d95-bae8-0852c9728787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36033729-021c-471a-84d5-38af468ff76e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e980ec-aa14-4957-a8f2-ece3046280b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a171e02c-f790-4051-b515-c5680e5103c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39536fba-84f4-4f09-897b-af4ef8bd07ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b505507-3d3c-4ac7-88d1-7c33360b7944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2605a33c-2c6f-41dc-be34-07d7a776811b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0431e63c-c8c8-4586-bfbf-d819a0eb470e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c97c54f-feba-4ed9-9bcc-1ddb762937c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039a18d6-b2a5-4d46-872f-5b22d3901ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45dbd8d3-7153-4faa-975c-a96f9610aabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62f1e0e-548e-433b-b9ce-86566cc37f4a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a1e215-a6bc-45cf-a30e-41ff32334c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381f66ff-b3a3-4e8d-97ed-4e530bb92efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e8d078-4b9b-4f36-80b1-cc37374bdb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6eecfed-1ef5-4e29-b430-121e319d7ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f4fc94-ecaa-4817-85c2-46669a580491",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d25184a-0494-43d7-96e0-8e5269620d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5d02d6-9c1b-4952-a958-517aee7f2175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d81f875-2f70-4501-b8be-649acf19790a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f841d699-3192-4fde-82fc-d624cc437849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992563cc-ea6c-459f-aed1-bb39648b707b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0260db5-0174-4b59-afb1-d7dfd11c4a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb7bd90-99bf-4bf0-8867-73885a20c9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc51fd2-48e5-4b96-bcfb-abe8a7b5d766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28d2846a-3f10-4f9b-805a-85f132e18d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77075b54-6a80-4e73-9f97-6d8d057d7848",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42fab62-515b-42e9-83d9-9252ecd8a4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c5bf6a-dedb-4bac-a9d3-5c24933d7424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98d4600-abcc-459c-a73b-d4de26336672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35127bec-edb6-414f-a600-7f66b1f67b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db49c55-8411-4688-ad22-888f9ba2c3b3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f8fdec-d0cd-40b1-9822-88a2b595497e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a460231a-c7bb-4c3c-95d9-262d21d9399d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43548f11-e4b7-4627-be36-874942292d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3aeb074-7ecb-4d82-9d50-41e73db6e09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977bcaff-cf74-40e7-b024-30b90e504410",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82384f14-1581-40f8-9dd9-09fc91a573d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a89100f-5439-4fba-b972-be774eea4c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf908c65-9473-4108-a003-94eebb7579aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5858318-9657-47ed-9803-0812332db266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0ab1a7-f0f1-4b3d-9122-8b7dd8fd5e5d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9671761-4409-4734-9fa2-71a4e311af2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b10382-ac6a-41a8-9405-c5450c489d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bc8e5a-f75e-40d4-90f7-b905493a7265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07e69c77-6954-4dc2-98f4-4bf0ff8fcdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91c808a-f867-4648-9c1c-d7a81a9329ff",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed49212a-971a-4859-9254-313ef23fcbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8f254f-fed1-4e04-86a9-f97bd0a125bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc3acb9-428f-49c7-a63c-9bd92d1a02c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71cf5550-fc8d-4946-8e13-b17b3f01b27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d50a0c-1040-40b4-a100-f42d91d42c6e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff7411e-efd7-436b-95da-97aba854dfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fe9e89-295f-431d-9c03-05ed4ca39a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60aeb5e2-290c-4544-9401-32db714303b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "602b4ce4-c21f-4b83-87b5-bd8ed32ba604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332fc210-1c58-4e11-b935-3e92107a355a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef19465d-b82d-4748-9fd3-121a1338ee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e972a543-3948-4106-8399-fe4195548726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846b8eb8-4b2f-45df-981f-1ca4040eecba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ff3643-0ec7-48ef-8d10-4e8a5527b46a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90861faf-a514-4902-a7d7-98bc392229ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14eea5b2-4f68-4b01-8745-89b7bcb10be4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7e2fca-30d4-4765-a8e6-c4490fdf4eb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9c92229b-7d28-4153-8311-6821ba61f86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3bff66-97f9-4422-8b8b-1c10b659bccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "037e21d2-9fd6-49fa-a53a-28d59d76b057"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3569835-f789-4ca7-b71e-82d343106f6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b04ff6d-48fa-498a-992d-21d4fee8fbde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23098fbe-534b-40d5-a8a0-6d503165222d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9d2e630-58e4-4bf4-bded-339a386449b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "973e425c-e0ca-45e0-b22e-22d040bfee34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc675ea3-7ae1-4935-884a-dcfd563b54c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "082427b8-5385-43de-877c-d320e7d122fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25bb2fa1-b13a-4992-bec2-9e74d9ed2724"
            }
          }
        ]
      },
      {
        "id": "27d4706d-4a22-43ab-b2a5-d28aca5a3999",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3d820b35-4674-4aad-8200-45700cadb796",
            "name": "Negative Testing",
            "item": [
              {
                "id": "924fbd86-66e7-4455-a9a6-f891d5378980",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd2dc099-8c9c-4a4b-8025-5edbcc361f5a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fbfaf5-2867-4609-aad5-3b79c6449442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2870dfcd-9f69-450c-a8e6-defdbe62d332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e0a0c9-94e5-40e9-8ba4-9ee7d795c781",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c669cbe-7286-454c-8c46-245b6946fbbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10220015-8ec4-4112-be35-09cd15513f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc376e53-de37-49de-ba55-d0af23f09918",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1eb7f0-f79a-4bb0-b11b-dd8168a1db54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67288f0e-9a6b-4a6e-b9fc-4b1515a92882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7945e479-8bf2-444e-8326-ad6fb503298b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af6fa26-4668-42f9-90c1-d9ca7a2faff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a3a710-d3e9-49c7-a746-5aba853291dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38358d7-fc58-47d1-8695-96693c306b62",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c64784-d62d-4052-8786-1ad4708ccf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987450d6-c133-4064-b8ef-32c44a95a5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23f4e5f-a5c6-4c7f-afa3-259ca76b93df",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7980188-5fe5-4e1c-8a5d-199c7ec20c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4ddc17-3a79-4e8e-a7ab-47d1f3ec2598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a53faf1-9546-4d09-b90e-896e6b00493c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c601a9f-2f4f-440f-b27c-5af07c377892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a1393e-98d3-409e-82d9-f07ab8b136ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e91d261-28ca-4f55-99ea-7cc43705586a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e564bdb-31cc-459b-b8a6-699d6cc34f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2ac26b-7bff-45bc-a676-22fee5505892",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5125494-68b5-424a-9e72-eafdbfe8ee60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31be68b5-75b7-4ece-9363-578a6caf6a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5518c8e5-6cc1-4466-b0a0-5d3212bc9313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8142d65a-4347-4027-a21d-f49e42f5252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fee02f-fb6b-4ab1-ab49-b87d40284f50",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7030d40e-582b-4c77-afc1-99166d6eeb47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f4b7d23-1fdf-4a67-852a-c96787d77535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdd37d1-105d-4784-a0e3-7cf14b9a7dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1d12c6-6639-42f4-a834-8311d446f18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c296de1-5f6f-4d3f-bbda-59ef1a44fa34",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8c943d-a916-443c-91c9-6f11332cb814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33139c1-8e27-4628-9a88-1cd285076183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad0519f-f592-4f7e-b046-f3091011b4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1d83a0-6444-4f18-b447-03b2fadf68a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5b6ed0-8a9c-41a6-84c9-d96bf09a8ef6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c376e42-e95c-4949-8b4d-af775af0602b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3e5e2a-cb19-4ff4-8acc-c583196ee27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af8df89-2410-4811-a55a-2a4065298494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47aa367-f086-46c4-956a-063370c6d47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d8e0c2-5c9b-431f-a2f9-cd0340c9beca",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da695600-5dda-4ba3-8998-4774f707edf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c39abda-ef9d-4922-bf4a-f525bb8c4e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fec41c-7744-41a7-8e6f-87b7b9eb74ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5f7663-5ae6-4490-806c-78f253be8c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31772c1-38aa-4d1f-976b-298180f391cd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4560d69b-3004-463c-9c43-26b93a38e329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83efaa91-97cd-4738-9e8b-e49385566809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab659e02-fa31-4b1d-987c-5f28a1b26284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13054bc-ca1d-4532-80ea-5538326e9ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d1e7ca-b670-4c57-b7a5-e0c96ab90590",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1f8c34-e322-47ae-a980-32928dd0d86e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b20945-774d-4cdb-9543-b83339df8938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8294166-b946-4874-8e85-36e24e0bd256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a86299-b263-4002-b144-43f36621769f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0731a141-4f02-48a6-a1c9-adcef2d8c3bf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a8ef7d-2305-445a-a7da-de6329d3dc2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eec9484-efee-4941-8f5d-7d9d4b4c56cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96614d82-0418-482d-900a-7b4ea414408b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3ac60f-e025-47c0-a793-42beb68c8636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022e3519-d0db-4109-b541-d73c3bb2419f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4def68-fd87-4598-be34-dc26e5bf376c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "215462a3-6dd2-4457-b06c-9eafa9a383b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5654228f-4811-4d42-81b2-b16528298560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc64dd8-d003-4639-a417-baa264c1b8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b67c1ce-0058-4582-a768-2d909c8a6fe0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea49be5-42f8-4f08-b496-f01a60535688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9bfeb3-6810-4b1a-9081-5b6bcce8e1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70645f3-0654-4551-bdbf-8baf84025e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a076aa87-5d99-4fcb-95c6-85d6f9551234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d0c359-fa6e-41bd-9070-c055a8ba6b0d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affc8062-c43f-40c4-9f3f-d34838d1f9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d69a9be-a82b-4f34-b9f4-ecc8f13ab8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d113b8-c06c-411a-82f9-c1683276250c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c4b073-466e-48ae-a3a3-dfcb11989676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86221f89-b3dc-4656-8036-dbbe090e33ad",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92b5c76-4283-4004-bf6b-226bcb558254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286ca7f0-b6c9-4a9d-ab77-a6f31282ecbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d168e23-248b-43da-81cd-1ac5955c6eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377582fc-8482-49fa-8014-67c70a3a11a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d5f9ff-c577-494d-8fad-9f1e100cdd84",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5992d829-eb03-49a6-a2f2-12418a793677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d78a316-f2c8-4d5d-9a04-787710475f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffba413-7248-462c-a111-3f466f4e8060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6740a2ca-574e-4fa2-946f-0cb51c326568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2472aa3f-36d3-41b5-9bf1-2b25314c1903",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb70a99-60f9-4929-85b6-2e3382c85a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01df4621-48a7-411a-b502-bad0ca81beb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a10b3f-90d4-4611-851d-c22168687b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6686872-4185-4d37-82f3-4b1ab5052eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb61dd2-9643-45a9-901d-9773e812971b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f02ff41-18f9-4629-98b1-d1c8e8d817af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a94789-cb63-4591-ae1f-f768c77900c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa6e703-d584-4e71-aa4b-b6a9839530bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53792a68-120b-406c-a050-b15312d2b5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a775e455-a507-4289-badd-93c6e8f5b25c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ae01a8-a902-448d-84e0-48ca8ad64b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d029037b-91e7-4898-9c82-412f1c6696ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a80140-43d1-4997-a63c-453b7e75d864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b42542-9a2e-4e1f-a78b-a7622481aea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa658c39-ca70-48c4-9f25-9c25bcd27acc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4f3c87-70c4-4843-bfc2-54f99c57d90f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319f0e49-4743-49e1-97a2-58230bfc49b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0577903d-a85b-46f0-bce6-df549d6b0df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c06f1ef-4192-4124-a705-51760ad9c9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf3b3d7-47fe-47c3-aab3-29420080d43a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4486032-787c-430a-8341-e491a5a81254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec657de0-4db7-4351-b922-c727ee309783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fda76dd-7ff4-491f-be64-1ec086cd43fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e621c07d-785a-414c-9cf7-3b4acddea905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72354c4d-4ed8-47d2-bb5a-32373944f259",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aab3cb-4cf9-41d7-a708-428d8689265b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4550d525-0805-4fdc-9bff-a0c718622578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d111c0-abc6-4832-83c8-c53b9113e0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e960eaca-3c53-4605-a345-b5324f06b30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789d5c7e-e8a9-4002-8f05-77d5bc229c17",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72dfda4-d650-42d0-8079-c29eb2002c73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "748cda5b-0137-4b8a-ad88-63e461f6804e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ac8606-73b0-462b-850a-72fe577df2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a77ad8-d18a-4742-afbc-d3fd9959f3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd1f8f4-a964-4925-ab8e-9698059ddd58",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d96f166-c4ed-41b4-afd2-c3a2a3a645a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7af94f2-5c52-4bad-a6df-b17523c028be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826fbec1-0d24-4191-a406-713033535f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5585f48e-4839-440f-9ced-1d50d7a403f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757bcdf2-bbf7-47da-8950-2e164a2640fb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8561a572-d8ca-4140-9be7-62b0d1486e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "138ae1d3-81d0-4a7a-b106-f43a37f3a154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2b00d1-154b-4bca-88fa-43c09167c20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07afaf0-9026-49f6-a0be-79cc1564f001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2625706-b70e-4e26-bf69-fd62601aace0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d03065-4324-4a98-bdb9-4970b270b395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b3e9223-a9ff-488f-90c5-390db4729d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1c7752-5c8d-43d5-83d3-4865cc65e5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa5a901-1e09-4e6a-b064-7593e320e329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad10547-2656-48c6-b8d8-e0f3e31abd03",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c139e42-24ab-430d-a3bd-45835d5b0c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2502793b-9ef6-405c-8a3a-9e93e132c3f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed09ca91-ddb8-469c-afe9-5664ad3355a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48d25f9-7c1c-4011-ad23-e5e0396b8c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd967fd0-2f07-4698-b0a7-1d6610ff731e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf01da3-76c7-4c14-a7f1-b57758cd8baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de15e756-291e-45f5-8a82-ca977b77cbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0aa418-1399-4e0b-a3f0-912f5d6c62d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4faf14-72df-47a0-b242-cdba4c7e4e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8515b695-ddaa-47df-9994-2a60befd34c2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0e3a4d-cb5b-445a-9516-7a982b5cc7d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b70c5a06-1fda-4cba-ad4c-603cfdf476c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6529cd1-122b-426b-bf48-ca80a4a32c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00bb36f-d0da-41a4-85cd-bcca6eda9464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6efd50-db2f-42b6-b1b2-9f76bf64f64a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c531904-4e32-4f9d-b8a8-5eb47719502c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa6c0754-0b1f-40bd-bb21-8347de71b91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5ce014-3146-4443-a592-4f7fbc66b83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c273a1-54e9-4ff6-8882-43b2b59d4ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7117ee-99a0-4879-9914-a532134cfc58",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3407025d-b381-4861-a6bc-20d87f085478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b25fa3-da25-4cfe-81b7-2df95dee7765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9241f33-d889-4602-89ad-6c81f94426c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a669e9b-bb94-405e-ab1f-0790baec3de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b62700f-9b11-4ffe-82bf-266a32d2bfb6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fb071e-e314-4d02-a4d6-63f1c6f79853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a136b053-ba91-4d97-90a1-48aa63d8aa51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617116b7-70b5-4d90-9338-44fdc143e9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b66ff6a-f0a2-41ac-b6ed-1068a6956304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66f6cb5-b5cf-4333-9c2f-feb735d614f2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63980a0-ed15-4db4-9338-177c5732c65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9525852b-a691-4b85-90f8-b57c31dc965f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12799b3e-4b15-4be4-962f-6f60d3fd4b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2753f4-fabe-410d-bdec-15e76667cde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6658168-2bc4-4df9-bb09-40911ee244bc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee6c18d-88df-4a8f-92eb-57e6fea967a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6449b6a8-5cf5-4c52-9cad-80a305247aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23336d64-e708-4263-a73a-453464c5ec01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37308108-329a-4f9c-9906-e1705e34417b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabbc1c5-e61a-415f-b469-d6137eeabeb2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78a1944-f461-4d3d-a7cd-cbb21c8a4259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931ee00b-db99-47dc-96c1-0a27e4cf027f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e40eff-1528-49d2-b450-3d847dd0a2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2ac6fe-20fc-4edc-9552-840a4e971b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55397f5-e878-46cd-ab04-dcc9f1b4d328",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832f8f20-15ba-4819-87ba-28b4cdc0d9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a3371a-64b2-4310-aae3-39a4c5fa43b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ab837f-bbf8-463b-96ae-3ee15b4a9d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a189bf6-b4ac-4076-9fd8-6069c2fcc8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc99f407-39c1-4f95-9737-cab69b079284",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3860d94-ce8f-4673-91e9-01a88cdfe9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236341c8-cd7e-4ae6-955e-b8c53ffdcf20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6497f6d-5cc4-4cfb-a3ae-1e8536d29557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03b8a66-6528-4a04-8391-391e2144dce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb535195-5287-45f7-a80d-09e39648b229",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee07132-428f-4e50-b5a5-aac85a65505e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317fa10d-b3ec-422c-8876-6709c277e036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c3be7e-c571-4edf-b65f-7f5556d6904f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71c7838-3858-4874-908c-626292a34b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c693563c-2c93-4a4e-8081-7a615545375c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7299fe6-5fcf-434e-b626-44f58e1d20b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00403df0-1aa6-46eb-89f6-c52c5ead5f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f005d5-c010-434f-b7b8-7dd89231e893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a716838-abfe-41ac-be18-23b967b211e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f193442-62f3-4904-a6b2-bfbd3b142b10",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c53558a-aa45-4d22-b5ca-7ef83ecb498b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b112b2ac-6148-4ddc-bf36-715f9d43d994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2f3ca2-18c1-4808-977e-82e1fd7b6d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0f4c35-8c0f-4b5f-914c-68f828633e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20aa5c36-b56e-4a9c-b65a-fb23d59fd8b6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4de6e5-e92e-4a7d-8e02-380e3003965e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd9ea9b-cc1f-47c7-93fc-3d69b90e8e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb877f5d-aded-4240-8973-4acc4b004a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b70fd07-d26a-4e5d-a80a-d4bf85a7eb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0518aac5-76cb-41b9-9830-1a5b1b1be2a6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c866c52a-bd5f-41ac-97a5-a449f7258d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2cf638-3008-4c23-a71b-56604533a011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94766e7b-3d9b-48fe-842f-4465786b84da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da17219-0346-40e6-a47b-cbc267da2065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec3383f-d608-4f05-aa24-4063fc4160cb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237da91a-b391-4e85-bd89-0010fe5d7c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0532d665-1ff1-4bec-a433-70c1129316b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afb5da2-a67a-4ba7-b4d6-4ef01aa5758e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3833a119-86da-4072-86f6-f57a63dd0f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f496bc-14e0-4a3c-9974-c6fd8eaa3df9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4f531a-2df9-4ef2-a6c5-8e136c4bf50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5938e2-b34b-4b9b-a622-96a613d32316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa909208-395b-4e7c-aa12-d661d5196c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0447ea90-e777-4346-ab8f-228b13ba52c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020fbfe7-e807-4857-911a-4a05238acb9f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f66ecb-526f-456a-856e-773ce0366c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3c4d85-1f01-42fb-8210-0d63433fad71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2700f0-9468-4bd8-983f-c7e48f474985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a5edec-0473-457c-923a-c058f870cc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5594641-7338-421a-a050-0c80561ad6af",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249bb052-ef39-484f-afe9-e488e7b11f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bbd190-31a4-47ec-9a9f-e78bef6ede4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d899a058-7879-44dd-a384-ce20966c8d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e401be7-3435-485e-98a1-c0034c4a3078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14514a02-744f-4dde-8335-b2fd36622767",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcc3422-1391-4c39-8e6e-49d10ec5c602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c231f81-1029-4b48-a943-7fa48e9516e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9638ab76-9b56-4039-8c80-907861bb337b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95a0ec7-56f1-45ba-b670-14cacd0d9a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748ad768-0c9c-4275-ae71-1d394be70166",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6e70bc-15a3-4c63-99f7-4928cd53a731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce94d45b-525c-4c8f-ad47-3f347706a3e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676576b3-9a19-44e1-8cf5-c32ec1a81cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af16ff9f-e729-434e-bc9e-c0a98fef1409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efd581d-5067-4349-9d01-422d07208941",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b70573-8bec-426d-b146-e4c1ce4e1e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aac809d-3f25-439a-9b72-379f9d6f7139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cc761a-48a6-40d6-9260-619d8e5e17f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df73260-1878-4383-877c-4e10307a7b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81650f73-e696-4182-bec1-0b9b71ba7929",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2b2be2-5e37-40a0-8aec-a87a299f36f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85665c4-472f-48ee-a24b-f257904fbe0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160bb2e7-7554-4093-be41-8cc9b68c92ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb45a75-1dc5-484a-880c-e2933ec32f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cba2ae-086f-4968-bfef-03178cdcb1ca",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819668f2-b91e-4232-82cc-71e9a3d62488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0977dfc-8881-48c0-9474-40b7a4b589ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468c35d9-78a0-4847-9bc3-129c01fe0df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9cee1c-7e24-47fc-99fd-67b31e8de8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c240d668-7377-4763-8e9c-46c9deef5d09",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158e4e15-3e71-407a-83ef-a5b80c41e4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551564d5-8dd9-474e-9c19-88ab8c12b21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60397245-ca99-47e5-90cb-1a7947d17a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84521f73-7196-4d48-a8b5-84b41dd2f070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cb6292-cfdc-4014-9624-897ad16ff2c0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6797b1-5135-421e-82c5-8d6975866d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f394b1-2449-44e5-8ce2-df9ca51c12d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07c8201-e6b4-40f5-af85-b1e397d4c964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d4ba9d-a9ff-43e3-9d12-bffd779f7ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47978931-2d73-4733-8199-4e4aa4018b20",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e5faea-b267-4737-8bb3-8f943220cffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2759917b-3a49-415d-8cc7-9627766f7bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93df3d4-2d88-4249-b1fb-99066f7fec98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db58516-dde9-479c-84d5-5c10eb05f64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160fb53c-f28d-4e64-b8f0-38021715de03",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c220cab-223a-4d55-adfb-9459575777ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c027d42-df28-4130-935f-9a833f4a4d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7483b1-adc1-4a88-8384-424719d2b531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49554c6-e243-4c87-9558-fe7ff86fad84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfd5e6f-5cac-4a45-a5e7-5ba6f5016fbb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f6bae6-3a95-4d9f-af8d-1bdb9c337b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718cd976-7769-40ce-a721-37999762f5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bab394-e211-45fd-b488-794794da3121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c06d88c-ba22-4efb-8654-29bd4ae5c8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f411d7-fb3c-4ca1-9299-8cd6e58fc6e5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0386913-fa9a-400e-9914-c370b3c062e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4930338b-74b8-4c13-a365-7846173c2c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe009708-6847-455c-80f3-0c3dfbd18707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c460ce25-dd2d-442f-93df-3a85cbef811a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d264df08-d1ec-46a2-8745-315e6f999765",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d37484-e19f-4562-96c0-21b148449700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bdcb4c-1152-4853-81a2-c519f44ae8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c776cf52-8fd4-4b37-b5ac-e38d70326d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e630e224-b395-478b-95e3-e443b314ba1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a92afc1-a8e0-4867-95b7-4de86840cb0d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfb3c09-e4ec-4b85-9ec8-cea7c3c303d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3de5a2-3554-49b3-a4e2-cb3e8d34edcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94106036-6987-48e7-997e-bd94824b685d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4787c55e-af9c-42e3-9ebb-76ed9c6408d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc1084e-a877-4780-993d-1e1f6c0df1bd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f2095c-04c6-484d-9804-b1a9f0dc9768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e3a600-b775-49ba-b2f5-0dc3b9d8e094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a22d792-6dec-4c9c-9b48-b0c3edca6087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f817274d-e6e5-48c4-a61a-49f98584f711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257328e1-578e-4afe-afb7-4dc956b368aa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0b20e3-c794-4d44-9f03-e93a2c976348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaab414b-ce25-4edb-86cc-00035aef2426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa3ffb4-2305-41cd-9ffa-25fc17cf2d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1955ab93-491a-4569-bf62-6361d1f1368c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4e8822-0edb-4adc-aa23-b08387772903",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4a1ed8-5f65-49a9-a1b2-1418e1fa5a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e1b1749-25a5-45df-8c98-3ae3781ad7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788b49f5-1318-4224-8d5d-d50ee1487f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f005d9db-1238-4ba6-8b0b-f271a0a588a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca043c3-8c84-440e-86fc-ddebbfaf370c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657d0e4e-6579-4ec5-9307-be3a1e2e7521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0031ec-90de-4f65-a102-2cd9a52ab65e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9086033f-caea-4c21-9563-80986f40af2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae232477-d25d-4090-9e2c-923317a98372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b183fa4-de40-4a1e-9329-ce22ad359e2f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24912985-764e-4048-90a1-d7aaf0368ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf3a0efc-28ea-45ee-b8b3-d37b761e65ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8e6b3e-4440-42aa-bb7e-c05f11a58050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef14690-1502-4e19-afd5-a41bcd1ff8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd7e237-a800-41ad-b976-a51b0d360f5b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bc8312-5987-430b-bc4a-c496ffe26b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6f4b8bc-12fa-48fe-aa97-aaac8d80ebad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d56080f-0817-4595-a119-017c6ffa4fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed8e11d-1228-4c7c-87e1-e26f8d1fd811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e18a9ae-25b7-4335-a4f5-316bb929c32a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845832f0-be44-41f3-a0db-a836ecde3a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd0f90b-33db-4224-8117-c72e9f553c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ae22cc-9d23-4c5b-b161-afb072c6c502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167d347b-4901-45c2-b22b-0a3c8db91683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d99c7a2-bd91-4aaf-a598-bd549e55f932",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6913dcb9-22c8-4a9b-8002-62030adaa88e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5146525b-a56f-4538-be22-7c0f850fa728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c8ef11-8418-4278-84ac-b12082dacc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766fa72d-b986-40ed-bfc4-a396f042f715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6569a7-bc13-44dd-b9b9-cae0baa76d40",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220a5e53-ff06-44d1-bfd0-de2c615c8b25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "399df610-17e1-4762-8b7a-1a3d2527af4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e6f7ec-92b7-4866-a2b7-c821d0e8b9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ba013b-2219-43b8-808b-2794fffb11bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a689392e-8ae6-4593-a9c2-59f5d81abd7b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73669ad-e82e-4794-9c51-d1bd8a8f9e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9943c639-e499-47c6-9b07-0d82a53090bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6952bf-750f-4cbd-b3aa-8e811d322f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6009bda5-5aad-4d34-8fa9-510869aa5817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac68f86-60f4-4ef0-b686-a3de1f41fced",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620bdb36-25c8-4aa0-a378-8936c4b103d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe69e506-3e86-43e0-a88d-4ebd7d7beee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d68541c-27ad-49b1-b2e3-8c04e81ec552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4195d2-bb4a-44da-b8b6-1ed8e7d3e2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a179ac-b5fc-4d2b-ad2b-0bb30fa7b3be",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3104734-5687-4aa8-b9fd-625a90a8c72f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "369581ab-fccf-4aed-8aed-784de6868fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4042dc1-3538-4c27-8547-84484b120c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd14d80-11c9-4846-b499-301cb55734ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8709a2-1ca5-49a4-ba14-d9cd7dab22f0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920cdf48-b79b-4ee2-b96d-9d8f922f3c3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f83c90-014e-457a-843b-407cd0c66037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cca86fc-f27c-45b8-bbf4-be21530c7602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f964b77-5151-4811-a37a-0a623c76b535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2b0a23-5360-41f4-bff8-4d83eef936c8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04302fc2-5432-4547-ad7f-071aed298fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d07e26e-45d3-418b-a1c7-b3367d110612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8986bed1-0f6d-4d3b-b11f-336fa82a665b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35d8c04-24e1-4d6c-97a1-9378a5cbc980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0176dfb-783e-4354-bb6d-a39fcf4b09b8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1617a9-a242-4dd4-865f-7ea444c5ef25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "666a67cd-9cfa-45ee-bcf2-5c48e8ac8d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c7fbb5-cdc0-4715-a9ff-de81410cc85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11ae968-5bc3-40c0-857c-b0d71680e530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7275b982-b8e2-439e-9749-045bf03310eb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0eaddbb-b11e-4dd4-9322-e4397a6842fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e903ba7-06b8-4b24-9386-20ce5c0825d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb72558e-7b3c-469d-aa8b-b16d1d8fb030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d4d49a-ffa2-49a6-9400-53c96f8feff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a64300-f8f4-4b79-a81d-2aa46c953eab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fb976e-4f4c-4b31-9035-943a6c90df49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d56aeb4d-093c-4157-b4db-fbabdb3e047a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1bc464-aac0-4280-ad1b-e1a2e80ebb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c66e80-afec-42a7-97e2-542842f7e3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239593a0-7e76-443e-b11e-e5de456c9b90",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa131352-b897-4669-93f3-648493fc3655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "317d4b81-4de7-43b5-bd52-1a5097dcaa66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4d33a5-9bb5-4e96-918f-b99bad4c8dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6a3734-eec4-4b5b-9c75-28b21a6df539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed6ce1b-84f3-4e9a-9d71-a6bc8ec270db",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff41245f-231b-4b45-97d8-02c9512691cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5957d77-08dd-4088-b89c-9aeea5c80909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cb46fd-e2ff-4104-9120-37413ea7561a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0347cc0b-d13a-4dfb-882a-ceccd13a6a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d204a945-26ca-4251-837d-9c09914d2fdb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9595c5-5c0e-483d-9dad-8260b2035a34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5048314-e0eb-4e5a-aeb6-39162269ca1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdb668a-4d44-4922-93ac-802d2d10e86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082e6145-5fe0-408f-be69-c5bb81b00855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05c8036-1d89-47c7-9805-b231fd208e06",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7318bc70-0081-4be6-a00c-019849ba6eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66c105cf-7231-4da1-a17f-26ce50dbb695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a7e215-5c7c-4a33-920c-127ca93e3155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70265b2f-1c5c-4440-87c7-c0f6871cf858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bcc4ac-4cf6-43ee-938d-a3991c3046df",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc00165c-a400-4897-b442-07dab052f27e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "380b307f-5a9b-4317-af3a-d6467254aa1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77fa549-c8c5-4678-a21f-492c9fd528c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db39f63c-09e5-4bd1-9f53-611cd4a75f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c299c76d-bc87-452d-ab6e-2a2311e4cfef",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052d61a3-0ea0-4abd-bed8-c37774447ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5d2428-5d2c-4092-868b-2d84450d8f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa670028-e857-4163-954a-9e882af635c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4822f539-d2ac-4271-b8ea-656f17fe9925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18759652-52d3-4e37-928f-befaef401c5e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69b77d3-2153-411a-861a-b4d0f473ba07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7114a47e-3f47-4073-9d0f-1eadad551da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40995625-e900-4998-b8f3-17eb1f4f0210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfad19f4-6e59-4a8c-881e-2946008d3441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49c5be4-4600-4707-9560-aa73404086e2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10843f9-b3e8-4fc5-a383-680a71a2e92e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b438f13-15e7-4933-aea1-1e93a1701337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d977b369-99ba-4e7a-8031-a32046f07c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9ffe60-f945-4c8a-b2fa-572c3f2732a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4d7f93-c458-4596-a6d7-a0bc0cc2da5b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f06b2a0-e880-451c-9eb1-5adab88c186e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0289ce53-2de8-4e1f-a581-4315a700e40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6220fa-f16d-448a-b89c-f38545795fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbec051-7db7-4e96-a970-034ab58ed8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851d2412-b91e-4e4d-a56f-7c8c1e6a8397",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b5606d-33c6-410c-91b3-8dbfa606a716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c153b1-2bdc-4bd1-a397-e876b2dc8070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f515d9be-00df-48dd-847f-422bca0fa353",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6cf2d7-b750-4c80-a6ed-cd41fd68b262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98aab0e-f46e-4dd1-bddc-1a5e3d464e0a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3423cfc6-3c12-4036-9c5b-dabcc727dacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bbb360c-d793-4600-898a-aff7592593a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98a1013-7a15-4261-a223-926abef57453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63b539b-25fe-41e8-a13b-7636b05a65c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4139c5cb-7eb7-41c7-b538-4e10c40b8168",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401d9fb0-5358-4254-94ec-8a1ebb343727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b3b2228-fada-4004-9f65-ff082406b9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f989b86d-ab71-4efc-8123-6bf18df9c579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301c5a3a-5572-41e2-afc4-7770066b9034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f3f680-b776-42e0-8afc-a7d6cfc47c9b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36538e76-ce4f-430e-955b-d60955339653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f91df2-e4ef-4194-9b7f-695b24b7dc0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf8da5d-a4d2-4a92-bda6-21ca16ba6c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488be511-a239-40e9-8c01-2dc427d332da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8e4e1f-92ba-45f2-80a3-b76fe14bd272",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64975ac5-9a96-4dcf-973c-e401ab1fc361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae75a99f-9bce-4101-8b91-7fc936bab38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542df592-bbdb-48c0-9b70-88c63cd2ad6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bbf500-b55d-4f5a-bbfc-ce57a5056146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1b9f28-16c7-4b5b-992d-793a9cc0d389",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596bc2a5-0d10-4d34-a415-5640caf2b3aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9e916b-fb3b-48da-8d71-5327167592cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00270a6-1660-46da-b610-c302b3e837ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341cbfb3-6b5c-4cc9-a501-9f2947bddaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a143aa-15f3-4a31-8518-b8b31265eb75",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f38bdc-b6b0-4838-8784-b1b7c9ba9c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db4aa40-c4e4-4abd-81aa-48563f4adb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937952f9-fe9d-4abc-bb53-4c0f3e103256",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833a89f9-70fc-4928-9a3a-66d4a64cf21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5017240-92b3-4b7d-9343-b86d0957dd3f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8684c4-52bb-47ae-b63e-3dcf4ececd84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1081def2-f0e5-4a88-8132-b7298a3ef327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c551d22a-4251-44a0-8222-910eb789aa11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5833beb9-0184-41fb-85f3-2bd1bacd487b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "852f24ec-0cea-44cd-b484-f0b79a502168",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "917cee70-5d26-4f24-8e7c-57dfc54d3378"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f582e1b2-ff8a-4804-b261-a7708319b922",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cb275c1-d671-4c15-96f2-8a27469a7e67"
                    }
                  }
                ]
              },
              {
                "id": "7fce4dc1-2e84-4449-bb5e-23db42044f3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a18d296-f6f9-497a-852d-f360d7462224",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdba9b51-ead7-44f0-ae3c-5f46f2723ba1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c9743e23-4119-4392-890d-cabba7e2bdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d305f7-2796-4fcd-8c84-1460e5b2d348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdb22e54-26fe-43ec-be04-e403f797902f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce6bc7d6-e7fb-4db4-831d-e8e593d89430",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25ed51b6-a199-49bb-a58b-909aac7e788a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "291d89c7-a7cb-4fca-8874-f94162891e15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac3237c4-b3e1-40e9-b627-8bc6395d6d59"
                    }
                  }
                ]
              },
              {
                "id": "c1384196-4583-409e-a57c-78f8dda8541a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bf9f84dc-13c5-4c14-95f2-c691d90d1891",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb943aa-5d2b-424f-8397-6c3de3951d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "522c1aea-f46c-45a3-a7f8-eb4d58905022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f49258-67ba-4cc3-b2ce-45a4c80ef84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b9eb71-3eb2-425f-94cf-ae85b1b43fc8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9227560b-91bc-4166-8ded-f026780158a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "24ff2b48-751e-4b95-a029-100fe6cd0b1c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "136806c8-c1b1-470b-a4a3-fb4a293207d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8eccc19d-d8f1-49c9-9e32-c8776895559d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deef0351-5904-4b86-995f-01c94ee0d29d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d58e2af-e177-4b7e-a9e5-f15d1ad8d636"
                    }
                  }
                ]
              },
              {
                "id": "7b841b43-4d88-47fa-bd7b-1dbc53e86855",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a2927ec-d1e5-49c0-a601-6ab403c00bfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5af17222-ebcc-4562-87c9-e9a1405c19a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "443a0d3e-fa7b-419e-9d14-00b94138fc50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cfad31b-f995-4fe3-a327-ac549b8eb4c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35b41a6d-69e3-45ea-a314-0e9e2f49594a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0404879d-24c4-4b35-9464-0a3cd676261a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b3832cf-5e18-48cd-a52b-cd93dffb8f6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcaf9bc3-c39b-469a-8c07-fc3493e46799"
            }
          }
        ]
      },
      {
        "id": "e788e34c-9be4-4ebe-9a33-0745b005fcb0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d8c00407-b6c8-4130-9794-94932a0fe69a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91283187-3c10-489d-81e7-c05afb06c42f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c131b630-19ab-45be-b9d8-1303cbe62a3f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71af202-62e4-4973-9a61-7cce8ee5e659",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fd3867b0-db17-47e8-bef1-2fb66ab52ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5244c0f0-9bc6-4e56-a0e2-acc47131dfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1684eea3-d79c-4eef-94c0-08f8a3355ead"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbfcf2d3-bc2a-4039-b763-2e2340e6eab0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48d4c8cb-6bfc-4d76-93db-b0bc1e7849d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d1e92a5-025a-4627-80c3-e5ef83e5053b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bef2ca10-02c3-426e-9d39-8929e002128b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e1f2e46-077b-4bac-9d38-03670f9260e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b1f16c58-8b08-4f01-adba-dccac94c3f6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2943f228-6643-4646-a5c2-d2067b4d2450",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f09f2f29-e2e5-4ef2-b652-a1d4eda2950b"
            }
          }
        ]
      },
      {
        "id": "81a4845f-5108-4d04-9d88-0b874d1366dc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0ad33e5e-40c0-4f7c-85e8-8827efec3d28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90a2d317-d568-4805-830a-8e72dfb34ead",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "654aa3a8-8aba-4df5-8604-283e8d2d82cd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bb164b-a8a6-4c23-a05b-fa649289601c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d84973cc-f5f8-4e09-a113-dd09978327fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbc27f6-c2ba-47c3-a287-bccc6fbb8fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3405881d-d09f-4f96-ab33-ba37e83d082b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ce7c142-6fdf-40b8-a72e-c539332ded3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17738709-438e-419f-af3c-bf1baf14131e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3421104b-2876-4452-9927-49c634828527",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce7389ee-2ca9-48d8-bb21-04eaf3e1ba5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9081d301-a9e7-47bb-91ab-f8ddac2b3366",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06f25a83-cca5-42c9-87b7-e0107b62be62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d866f098-83f5-4e32-8577-cdc92be4941d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edd046c4-bf81-4ae6-9068-ee0ddc12a30e"
            }
          }
        ]
      },
      {
        "id": "54d54353-6bfc-43bc-a91c-ca44f9b7783f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "61250a0e-6029-4b2a-a56a-95528e656df2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2f63a08-982c-4043-ba45-ec0bea340125",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1163aaf2-3725-4a00-b392-29e74b33bc61",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9036d0f-891e-4f74-b4f2-3392b76dc79d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2f476b3-18e5-49a8-bc5f-6a143ba49da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb774a3-ef74-4310-93ed-ed565e17cbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09ff364c-194c-4f5c-a1cc-d42fa3b75c39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a70df5d-1277-492b-bee0-47c9b2264279",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70fecb51-f357-4e51-a62e-d377e38c340c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "100592ed-7ed8-4a05-a652-c519525bf281",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c24f4cc8-01ce-4c93-9ea1-4b718f46230e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1f2ca18-e6c3-440f-9070-a92c4cb8f43a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b66b8e8-f52d-4066-bad2-130f1b6f342f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c05f5afb-dbf6-4559-a014-74e468e07e02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c54d8f9b-3fdf-4dba-a267-cd54baef4167"
            }
          }
        ]
      },
      {
        "id": "c2d71f36-9476-46d2-bdaf-d1742e553d7d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fae70416-a121-441d-b784-4042d7be9d33",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21a0e713-afb0-41a6-acee-e812e0b1db2c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5d603f96-7a0b-4594-b19b-79d02eaab245",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adb64c4f-0864-4d90-ab76-c6298fc41743",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5176eb1-9ac4-429a-8d83-d0318d5d18ab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 135.83730158730154,
      "responseMin": 7,
      "responseMax": 9892,
      "responseSd": 662.923719933041,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719189601095,
      "completed": 1719189643853
    },
    "executions": [
      {
        "id": "3f50e7db-a266-4341-a0b5-8a27667a39e2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "95dfb66d-8dbb-4380-b3ec-c1f5040e820f",
          "httpRequestId": "c07b96fc-0158-4ade-a12c-d9b92f18a28c"
        },
        "item": {
          "id": "3f50e7db-a266-4341-a0b5-8a27667a39e2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e0ec91d5-0ee7-47d2-a5a0-b9e2294dd355",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "aa28bd74-04b1-4a79-892c-f57dcafbc7dc",
        "cursor": {
          "ref": "3d64d819-94e3-4868-a254-348ae4c0efc2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ad324e39-30ac-4ef0-ad5a-f3e53a155c23"
        },
        "item": {
          "id": "aa28bd74-04b1-4a79-892c-f57dcafbc7dc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e7e5fe62-c51f-4a62-9006-13ea6f239c64",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "cb03152a-77dc-47b9-9587-87a311ccbc35",
        "cursor": {
          "ref": "297f79dd-1ad0-4c00-a404-f3b7215a01bc",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4b949e0d-c5fc-4268-bede-c84b16a3899a"
        },
        "item": {
          "id": "cb03152a-77dc-47b9-9587-87a311ccbc35",
          "name": "did_json"
        },
        "response": {
          "id": "0b35b9b5-ce95-4714-b0a0-a4286c7dc2f3",
          "status": "OK",
          "code": 200,
          "responseTime": 576,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f47438-0896-483f-9d52-4bb2822110a1",
        "cursor": {
          "ref": "55693531-bcff-4d13-9b9c-e34799c83548",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "01491367-65ab-48ea-8130-6b0776bb34d1"
        },
        "item": {
          "id": "12f47438-0896-483f-9d52-4bb2822110a1",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d20781d-830b-4cec-bb78-d0da8e6f0edd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 401,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f47438-0896-483f-9d52-4bb2822110a1",
        "cursor": {
          "ref": "55693531-bcff-4d13-9b9c-e34799c83548",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "01491367-65ab-48ea-8130-6b0776bb34d1"
        },
        "item": {
          "id": "12f47438-0896-483f-9d52-4bb2822110a1",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d20781d-830b-4cec-bb78-d0da8e6f0edd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 401,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f49f98-9f4e-46ab-98eb-6c6f4a3f8a7d",
        "cursor": {
          "ref": "ec874f59-c94d-4ddd-898c-7952844d81e0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bec4f2eb-9bee-49ca-b70c-46244e93dd6a"
        },
        "item": {
          "id": "b6f49f98-9f4e-46ab-98eb-6c6f4a3f8a7d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d9d47d58-9361-41bb-b5e3-6afdb95daf02",
          "status": "Not Found",
          "code": 404,
          "responseTime": 86,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7572b7c7-9602-4e5c-947e-523f9a435c3b",
        "cursor": {
          "ref": "2c2afb2c-ee8b-4a05-9186-d0f83ad10e07",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1317f32c-23a1-4c90-9b49-8a238fb22c11"
        },
        "item": {
          "id": "7572b7c7-9602-4e5c-947e-523f9a435c3b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9267e391-9ec2-4dd4-be56-660c938a000b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d31b15-ce0c-4c14-b5f3-1e1b7ef38ea6",
        "cursor": {
          "ref": "a74faa6a-9779-44a4-bae5-6e575ac455fa",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "103438a3-34ba-42cc-add6-13777040c692"
        },
        "item": {
          "id": "30d31b15-ce0c-4c14-b5f3-1e1b7ef38ea6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1c0ce4dc-eb38-43f4-a810-930ca63af5dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b83bd11-6438-4fbb-b934-fcdf411d8e14",
        "cursor": {
          "ref": "a2a878b7-d0a0-495a-be23-0ce6870947aa",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8e2881bb-2956-4d4c-b3fa-d0ed5dd97a30"
        },
        "item": {
          "id": "8b83bd11-6438-4fbb-b934-fcdf411d8e14",
          "name": "identifiers"
        },
        "response": {
          "id": "12022a61-593f-4993-a589-e2779b41d09c",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c229c59-d097-44f9-b732-065fef66a348",
        "cursor": {
          "ref": "e0b4a708-a186-4706-89b5-382dc17fe707",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3f624e7f-1f74-4a6d-b920-5e942b2f59bb"
        },
        "item": {
          "id": "3c229c59-d097-44f9-b732-065fef66a348",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "446444f9-6a7b-46c0-a7f1-616b55beb51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f2dc95-2145-4bce-a093-8744cef31116",
        "cursor": {
          "ref": "58dd3eef-8d45-4ca9-86ae-626ab7756596",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fb68b07a-fb80-42df-a976-28a229abced3"
        },
        "item": {
          "id": "62f2dc95-2145-4bce-a093-8744cef31116",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cfeb061b-8abe-44d8-826a-33660721b149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22504de1-2dbf-4974-b525-c80f1953c916",
        "cursor": {
          "ref": "abd69350-827e-4147-8f37-7778b2777618",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7668e2f6-8fab-46b8-a348-8b5d166a6978"
        },
        "item": {
          "id": "22504de1-2dbf-4974-b525-c80f1953c916",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a198c6fe-e0fb-4dcf-bdec-a2ad4536832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bc235a-6173-445e-b863-82e21c31c536",
        "cursor": {
          "ref": "a05202f9-5a23-47a4-9a0f-63ee7eab53ad",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9411d7a8-dbcd-477e-9240-76d634d2ddef"
        },
        "item": {
          "id": "e1bc235a-6173-445e-b863-82e21c31c536",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "48d6b626-c5d3-45e7-b2e4-63dc033f5cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66bb070-ef36-41d2-a551-f30d17ae40a1",
        "cursor": {
          "ref": "d890197c-0f7e-4694-bb8d-532b4e283714",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c39d900e-3bcf-41fa-9495-8b994c4f221f"
        },
        "item": {
          "id": "a66bb070-ef36-41d2-a551-f30d17ae40a1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0f5ab1d6-f43a-47fb-aabe-45320df0df24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28788c9-bca7-412b-b08a-8f26a1d08b21",
        "cursor": {
          "ref": "c4766ae0-d3a8-4f33-823e-65f9f19c2449",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "73432117-8d6a-49d4-bb9d-905282d3806c"
        },
        "item": {
          "id": "b28788c9-bca7-412b-b08a-8f26a1d08b21",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "931e3a67-370b-4ed0-a572-17d6b8d0d7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c39c15-69ff-41e2-93ad-067d312dbf78",
        "cursor": {
          "ref": "d8948295-084e-420a-b8b4-957abb6e57af",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dbc13edf-82ff-4565-b630-85baded1353c"
        },
        "item": {
          "id": "30c39c15-69ff-41e2-93ad-067d312dbf78",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "208c6a1f-a7fa-4c85-a8b0-28bd122ee467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e07a1fa-247d-48b8-a914-64706ce0bbe8",
        "cursor": {
          "ref": "2d0e9c70-ab15-49d6-84c6-42f757bf3e48",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f2182044-6deb-4256-a1db-d38796102ba6"
        },
        "item": {
          "id": "7e07a1fa-247d-48b8-a914-64706ce0bbe8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c996c218-8818-45d6-a30b-ad9a890a1f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7c7199-d361-492f-9217-d456394a2e06",
        "cursor": {
          "ref": "ab93a13e-3dd8-48be-b6ce-ff27d7d565d4",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "40180838-e08c-4f3c-a1b7-528068638209"
        },
        "item": {
          "id": "8e7c7199-d361-492f-9217-d456394a2e06",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "97b95c1c-6bb1-4534-9cda-1f84ba7f3534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913f5e8b-32b1-4b4b-8bc0-31b18e8bcdcc",
        "cursor": {
          "ref": "bba0526e-f991-4318-90bf-51fa74427fc7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b717d217-a504-4325-8550-d16e0a5b66a4"
        },
        "item": {
          "id": "913f5e8b-32b1-4b4b-8bc0-31b18e8bcdcc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2bacfc16-def3-46cc-9ddb-907dbae1f7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fa5848-3098-4467-a5c8-d8c773d635d0",
        "cursor": {
          "ref": "3b68e368-6c03-47e8-85d2-125c92465c71",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9c4b41e7-f1d1-40b6-993c-537c1d31342c"
        },
        "item": {
          "id": "d5fa5848-3098-4467-a5c8-d8c773d635d0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "162b7aed-a358-4499-8cde-b4cc3d843b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ca862d-04a6-4aeb-bc31-fe0393f05f3a",
        "cursor": {
          "ref": "8f4f16f8-ef51-49b6-9833-2d5021cbc216",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a270b7f0-3b9e-4449-9706-a847af2e06c7"
        },
        "item": {
          "id": "63ca862d-04a6-4aeb-bc31-fe0393f05f3a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "932a87bb-b4a8-49bf-95df-dd7937c667db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b73491-f1e6-403d-a264-a0a7e7f2f439",
        "cursor": {
          "ref": "faa904d0-02fc-4570-b20a-1708cdb5b449",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6622dd7e-f916-4f3b-b248-19c9ba1ce8c4"
        },
        "item": {
          "id": "f3b73491-f1e6-403d-a264-a0a7e7f2f439",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2af564ba-4eba-4163-b583-d060e5cd37b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1349b9-81ef-4ce0-af70-61fc99e13dcb",
        "cursor": {
          "ref": "11bef9c1-09c2-4a0c-ad65-ad275f7dc6cf",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1081f910-e355-43e8-9a43-e98b6705d73c"
        },
        "item": {
          "id": "4d1349b9-81ef-4ce0-af70-61fc99e13dcb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "878222b4-16ae-44d6-b3ba-3dc36b777ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91936c5-4556-4c74-9de9-f7f38a5418fc",
        "cursor": {
          "ref": "e9e29a77-f394-4609-8978-09f3423202d4",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "efdf5b1f-14d6-45ff-9716-c31ee0db5c8e"
        },
        "item": {
          "id": "d91936c5-4556-4c74-9de9-f7f38a5418fc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "43e6a262-4e42-416b-a7fb-43c1ff4fbfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8b5e28-d7aa-41c6-8afc-90435312c852",
        "cursor": {
          "ref": "b37a434b-d2b3-4f08-add4-4330ec42c2ff",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8111c97a-89eb-4d26-8ad6-dfeb8379293d"
        },
        "item": {
          "id": "bf8b5e28-d7aa-41c6-8afc-90435312c852",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "06385e42-bd00-4bed-bb1b-53f647a03377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a4bee8-7404-42fe-892b-6621bad70f10",
        "cursor": {
          "ref": "bcbd7a98-a412-4e1d-95fd-12addc1856de",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9e16fe95-d964-42bc-94c3-12f18916febd"
        },
        "item": {
          "id": "e8a4bee8-7404-42fe-892b-6621bad70f10",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1ff799b2-b199-45f1-8da7-b578d58c5029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3956eb-eee2-4963-87e0-72b7675fb78f",
        "cursor": {
          "ref": "38bae6a6-d8b4-4598-a598-fd592ed258a4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d7daeec2-6de5-4e34-99a5-080c5bb5e887"
        },
        "item": {
          "id": "1e3956eb-eee2-4963-87e0-72b7675fb78f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "07b6d359-5a1b-425c-9c5a-a22edfd7d025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ee40a4-6882-4980-bb34-bf9d965272f7",
        "cursor": {
          "ref": "be033638-35a4-4fc5-ac77-9ec0508dd9c6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4f2b105f-3ebf-4b29-a8d8-071788e5d78b"
        },
        "item": {
          "id": "39ee40a4-6882-4980-bb34-bf9d965272f7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "929dbee0-6244-4cf2-9cec-31c9b7867676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36a5ddb-bb88-439f-b938-b9130fea3a02",
        "cursor": {
          "ref": "11b01482-ac33-4cf1-bec7-4168d8897bb4",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f99d278a-9605-4dc9-aa61-7a8709b6eda4"
        },
        "item": {
          "id": "b36a5ddb-bb88-439f-b938-b9130fea3a02",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2e0df69a-8df8-4781-b152-62bd78a034c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16acf631-2540-4b75-955c-288ced6723da",
        "cursor": {
          "ref": "d7aa3c06-c456-426a-ac24-43b6b113f69e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cce6d8ff-ad39-48ca-9c1c-3235938d19ed"
        },
        "item": {
          "id": "16acf631-2540-4b75-955c-288ced6723da",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1377f292-c609-4ed1-82b6-46d2591fe63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c2821f-bf50-400d-873c-a08af5166e5c",
        "cursor": {
          "ref": "6d7cab52-1496-42c4-a7a4-d8a1f5b1aae3",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5f3f39db-12a3-44a1-922f-8757c0086270"
        },
        "item": {
          "id": "21c2821f-bf50-400d-873c-a08af5166e5c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "761c2b10-c7cf-4e95-b66a-ec6906c9b2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc67c6e2-f0ed-40bd-9242-f8d1d80545bd",
        "cursor": {
          "ref": "df2ee797-a897-431d-a366-701b1282e178",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7ea7f399-4787-4fe1-9028-fa575385d3fd"
        },
        "item": {
          "id": "fc67c6e2-f0ed-40bd-9242-f8d1d80545bd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0fd18868-81ce-4ac2-ade1-7a0955328a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4b8ae4-fcac-4957-bcf4-8a48c0f56e64",
        "cursor": {
          "ref": "395e0845-4b8c-4e7e-9274-d58f01cb7e03",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "30f6de6d-48fa-4f3c-8a14-b4c45fb43f69"
        },
        "item": {
          "id": "4c4b8ae4-fcac-4957-bcf4-8a48c0f56e64",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "58f7bf78-6ec7-44f5-816a-9cf3c35f4a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593535d0-242f-4630-91e3-f5893e6b24a0",
        "cursor": {
          "ref": "39ddf62b-020d-4c1a-a113-1bdc948e5bef",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8ef966fa-325d-4621-85db-519e1d165194"
        },
        "item": {
          "id": "593535d0-242f-4630-91e3-f5893e6b24a0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "19a67b77-392d-4681-a0a8-cf1758459c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f819dba-d443-40d8-b65a-72a1d9d57098",
        "cursor": {
          "ref": "3e875fba-26db-4d3f-b057-b705df38aacf",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0436a8bc-dca2-4ac9-9de5-a52c804327e1"
        },
        "item": {
          "id": "0f819dba-d443-40d8-b65a-72a1d9d57098",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8cc12f75-93d6-4c41-8957-445ff8d9a895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a77ca57-2e49-4506-9290-1cfad6d4daa3",
        "cursor": {
          "ref": "71c0ebb8-8928-46dc-91ee-9fba13e89bbb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "99b37acb-4172-497e-a361-1c794056274d"
        },
        "item": {
          "id": "8a77ca57-2e49-4506-9290-1cfad6d4daa3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "194c8f8f-bc03-43f6-98c2-8ac5ce86d81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70c665e-f966-482d-a509-373151e5cacf",
        "cursor": {
          "ref": "86e18ca1-c1b0-4c79-8bc8-4024bd7919e5",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9a544fc5-cd9f-456b-b759-47acfb8a5471"
        },
        "item": {
          "id": "e70c665e-f966-482d-a509-373151e5cacf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9eb59f0f-53f1-419f-834a-d140b68e3626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac8845e-27b1-488b-a919-65290bf28388",
        "cursor": {
          "ref": "0424ab1c-6973-4639-af8e-3a3139797a2c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "08af05e5-d41f-4c69-93fb-683c34261199"
        },
        "item": {
          "id": "9ac8845e-27b1-488b-a919-65290bf28388",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7ad6277f-da41-4533-8a66-03e85736356f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e447d0d-3d01-4ae9-baf0-88a4ae7bca0b",
        "cursor": {
          "ref": "db4318ab-722c-472c-9617-1045e28cd2ba",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6fc0a6e2-4efe-4774-8e07-0d68086c6eff"
        },
        "item": {
          "id": "4e447d0d-3d01-4ae9-baf0-88a4ae7bca0b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4f183914-2ed5-4690-9226-cee085f40ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266ae163-8a6e-495d-8f8f-dd6aadb92ff4",
        "cursor": {
          "ref": "46c93203-3fb6-435f-91e2-d72427833df6",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b6d8c6b2-f189-4ffc-ba16-c2015d2e33a0"
        },
        "item": {
          "id": "266ae163-8a6e-495d-8f8f-dd6aadb92ff4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2beed61d-07c5-4ef9-a2c7-42e27cd5b553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13660bca-929f-4915-b9ad-59c719cb3609",
        "cursor": {
          "ref": "ea39b57a-d221-47c2-b20e-64371158d12d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "da769bc2-ff1c-41c9-9053-c8842b36665d"
        },
        "item": {
          "id": "13660bca-929f-4915-b9ad-59c719cb3609",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aebab9e0-42ac-444f-a11d-847405c8acb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283833b9-bf5f-4618-8ce0-f6750b004769",
        "cursor": {
          "ref": "678ba5a1-a993-4b52-a4ff-dae1b2d58032",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6c6d99d2-534e-46fd-bc10-d94aba3838e5"
        },
        "item": {
          "id": "283833b9-bf5f-4618-8ce0-f6750b004769",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "be5160d6-4478-4e42-9c17-ca7149a418e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b53f69-8286-4710-8f87-5f40f673bb5e",
        "cursor": {
          "ref": "0ead5096-908e-44c1-812b-d1f1f4664551",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "90c9f609-bbaf-4c6d-afd0-afea57fb1252"
        },
        "item": {
          "id": "c6b53f69-8286-4710-8f87-5f40f673bb5e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fdf93709-10dc-4b94-bfc0-403f78bfedf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1ba414-19fb-4a6f-8b21-b75c8740d0d0",
        "cursor": {
          "ref": "0ef9fb66-96a7-4a03-be4a-8620242cc3d4",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5e449044-1abb-4a21-b05c-fdad4af19480"
        },
        "item": {
          "id": "fb1ba414-19fb-4a6f-8b21-b75c8740d0d0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eedc0087-b236-429c-8f72-5fb6985b42b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27a6412-7cf6-44be-a430-e5d9e48a659f",
        "cursor": {
          "ref": "4b7776bb-a9da-48f1-8b1f-c710cb316e2c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8144b870-45b3-46a3-a4b2-b424dc29b687"
        },
        "item": {
          "id": "a27a6412-7cf6-44be-a430-e5d9e48a659f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "188a9e50-cc8e-4d4d-86d5-4eda4f402883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ab8633-3647-4bf5-bd59-9423f63394f5",
        "cursor": {
          "ref": "771b2616-390d-41cf-acea-f04f83c669e8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c2571b00-db9a-4781-a02a-e416bb4fff11"
        },
        "item": {
          "id": "17ab8633-3647-4bf5-bd59-9423f63394f5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "126f0012-02c0-41dc-905f-1d4751c058cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c94a10c-a72d-4fea-b8ba-2cfa96407e4c",
        "cursor": {
          "ref": "6568d395-2c4b-4459-8942-2a64cc910fe0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "02b22874-d9cc-463d-ae37-00d649fed4db"
        },
        "item": {
          "id": "4c94a10c-a72d-4fea-b8ba-2cfa96407e4c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d8f1a0c6-c0f1-473b-bcf6-65daff1c21ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b11033-0c49-4272-94e9-ba3b98fb0294",
        "cursor": {
          "ref": "a82cddab-c308-47f6-9d08-10aa431cebd8",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fe523db0-0720-45ae-bf8d-9a7d1aaab430"
        },
        "item": {
          "id": "45b11033-0c49-4272-94e9-ba3b98fb0294",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "65387ef2-40fe-4123-a0a0-9d19a7a074b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4f156f-466a-4f7b-b5fa-7b16e6870113",
        "cursor": {
          "ref": "9a8dd56a-6a97-4211-8601-2dcdefb5432d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9dea5d0d-0770-4724-a1d5-6621f477ad09"
        },
        "item": {
          "id": "ca4f156f-466a-4f7b-b5fa-7b16e6870113",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "51056228-2ff4-49e5-8a41-d358aa145210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae423531-6cc6-4d0a-a81f-e8050b65be24",
        "cursor": {
          "ref": "f22a312c-d4eb-465a-8f96-3928e9a8cad3",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c81de459-67f5-4e5c-9d47-2df412d183cc"
        },
        "item": {
          "id": "ae423531-6cc6-4d0a-a81f-e8050b65be24",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "29667ef4-b835-4f9e-ac14-ebdcb4849776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96e3542-5753-4122-abc9-a37debd4c866",
        "cursor": {
          "ref": "aa388372-85df-4918-99e0-ac0bb66703f9",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "00620db5-137f-4b6b-88f5-da90f5697bd2"
        },
        "item": {
          "id": "c96e3542-5753-4122-abc9-a37debd4c866",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "972652ac-daf2-48a1-ba47-398dfa0bdfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f766d75-b02c-416a-b30f-e3403a19c6c1",
        "cursor": {
          "ref": "617baa71-4b95-4e86-be77-1c3812b1d528",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "43c6b609-f2e7-42db-b6b0-b49b94bd320a"
        },
        "item": {
          "id": "9f766d75-b02c-416a-b30f-e3403a19c6c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "136b2b4f-9520-4c97-b42f-2390d29d54e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ffe74a-c2cc-4384-bbec-ea4756693fcd",
        "cursor": {
          "ref": "05f58d9a-bec2-4b8a-8a1e-ec4adc9843f2",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0e69dda8-d392-466a-a6ef-56ccdda40dfd"
        },
        "item": {
          "id": "f0ffe74a-c2cc-4384-bbec-ea4756693fcd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1f6fff35-bca1-4c7c-9928-35702c711b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bf31c1-dd71-401a-a471-5d2bd65e3b55",
        "cursor": {
          "ref": "c6d837e8-e53c-47fc-95d1-e412d8953483",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7ba97c57-6a20-4eff-8025-f0ffb4ea0149"
        },
        "item": {
          "id": "83bf31c1-dd71-401a-a471-5d2bd65e3b55",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "492f4b5b-2108-4371-a68c-024bed1e404e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d471febe-2fc8-4294-83f5-b0514d2c55ad",
        "cursor": {
          "ref": "98acaca8-d449-40d7-bcc5-4972c3d971b1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4cf8fc05-fd34-4486-ba92-e3e8fc76b8e8"
        },
        "item": {
          "id": "d471febe-2fc8-4294-83f5-b0514d2c55ad",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6891912d-88ae-4740-a2fc-594d6b93c6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fbb841-0b09-4efc-b4b4-191e023cf5b4",
        "cursor": {
          "ref": "f8198523-cb50-4688-938b-f2ce575ab097",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "683402bc-2290-4fdb-b093-d7ea2442994b"
        },
        "item": {
          "id": "54fbb841-0b09-4efc-b4b4-191e023cf5b4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "20a8c6f7-4400-478f-8794-5ae896c9fd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d64b73-5cb5-4ca1-bba8-93bd14b06009",
        "cursor": {
          "ref": "c335eb1f-82e4-45d0-ae40-3697b886eb49",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3d8d438d-d5e5-491e-986a-98748341eaea"
        },
        "item": {
          "id": "74d64b73-5cb5-4ca1-bba8-93bd14b06009",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f4a1ed83-0254-4b20-9821-64b1ca8c5564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bd49f3-e849-40c9-96fd-89bcfb40a45d",
        "cursor": {
          "ref": "655e73e6-bab6-43de-9177-dc1667c62f2c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5a3b798e-d957-4386-80f7-c6bbe747e91d"
        },
        "item": {
          "id": "27bd49f3-e849-40c9-96fd-89bcfb40a45d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7f7bfb82-7a43-4262-ba5e-4f014ee60d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28dfa05-94b6-40b3-9f40-6eaa943022a7",
        "cursor": {
          "ref": "1d1c8bcd-a8da-49ab-840e-9b59583e6746",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "008d4c0f-bc1d-4997-a1f2-469c61484bb0"
        },
        "item": {
          "id": "e28dfa05-94b6-40b3-9f40-6eaa943022a7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cc03c921-4f86-4a2e-b5dd-46e0c921e680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc1e277-85dd-429c-b40c-551b021fe1cf",
        "cursor": {
          "ref": "a67e9796-660f-4c86-9759-32b6db8a8d99",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fc04952f-cd83-473f-9cb9-3c0ed1e4ccb9"
        },
        "item": {
          "id": "bbc1e277-85dd-429c-b40c-551b021fe1cf",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "80a803bf-5bc7-4df6-9de8-3e0e139943b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a072a55d-8d91-4d31-afe4-83ba74ef63db",
        "cursor": {
          "ref": "64ae07a1-0753-4998-9bc2-c10bd5309f8e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f6ae41ce-a32d-4151-a3f0-878e2219a317"
        },
        "item": {
          "id": "a072a55d-8d91-4d31-afe4-83ba74ef63db",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "928d8d41-1287-4edd-a8c6-bcb84773a472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0979bd5f-0c34-46e0-9606-3bbc684674e3",
        "cursor": {
          "ref": "edd2fd34-4b5d-41e6-9a47-256264582a55",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "82adcf88-b6da-4773-a70c-f06431dfd626"
        },
        "item": {
          "id": "0979bd5f-0c34-46e0-9606-3bbc684674e3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4776f236-f08d-443b-b3f7-491cfc120103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0203b7eb-a0ed-462a-bfbf-13809289f5a1",
        "cursor": {
          "ref": "178d4761-0847-4277-82bd-a80d7a324f81",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0e0e72be-c4dd-46fa-bcce-e8fa232ccbf4"
        },
        "item": {
          "id": "0203b7eb-a0ed-462a-bfbf-13809289f5a1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d69076f4-aa98-4541-a71a-4b7d6eede15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e8e991-9edf-45fe-94d2-a53a1d59b933",
        "cursor": {
          "ref": "617929e9-1a51-4c7b-89f9-13d86416ec9c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0de389a1-9a99-4e6d-92b5-8cd3ec47f72e"
        },
        "item": {
          "id": "a1e8e991-9edf-45fe-94d2-a53a1d59b933",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "17f22a25-18c7-47c1-a925-4b28dfbc0cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f636475-e6f7-4a51-b685-2ce6360f9dc7",
        "cursor": {
          "ref": "a4d5695c-de63-41a4-866c-91010dd0a56e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "947c17bb-3ffe-4e4e-bfe9-cb0912f41cb3"
        },
        "item": {
          "id": "0f636475-e6f7-4a51-b685-2ce6360f9dc7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "889ee727-7188-41b2-a705-877badb5fce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadd23d9-d44a-4c01-83e8-b338183eba61",
        "cursor": {
          "ref": "1f4deed4-952b-40ec-a3a4-24425a196a5f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bad3d2a0-28d2-494a-a35f-431796f43eb2"
        },
        "item": {
          "id": "cadd23d9-d44a-4c01-83e8-b338183eba61",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d5e2c3a2-a1db-4800-bab4-08fd78843503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe76ab5-1e7b-4deb-9c55-4c98c5c5166a",
        "cursor": {
          "ref": "8ca638bd-abae-4449-b4c8-7c94e98f0dcb",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "91170eed-4c19-4e87-a25d-3c6ae503c4ba"
        },
        "item": {
          "id": "9fe76ab5-1e7b-4deb-9c55-4c98c5c5166a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "978b8403-2c36-4622-a999-d1def5159244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e0f39f-ad39-4a46-a147-3284cf832d66",
        "cursor": {
          "ref": "e71da91b-1ed5-4041-8354-83da929bb94f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "02419126-7ba8-40e0-badd-9704a88f93df"
        },
        "item": {
          "id": "35e0f39f-ad39-4a46-a147-3284cf832d66",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "18ae0a85-464b-4618-ae04-07da770099d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c7add3-9239-4abe-b4c5-d73f6c40b6a3",
        "cursor": {
          "ref": "f49224ba-db50-4d20-ab31-40af143fa90f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "69252b1a-d088-4ed0-aa60-bb92902193f9"
        },
        "item": {
          "id": "04c7add3-9239-4abe-b4c5-d73f6c40b6a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "12926852-7b1a-4159-816f-7a5d4396f92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4bb4d8-4662-49c6-8488-0fdae16c58ea",
        "cursor": {
          "ref": "79cd14a8-373e-4b60-9517-febf39e12d82",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "66b7a2d4-54ba-4acc-be06-70806438f976"
        },
        "item": {
          "id": "3c4bb4d8-4662-49c6-8488-0fdae16c58ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c1f638c6-cd03-4e52-af63-fd18b3186532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e632de2-174f-421b-83b7-066a466b8b45",
        "cursor": {
          "ref": "38921f9b-983c-4cc6-9fdb-0da534c1aafe",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ee2f6884-8b77-4c6c-8d4f-56bf9d13a449"
        },
        "item": {
          "id": "3e632de2-174f-421b-83b7-066a466b8b45",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4271d9c3-e417-4ebe-8f85-c713b89e2711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79309a02-d04f-4b3d-ab93-4ad7fac0b5c6",
        "cursor": {
          "ref": "5dc0cf3b-9b02-4677-a307-5327fed3a58b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1d6aa1ec-b2fc-4596-9042-d67fec2463b7"
        },
        "item": {
          "id": "79309a02-d04f-4b3d-ab93-4ad7fac0b5c6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c213885f-0662-45d2-8ee5-26aa35c73fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b313ff-f5ba-4d95-8f04-1c72e1bef3e7",
        "cursor": {
          "ref": "4d2648a4-a02d-448a-9966-bfd4c8d68ad8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b80b6c6d-1ebe-4ca3-abdf-1badca93084f"
        },
        "item": {
          "id": "23b313ff-f5ba-4d95-8f04-1c72e1bef3e7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ec6e6556-3aa2-4179-b525-924194c169f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6131beb0-458e-4da3-a82c-6d65d4eca166",
        "cursor": {
          "ref": "eb6a44d2-bd85-4021-8702-0f6806f55ea1",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1969a963-dcaa-4bf9-996d-7cf16e008970"
        },
        "item": {
          "id": "6131beb0-458e-4da3-a82c-6d65d4eca166",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "89d6942c-08af-4094-9a96-935ea334cdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad3d0f1-a23d-480d-98d3-434e3aedfe72",
        "cursor": {
          "ref": "6e411829-3277-4d7c-891d-88f567a4adb9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "49a6fea0-e993-4ae0-ba04-aa89a3755574"
        },
        "item": {
          "id": "3ad3d0f1-a23d-480d-98d3-434e3aedfe72",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3f709dd2-d5dd-44de-b7fd-b194a762600e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080fe833-fafb-4ecd-a0c8-031db9418f2a",
        "cursor": {
          "ref": "f4a2f3a6-e461-4b66-9fbf-ea29a4430f15",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "123a608b-1538-45f5-9208-1dee547dbd6d"
        },
        "item": {
          "id": "080fe833-fafb-4ecd-a0c8-031db9418f2a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "94e25760-51dd-464a-b32e-f9d12a25252c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa099f5-86ef-4a75-a751-f7c890ba4651",
        "cursor": {
          "ref": "3176fc0e-a0ee-4d45-8174-549eb63fddcf",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3e383272-313e-4f1e-8b1d-5552cb4abd05"
        },
        "item": {
          "id": "bfa099f5-86ef-4a75-a751-f7c890ba4651",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b538fc06-a7e5-4ac3-bdde-af85a7bc8704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8b60cf-493a-4b58-a76e-39a19d3351ec",
        "cursor": {
          "ref": "4868fc07-3058-4b55-aafb-8fcfc7a4e531",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "419a5e91-69c2-426a-83a0-c4aa0c6acb10"
        },
        "item": {
          "id": "3f8b60cf-493a-4b58-a76e-39a19d3351ec",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "635c9ae5-055b-4e98-a0bc-c3fdf244192d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795f94bd-7426-42c0-a70b-b2914d2262dd",
        "cursor": {
          "ref": "1e5f40bc-f11f-4cc6-a0c9-64ba6644680d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "813a90f8-3f31-4f35-bca7-6ede7c9b7a8c"
        },
        "item": {
          "id": "795f94bd-7426-42c0-a70b-b2914d2262dd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5f87533b-88d8-4bc6-887a-892a7827b73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f995f67-1d58-4247-a58d-605dab1ffcb4",
        "cursor": {
          "ref": "15c9b896-9bbc-4d71-873d-03b129cf03ce",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c2d7e022-6d9a-4dfa-8a40-6eef4c699556"
        },
        "item": {
          "id": "0f995f67-1d58-4247-a58d-605dab1ffcb4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "83bbc660-dba8-44a0-8649-96527e2f4df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4704e7-1b75-419f-ba43-45db51579dbd",
        "cursor": {
          "ref": "58b36fbd-4036-4592-8d5c-d2ce99e9409a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c7f33715-21d3-47fa-875d-ecb290ad6be0"
        },
        "item": {
          "id": "eb4704e7-1b75-419f-ba43-45db51579dbd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c5a20bbb-22a7-4967-9aed-5021cdb49024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b9de56-25e1-4f42-9c7c-a783842567c2",
        "cursor": {
          "ref": "bf9daa6d-0333-4cdf-b8fe-8d8cbdfcb937",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3a6731e6-5af5-4632-84ef-403b45383ef3"
        },
        "item": {
          "id": "64b9de56-25e1-4f42-9c7c-a783842567c2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d81a88ee-2e55-48ee-945a-f460359b9ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dee02f8-7b85-40b9-b7fd-5ba28a163e79",
        "cursor": {
          "ref": "8fb66d03-89c8-4888-ae79-afa961831a01",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8c02d0fb-b9e4-49d3-93f6-ed69833369bd"
        },
        "item": {
          "id": "4dee02f8-7b85-40b9-b7fd-5ba28a163e79",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ef354464-a957-4f40-8d3d-020d120677bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffa5d1c-97c0-44c3-b166-83bf8affd0d9",
        "cursor": {
          "ref": "ebdba5ce-8dbb-4da3-940b-9e30b8133afd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6dbb9e1a-7786-4f58-b610-896549a5ed92"
        },
        "item": {
          "id": "bffa5d1c-97c0-44c3-b166-83bf8affd0d9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5380478d-feee-44b3-bd8d-b36360b7a934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0832aaf-28e6-417c-8a4a-b7b537e87ffe",
        "cursor": {
          "ref": "06580345-a498-4e99-9055-4751da5f6c0f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d0eea5ea-6671-491b-a9b9-43274eb1e58b"
        },
        "item": {
          "id": "e0832aaf-28e6-417c-8a4a-b7b537e87ffe",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2aaa7b61-d9ba-4f3a-bfb9-19a2df363bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59739cc-838c-4ddc-b59b-aa17a803a754",
        "cursor": {
          "ref": "ca0734e2-d14f-4441-98dc-e19cef1a8d14",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "858ae205-d8dc-4a4b-9af8-db32dd4f88a2"
        },
        "item": {
          "id": "f59739cc-838c-4ddc-b59b-aa17a803a754",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "31b0e938-0e9a-4a11-a5e0-ecca805a51a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f369e63-7c5d-482b-8ca1-417a88cdf365",
        "cursor": {
          "ref": "38fb03d7-305b-4ec5-a6b4-9dbae3c5515e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ac13a16f-7db9-46c3-a122-6bbc5be38e12"
        },
        "item": {
          "id": "5f369e63-7c5d-482b-8ca1-417a88cdf365",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "36c02ffd-bc19-41dd-847e-1265c4736b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b58877-6e3b-4f24-8187-7f6524555a3d",
        "cursor": {
          "ref": "18d17e35-0727-4dff-bbe2-f65b2bab1b0a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fbbace34-b53b-4b4d-a894-7488444a6d43"
        },
        "item": {
          "id": "99b58877-6e3b-4f24-8187-7f6524555a3d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e5c56ef3-cea6-4159-8770-d6aaa5833c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cfe837-df3e-4c37-abe4-557f32f39717",
        "cursor": {
          "ref": "bdb2c6c5-9fc6-429d-9d5a-fde0d1b4256b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c10c8c92-8a21-4567-a532-57524e119527"
        },
        "item": {
          "id": "26cfe837-df3e-4c37-abe4-557f32f39717",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b5647547-d3fc-4037-a75f-f75405457eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff105e1-a0e5-4a67-b498-7a0e5921fa83",
        "cursor": {
          "ref": "4f25baaf-eac7-49b1-964a-87f60010e645",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bcaf3b40-16ac-48c4-badd-ac422072c994"
        },
        "item": {
          "id": "0ff105e1-a0e5-4a67-b498-7a0e5921fa83",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a73d825b-05ea-4313-bebf-9e0f0e517fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a1a9bb-9000-4268-9315-ee487647fdb0",
        "cursor": {
          "ref": "63756012-598e-4f88-a2a9-172cf733f001",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1e27fc63-e1db-4287-92e5-1b0a4974f6c6"
        },
        "item": {
          "id": "41a1a9bb-9000-4268-9315-ee487647fdb0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4bd3928d-bdcb-4eb1-a64a-de1d90c09b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebf567d-cd40-4537-85d7-1aa4bfdbf6d6",
        "cursor": {
          "ref": "136fcabb-fcbf-42d9-a6ef-2df93bd89968",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7d2fa596-ddac-49e1-b310-13440a2e8c63"
        },
        "item": {
          "id": "5ebf567d-cd40-4537-85d7-1aa4bfdbf6d6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c3882000-b00a-4b0b-bcb4-c02b2f57b7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b084d93c-a999-4281-93da-7cdb3051c355",
        "cursor": {
          "ref": "59cdf938-dd7c-401d-977c-7a9bb1e1748e",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "09469f93-386c-4f0a-9c5c-36479ea3635b"
        },
        "item": {
          "id": "b084d93c-a999-4281-93da-7cdb3051c355",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "80456920-73c4-44d6-8d4f-48c032b46f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d60344-d47d-41b9-a466-9f21709be9d8",
        "cursor": {
          "ref": "13ac6778-f303-4b6d-b5ad-eb0d1b241a9b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9c115c14-cb24-478c-8659-2c408603b31b"
        },
        "item": {
          "id": "42d60344-d47d-41b9-a466-9f21709be9d8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "087fb801-d080-4565-b801-fa60c669ac8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06603ba1-f2e2-4cff-b675-af2a93676638",
        "cursor": {
          "ref": "777d8857-a139-4d2c-b9a0-bb189e7976a3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "11ed423b-a81e-40dd-857b-0e0bc0c61bcf"
        },
        "item": {
          "id": "06603ba1-f2e2-4cff-b675-af2a93676638",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a0d2b192-3e9b-4bfe-aad6-6e1eff77838d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4b2389-9396-4f12-80ec-03cd80141558",
        "cursor": {
          "ref": "51865ef0-1e39-4134-87c1-205ad61a9189",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0243f005-b3d7-417b-b35b-b85e0a390e81"
        },
        "item": {
          "id": "3c4b2389-9396-4f12-80ec-03cd80141558",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "90e010d7-62f4-47a0-a4ed-8d5f15757e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122256f8-d1b6-446d-a81d-0c247fbec0e2",
        "cursor": {
          "ref": "f6d64dfd-9aad-46d2-94f8-4fd511306402",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9bebbd21-b011-4401-8f3d-b2f3cf251958"
        },
        "item": {
          "id": "122256f8-d1b6-446d-a81d-0c247fbec0e2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "60f5992f-2b1e-47d2-a7d0-8215af239d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ee4d97-27bf-413e-a46f-039d07e346b1",
        "cursor": {
          "ref": "69aecf4e-d548-47ad-b3be-9337bff95511",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0febee9b-3d0f-4f6d-8428-8a73420b04be"
        },
        "item": {
          "id": "04ee4d97-27bf-413e-a46f-039d07e346b1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1f1cfc9b-f298-4055-aa35-2b723e2ed905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ac4431-616a-4d93-8722-9d85b0193e21",
        "cursor": {
          "ref": "1d8629d1-e8ca-4754-81f6-d619f1922205",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6ed75f74-7a39-459e-80e9-eb31637d8d47"
        },
        "item": {
          "id": "93ac4431-616a-4d93-8722-9d85b0193e21",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4f0d9792-cb00-4268-8363-2205ee641890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a6b248-e7cb-46e9-a6a4-26ddf5aee4a7",
        "cursor": {
          "ref": "5076474e-6f97-44cf-9719-8fc22a545d34",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e1dd9cdb-399b-44bb-8c5d-b7ac6b6b07a1"
        },
        "item": {
          "id": "15a6b248-e7cb-46e9-a6a4-26ddf5aee4a7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "530e41ee-0c54-4d6d-812d-5d4762946805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa2c3a5-be09-4d45-b91f-07435f19fa49",
        "cursor": {
          "ref": "f0acd042-e362-41ef-9c7e-6bf287085a7f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b4fbbdee-179c-4557-9f0d-0683575a264d"
        },
        "item": {
          "id": "cfa2c3a5-be09-4d45-b91f-07435f19fa49",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "46fbbf85-99f6-4db8-938a-aaac6c2b3539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f0c88d-ce3e-4e6a-aa7c-8646115de20c",
        "cursor": {
          "ref": "dfe15777-57e8-4731-909e-9ca27c4bb902",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "958db0bb-0397-4bf9-af9a-2336377d1872"
        },
        "item": {
          "id": "e2f0c88d-ce3e-4e6a-aa7c-8646115de20c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6fc0aa85-577b-461e-8464-137dff2c07d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd6471a-5e2e-4a0d-b711-b7ecd2eefdef",
        "cursor": {
          "ref": "35ec5ff9-8eed-4dde-99b1-2cf265af7503",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8c440c2f-37f8-4f98-9359-6195b83e4c73"
        },
        "item": {
          "id": "dbd6471a-5e2e-4a0d-b711-b7ecd2eefdef",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2c7b2dfc-da59-40c4-81d0-ff1119df34cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "41b490e3-f5ad-43b3-bd7f-a5592e07e8f5",
        "cursor": {
          "ref": "aac0dca5-fc7f-4094-8fdc-503cda37018d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4efbd833-04ec-4cc5-8ace-7310153462b9"
        },
        "item": {
          "id": "41b490e3-f5ad-43b3-bd7f-a5592e07e8f5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "96891324-6dac-49f4-8101-c885e05b8a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "eb72eca7-607e-4a66-b6c6-495ed2a9a5e5",
        "cursor": {
          "ref": "c95af3dd-b334-416f-82e6-0468e9b82fcd",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b746290b-889b-4445-b8dc-903642f884fd"
        },
        "item": {
          "id": "eb72eca7-607e-4a66-b6c6-495ed2a9a5e5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6e80fc52-16c0-4ff1-9b9c-82ca88e97e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c2cf4b9a-3b0e-42ba-841e-67fb775354dc",
        "cursor": {
          "ref": "a94b8267-c3ca-4c91-a97c-4819ed91244b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "db967f15-a82a-4ea3-86f3-3aa9785d45ce"
        },
        "item": {
          "id": "c2cf4b9a-3b0e-42ba-841e-67fb775354dc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "926eeec7-05d6-42e8-9790-215c39a6676a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "18951d85-0473-4269-a940-880544b68ff9",
        "cursor": {
          "ref": "635d423a-3bc5-48e7-9c92-701e63997d28",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a86f639f-ed50-47bc-942f-0e7b0d29ae65"
        },
        "item": {
          "id": "18951d85-0473-4269-a940-880544b68ff9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e99c7968-709a-4bca-b588-ceb3f459efa4",
          "status": "Created",
          "code": 201,
          "responseTime": 9892,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2b7446-43f0-4265-88b6-cb2bec88c7bb",
        "cursor": {
          "ref": "4e9c992f-b509-442c-a7fb-3e18ab3534e0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "74c8e1fe-5ab4-4507-90c5-3039081caa0b"
        },
        "item": {
          "id": "6f2b7446-43f0-4265-88b6-cb2bec88c7bb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c0b6b55e-3761-46c2-ae99-5d4d2392bd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f69636b6-043e-488c-bdd2-ceb00c8111a2",
        "cursor": {
          "ref": "705b12a8-0234-43e1-9092-bdec6dc140a1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "464e2d30-bc95-4875-801a-3d7da58bafdd"
        },
        "item": {
          "id": "f69636b6-043e-488c-bdd2-ceb00c8111a2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1172c583-6dca-452c-bc4e-d12afb96ff6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5bc035a3-294d-4c56-b985-dd3a747491e1",
        "cursor": {
          "ref": "e55ebb0d-f898-4d4a-b8bd-d4ad9c500448",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "36d970c5-2111-4103-b31c-0724eb6e9d1d"
        },
        "item": {
          "id": "5bc035a3-294d-4c56-b985-dd3a747491e1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c5eacff3-206f-474c-95c9-032c3d9150ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c266e9-2a30-4bc4-8210-668fd2fede1f",
        "cursor": {
          "ref": "4bcbb058-bbd5-433a-80e8-41ebd1f96858",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c57c2b3a-8341-448c-9eac-11f63fdd4152"
        },
        "item": {
          "id": "16c266e9-2a30-4bc4-8210-668fd2fede1f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6b6c61d5-91af-4108-8de4-b2734449c7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48780f9-43c8-4425-b240-53b0b97712ce",
        "cursor": {
          "ref": "992ea10d-c326-4ff1-96be-bbef111694c7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "48a24274-be0d-4210-8777-a54d6e61082b"
        },
        "item": {
          "id": "e48780f9-43c8-4425-b240-53b0b97712ce",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9f4b7e0f-e67d-4dd6-89d0-8527bac8934b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6a253e-e9d4-40cc-b689-5ec55a89fccc",
        "cursor": {
          "ref": "ae474563-de9e-451d-bb2d-cbe74b405bfd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "17d317be-d77c-4b34-8266-38caf69b6623"
        },
        "item": {
          "id": "1a6a253e-e9d4-40cc-b689-5ec55a89fccc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "df8cc36d-e2f4-4d64-995b-3ba575ea22c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4311df82-f147-4135-94e0-552aa09d2a47",
        "cursor": {
          "ref": "9cd1e2b8-36d1-48e6-825a-e608fc1b5468",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "42029477-4a50-486f-8eac-de427acf034d"
        },
        "item": {
          "id": "4311df82-f147-4135-94e0-552aa09d2a47",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "681bfb94-efe5-4bee-b4af-c6e9d9be8c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e4cd6d-49c7-407c-9f26-383a067d01d5",
        "cursor": {
          "ref": "590616b2-5a22-4481-b379-11e78112eb15",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fab5752f-16d9-49a5-a4b0-0f8d124d1f4f"
        },
        "item": {
          "id": "a5e4cd6d-49c7-407c-9f26-383a067d01d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "73711550-c107-4b92-a2dd-84d72e648db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aace003e-5a00-4053-a9d1-cd0500a5933c",
        "cursor": {
          "ref": "b24e68a5-8f4c-4ee2-8431-b547b9afd328",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4b29fb92-763e-453e-8fe8-5f205e928ce2"
        },
        "item": {
          "id": "aace003e-5a00-4053-a9d1-cd0500a5933c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1263acb5-1c29-479e-a95a-8b28ff2395f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fcdc3e-cd9d-4c25-81b1-ebc0bb04f47e",
        "cursor": {
          "ref": "4d84c270-fc1a-48f0-be1d-99609550df4a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e34f7f9f-30fb-41a4-9dee-6096e9e769bd"
        },
        "item": {
          "id": "92fcdc3e-cd9d-4c25-81b1-ebc0bb04f47e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5e52f307-7389-4727-9ef1-950aa468ef68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d90d2ec-5311-40f8-b056-81b079a91f15",
        "cursor": {
          "ref": "13292288-2b26-4bd9-b91c-af3c0667b025",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4530ba8f-10a5-4f9a-ac62-bb4c5574b7e5"
        },
        "item": {
          "id": "1d90d2ec-5311-40f8-b056-81b079a91f15",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c0988732-5666-4cdf-971b-002d5c1396c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6620e4fb-6f36-4a5e-a372-83b2831b3eda",
        "cursor": {
          "ref": "f68d5e73-5117-4c62-aa0c-3c00f6fc5671",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "961ab9b7-1ee1-4c0c-bcfa-48863d435f03"
        },
        "item": {
          "id": "6620e4fb-6f36-4a5e-a372-83b2831b3eda",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a078ecad-b7ee-4ed2-92f6-b3d1890211ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6992e347-29da-45ce-a26a-16bafc948b58",
        "cursor": {
          "ref": "9ef96698-29a3-4d00-8e35-d480560c6bbb",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "daba427a-91c2-4743-9a5c-51e673ac17e0"
        },
        "item": {
          "id": "6992e347-29da-45ce-a26a-16bafc948b58",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "01991bb4-ac3f-4f75-9490-1f23cb310533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141a6897-1019-4b11-9704-f6ae2c7d6200",
        "cursor": {
          "ref": "9437ddc0-02fb-400b-8c18-2c46fc39b8d1",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dc50f994-04a4-415d-bacb-04dc85607b27"
        },
        "item": {
          "id": "141a6897-1019-4b11-9704-f6ae2c7d6200",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e21fcab7-1f81-485d-86dc-f7532f807d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5730b08c-00c1-462f-b966-117a8323b150",
        "cursor": {
          "ref": "5d7ed093-1d58-4dc9-a6f1-e4bacfce610d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a009dbcf-7f04-4d0a-a5e9-22788217964d"
        },
        "item": {
          "id": "5730b08c-00c1-462f-b966-117a8323b150",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "41cc1573-7452-4094-8bc2-29bc5164423e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f7f9ae-9b3f-47cf-9e34-3e06949f02bf",
        "cursor": {
          "ref": "96a2d3ee-5602-48b5-95d4-120faaba1c85",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "353a4a22-ceb7-4efa-b3bc-48d664a47b68"
        },
        "item": {
          "id": "a3f7f9ae-9b3f-47cf-9e34-3e06949f02bf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e62b3d74-9da5-4abb-ae24-d2bf22733bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3926f70-5b47-434c-81eb-4ff573486953",
        "cursor": {
          "ref": "974a46a9-b852-4b59-a42e-a62ab350703a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "69edf084-0d2a-423d-9d93-43f23e44fc52"
        },
        "item": {
          "id": "d3926f70-5b47-434c-81eb-4ff573486953",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a498b581-ba44-464e-8a82-6bda4d6f6c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538964c7-71ea-4ae6-995e-8cd9515df6be",
        "cursor": {
          "ref": "81f7b69b-d9dd-4e28-bcb4-5e57a1650e31",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "75e3ea9d-f2aa-4aac-b5a1-4842754f27cd"
        },
        "item": {
          "id": "538964c7-71ea-4ae6-995e-8cd9515df6be",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b6355140-c9e3-4f84-84bf-3a8ed4138251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e1a5bd-e72e-4681-a45e-622d3ca1545c",
        "cursor": {
          "ref": "354e56fe-5d1d-468f-8991-a0ac7500d88e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4baad56e-a81e-4c33-b8fb-a24a793b4e91"
        },
        "item": {
          "id": "c1e1a5bd-e72e-4681-a45e-622d3ca1545c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ce5e4852-4698-43f1-8851-d28790d26f27",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 83,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a2fa961c-5263-45d6-8dd8-449c48b05883",
        "cursor": {
          "ref": "268bd181-8b32-460f-94c4-a92fb34c001e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5010230f-bbfd-4a3d-8de3-ad006ea41129"
        },
        "item": {
          "id": "a2fa961c-5263-45d6-8dd8-449c48b05883",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "48fddd0b-e531-4a46-89eb-bf5e334adffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d11f34e-b29a-4ba2-9cbd-60d2e4619549",
        "cursor": {
          "ref": "1ba7f925-0073-4942-bc39-48db20c9a321",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "97d0ff78-1656-467b-927d-a9c0ea17e290"
        },
        "item": {
          "id": "8d11f34e-b29a-4ba2-9cbd-60d2e4619549",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4a763587-885e-4fcc-812f-f7b71171482d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a738fd-a6ab-43f9-b9b4-42ec6444c313",
        "cursor": {
          "ref": "ef22f250-2f17-4554-964a-3c8643ddf73e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a42615b3-240e-4a32-aaa7-d46b2199acce"
        },
        "item": {
          "id": "51a738fd-a6ab-43f9-b9b4-42ec6444c313",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "01c01a1a-619e-4cd5-814a-6cff216f5a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4135f9-e7e4-4e40-81f0-808da2d7f9c4",
        "cursor": {
          "ref": "c8436f20-26ca-468f-a748-5e86bd666e62",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "798e2e21-c742-4ff0-92c3-4f1d4c949c16"
        },
        "item": {
          "id": "4b4135f9-e7e4-4e40-81f0-808da2d7f9c4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5a6c6b97-3351-4ecb-9e73-25f503ff4131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be94de51-161c-4520-ac8d-94f0c540d41d",
        "cursor": {
          "ref": "7620c2ca-2480-4341-9827-0104a4c18ef2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5938a21a-6dea-4116-a5c3-6e84429950b4"
        },
        "item": {
          "id": "be94de51-161c-4520-ac8d-94f0c540d41d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e92d9b50-cff2-4521-ad8e-c99ca66de118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c51b0d-a7c6-4d87-b13f-c8656ab98d55",
        "cursor": {
          "ref": "80076396-f474-4a80-a457-7a13a56dfebd",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cc8be5fd-36f2-4c9e-9eb8-6b05f4aed9cb"
        },
        "item": {
          "id": "30c51b0d-a7c6-4d87-b13f-c8656ab98d55",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4d19747f-b146-41b6-b577-e9f0ecfb8cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be1cb31-77eb-48c9-ae61-920cfad729d7",
        "cursor": {
          "ref": "04dc83ca-0e3c-456e-8b3e-6025128e179c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dee08cac-0b1f-4031-bea1-f0c77bbae77c"
        },
        "item": {
          "id": "6be1cb31-77eb-48c9-ae61-920cfad729d7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "78a88464-ad7d-4a5e-91c9-914b585aebb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541311ce-8d8c-4bbd-a281-c5bd5a0473ea",
        "cursor": {
          "ref": "0af7fa67-7a2c-4a7e-ae11-d652dbbcb0b0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b5f2d230-e1e9-4c98-bb06-19dd9a2841fc"
        },
        "item": {
          "id": "541311ce-8d8c-4bbd-a281-c5bd5a0473ea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "145334a4-fb1d-4b76-83b9-f3666c870dbe",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "36033729-021c-471a-84d5-38af468ff76e",
        "cursor": {
          "ref": "83dce308-8a50-4297-961f-dc33c2f44617",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5e33a7aa-e089-4c35-ac92-ff46f495ee03"
        },
        "item": {
          "id": "36033729-021c-471a-84d5-38af468ff76e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6125ad3c-9c2b-449f-80cc-08c4530457b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2605a33c-2c6f-41dc-be34-07d7a776811b",
        "cursor": {
          "ref": "9d27e14c-463a-4fcd-93dd-72223733730f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "152444dc-a072-4b0a-9a27-f0d7e6b52802"
        },
        "item": {
          "id": "2605a33c-2c6f-41dc-be34-07d7a776811b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6f267167-9fed-4d6c-87cb-4d6a4dcceee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62f1e0e-548e-433b-b9ce-86566cc37f4a",
        "cursor": {
          "ref": "8fea108c-7fc2-4e41-a85d-d148b3bb51a7",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dba17127-0e2e-48fa-8a83-f3de028e4db3"
        },
        "item": {
          "id": "b62f1e0e-548e-433b-b9ce-86566cc37f4a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "772e76c4-3b20-459a-ae08-413eec13e27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f4fc94-ecaa-4817-85c2-46669a580491",
        "cursor": {
          "ref": "0e9a40a3-1eb0-4ffa-bdb0-40edecc41301",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c6838dac-3bd0-4d94-b71b-c1ac98c9a724"
        },
        "item": {
          "id": "64f4fc94-ecaa-4817-85c2-46669a580491",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f1d72944-3078-45cf-b479-114e7fd2e9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992563cc-ea6c-459f-aed1-bb39648b707b",
        "cursor": {
          "ref": "b5a0f194-51a1-4e10-af99-a39e05e24b80",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2ead2922-e3bb-40fe-8ce3-1ed2739f8915"
        },
        "item": {
          "id": "992563cc-ea6c-459f-aed1-bb39648b707b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7a414856-6e93-443f-b8d4-93e9489d57ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77075b54-6a80-4e73-9f97-6d8d057d7848",
        "cursor": {
          "ref": "a7a3985c-b50a-4adf-8505-205884ac2c16",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8034248b-4c41-486e-b789-c00a229697db"
        },
        "item": {
          "id": "77075b54-6a80-4e73-9f97-6d8d057d7848",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b616c3ad-84dd-4cce-bc2c-a177a5953e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db49c55-8411-4688-ad22-888f9ba2c3b3",
        "cursor": {
          "ref": "d30fa37d-ad5b-4f31-b2c2-5aeda6ff6b2f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d938e76d-ceaf-4c4a-9ade-2d05bd0a1781"
        },
        "item": {
          "id": "7db49c55-8411-4688-ad22-888f9ba2c3b3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "da51cd2e-13a5-45b1-8704-3290df8cec61",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 99,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "977bcaff-cf74-40e7-b024-30b90e504410",
        "cursor": {
          "ref": "07a7aa3b-3632-4e48-a39c-2b9431da28af",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "775f0a4c-b0c5-443e-978a-959423563e8e"
        },
        "item": {
          "id": "977bcaff-cf74-40e7-b024-30b90e504410",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8bcfb575-8620-48d4-9013-9cd60632f01c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "cb0ab1a7-f0f1-4b3d-9122-8b7dd8fd5e5d",
        "cursor": {
          "ref": "070abfee-b0d7-4836-9623-0516dc35ae4a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "04e4ef12-3c0d-4fe8-8149-941e1c30d92b"
        },
        "item": {
          "id": "cb0ab1a7-f0f1-4b3d-9122-8b7dd8fd5e5d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "41979525-621b-46fc-b3e7-96aa24de6fc2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "e91c808a-f867-4648-9c1c-d7a81a9329ff",
        "cursor": {
          "ref": "76b32c7c-d862-4da3-bc5f-81f2da226dab",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "301ff7d5-689d-4362-b3a9-58c038425f25"
        },
        "item": {
          "id": "e91c808a-f867-4648-9c1c-d7a81a9329ff",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c7594d3f-e6b8-43f2-ba53-9553e3441e60",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "59d50a0c-1040-40b4-a100-f42d91d42c6e",
        "cursor": {
          "ref": "639e858e-bac4-4148-9357-672b785797b4",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5f1f9d9c-0374-49b8-8428-e0e1b29200be"
        },
        "item": {
          "id": "59d50a0c-1040-40b4-a100-f42d91d42c6e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "737a5748-118f-4fcc-9dd2-2237382327c0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "332fc210-1c58-4e11-b935-3e92107a355a",
        "cursor": {
          "ref": "63f835e3-4200-451f-9c06-a5c3b49632b5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e5aa6f45-e39f-458e-bb4f-97802e104d91"
        },
        "item": {
          "id": "332fc210-1c58-4e11-b935-3e92107a355a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "09875cb5-af1f-4ddd-88f0-8b3459eda6cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "14eea5b2-4f68-4b01-8745-89b7bcb10be4",
        "cursor": {
          "ref": "4d843433-5075-430e-89d6-ca23d8d189a0",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "088ec61d-af32-4503-8dd9-00ad648adefc"
        },
        "item": {
          "id": "14eea5b2-4f68-4b01-8745-89b7bcb10be4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "13ef8bb0-1b56-4ab3-835d-8afb2cafc9dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2dc099-8c9c-4a4b-8025-5edbcc361f5a",
        "cursor": {
          "ref": "0f09ec8d-e3bc-4328-8e00-c96544e55e29",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ea812211-1e05-43fd-bd9d-8634cdd46883"
        },
        "item": {
          "id": "dd2dc099-8c9c-4a4b-8025-5edbcc361f5a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "93f8129c-d050-4294-ab18-990a9eb925ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e0a0c9-94e5-40e9-8ba4-9ee7d795c781",
        "cursor": {
          "ref": "5c71bda1-3390-40be-a9d0-c9a7d7d6c336",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cb3c5298-4a3c-4ab0-9b0e-62771ebceef0"
        },
        "item": {
          "id": "d3e0a0c9-94e5-40e9-8ba4-9ee7d795c781",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "51c00429-f947-4185-94af-8b65a19bf2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc376e53-de37-49de-ba55-d0af23f09918",
        "cursor": {
          "ref": "40c47f3d-d3d3-4dc8-98de-b3e46e1875c7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3aa68037-e244-40e2-b3bd-bc656bf319de"
        },
        "item": {
          "id": "fc376e53-de37-49de-ba55-d0af23f09918",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "08692334-8cb7-4905-9b0a-01bc73c31682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7945e479-8bf2-444e-8326-ad6fb503298b",
        "cursor": {
          "ref": "c51eae7a-7b1a-44e5-86cd-95daa672045a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8abe4edc-9b0c-4176-9ef2-38dc6238e6e3"
        },
        "item": {
          "id": "7945e479-8bf2-444e-8326-ad6fb503298b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dee6ad2a-8fc9-45f0-8bc7-55d86296ace7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38358d7-fc58-47d1-8695-96693c306b62",
        "cursor": {
          "ref": "c633937d-f23b-4643-9230-2b1db85d4752",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bd8cec1a-4eee-44af-98e7-484b2388ce93"
        },
        "item": {
          "id": "d38358d7-fc58-47d1-8695-96693c306b62",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "15267315-6ded-46e7-b0b6-994de30d8aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23f4e5f-a5c6-4c7f-afa3-259ca76b93df",
        "cursor": {
          "ref": "127ed582-ec3f-4adf-ad3d-31e287df30b5",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9914913b-849d-498e-9091-0ec39b87951f"
        },
        "item": {
          "id": "c23f4e5f-a5c6-4c7f-afa3-259ca76b93df",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9c506cbd-3a5f-494e-966b-4c6851f8d571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a53faf1-9546-4d09-b90e-896e6b00493c",
        "cursor": {
          "ref": "2f6f3396-5f47-4921-a45e-6d3433165da0",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "db226b9e-63ca-4cd7-9ac7-1ac1959083a9"
        },
        "item": {
          "id": "6a53faf1-9546-4d09-b90e-896e6b00493c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b35f17ab-ef54-4dfa-8ddb-78f6af8d14a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2ac26b-7bff-45bc-a676-22fee5505892",
        "cursor": {
          "ref": "24f7ba5c-0b44-4dd8-8f65-233534d656a5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "347a1ddc-b232-4b04-a161-4df4b078045c"
        },
        "item": {
          "id": "dc2ac26b-7bff-45bc-a676-22fee5505892",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1f9c898d-6ab2-47a8-960e-e704281b8b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fee02f-fb6b-4ab1-ab49-b87d40284f50",
        "cursor": {
          "ref": "c94d6318-ea73-46df-80cc-b87078fba4b2",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "50f4398f-e8e4-4bd9-a0a1-1222798b62f1"
        },
        "item": {
          "id": "f2fee02f-fb6b-4ab1-ab49-b87d40284f50",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8cc78fc8-4b2c-4293-8f61-2efdd196e5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c296de1-5f6f-4d3f-bbda-59ef1a44fa34",
        "cursor": {
          "ref": "b90f7820-1f82-4b85-a720-b776df6868e1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "42132a74-c34e-4b0e-913c-48f5d11069df"
        },
        "item": {
          "id": "0c296de1-5f6f-4d3f-bbda-59ef1a44fa34",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cb208fbe-ba86-4a69-8264-e485602c4d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5b6ed0-8a9c-41a6-84c9-d96bf09a8ef6",
        "cursor": {
          "ref": "b239aa9c-33a6-450a-9c64-8171f3cb3f31",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5bef749d-bbef-4a62-a585-b0d280d20724"
        },
        "item": {
          "id": "5d5b6ed0-8a9c-41a6-84c9-d96bf09a8ef6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ed6b35b0-8639-4af0-960b-3ecca620f546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d8e0c2-5c9b-431f-a2f9-cd0340c9beca",
        "cursor": {
          "ref": "06301016-f245-4524-b543-9a9857c05c12",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "575a63f9-236f-470b-819a-20c9ba6c4f88"
        },
        "item": {
          "id": "13d8e0c2-5c9b-431f-a2f9-cd0340c9beca",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ebb36972-31b2-4460-a174-3269b5ae6086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31772c1-38aa-4d1f-976b-298180f391cd",
        "cursor": {
          "ref": "eb3144be-68cc-4387-a32a-1911cd3d8a47",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e9279a87-98f0-4242-9655-367729d8223a"
        },
        "item": {
          "id": "a31772c1-38aa-4d1f-976b-298180f391cd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d6738ec8-edcc-47fb-a30a-8838f5cb7541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d1e7ca-b670-4c57-b7a5-e0c96ab90590",
        "cursor": {
          "ref": "1f4b0ae1-17c6-40ca-91d1-c5a366d3dfbc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "90385d73-0995-4f58-be07-9eb0f510347b"
        },
        "item": {
          "id": "26d1e7ca-b670-4c57-b7a5-e0c96ab90590",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c5a99144-cce2-42fa-bd93-4fd274f69878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0731a141-4f02-48a6-a1c9-adcef2d8c3bf",
        "cursor": {
          "ref": "ca1fe32f-47df-433c-bb1e-07dec74ad461",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "deda4428-380e-4db7-b63d-e4cf549ed8d5"
        },
        "item": {
          "id": "0731a141-4f02-48a6-a1c9-adcef2d8c3bf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cf9d8f9f-d522-456a-b36a-4b4f56a39456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022e3519-d0db-4109-b541-d73c3bb2419f",
        "cursor": {
          "ref": "2373be23-a0d1-450c-a2a7-872788f5d23f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "375acfc9-fdd5-4038-990e-643c3cdb7f7c"
        },
        "item": {
          "id": "022e3519-d0db-4109-b541-d73c3bb2419f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "69b45c85-4477-4677-848c-4d1ea47d8ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b67c1ce-0058-4582-a768-2d909c8a6fe0",
        "cursor": {
          "ref": "bd679075-9ea2-440d-a3f1-f9b4956305b0",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "160d8bb5-372e-412e-a8da-3b82a08450b2"
        },
        "item": {
          "id": "8b67c1ce-0058-4582-a768-2d909c8a6fe0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3992e53e-7841-479f-b353-f3a550e6f8dc",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "b8d0c359-fa6e-41bd-9070-c055a8ba6b0d",
        "cursor": {
          "ref": "54e34efb-2339-412a-a6d0-ccd9055013f2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "536cd12c-3a0b-4571-aa36-0f010539b203"
        },
        "item": {
          "id": "b8d0c359-fa6e-41bd-9070-c055a8ba6b0d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d8749bd5-fadc-48a8-aa80-ee8cd449543c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86221f89-b3dc-4656-8036-dbbe090e33ad",
        "cursor": {
          "ref": "8eaaaf29-d962-49a4-8589-376ccff6a03f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d308caf9-19e3-4ff1-93fe-65e01156f5b3"
        },
        "item": {
          "id": "86221f89-b3dc-4656-8036-dbbe090e33ad",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "71e767a2-9f9e-4efa-b011-8ed27e4c8ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d5f9ff-c577-494d-8fad-9f1e100cdd84",
        "cursor": {
          "ref": "2ca0fafb-8362-4717-b43c-83c107577926",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dd78c745-54cf-407f-996a-ddbc0ef3c5df"
        },
        "item": {
          "id": "48d5f9ff-c577-494d-8fad-9f1e100cdd84",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "484c35ba-0985-435c-a2d3-963e44a1e331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2472aa3f-36d3-41b5-9bf1-2b25314c1903",
        "cursor": {
          "ref": "c9625ffc-e304-448d-b7eb-e3053a38a799",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4847a143-d6f1-4343-90f2-ce6e44dd5d2e"
        },
        "item": {
          "id": "2472aa3f-36d3-41b5-9bf1-2b25314c1903",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f6c42047-6fed-4a47-ad08-4da5faace4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb61dd2-9643-45a9-901d-9773e812971b",
        "cursor": {
          "ref": "a870c1e7-0c33-40b0-a366-f2845fc262d5",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f76b0524-fe49-4e8d-9492-dd8a930618c3"
        },
        "item": {
          "id": "beb61dd2-9643-45a9-901d-9773e812971b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3d443089-a002-44b6-b9a0-085a39960602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a775e455-a507-4289-badd-93c6e8f5b25c",
        "cursor": {
          "ref": "ab2f7203-09ad-457a-be5b-60df93c69081",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9e03c1c4-8483-43d2-b2cc-7b78129e265e"
        },
        "item": {
          "id": "a775e455-a507-4289-badd-93c6e8f5b25c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a0f276a8-4ec5-407e-abb8-3ac879c4de69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa658c39-ca70-48c4-9f25-9c25bcd27acc",
        "cursor": {
          "ref": "6fa6257c-e7b4-4848-98ea-c0cf3af384b1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3804cd00-d781-438d-bd44-8b81fa8c59df"
        },
        "item": {
          "id": "fa658c39-ca70-48c4-9f25-9c25bcd27acc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ce4ebe2b-7712-44fa-97de-ff794b94727a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf3b3d7-47fe-47c3-aab3-29420080d43a",
        "cursor": {
          "ref": "2d6183fa-3302-4ba7-aa9a-0038f2884359",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8f6772ac-43c0-4924-8189-1e60961d2e8b"
        },
        "item": {
          "id": "4bf3b3d7-47fe-47c3-aab3-29420080d43a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "19113a7a-4bdd-49ec-9eb9-f18ba803fd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72354c4d-4ed8-47d2-bb5a-32373944f259",
        "cursor": {
          "ref": "0c27d763-be97-45bf-aef0-fcabb627c372",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2ab15319-d5d9-4de0-91ba-e54fd96406ec"
        },
        "item": {
          "id": "72354c4d-4ed8-47d2-bb5a-32373944f259",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8a56f054-e25d-43ee-a53f-3b86de4ae832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789d5c7e-e8a9-4002-8f05-77d5bc229c17",
        "cursor": {
          "ref": "109909a9-fc97-4f89-9dbb-9e1a3c5da5c7",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7eaf620a-d170-487d-b53f-dd722384de9d"
        },
        "item": {
          "id": "789d5c7e-e8a9-4002-8f05-77d5bc229c17",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9cb7dd88-6066-4fda-ae0e-8ded8ba6a354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd1f8f4-a964-4925-ab8e-9698059ddd58",
        "cursor": {
          "ref": "e2643abb-cef3-44a7-9484-190c799b9c74",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a307d196-eafd-4b10-83bb-9d04a6deaf61"
        },
        "item": {
          "id": "6dd1f8f4-a964-4925-ab8e-9698059ddd58",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "43aba740-c6e5-4789-a303-200a2d42ad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757bcdf2-bbf7-47da-8950-2e164a2640fb",
        "cursor": {
          "ref": "106d48de-87e3-41a7-ba85-e5c5d215321d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "33c46e46-663e-446a-ad3c-17ef9e64934f"
        },
        "item": {
          "id": "757bcdf2-bbf7-47da-8950-2e164a2640fb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1cb984f3-2d83-4ad2-90d7-4dd2d076b446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2625706-b70e-4e26-bf69-fd62601aace0",
        "cursor": {
          "ref": "dc7bca1c-4208-4bfc-a295-b6a30b2cf9a0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e7c736d1-f76d-44ca-8909-7a65693c572a"
        },
        "item": {
          "id": "d2625706-b70e-4e26-bf69-fd62601aace0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ac32d0fb-11e6-4820-a4ee-5310ac2acfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad10547-2656-48c6-b8d8-e0f3e31abd03",
        "cursor": {
          "ref": "c9138c79-601a-470c-beb3-d7061801dc16",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "64c6541c-46d8-4623-b83d-b77385205294"
        },
        "item": {
          "id": "dad10547-2656-48c6-b8d8-e0f3e31abd03",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "85a81c2c-ae2c-4071-b61a-44be0114821d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd967fd0-2f07-4698-b0a7-1d6610ff731e",
        "cursor": {
          "ref": "05da035f-619b-43ce-a766-b1ace79fff3e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fa804e83-dcaf-4b30-9d12-760cb1e96a1b"
        },
        "item": {
          "id": "cd967fd0-2f07-4698-b0a7-1d6610ff731e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "154c6a27-29d5-4d37-88d1-a5b7cac43be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8515b695-ddaa-47df-9994-2a60befd34c2",
        "cursor": {
          "ref": "7d5b2e3a-2a18-467c-a662-6d2e238321fc",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8c1d3ee7-196d-4a6f-901f-f5898a5158b9"
        },
        "item": {
          "id": "8515b695-ddaa-47df-9994-2a60befd34c2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bf9c2008-edbd-45ef-8375-50a385ae81b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6efd50-db2f-42b6-b1b2-9f76bf64f64a",
        "cursor": {
          "ref": "2e3b3c04-585e-4a94-a11c-5688c0af9d80",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "12d92131-8c4a-4ee3-9b4f-9edbb47be460"
        },
        "item": {
          "id": "3c6efd50-db2f-42b6-b1b2-9f76bf64f64a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5439eea8-0bc7-4ea8-aeb0-f3e46d3f5c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7117ee-99a0-4879-9914-a532134cfc58",
        "cursor": {
          "ref": "fbce6330-cf76-4fd2-a33d-790177503d98",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7dd6ac9c-7958-4a6c-9ba0-5e37477ac471"
        },
        "item": {
          "id": "2a7117ee-99a0-4879-9914-a532134cfc58",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f9b0893a-bfe8-4461-ad66-f6ed7928b3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b62700f-9b11-4ffe-82bf-266a32d2bfb6",
        "cursor": {
          "ref": "2afc9fe3-19ac-47fc-99f7-9d3f2c38a302",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5b7ca279-2965-4f5e-a1f1-9481395b9bbb"
        },
        "item": {
          "id": "2b62700f-9b11-4ffe-82bf-266a32d2bfb6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bfc69f0f-1039-4965-a850-4086ef2acbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66f6cb5-b5cf-4333-9c2f-feb735d614f2",
        "cursor": {
          "ref": "553a7518-71e4-41d7-b641-b0ace5542556",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f847ea06-fafa-425f-bb6e-cba899beb18e"
        },
        "item": {
          "id": "b66f6cb5-b5cf-4333-9c2f-feb735d614f2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f2b5df20-e389-4c50-871b-b8bfea55bce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6658168-2bc4-4df9-bb09-40911ee244bc",
        "cursor": {
          "ref": "48adc217-1198-4e07-9c80-e8cabccb5e21",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5da03aa7-2ba8-43e5-b799-6359222a0c7e"
        },
        "item": {
          "id": "d6658168-2bc4-4df9-bb09-40911ee244bc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "eb053501-6389-4dae-a917-d58afae702a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabbc1c5-e61a-415f-b469-d6137eeabeb2",
        "cursor": {
          "ref": "029c8c80-c1ba-4124-a518-d65b1edd859c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f639dfb3-4760-4275-be67-aa1619bc9d18"
        },
        "item": {
          "id": "cabbc1c5-e61a-415f-b469-d6137eeabeb2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2f0c717b-e254-4aaf-9042-738ad977a6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55397f5-e878-46cd-ab04-dcc9f1b4d328",
        "cursor": {
          "ref": "5f84606e-c676-4617-b684-f41076950aef",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "95077cd6-60bb-453c-8a40-48c5aec395e2"
        },
        "item": {
          "id": "e55397f5-e878-46cd-ab04-dcc9f1b4d328",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f8d0ea30-379f-4236-a91f-93724c178dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc99f407-39c1-4f95-9737-cab69b079284",
        "cursor": {
          "ref": "9c57338e-1691-407f-b9eb-8e225f619077",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8b9c4510-7dbb-4daa-ae20-a8ed11d960b3"
        },
        "item": {
          "id": "fc99f407-39c1-4f95-9737-cab69b079284",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5e486cec-3b5f-483a-91a0-307d5f60b24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb535195-5287-45f7-a80d-09e39648b229",
        "cursor": {
          "ref": "a753faa6-9bc8-41d0-a237-555373ca9085",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "720a2448-4a09-41cf-a5f9-0b345e311c09"
        },
        "item": {
          "id": "eb535195-5287-45f7-a80d-09e39648b229",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "250d54f7-91d4-42a6-afad-716231481f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c693563c-2c93-4a4e-8081-7a615545375c",
        "cursor": {
          "ref": "608110f5-7f66-47d2-87f5-3fd73890677e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1530fb0e-fad2-4940-ba73-d35d613225d4"
        },
        "item": {
          "id": "c693563c-2c93-4a4e-8081-7a615545375c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e3ab66e9-bada-4024-ae06-8db5a58ab1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f193442-62f3-4904-a6b2-bfbd3b142b10",
        "cursor": {
          "ref": "f8e35673-3e4b-412c-b6c2-243ae82e6f5b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8b78c617-4ebe-417e-8e35-a26d1d34721e"
        },
        "item": {
          "id": "8f193442-62f3-4904-a6b2-bfbd3b142b10",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9abf186a-beb3-4fe5-8036-5192bc2af8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20aa5c36-b56e-4a9c-b65a-fb23d59fd8b6",
        "cursor": {
          "ref": "e61da5fc-00a9-46e1-a304-6129138512c4",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bec27aa1-076f-44f0-9bb8-0feabea65ea1"
        },
        "item": {
          "id": "20aa5c36-b56e-4a9c-b65a-fb23d59fd8b6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6463e2bd-e1f0-419a-8fb9-976119495ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0518aac5-76cb-41b9-9830-1a5b1b1be2a6",
        "cursor": {
          "ref": "4763739d-b493-4c4e-b5e4-e643cf70938b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "60075b59-e058-43b3-a8b1-269b98c41d68"
        },
        "item": {
          "id": "0518aac5-76cb-41b9-9830-1a5b1b1be2a6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "37ef6a30-494d-4172-99cf-5d9fc7abc4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec3383f-d608-4f05-aa24-4063fc4160cb",
        "cursor": {
          "ref": "34a65b0b-02ee-4672-88fe-aff2b053fde2",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cca91925-8ab4-4806-85f2-0885effe2b57"
        },
        "item": {
          "id": "3ec3383f-d608-4f05-aa24-4063fc4160cb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a50c6d78-1a4d-4444-a092-027eccaed58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f496bc-14e0-4a3c-9974-c6fd8eaa3df9",
        "cursor": {
          "ref": "eca508a1-b5e5-4851-b401-03db54351825",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f056c84f-8ac1-4527-81b9-ef96a0884b58"
        },
        "item": {
          "id": "32f496bc-14e0-4a3c-9974-c6fd8eaa3df9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9718d135-9240-4554-bf1d-4c115f9d91ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020fbfe7-e807-4857-911a-4a05238acb9f",
        "cursor": {
          "ref": "02ea42e6-900f-49ca-bb9d-eec8e88e5a87",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "11db9a45-1239-41d8-9350-1927b99ed0bf"
        },
        "item": {
          "id": "020fbfe7-e807-4857-911a-4a05238acb9f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "135e3726-54a3-49ae-b6af-1f2c10a6f6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5594641-7338-421a-a050-0c80561ad6af",
        "cursor": {
          "ref": "ace3ab39-9be4-4120-bca7-d10d4ca9bf89",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "12a04ae5-f9f9-443f-b76f-288250584a04"
        },
        "item": {
          "id": "b5594641-7338-421a-a050-0c80561ad6af",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b97cfb75-246a-4189-9fff-7f82b374c138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14514a02-744f-4dde-8335-b2fd36622767",
        "cursor": {
          "ref": "b7bd2341-0ef7-427c-9e1e-08ffa1d9bb66",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "268be06b-edd0-4bea-af9b-b412e7941ede"
        },
        "item": {
          "id": "14514a02-744f-4dde-8335-b2fd36622767",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "769eb252-0726-4933-94e9-def527d6014a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748ad768-0c9c-4275-ae71-1d394be70166",
        "cursor": {
          "ref": "e1225817-fea3-449d-a53d-25d1ede4339a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "23bb0e39-af53-4f5b-875d-e3b914ccc3da"
        },
        "item": {
          "id": "748ad768-0c9c-4275-ae71-1d394be70166",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5cc532b2-efc5-4753-95f3-708d31a85811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efd581d-5067-4349-9d01-422d07208941",
        "cursor": {
          "ref": "de08eb86-7f14-44c6-a31b-b7cd7c39e3a0",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d903a6ca-1f02-429c-ba52-fe9951da5880"
        },
        "item": {
          "id": "6efd581d-5067-4349-9d01-422d07208941",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2629bec2-d3ff-4042-bed9-d57405f5f18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81650f73-e696-4182-bec1-0b9b71ba7929",
        "cursor": {
          "ref": "6b49c650-312e-43c9-be40-2e462a3ecd3a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "613f08ed-85a2-48c2-955a-8c3943d15252"
        },
        "item": {
          "id": "81650f73-e696-4182-bec1-0b9b71ba7929",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d8a79e0-a51a-4653-9425-fc1446460a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cba2ae-086f-4968-bfef-03178cdcb1ca",
        "cursor": {
          "ref": "5898e98d-3d0e-4193-9fed-c9670ef43a1d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1b159ffe-a35a-4cb6-9488-2ea51b4bcf18"
        },
        "item": {
          "id": "e4cba2ae-086f-4968-bfef-03178cdcb1ca",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "160ec8ac-34a0-436b-b031-cb97a8bc00cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c240d668-7377-4763-8e9c-46c9deef5d09",
        "cursor": {
          "ref": "8f1571c6-b96e-4bda-b7f1-d74962378fb4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ab6b83b9-5140-4539-bed6-334f76c47300"
        },
        "item": {
          "id": "c240d668-7377-4763-8e9c-46c9deef5d09",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "965246ef-d851-4713-9ac6-d06c97db276a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cb6292-cfdc-4014-9624-897ad16ff2c0",
        "cursor": {
          "ref": "c4fef15b-72d5-4c36-97b7-c249ee6b661a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9aa8e198-d33e-4184-b927-e09721fc65a6"
        },
        "item": {
          "id": "e0cb6292-cfdc-4014-9624-897ad16ff2c0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d4b30c13-8713-4cc9-bc9e-8fd9719432cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47978931-2d73-4733-8199-4e4aa4018b20",
        "cursor": {
          "ref": "ec5b54d7-d862-490c-a603-72cb379e288a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "41f2e408-1c44-446e-ac4f-68b26149a5e5"
        },
        "item": {
          "id": "47978931-2d73-4733-8199-4e4aa4018b20",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "acfae421-d948-41c2-b7f3-b7440d877b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160fb53c-f28d-4e64-b8f0-38021715de03",
        "cursor": {
          "ref": "b3881385-fbe9-4b9b-bbcf-f47e7e18a907",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b720bf26-36e5-43d1-8e46-00c232a7919a"
        },
        "item": {
          "id": "160fb53c-f28d-4e64-b8f0-38021715de03",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5fb95005-2801-4aa3-a63d-c617ba8ed9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfd5e6f-5cac-4a45-a5e7-5ba6f5016fbb",
        "cursor": {
          "ref": "41e6b5fc-3d0b-489f-8c5c-20935ece0283",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1e380b55-4352-42b2-9811-8fe1f0d46569"
        },
        "item": {
          "id": "2bfd5e6f-5cac-4a45-a5e7-5ba6f5016fbb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d2d6501e-873d-4778-a366-4fb02425b11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f411d7-fb3c-4ca1-9299-8cd6e58fc6e5",
        "cursor": {
          "ref": "19f0d4ac-81ce-432e-a282-10aada16d138",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "39ab6b75-b56d-4aca-9e3c-597f1f94b800"
        },
        "item": {
          "id": "53f411d7-fb3c-4ca1-9299-8cd6e58fc6e5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aae81055-3fed-4d3a-95dd-8017ac8b6b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d264df08-d1ec-46a2-8745-315e6f999765",
        "cursor": {
          "ref": "ca94bd7d-be63-4d9e-995a-55ad45c2514b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b9a8b709-4a79-4cf7-b21e-c57e5d91ddcb"
        },
        "item": {
          "id": "d264df08-d1ec-46a2-8745-315e6f999765",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "abc4aa06-2166-4c54-a01c-d010b143ab79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a92afc1-a8e0-4867-95b7-4de86840cb0d",
        "cursor": {
          "ref": "8e7c7a2f-bbca-48a8-b6e1-c92a31b9fbac",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2a1e70de-0615-409b-b5d7-e9b509a49b84"
        },
        "item": {
          "id": "0a92afc1-a8e0-4867-95b7-4de86840cb0d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f7968430-fca4-43b5-a798-14bc1b704ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc1084e-a877-4780-993d-1e1f6c0df1bd",
        "cursor": {
          "ref": "3a48c0bb-bc8a-4f79-90ca-bafe2f0c6566",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "903e6414-48e1-425e-aac5-72a4140c1f94"
        },
        "item": {
          "id": "bbc1084e-a877-4780-993d-1e1f6c0df1bd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ff0d23e3-2e23-4ecb-80cd-1fc9f7db2012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257328e1-578e-4afe-afb7-4dc956b368aa",
        "cursor": {
          "ref": "b4de2486-365f-4c4d-86c3-7790b2a61203",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cae21597-a3b0-4f3d-a871-4c31bafcc7a4"
        },
        "item": {
          "id": "257328e1-578e-4afe-afb7-4dc956b368aa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c3e59723-c36e-45d6-91a7-ebd4386dc451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4e8822-0edb-4adc-aa23-b08387772903",
        "cursor": {
          "ref": "de3a1fd9-9b92-4b8f-8dbd-d7d1625b8696",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4c9da890-caa3-40d9-8451-1004f703ed19"
        },
        "item": {
          "id": "3c4e8822-0edb-4adc-aa23-b08387772903",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a449e654-b45e-4bef-8b5d-beee640bb573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca043c3-8c84-440e-86fc-ddebbfaf370c",
        "cursor": {
          "ref": "cc84f360-89fc-4416-a875-6824f86a31bd",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5a7c448d-a5df-4d53-bf84-a385bd0f217b"
        },
        "item": {
          "id": "9ca043c3-8c84-440e-86fc-ddebbfaf370c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8425af34-dd1b-4cb7-b036-dd9607831bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b183fa4-de40-4a1e-9329-ce22ad359e2f",
        "cursor": {
          "ref": "07ec3259-65ca-4ebb-a67c-a56c84c7a857",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "981873a6-a062-4621-bf02-c1022b54e516"
        },
        "item": {
          "id": "7b183fa4-de40-4a1e-9329-ce22ad359e2f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "08e95483-b047-48c1-aeb3-572ffd03fb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd7e237-a800-41ad-b976-a51b0d360f5b",
        "cursor": {
          "ref": "0e7c9b13-1b3a-4ff0-9f85-36dd133957f7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0520687a-0607-4022-92f2-bb61623699b7"
        },
        "item": {
          "id": "dfd7e237-a800-41ad-b976-a51b0d360f5b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "34ec9a88-c94f-40db-9481-0dfbbf1f6493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e18a9ae-25b7-4335-a4f5-316bb929c32a",
        "cursor": {
          "ref": "bcbded71-9512-44ea-84de-212015c44344",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b4dddae0-4205-43a3-ae52-d5793a94fe97"
        },
        "item": {
          "id": "4e18a9ae-25b7-4335-a4f5-316bb929c32a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "06114735-8339-4634-975a-aa4326246038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d99c7a2-bd91-4aaf-a598-bd549e55f932",
        "cursor": {
          "ref": "2069ba9e-780c-4cfd-a18a-866bbd618dad",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b66c30f1-dc1e-4f5b-8f67-c501cdd0e051"
        },
        "item": {
          "id": "6d99c7a2-bd91-4aaf-a598-bd549e55f932",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "44f592e5-fb5a-443e-a952-ca1d885fb3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6569a7-bc13-44dd-b9b9-cae0baa76d40",
        "cursor": {
          "ref": "90e480b4-4375-410b-936c-861d0ce28e2d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3fa01dee-c33d-478f-94d1-5d5929a82290"
        },
        "item": {
          "id": "7b6569a7-bc13-44dd-b9b9-cae0baa76d40",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "09d2ee02-9a89-4134-8769-07c2b234aaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a689392e-8ae6-4593-a9c2-59f5d81abd7b",
        "cursor": {
          "ref": "e5ce6859-61c4-4740-b084-db4f3612c176",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "75d031cd-2b3c-45bd-ad35-2db4801db113"
        },
        "item": {
          "id": "a689392e-8ae6-4593-a9c2-59f5d81abd7b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9dde519f-15ab-4a2a-863d-50660883781a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac68f86-60f4-4ef0-b686-a3de1f41fced",
        "cursor": {
          "ref": "2a083ac6-b81e-4aac-aed2-f740f058e9f1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "795ad320-a47d-4fb9-9a5d-c17dee399e89"
        },
        "item": {
          "id": "cac68f86-60f4-4ef0-b686-a3de1f41fced",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fe343675-bcad-4d2d-b267-725583e9c6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a179ac-b5fc-4d2b-ad2b-0bb30fa7b3be",
        "cursor": {
          "ref": "8001d713-3910-4d5b-badf-097b7eee7308",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "879c3a54-5165-420c-b05e-8588c747d8cb"
        },
        "item": {
          "id": "a5a179ac-b5fc-4d2b-ad2b-0bb30fa7b3be",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9cb17eb7-7c7e-471a-9e7c-3860c64597d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8709a2-1ca5-49a4-ba14-d9cd7dab22f0",
        "cursor": {
          "ref": "68e62b1f-84d2-4676-ae6e-81313c2f2e10",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cb45a5fa-7eab-48fb-be70-35e42d780a4c"
        },
        "item": {
          "id": "ad8709a2-1ca5-49a4-ba14-d9cd7dab22f0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a86636e4-9007-4838-b1af-4187d85f773c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2b0a23-5360-41f4-bff8-4d83eef936c8",
        "cursor": {
          "ref": "c5fea48a-afd7-4c2d-9fb9-3ab75531b3d6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3a8a11f0-08cf-464a-942f-adb1a4cec1e4"
        },
        "item": {
          "id": "7d2b0a23-5360-41f4-bff8-4d83eef936c8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5a684df2-c41f-444b-a0eb-940c72d222be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0176dfb-783e-4354-bb6d-a39fcf4b09b8",
        "cursor": {
          "ref": "2715a5ad-aa22-4688-863e-2f80983ee49c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5e506db5-31c1-4db2-a954-aee78f214d31"
        },
        "item": {
          "id": "a0176dfb-783e-4354-bb6d-a39fcf4b09b8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b9229c7b-53eb-4ecc-92ca-9d4e735602bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7275b982-b8e2-439e-9749-045bf03310eb",
        "cursor": {
          "ref": "9808f869-33f0-4ca3-a75d-286b03e5de6e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e1bfd202-3b48-4e34-b0ec-486afab36f79"
        },
        "item": {
          "id": "7275b982-b8e2-439e-9749-045bf03310eb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dbce0806-b7c6-4f62-b3bc-e815230f2f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a64300-f8f4-4b79-a81d-2aa46c953eab",
        "cursor": {
          "ref": "4c58f961-bbff-4083-ba23-4ef462107cf2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1e6ee9ac-e863-4f6d-b468-378cdf10ae3b"
        },
        "item": {
          "id": "61a64300-f8f4-4b79-a81d-2aa46c953eab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "25ed820c-d2c5-41fa-880b-0774f05578c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239593a0-7e76-443e-b11e-e5de456c9b90",
        "cursor": {
          "ref": "cef49b95-be93-4b69-ae0c-984860ec7a4c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a39d1875-b9b3-4806-948f-2ce1e20a3349"
        },
        "item": {
          "id": "239593a0-7e76-443e-b11e-e5de456c9b90",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ca582844-68d1-4bbe-a78b-e0ec04d383eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed6ce1b-84f3-4e9a-9d71-a6bc8ec270db",
        "cursor": {
          "ref": "695a5e09-1dbb-40e8-9a53-8098c0d6def3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "70411c0c-02a5-4fd4-bff7-24f0c6e15e35"
        },
        "item": {
          "id": "1ed6ce1b-84f3-4e9a-9d71-a6bc8ec270db",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f590ae8a-b291-4216-9ac8-663f2aa6a5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d204a945-26ca-4251-837d-9c09914d2fdb",
        "cursor": {
          "ref": "06847a1e-5409-4016-9e4c-a8e6b3adb28a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "97c591b6-5350-4066-96e6-511d4967bf46"
        },
        "item": {
          "id": "d204a945-26ca-4251-837d-9c09914d2fdb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "98049d91-95f3-4cbd-a96d-a5c322dbebf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05c8036-1d89-47c7-9805-b231fd208e06",
        "cursor": {
          "ref": "cec2a895-6aef-493d-9191-6b2005be8209",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ae38cfb4-0d75-4448-b90b-b6b1a17eace7"
        },
        "item": {
          "id": "a05c8036-1d89-47c7-9805-b231fd208e06",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d4719d8a-d3b4-4e69-8158-0c3e1679cf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bcc4ac-4cf6-43ee-938d-a3991c3046df",
        "cursor": {
          "ref": "e87b087c-a281-4e6a-9b6a-e7a141a4338e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "75e7a5c6-4bd6-4990-93fd-ab96a3e075be"
        },
        "item": {
          "id": "46bcc4ac-4cf6-43ee-938d-a3991c3046df",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "912b4999-09b7-4bbd-9ec3-1dc826c0d97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c299c76d-bc87-452d-ab6e-2a2311e4cfef",
        "cursor": {
          "ref": "05ad8ab2-25e3-4c3b-9b68-3449597e8ffb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "246b1abb-94a2-4688-aa73-5a4f831e096d"
        },
        "item": {
          "id": "c299c76d-bc87-452d-ab6e-2a2311e4cfef",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5d0cca0e-fe84-487f-9128-e2891d08f49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18759652-52d3-4e37-928f-befaef401c5e",
        "cursor": {
          "ref": "3a7cedac-7550-4cc6-a723-c6e19dca4296",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "77661de2-4fc9-45fe-a682-4672ba124a75"
        },
        "item": {
          "id": "18759652-52d3-4e37-928f-befaef401c5e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5c4d6a7e-362a-4f16-9661-c1cf51476d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49c5be4-4600-4707-9560-aa73404086e2",
        "cursor": {
          "ref": "a15ea512-0c5a-49a1-8767-c3a4c06b1ee1",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "951b4992-0a1d-4dc4-a3e5-03a9ec6a1b85"
        },
        "item": {
          "id": "d49c5be4-4600-4707-9560-aa73404086e2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a7f0e79e-9830-4454-9744-46152e6366c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4d7f93-c458-4596-a6d7-a0bc0cc2da5b",
        "cursor": {
          "ref": "007ab52b-2d8f-44b0-95c1-d66df9402b7b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5e7b3fcf-0d69-47fb-b4e4-b5a49e1bdcf5"
        },
        "item": {
          "id": "dd4d7f93-c458-4596-a6d7-a0bc0cc2da5b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "89f99e81-87a2-4efd-89ed-683feb4d0edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851d2412-b91e-4e4d-a56f-7c8c1e6a8397",
        "cursor": {
          "ref": "9a7cdab5-68ba-4096-be95-dea94b6fa231",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "86d8b0e9-a967-497d-8b95-aaa50e2b8322"
        },
        "item": {
          "id": "851d2412-b91e-4e4d-a56f-7c8c1e6a8397",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8cec8896-71bf-4a77-8ae4-11434ea474f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98aab0e-f46e-4dd1-bddc-1a5e3d464e0a",
        "cursor": {
          "ref": "dff1f7be-2e14-4ef5-b5aa-b560d0b3e12f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "945f2c16-442a-40ec-b6c5-acd48c7cdbab"
        },
        "item": {
          "id": "c98aab0e-f46e-4dd1-bddc-1a5e3d464e0a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e8c2aba5-18fd-47d7-afd4-de83ee4fd6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4139c5cb-7eb7-41c7-b538-4e10c40b8168",
        "cursor": {
          "ref": "03e97eba-087d-49d7-8a4f-9a9a381f9fb1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7fe40422-c6f5-469c-b918-888ed64694cf"
        },
        "item": {
          "id": "4139c5cb-7eb7-41c7-b538-4e10c40b8168",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "47574f47-34ae-4fc5-8c38-8138807328dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f3f680-b776-42e0-8afc-a7d6cfc47c9b",
        "cursor": {
          "ref": "15306381-09f3-4653-ad3b-7e20a2112669",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "23f47d2f-eae7-463e-b980-238007ddf327"
        },
        "item": {
          "id": "f9f3f680-b776-42e0-8afc-a7d6cfc47c9b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2168a05a-c7f3-43fd-bfcc-8c0c9c3264b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8e4e1f-92ba-45f2-80a3-b76fe14bd272",
        "cursor": {
          "ref": "8c5dd7b9-40a8-470a-98d0-2bbc8123745b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4bb2d342-1e94-4b01-b580-fcab1c163cde"
        },
        "item": {
          "id": "8e8e4e1f-92ba-45f2-80a3-b76fe14bd272",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "43638265-5a6c-4be1-8822-31cb369dac23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1b9f28-16c7-4b5b-992d-793a9cc0d389",
        "cursor": {
          "ref": "95dcea18-3118-4777-98b0-0765e87e1688",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3c3deca8-82e5-4a83-8ff6-b36f4f2d74fc"
        },
        "item": {
          "id": "5b1b9f28-16c7-4b5b-992d-793a9cc0d389",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "19c5917f-6497-4073-8ef7-0e757e65cc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a143aa-15f3-4a31-8518-b8b31265eb75",
        "cursor": {
          "ref": "9307f498-7ee1-4ce5-a9d3-c38ac0d2dd96",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d7a9f829-2226-4d77-ad90-2cd2e5b88953"
        },
        "item": {
          "id": "66a143aa-15f3-4a31-8518-b8b31265eb75",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "15aabae5-4d0a-45b5-b1e9-92af12032183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5017240-92b3-4b7d-9343-b86d0957dd3f",
        "cursor": {
          "ref": "f1d728dc-236c-4444-8b51-a4c8975f93df",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "de89eaf2-f54a-49e1-a625-7694982c31dc"
        },
        "item": {
          "id": "c5017240-92b3-4b7d-9343-b86d0957dd3f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8c21bc5f-d6d3-45f6-853f-4b6b3b9f491b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a18d296-f6f9-497a-852d-f360d7462224",
        "cursor": {
          "ref": "1b99ace9-214e-4f3b-9a3a-1a9c329002b1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bd0f8afe-c371-4e18-a788-f33b09f96224"
        },
        "item": {
          "id": "5a18d296-f6f9-497a-852d-f360d7462224",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a19c9bad-4e7b-40e4-b3cb-5d78355f7b86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9f84dc-13c5-4c14-95f2-c691d90d1891",
        "cursor": {
          "ref": "be6e143f-e4fe-4ce5-b256-291434291a25",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f776ecc8-4c9d-4ce6-8bf2-6e5265035685"
        },
        "item": {
          "id": "bf9f84dc-13c5-4c14-95f2-c691d90d1891",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "876573ab-6867-4da3-a506-1fd867b8f1e9",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ff2b48-751e-4b95-a029-100fe6cd0b1c",
        "cursor": {
          "ref": "37faa608-cc63-46f4-ac04-cc6266fe67e2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9603766f-c991-477b-887a-4a78b10aeff8"
        },
        "item": {
          "id": "24ff2b48-751e-4b95-a029-100fe6cd0b1c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ac9434c5-ea68-4836-8dd4-2d085b38b5f2",
          "status": "OK",
          "code": 200,
          "responseTime": 2435,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b841b43-4d88-47fa-bd7b-1dbc53e86855",
        "cursor": {
          "ref": "ffcebac1-9549-4a5e-932b-1ff04ddcafeb",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fcf46c03-1afb-40fa-9545-bdbd15b2a0a1"
        },
        "item": {
          "id": "7b841b43-4d88-47fa-bd7b-1dbc53e86855",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9eba065d-f8e2-4493-850c-b54092cd7e6d",
          "status": "OK",
          "code": 200,
          "responseTime": 2819,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c131b630-19ab-45be-b9d8-1303cbe62a3f",
        "cursor": {
          "ref": "194ed2d3-5ee1-403a-92a0-41d08b1c9b61",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "323bf890-e229-4845-abca-8a60d18c0e48"
        },
        "item": {
          "id": "c131b630-19ab-45be-b9d8-1303cbe62a3f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d49b081e-8838-408f-a588-b7dfef1fceec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c131b630-19ab-45be-b9d8-1303cbe62a3f",
        "cursor": {
          "ref": "194ed2d3-5ee1-403a-92a0-41d08b1c9b61",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "323bf890-e229-4845-abca-8a60d18c0e48"
        },
        "item": {
          "id": "c131b630-19ab-45be-b9d8-1303cbe62a3f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d49b081e-8838-408f-a588-b7dfef1fceec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654aa3a8-8aba-4df5-8604-283e8d2d82cd",
        "cursor": {
          "ref": "301a96ac-f4d3-4f9e-b7b6-1362fddff3a7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3041e578-e9c3-4cc3-84dc-64967aeb07ce"
        },
        "item": {
          "id": "654aa3a8-8aba-4df5-8604-283e8d2d82cd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c58fe3d4-94d3-4038-be8b-f35c93bccc30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1163aaf2-3725-4a00-b392-29e74b33bc61",
        "cursor": {
          "ref": "1497c90a-2625-4c49-b865-db7fb62e61fd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d9e9643d-8dd8-4dc2-86de-36a9a0bfc4a2"
        },
        "item": {
          "id": "1163aaf2-3725-4a00-b392-29e74b33bc61",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8648b5ad-3005-484f-a179-46a4a7272b52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}