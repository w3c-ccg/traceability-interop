{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c4cfffe3-719d-4420-a51a-f8821f0712da",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a74501f7-fc3c-485d-86b5-1e8b894611ff",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dbc45fb9-22fb-4208-a166-6e0d5da51978",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7641d8e6-4545-4d45-8e6c-aa513e53a2a3"
                }
              }
            ]
          },
          {
            "id": "8eb7c058-1992-4929-bd28-96b2fdf087b7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5caa9a6d-d2af-4dd3-a9b1-e679ada5b263",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ef732941-d003-4b98-a550-7bfd6f14586e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c6728ac4-90a3-445f-b5e5-416ced03a13b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a3e8ec70-a4bd-4db1-bce5-9b4e03d5a95b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30b99cc3-c836-4b9f-998d-e5e707bdc11c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcbd2e67-ccf2-4cfc-b34e-2094686847a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "937456df-1b95-4568-8898-82e43d9775e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65988ae2-dd8d-4a05-ad91-511f30c0bca8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3945cd02-b92c-4d7e-9146-c0fa0f3c514e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a5a93444-7be7-4733-9126-b8fd7b447847",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28ffe9fc-61c1-436d-8d3c-e6654dccb95c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ac178b0-a1a1-4382-85df-ae176715ab7a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bf0ece5d-4249-4583-8d2d-e198e39ec6f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76a2c614-56ae-4463-8f8e-2428904721c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8717d152-2d1d-404c-b2fd-1f0e6e8fa307"
            }
          }
        ]
      },
      {
        "id": "68b9d555-a6ab-40c8-a682-fa0ece0134a3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3016954a-257e-4035-b186-0c83e70a558a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15d7fd28-aa65-4008-83ee-0770ac2342f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "91405ba4-431b-4f8d-9c84-f05873553f96",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8908662f-988d-4742-a105-5626f5c16ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee1f42cc-a936-4bb2-a504-1eea26c22635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f092a8-2706-4a61-9d29-4ba9edb5c969",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0221e4e-fbe9-4a84-80e2-7820140dfbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffb5b0ad-784e-4d9f-9e4e-94955d19fc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7963a3a3-4926-4d8f-8b8b-8453b47bc237",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c363e60a-07d2-4a93-a43b-8ac17c3abcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66d40051-b584-46b0-a382-d49342cb78d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f19c537a-2efa-4a5b-a884-54c300b615dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "faa6452e-d591-4347-a85c-d1021874f23a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5db223-7841-4cd4-98f5-1bda3697a2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9516728-4d08-44e0-82f0-264005a21185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23f536b-1a50-4b5d-81bc-97979654c08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844161e2-741e-43ae-bb3a-f110205ce46b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "60ca21ad-5904-4aef-a615-25f9ad45b8e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df1f01f7-ce93-4fe9-8b4b-471f4db21aba",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35a19a59-3a1b-48ef-85e9-b5eac540b398",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3ca1827d-9306-4048-ae5d-82e30994b8ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e25ebe7-31af-42aa-b36f-9a6365478ffd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4fa1db4b-f431-43a5-aec0-aa6eaad0cb8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd905338-b5d2-4979-8d2f-a79aa30bc8ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dda221cb-a981-4e1f-9ea7-3d33cf381c7f"
            }
          }
        ]
      },
      {
        "id": "18dcaa53-b3ac-4e98-9c78-24aba9e46150",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3e79d375-322d-4bd6-9ce6-38fa9826f83c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83f76673-5702-4fb6-8f5f-3184a6f1fb6b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "68f08b6f-c052-4ca6-8ba3-d2a8ba374275",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dfffdb-df4c-419a-9711-998a45b7f71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2440a7e9-211f-4a97-986b-3fe576ab5bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8cc0a4-f989-4e6a-ad7e-74db2185d462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e31eab46-6aec-4748-8bb1-9b99f567d9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5664ad-23d6-4e7f-9385-ec0bf7207718",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fed5ab-6673-4bec-87d4-a181d8527603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1152934-0229-4915-83d2-cec931d7d5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4469830b-c81d-4f4b-809b-4c01585948a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48a58e9a-d760-4aef-bed1-8ec122b6e003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3b3ae8-1b58-4f7a-bc55-a96f121d31eb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0435e26-0a00-44fc-a363-bf8efdc9eea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010d72c8-a441-45b4-9243-a8cde6b49410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1597d9-6e12-4fa9-a024-a2750eff5d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5df40aa-fa80-4ae4-84f0-24730f417b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bfa7d1-faa8-42c4-9019-03ac8b3892b9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504f7002-2706-4c04-93fc-4e58428d1ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f06a1d0-af45-40a7-a3a8-52263741cd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a778f6-69b7-4890-92bf-0125f9b62204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f98f793c-9756-4a52-8522-d9efa231ce8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0021a21-dd1e-43c3-b548-d805cd46e429",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d98cbaf-63ce-4bd5-a89a-f22427f01b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bfd01f-576a-4478-9820-ef8bfaf89ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437fd008-3f19-4823-9bfc-cf3a7d2233fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d335d34b-101d-4997-b12f-c0ec5e2eefd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0baae3-4401-4fda-9079-96b69f2f4af6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2962754-f012-456a-9d5f-efd54e3d21a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489366fe-709f-4cea-95d6-e88b81de03d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a26b1a1-3ab5-4d23-bf0a-e63702210cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68e2f4bb-2a32-4639-bd48-6cd0e7ae3bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638fb43e-b151-4061-ba96-67b13d2e805a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3bcc3c-fc2b-4dfa-888a-94508b257c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ee3da7-b6d0-4550-aeaa-eac5345ce811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b955791e-d0e8-419b-abd8-a97cae452d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d61e053-bac8-4a58-b7c0-ff85379e815b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec82c475-f37d-46ce-aabe-0298755573dc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6280cddd-0af7-4997-a7c8-03075d2c9f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846fcd35-ed26-4c0e-8fa3-9a1d138faea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7d4f33-3545-45ff-a00c-5e0810b7feb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1339cacf-c693-4144-98e4-cf3f9dc25b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38454d3-00d7-4067-8680-7e593caeed7b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bffc0d-703b-417a-8f29-05ac5a2f8baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d829185f-d718-4cec-b015-38a8d7e5f252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7174612e-3637-4dee-aa7b-541fc2398e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8889433e-f780-492d-8f7a-bca8e145d600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6229f4e2-ec12-4916-bee8-1f0b1a20f4ba",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523ad08d-c48e-46ce-a6e3-df841018ec05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7366da23-a32a-40dc-8de6-def14bcb7ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a80498f-ba7f-4c3f-97fa-139c2e3b51eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67e98955-22bd-4926-ac08-52deb42839db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e9b1d6-4838-4311-9b96-82c68502cb82",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed099ad-d9cd-4a55-8dfe-3741c416b30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e6c3cb-a38a-468e-b481-ebcd73424074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc087b2-ea85-46fd-9ac5-ffd3205a751c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5657e482-9412-4e32-be2a-5f512ed269b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fc2e87-0166-4b11-827d-7ef2dbb938ad",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8196dc-cba9-4c01-a448-268ba26b0b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b48dc0-1b5b-493c-8a7a-3080ae734e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed0954e-cee1-4bc1-a82b-e6e8da1118f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4eee82cf-9e0a-43f7-bf4f-d8aa2118444c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c928b12c-a0f4-43eb-bb6d-5105d15405ef",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112f77f7-902e-4a8b-b4c3-18bd032f1523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70950f2-6bd5-4f83-a939-3b611e69010e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ccbc8c-d2e6-4318-92b8-8508d30d9f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0eaa945-e9b2-4a8a-b1e7-195c558531e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cf663a-aa48-4bdb-a17d-020a98878a9f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efa392d-d67a-4230-954a-c9b444d8f58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024304f4-cce8-4528-bc40-26c6e72f9e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a1449c-5c04-41a8-aebe-b8f41f5ce6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72549851-9088-44d4-9928-e21215f882ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336ac640-696a-4588-b45e-b23b84e547c7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d343a87f-5acd-4540-a403-c1ca6dc45c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45ec4b9-8c80-4d76-b07c-021fb5bab404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69f7c25-4688-4fd6-92a9-85bc4c98c1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdb6c65e-cd75-4562-afb4-257f6181c303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dfe0de-4868-4aba-b8c3-626daea4d9b4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9481a6-6c2d-4a2d-8f56-99b1b8569819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144423a5-de1e-4e16-bb16-a7e544eb7979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a91b2c7-4297-446c-a674-eae90e7857fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "571661a1-4420-4366-9686-2c840db83d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181d9c31-66c8-4a38-80fc-25674dd6e230",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515f7d3d-5f38-43ed-83cc-097e91b22cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b217e0-e493-4587-8680-657239ed9f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524385be-96bb-4f39-967d-14cc90cca870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a05be94-6017-4c8f-8369-1009056affd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bd0ff7-fa1a-401e-94ce-058db49e788f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2863d2-3c3f-461c-97a1-0aa091ffc841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e270dd28-8c6e-440c-8440-4bb9c3e679d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b445d059-2696-4565-840d-cb01175b5b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "07d8036b-bab8-4382-8c31-d7fa32596678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f96c458-e84a-4f3b-816d-29a1fbb83cec",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18adeb7d-343a-4021-97b7-013ad523938b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43ee3ab-5064-44cb-ad7d-e1d2c654db00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce761798-0799-42d4-87d4-3452f97d84e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e682d1-0a47-4e33-8e22-3586b01f41b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15ed8d4-3003-4239-85f6-5b1d944c5e52",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752f34b8-cad4-4adf-8845-8260b6736dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2e1a53-e5c3-43ee-b3ed-2f0c403ded9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560412ae-6219-4232-bcb3-830c49ab2e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd20802d-34f8-4df8-9525-f60624115b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48061a2c-f923-4b71-8c30-a573765e6208",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885d0e09-47a1-433e-9afe-81b84a0e076e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431a317c-e7b1-434f-8b4c-2dfc21f631d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fa1d6f-1a8a-48b4-96be-67dc8b9de78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14def9a0-34b4-429b-9095-0b35f516a998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e6b601-8ea7-474d-8b24-0abc8d96aa4b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92620840-63bd-46c4-b7bf-43d4343b9218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e62f11-581e-4ec9-9a05-4079f6d90209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f9a781-6b0c-4af6-9509-01682fa44321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ca99b2-7c55-4bfc-9444-1c6cc34a577e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7b78b5-da2d-4fc1-8597-7c33ffe360b8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c1a021-f359-4c28-a3ae-a0d03273887c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffad084c-d8cf-49ca-85c5-d8481eb0244e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48251c6a-4ac6-41a5-b4ca-e64ecbc25a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67eece16-514b-4ad9-b2f8-63fdddfacccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5277b8c3-1372-4aab-83d5-ff80d5a86950",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfd0655-b2c9-4d89-a06b-26de0ede2d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946cf54e-f06e-4366-9c35-0e1798680438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5cd060-835a-44e3-b75f-b1a3b2554b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8feaa14a-bec9-47a4-801a-04dddfb29a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08f8361-9eb7-4ec9-8393-e7422cf4c6dc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea3768d-42ea-43e0-be3e-dd7731478bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e54139-55e4-415c-a73d-5417f9dd080b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e8bae5-4e61-4fb0-ae31-fdf1f3cc46e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46009133-b642-456f-b37e-9aacc39317b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd53eb82-707d-415e-ba17-74e81d540e0c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210aabb8-7746-466b-a661-dd93b938e25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1844ee94-c4e0-4b46-9bda-791662b2567e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50b7bf9-cd5f-4659-add6-203f2009de6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aee8cf6-6576-4e85-9b59-25eaad4d71fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98f5bf7-df58-4183-8657-e6a533f20430",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b68973-78ff-4690-b795-f2dce48623ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b0f475-404a-464f-ad00-360cbf4bea4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad80a7e-39bb-46b5-9ab2-237ad0f5545d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaddd48d-75cb-49e5-a714-2b27255d2447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9f5743-05aa-40dc-aac6-50f90c2944d4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431a4dde-8612-4977-9264-6e3b017e1beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a929f83-3cd8-4b0e-b659-37cffc1bd643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d483ae7a-b13e-45b8-b1bb-15524124ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23501f24-a65d-457c-b946-e4567f9ffe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e888d634-cc0f-48ee-a309-59f6a6c4f659",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9f9a1f-1ce7-476a-8b74-18fae4e37904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17da0f3-e207-4fc2-ae59-8acb434feac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56d3aac-cd7e-4104-acf5-3e9ff96cced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73271822-f1a2-48d2-8cd5-820e98de6752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fbce6c-8c56-40de-a8a9-146219d65e0e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e00c60-5a24-4617-a396-50a1fb4a11d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d1dba5-e479-4e19-b81c-9af98280267f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1900ec-d233-42c4-a7f6-8be0794747a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "14b2adf8-7d7a-4afc-8d45-bdc8f6173ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d8e757-a550-4eab-819c-b59d8a1e77b4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e87907c-db02-46c5-912a-8e6464cac409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2444b7df-3e5d-4fc6-82f7-52b7d866b4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac00a26-c026-409a-9746-68f3655d8a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf88a50-fe24-4972-bf3b-e13ae66e77dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936013aa-6b7f-4b91-bd0c-69c47d0b4617",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e269213-c1e8-4f9e-9de8-da175bffd39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68f7dc4-8837-412d-9f52-49194c4dc195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faa2bc5-ba76-484c-98d4-cee26947825c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34af720c-66d9-4cd8-8880-9305a3491a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ecd320-c728-4555-ae39-daddd7417762",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989c9abe-6361-421a-b16a-adfe07bf5c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8867a81-38d5-466d-8015-24c84d995ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9526bc1f-852e-461d-80d1-017414e3947c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d13b68c2-524c-4724-b6da-668df82f84f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0bcff6-24b3-4387-a9c0-12841abfcebc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cb41e4-bd35-4178-8412-c0b4dc1ab8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded634ea-2e19-4513-8c5d-adf9b9c4fc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264ce470-2104-4506-b204-67e3549fda8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef87d196-474b-484c-8583-e55c2a614ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78277fea-834d-49fd-8e3d-138037003caa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3e0c45-6714-4366-b6a1-000f4550f577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ae09d5-0c1e-4ea9-aed1-39c409f5c934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bb60b8-8df2-471f-bbd9-f9e159995c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b32217bb-e777-40b1-8e42-b1918ae216fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49b4fc3-367b-4712-bb0c-d729c2bb82dd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64dd616-5fa1-4345-a9e3-29edabf14dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5e26137-6f39-4166-8749-42accff9115b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1a7070-d9b6-4da7-a63e-a4f2c961bdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34b99344-21d6-4c9f-bea0-48a7c132f69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1424c4-3791-471e-9e80-376e97460691",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78560447-c1dd-4370-a8b1-a17bcaf07b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8149f35-eb8a-4437-a944-ab6cb81e7f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c3a2ed-51f2-4057-88d9-899aef01ce06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4363c7-6a4b-49f8-b3b5-de0221998788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138214bb-0606-4df2-92b4-c2399258f836",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13567fc2-e318-4d08-baa9-c305a185447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50447f4e-3b85-4198-9c9b-f91da2a83f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a39d6c1-aab2-4d3e-8e62-d655093f50b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b60635-7082-4161-a15f-01895c30ab0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65213f13-2289-49c0-96fe-d59904db5e9c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6699f8-c944-4c4c-a7ae-f0f89d266e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345dfcdf-4771-42e0-9f4e-604972bd2673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388b154e-11db-4cf6-a888-50593a2a2075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e273300-b4aa-4f0d-b78c-89e7768f6660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43afbe29-7ef5-49c1-bc11-69ac990653cd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42fefa8-4b6a-4d3e-97d4-7801070a5f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06969875-9e21-4bad-9b76-8f3de405b956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c397557f-5649-49b0-8d6b-ff30f0ef6875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b4a963-fb71-4193-b024-13524d9a6959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413c7853-80ff-4954-a6b9-ec1783a39d31",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1b7899-f19f-4399-bba8-9348ba796a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8fb13a-df31-430f-bd29-c827087d0739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171d844e-1d4e-4c8b-95df-2c012f537563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "40f1a4b5-9391-42c5-a10d-ee8d75dc069a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1deec6ec-15b2-4f64-b717-3e0bec58ae7f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590fbdcc-8d0a-4825-9437-1da13c494c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b207a15-1392-41d8-ba4f-d736f3f4f28d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750b7cb0-46a7-4767-bc0d-81f571f6dae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e89e7af4-81ae-436a-b294-f967c0ce098c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6467500b-90a5-492b-9f7d-6b25c6155f21",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39595664-7c34-49cf-811b-58a1acb4d6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42318fe1-680a-4321-8fb9-dccc97f22ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e8b7a4-4951-4481-9b51-6a2ce1aa708f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b255842-d08a-4602-9cdf-340c32a96630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018a4e7d-c7cf-4e7a-b5b1-79f1eded7850",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5844f6cc-0cde-4fee-9ea9-852379d1b508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fdf005-8c6b-4307-b0b7-73c91f8aad66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6cdb4a-e4f2-4dea-8bf5-f144e80ebe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c04bd47a-65f8-4025-9d97-a34b1c06bff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6f9182-bbf8-4cf5-a890-af25e5c82f60",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f0c1c9-780a-4838-82e9-50efa003d9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f08b184-4c79-40b9-a130-bea15e07cd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af67882-1944-4c06-b3d8-07397156c571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "535b1a56-018f-4e40-9615-00aba7e3008f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7955943c-624f-486a-a263-4b4eae13107e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1b2a1d-c060-4f2b-9bb1-e59e41e77bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5658ea9-cdc1-4f74-989c-4cf9ad7e0e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c389fcc7-b410-4330-9ec5-c3d1f7885a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdb4b28-0a27-4dfc-b67c-7475038f371b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722819dd-7960-4589-9ca7-11cfcddddf0e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8fe8c9-2925-490c-b00c-14d49ab3e3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56de059-b7ce-4d19-899f-a441c3e098ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875a37ad-c1d4-4ef4-bdfb-678997b62ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a13a28-4bdc-43ff-a584-af3ff8555c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62edc7a1-70c7-422d-95d1-a4c145d9bc62",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed390c75-0b69-482b-bd65-3664b586fdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46dba4c5-0a07-4e0a-a85a-ab18841a1481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d74fd23-069f-41ca-9d0f-5c7601311d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64269631-1b56-49ee-a5e8-091a3b353624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bb0576-8c10-402a-9f59-c17159448d28",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b878f33-ff4c-4561-b598-42c31e6bba54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe737e0-dabb-4f63-a4d1-3c819dad43a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723cea87-a127-4893-ae50-f24dfb016932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f190dd8-e9d3-4a2e-b7a6-518775a30693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869123bb-99fc-4b2a-93d8-8b0607ef2655",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8188029-433c-46b0-a6f4-a4a958efbef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c555af-8030-4149-9ddb-df2610f220dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abbfb03-cd72-4295-bd2e-dc33d8102bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86b26677-95d6-485e-9b02-17a8cfc82bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a19206-8e62-410d-b6ef-fbd0ca6d8558",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8d9207-4a74-45e9-b827-d97c5d45bedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a3830d-bb69-45dc-a324-58800e375c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3415df-1bc1-4044-bca0-8e682f172381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa892e5-2ab8-4d33-90bd-b4c04e1cad33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f145e355-824b-4be0-af18-510cbbbf7c48",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8edd312-11db-4d64-bd1f-b1af4d36c1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70b3026-bca1-4d51-991f-d70381a2f35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91112862-d2d7-41e6-922a-bdcbf95597cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "384857ed-9bb8-4ea6-9e95-689cc3007b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ca045b-fc51-430a-ba61-804c95126454",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17720183-ed50-461c-aac2-41971cec7267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74059f8-9ec0-416d-902f-4cfab6cbfa6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9eb9d30-f9f3-4cb1-83ef-99134bf8c5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "302d9597-a0ba-498c-b640-27154b4896cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f24f1e-00c5-4794-ac73-aa5b3d42cf38",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb2577d-6d1f-46eb-aeaa-35c45f1973dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c6a9e3-1836-423d-8c74-37b48d06270d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59506b7-7fed-4322-a1c2-b7c593b86066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "870e8cc0-8322-4252-a443-940c65189155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105ff671-a14c-4319-8416-7dd54b152071",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcbaa64-4acf-4001-8279-587face3f724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bff7980-1ab1-46e9-8079-21c0a41d67bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5925ea-20de-4dd5-8f68-48faf6db514c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc78bd0e-1b7e-4da3-9dd3-6244dcd523ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06abc79d-2571-4ae4-a2ce-3c9fe2aac76b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df9a792-3086-4584-b80a-f80a00bd0a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d928381-7318-405e-926c-711ae6b33081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8355ef1-aa73-47ef-a153-6b4a073070f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d0555408-8637-45e6-aae6-c6e74f30cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bd6caf-2486-42a7-aa85-fa13780b2a37",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0e2060-5e68-4d14-941d-d39e0333385b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0412502a-8db5-433b-b1cc-5f629f81855f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e27a35-f65a-4fb0-a0ac-f61ab633837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "890b9d19-b8fd-400b-b19a-38193a115ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a695741f-e64d-4f57-bb11-303c02c0617a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cc43f3-4e08-4ae3-b411-62f12dc70d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd6db5e-289f-4e39-8cb8-32a3b1fd5147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54adcbaa-c3fb-4a75-ba1f-7e38c513ea42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "561fda9e-8ce9-405c-80b8-b531a52092a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e38511-28c6-44f4-ac48-95856d353085",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0be1d2-9387-4a87-bb53-b5f204dff414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4124a0-d497-400e-8ee8-ac422b471739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de05e65-0f75-4851-869d-302371c7bc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6f832f-fb39-45c1-91e7-32ac6c63b7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a579d624-1e06-46a2-b456-0f54bf06dd3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7bc809-628e-479e-8693-14874098d27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08230e0-2b46-42b9-b774-eba1cc9ce4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e37109d-d06b-4070-a256-d13e847190a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b0ade1-a233-4573-96ce-4c4f36e04424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e4434d-9acb-4fd0-a668-204160b4e3ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e871f0-c405-457d-a83a-de12ac258d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f307ac-607e-49b1-b283-f21d598e3020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3d57c4-74e4-4f26-8a55-36510082cc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0884d7-fecf-4040-af86-7f6af8ec306c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d97154-f966-4b33-acc7-0847ae9b0490",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe359b7-bd88-4b9e-bf48-dfadc8ad579e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6bfe82-9b53-4606-b9b1-8015152f3f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851df663-72c9-48ca-b1a3-46361a5f3db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c029d1-b4ec-4d10-940b-0d2e2477525e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d23ca0-3766-4239-bc89-e47f3117698b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bad081e-d77d-4824-9221-1b8d55ed130a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66cc7985-5667-4fca-b5d4-0139b8ad8f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6457bceb-9350-4dbc-bcb9-e64d8421a312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a59f515-aad4-40a7-9035-073d337a414a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe79db2-c9c9-4db1-b33d-07535906651c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc6366f-0f13-49bf-acef-1c9fdba60920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6232e83a-a1fd-4a5d-8181-b92e82ca7915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c2ae16-2602-411a-ab5a-21d12d304ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7de647d8-6925-41c8-903b-2253b20b8193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf546ec3-3065-48a1-b3e7-9e2b484024ce",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b489fb-01f2-4ef0-b1c8-f5eaa97e72e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d1206d-4b96-439e-9657-2e28eee58c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d296cd1a-1d76-4edb-94d8-b6801f5b2c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b354030-3bdc-42ac-878d-e6c2198d32ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bda502-6766-4d63-a5fb-a0235b265f50",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ae06af-80a2-437d-b843-b0e52120872e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335b85eb-7ec2-4be6-b26f-d7164f55fff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910d7eb9-b3dc-4452-a708-6040f0674d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dae5987-3902-4ac1-97b7-ae14b7f27da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8455986e-a838-4ed8-8118-f68a03d5023c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fc617e-572c-4d2e-9526-4a9f072c800d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f11f1a8-0060-4185-8d8d-33a4e50db734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d18275c-b085-4014-9993-bc9b959cf055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e93de6c5-0685-46a4-9efb-dea730dfbc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24781df-db78-4808-b2fc-038079e86f35",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7a24b2-e646-44a2-8112-1121400c6d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b7cdd3-9cb3-47b6-8aaf-22be25830dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099f3205-39bf-48cf-abfe-3070533b7dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a693f90f-2c04-4885-b7ec-7fc324261036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420b6345-445e-488e-950e-d07cdabfcff6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ca30e3-30db-4eda-91ea-163ce6f53bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1e0bc9-096f-4935-b409-061f9dd3079d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56cef69-e20f-4202-ac2f-2e31811d9991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fc0997-9223-400c-8a32-bd483cc0e156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44c0a15-0140-445a-a127-7edff8680b1e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8debc86c-eb99-4ce0-9748-c05bed62d617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb347e95-2bb6-4432-8630-68d650fd745a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebe22c6-412a-4f56-b59d-857cae2481e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "293060c9-14db-44f1-8c5f-db9b0273e8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d207fd0-25b7-45c6-8672-df2cd995ad41",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174f07e2-d4ff-48f1-bc1a-f87d9e0d3392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fea0540-0b25-4f30-beb4-d9cd3bbc7045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40bec3d-215c-4143-abb2-bad689a28b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1b6d45-c29a-4a77-bc54-e553f909ca8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eae593-7ea0-4f2a-b888-efde05fcf1c8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08a8555-93a4-4375-8af2-85370f9923d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ecf773-2269-4e5b-926f-baa57f2a0bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6e0c53-432c-4c3c-8f93-bc8ce7ce0b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf02cc6d-1dfc-46c9-9d00-0e6442d114ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d01f56c-3ad4-452c-ad4a-7f4a828ed024",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288f9431-47eb-4891-ab18-56dd46c7434d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146111f3-2304-45e7-b113-0dfa0c4638a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58d8c22-c4f8-44dd-997b-aed9db6cd8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1757ea76-3b64-4670-a8e7-a97d528c43b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22a70c2-cd4a-4cda-b8c3-86952fcdb451",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbc2f45-9a3e-4d2a-b609-99828b07257a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea8ab5d-3766-4720-9532-6cc9b0c7af2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00891fbb-ee21-44ed-af31-a7e3d33570c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7b392d-e0ec-4a49-b2a1-292061cbeca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc3d274-1c29-4c52-bb1d-b7a3823d636e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1926a2-9f5f-4391-9c41-742be5b5370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bf98ff-53bd-4af9-bb45-3c2fd8c31006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099a89b5-56c2-45d5-bcd2-b65d1e9e6c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5e672d-391d-4ec3-b75d-96a6e2cc512c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c810e4-3c9b-484d-bb41-5b60fb610a35",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428663ef-3f81-409a-9c11-5237e92ca6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760b16c4-876b-4121-a65e-1e826b38fc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d30ff7b-e7f0-4c7c-84f4-d33023483706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98bbdc69-15c6-4407-b918-e0d3df2c7572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97be7f32-28fb-4d7a-b23d-e7dee2f075a3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb99cea-44be-4698-9d95-88ab5daf0dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9caa1af4-53c1-4250-99c3-938d10587d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfa3301-4f3b-411e-b52e-c6912556ae90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2627feea-1e53-4d03-afef-7271ca828b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d2f583-4bec-4aee-ae9c-f1bd05bfac85",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea32d32-9239-49a0-bbce-76c553ea1675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0541e32-9a9a-4d19-8089-e01723980b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91686b34-8926-4db0-b730-2f6a2e0647ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "340ba1bc-0f5b-4b7c-b47b-af7fbd277ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2152288-22b7-4ff6-909e-a5c2da27874a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdfebfb-bbf7-43a6-8963-54da1183c7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea72f46-239d-4c48-85c6-1276a91c5565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0322bd79-c326-4bf1-bc55-7bf7157fb21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "432b3416-6689-4efc-ad73-459c77a4ad70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193cbecd-b603-4a9d-a437-a228dba0cf8a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f12986-6033-4bf4-99ce-1887b93a21ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8682f08f-9326-48bd-b8f1-b5b1ad290291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8667aa9-72cf-4ef3-967a-7d4120fc553c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eec14b69-179d-4aff-b3ae-705c37627c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fed119-21ae-4756-8d78-337a82642ad1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b23a240-5344-46f0-8af2-24670393ac6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16caf03a-aece-4b78-9267-64ab72c2c43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6525c3-5dae-4a1f-baeb-f33c1c54d827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "443c9134-3c32-4a83-bec6-ac5d2be46fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8b303f-8761-419d-8761-3370ba1138fa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f745edab-04fd-4b4a-a359-615280434202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd05c9c-cd5f-4bd1-9875-d313440eb739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b624002b-4f8f-4961-9ae9-f3e6062dcfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8a7604-e1a1-40de-968d-c890263d8437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4f687a-63d5-4fc1-958f-40bd53fa1a0b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7913993b-5c55-411d-b8d8-d3ffd87c6b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30300a3f-04d9-4bac-8cd3-cdb2b101f284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97647e3-dd5e-41c6-be12-2d58d3e482a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6693b0f0-5c99-470b-bb27-da4426536cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35508fb-f125-41ab-8939-5c0d06ef8082",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2240d8a-2587-464d-b174-d810b1ecd2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fa2f4a-9ea3-467d-8f29-453966fc5c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7f9c7d-4b3e-485a-bc9d-70eb0dbd02b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2ee669-289d-408a-b272-0e4d05142e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b264f23-d3f9-4216-bced-3398eed1e7c6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390aaa73-4c37-4cd1-ae9b-e1bd0118b994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fa3d3a-3dcd-404e-bfd4-7f8a8e4ad413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830f540e-c077-41cb-8b69-87bf7216c4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c84d130f-a736-44dc-a4e2-5c1800f0d2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab40ea54-1043-4ea8-ad27-6fd3f039d025",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95873303-5362-4f11-976b-a86192cee00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1484945d-60d6-4803-b4e6-ca0eacbe9a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c569d4-859a-441f-9005-e940c4b8ceac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab223ec-d26b-4726-a9a6-441f967a7de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091f38ba-e98d-427f-96c0-c1119921f57a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a084a4c-36d8-42fb-b01e-b65a297f41e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bdaeae-2009-4976-8797-8a0f1b5d27e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646336db-aa54-483a-86f0-d53e88ae758d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ade4af56-7689-452b-886a-c09a48799789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2374b53-9503-475b-95f8-227027f1f2ff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f18b3a-8f55-4f0c-8bd3-10b6324ad9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0979d91-c111-4752-b8d7-f3b66cb0e61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9036366-834e-4dbb-859a-56125322dc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8a00a0-5fff-4f05-86af-0088f272c226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b0dbbb-3179-411b-8916-4af224154d27",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1415642-fe08-4b27-8bd9-01a7caeed113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af83a70d-b9c7-475a-8b76-3ea1aa46f007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7d0b5b-a9ec-4f15-959f-1219d2f23733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "03356eaa-868e-4b47-ac41-3bb63cc72326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe69d01-69e4-47fc-85e6-60fe9ccf3ae9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21558cd-b6c5-445c-b862-520d3623569e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad674d7-2112-4f11-857e-1a070e62c345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9009de-08a5-4c5f-bb31-5786ed926f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd58a67c-609c-4972-9798-5cca6e3e8441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f159ecbd-4946-4fbe-80eb-dda467c9118c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3778384a-000b-4ab7-937b-6e5c3ec24594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323f71b1-d8f5-4370-a187-a9d0fde1515a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6a29b9-a1bc-40b9-9bd8-46148f706bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "16d0b9e4-8bf7-4fb9-a502-b2b810358998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733da7fe-f751-4c38-86df-5ea71d8ccf65",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829fa66b-90bc-424c-94c2-26bf2e94785b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f304fc74-3089-42c3-aef1-2bacbaf4a740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df8c3a8-6308-41a3-a455-4a0a2b1455a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d042a7e-ca17-4620-8895-972e9d3fae84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7dbb47ab-a32c-42b9-b376-9ff9c88a4ca6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f996acc1-f870-4144-bbcd-7698e9e13e73",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120fe935-8907-402f-b6a3-2b7fe5984e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9efbf47-8115-4050-b40c-825727c958ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39c971c-b45b-4817-8ca0-32e1301b80b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fe9c03d-622c-4c8d-a6ea-f0efafb2f926"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b88a493-b0b3-4cf7-b4d5-0058d5c3930d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cdf4da0-443e-491b-b1cb-90d8d6f703f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41e8bda7-d7e0-4da4-8221-3959608c5cbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89714599-2da8-48ee-9e42-2d5e724a2fd0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01b38cf7-4ebd-4af6-a079-0143a7efead4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8af9fb9-3ec8-456e-b676-10eb6c6e4d8e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62aa8e55-ae0b-4dd7-86d4-3756c84b8794",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32076b72-576e-4f5b-937a-f63ea60f30bb"
                }
              }
            ]
          },
          {
            "id": "a222007f-8646-4392-93dd-839b2c47efab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b64c738-c004-4d46-9b8b-e43311822344",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "86d1028b-c4f7-43c0-b7a4-edac8e2cb128",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165d0529-b2b7-4677-b6e3-7eb2c72e9060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "982a1001-76a7-4b4d-b48c-be172181e42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9646e15d-1571-4d06-a3da-b4b2a10ff4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10826790-c1ce-4d3a-8535-2fcbe967e0cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dbdee340-3096-4034-965f-e48340c8de60",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edc9d54b-3bf4-4b25-b49c-e3d01ac3f182",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7695e6fa-e055-4f30-869d-7917ff09750d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c971eb9-fdcc-42b8-a189-480edc1686c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb0e1d42-7556-4a5a-96ab-a2f6cc18c640"
                    }
                  }
                ]
              },
              {
                "id": "b872d9f1-7927-4133-a6a9-b083265a752b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ffc6b02-205c-438c-87ab-a179b2a52a4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57610db9-079c-40c9-874e-34632329e4e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68047098-7f22-4fd2-99c9-2f9f584f73ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "07bb2a0e-8d84-4047-a7f6-ad3bed354d5d"
                    }
                  }
                ]
              },
              {
                "id": "99b20835-45d2-4adc-bafe-c09b5a425788",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07bdedd0-4f8f-4f98-89fd-bece876c9df4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04ad8e9d-1026-4fed-84b7-67ba27b887d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1ceac84-5644-4730-8d4c-98d4d1b366c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b3de2ee-4e91-4ec9-811a-9aed28de709b"
                    }
                  }
                ]
              },
              {
                "id": "1c96ba35-c350-4469-a105-ba65bad58e22",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b18ee44-b568-4bea-995f-e01bd5818138",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24a130c5-79dd-4bfa-8994-d6f2690893df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97a82ac5-1539-4872-b337-e40cbb1d2aa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "01edc4f7-01a7-4ef7-bf7c-25a63aa514d2"
                    }
                  }
                ]
              },
              {
                "id": "7f8522f8-30a2-4a9f-89fc-ee4e7d3def62",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef94bc2a-8d25-4bf2-a37c-54bdec050be8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f3820c8-c531-4c24-9bf3-cdfe6a7243d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "277b3875-1b92-49e1-a1d4-46ba51eb98ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "63fbb663-7738-47ca-b883-249a617cd4ec"
                    }
                  }
                ]
              },
              {
                "id": "bfe9f0ef-7e5e-4a4f-b640-724c64a53277",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc44cca1-b41d-472a-8c02-ba0301d39e91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c6da958-3554-4b2e-bdc8-6d840893abad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50b44622-8299-4fb3-9868-08e5a930f2e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fcdda907-74c2-4b54-a058-bbcd2a377271"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1c27e35-d0b3-4ff4-8bce-88e11a98115c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5eacbcd8-a09f-429c-b233-c4951580b077"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b9483be-5ff4-4db7-aa4d-704d3d8b668f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78e18abe-67f9-4bf5-bf0f-039f7aa11ce4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "922e7599-3ed3-4fbd-9ac5-21ba7375cd7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6e6e6c45-99c1-4c9f-a1a2-d30962eb3e28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "228dd28d-d606-49a4-8498-bde0d793aef3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a52c3ee9-ca10-4563-af70-7ca434690808"
            }
          }
        ]
      },
      {
        "id": "07ded4e9-1ee3-45e9-80d8-67c31a814dca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ff9f01ec-84b5-45a4-bb78-3c8c8db05a36",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afb33043-f93f-47aa-8b9c-4d3d9595a4c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d83eea82-9d2e-47ca-889e-12bf9ea774b0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dc485b-484f-414a-8ef4-df480199de71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365754b7-05b2-4dde-bd78-6c8e82e5a1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7324a9-c187-46c3-bd4a-09c026c664e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "93ef3769-691f-47da-b374-f2876074231b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbb7523-1e75-46b2-a75f-04173d723fe7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6924e469-81c1-4ca5-b0d7-15cd216e2df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c39b58-db69-4c1f-b016-6b1360804b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8765d7ab-d7bc-4260-94b4-2bab12680185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f6d1af-46ea-4016-948c-59f0bcd57358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf94c88-beef-4c47-88b6-a0079a7bfd38",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a43622-8135-4abc-9907-9c45495cadd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5dab04-ea04-4f79-b997-443f00c29138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca969c79-1ea9-499f-b46f-dbf69c0c726b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68d2367d-d869-4827-b737-d9facaf3bf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7efe34a-7492-4299-a72e-c2ea04aaa0ed",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d85471-7aa3-41d9-923d-cf6cc2553d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58aedcbb-8ee4-4561-abf7-8dddd9f947fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ec80d3-3ddf-48bf-95c5-fc28f7033da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "331ecc99-e37d-437e-a524-a875214b2425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b237d3-e13e-496b-8699-16425063bf08",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efddd101-cab1-4a94-9cf5-77a451aad5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96dff0ad-be8e-41ad-b5af-0a67fa6b5d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedcee4b-c09e-44ea-a0bf-4bac7244b26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "907a0996-8bcd-479b-847e-385f231b226c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b67d2d-fbec-4d51-9859-713a9e1ab96b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90408101-bc9a-4cc9-b823-ba4a1c2b1f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2f48ea-003f-4d79-8718-e3e32f8f697d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a84ffed-f738-4ef6-9bb9-2222e06a59be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c06eabf6-6121-4579-8c8c-1d7e2eda6840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a61bbf-9bae-4a53-89df-b8272ff7dfda",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba33af7d-b00b-4879-b1e7-ae1f4fbad211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf242e40-cc26-423e-83c1-b41d292de0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388f85f6-af54-4b5a-a422-0fb56a9e2cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd17e5d-926c-45d8-8c34-61f24e3aea14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315991e5-6fa4-41d4-9802-0c6be880758e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7904d26-b875-41e1-9f16-7de71a43024f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce7a6ab-8e6c-4b1a-b70b-813e90a46009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6152879b-e9ba-4bbb-9577-2d135e739011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cee8888-71de-4a45-8951-f6fd0de9181d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19baec7f-3e1b-4c7b-9df2-1c3d1c845683",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c28f7f-9ba9-4ce2-a2b8-019aa04e099c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4184aa-ca2b-4831-af82-ff09a4076a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d29052-ecfe-415a-8785-deb9daec2208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "035c46c3-5e8e-4f21-9999-90c5d888c0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5fa2b3-ba09-4b9c-822b-a38eee3d7c36",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c578c60-9573-41be-94b3-4464dc819670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7059ef1-1e01-4da2-9cf3-8c0925ef3f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe98a24c-c3e0-4f6f-b984-79735888a83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8662faed-2373-487e-ae48-591d504db943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62bba37-2048-4177-a7e2-7625cd18386b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0821839-0d89-4ab5-a5e8-dc4c6adefcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f878d7b-9b75-42b2-8fb5-54fc8eb719dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34799e9-4c7a-4ba8-962e-6ab250b5fc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "04aa923e-f785-440b-a22e-3cde9a17f854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91be19fa-b88b-49d5-b27a-7c73f3031ccb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68aabf7-51dd-4731-a7b5-9499b439d5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51dcdfcf-30ee-4260-9b17-1a7849ebd465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac650892-dec3-4204-9067-a2167d0732ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04e3a3ef-146b-4726-8a9e-ec298757b289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c39463-963d-4cf4-9ddf-e26d698f18f1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa20d2e-dfd0-46cc-aebb-d41d2d165815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc98c3a9-1c10-4440-89d1-840209807fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2a1567-c95e-4de5-a3e1-96ed2fc7607e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b317d7e4-beb8-4c4e-922d-301dc5116586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa6e6ee-ced8-4d51-9a62-3419900574d6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a999974-dd3d-43fb-91df-9cf0ab580cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5105ced1-3d66-4df9-a6b2-2387272b61fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66515fd4-92a1-4485-82b7-2fb25c86ff03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b569f566-3547-4cc7-91a1-06f2feeae87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d83d952-0a80-491f-9014-a0d6661623ed",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdbfebd-63c9-45fe-bb34-c33f7a0c70ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ac7938-30f5-4289-b521-ddddb654892b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285f7818-36ee-416e-9e6d-550402c0ac3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f545133-761d-4ad1-818b-adfe6134679a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68c114c-412f-40a4-9e47-57df68043abd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef06abc-25e8-4c30-8fc1-8eec45a8fae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69dc9237-a9a8-430a-805b-a37dfc24e0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcf844d-83d1-4d48-b425-c85f12856141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1540a234-4c41-48be-a20d-9c195f1b5beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf6c117-764e-47dc-ab8e-6cf002a6adf7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660d5b77-d138-4338-b62b-63e0f51ed49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319c4a40-dddd-4c67-a0a8-c0a1dbb80911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5c5d6d-4d39-4843-b4a8-7288d6945cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4da55e9-486a-4206-ad9f-3ac3b8cba945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5cda4a-9e7d-4079-afe0-f29874d53dd3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c9c13a-7906-49c6-b92b-43aa10aeb1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b256a7df-8d70-42f7-ac82-2b13cc833dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1431e91c-76c9-4728-960a-0f5db4e285e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "782755c6-ab6c-474b-86d4-ad1f3008a69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8932946-7427-49b6-ab43-89ecd6362538",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c79d061-16ac-475e-94ff-ba8f9b707537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8bb2fd-18ee-4162-b0d8-e5f7dcb5f4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e21ae7f-a5fd-46f0-95d7-a251d90f0c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1cbdc8-2691-4182-ac3a-4c34be02ef2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03854bd2-413d-4bdd-9b27-b24ce541177e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd22655-c8b9-4511-9807-446299904e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace03a2e-bbf7-44d7-82bd-44017f76c887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab786320-4131-48ba-92e6-788bb75f0de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "227f4dfb-f85e-4552-b627-719c5bf1d39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074784c1-5c6f-4126-b5f5-04f887f5627c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f38ebd0-40f2-444f-a2e7-7a6781ba5112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30598e05-8e55-40fb-9224-61e159ef61a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a9ce08-eb35-4752-854e-9dbc3c1d8baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9855346-622e-445e-98ef-4bf7614f7381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bc0ebd-dca3-41ba-9087-d112873c7ab6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc2ac1d-620b-4cec-81d3-e2f9b97cff49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9283fa-f798-478f-ad00-22cc8c506111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c8a53f-79c0-4e12-9d1b-a42b307807f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124f7323-0ff3-4309-82e8-d22c2fb8cda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a8f627-13ec-4e71-a9cf-b749d7d7cb65",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b5df67-9674-4aac-866e-73887cde2dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f75505-0f68-405b-a02f-b267f8a18369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417530ac-02fa-4fe5-b7aa-b1a5477a8e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43162c65-a2c1-4bb6-ad2e-090bf9ffa95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20be0dac-fcdc-4065-a637-0db208dac6b0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737e3aaa-836f-4688-95c8-213092b95193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c07c92-a005-444a-8e9e-c5fe002aa7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caae970e-0989-488c-b583-91c9578693d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2974bb3-35cf-49a9-9c65-56ced7be9627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff1d80e-e218-4484-953b-71e8696577d9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1954a5e1-ec6a-4d94-a9d1-6c806a7f1b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01982f0-7b69-4cc0-ad1d-6f5f12f650ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49975582-e2ba-43ed-bac5-6ed812112cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce1918c-03fb-4a8f-a462-200c6c6cf067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce287ef-78ff-4a05-840b-13eed57706e1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64cd2b9-ab63-4bf2-bc40-f9481e033362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1f39ab-d6ca-4d0d-9ed6-0a8a8c41ec18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc21bab-2ce2-4b4d-9d1f-530c92b6d258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dff1513e-a37b-4d02-bfe8-122a07ff7591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008fdc15-2ddc-401b-8913-cd002c6c1d80",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec4b6e4-a986-476a-8b40-778f939a3f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbe9756-1698-4932-9bd4-e09ad999ef57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cc3ffb-47c4-4b32-8f01-76758c3b9c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d91192-4ca9-4a01-a3c9-803d366c5fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a132cc-6191-4a83-bdfb-9ac4f4f5e4a4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c452cd-6314-4987-83af-a31264650f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17662893-e46d-4c4c-a9d7-b0e497faea17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4a1609-3448-4003-90db-1c66b990a599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f33ce48f-4ae0-43f8-970f-655112a8a2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2ff2dd-a4c7-4bb0-acab-48b00c5c6fb6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54babd06-fa49-412c-b9b0-503d8ac431ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129f00bf-17cd-41ed-bace-b06fce053b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5063b54a-c41e-491a-80d6-bc42111a66f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "916cd4ad-c85b-4579-9a7a-5d7d20707ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73eeeed-ed21-4563-a3df-d2d2323a06f2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7f0037-7b29-4953-9aa9-9fd2e68a039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e56d74-ff4f-4060-8931-d87b01d48504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac5c2c9-fb11-4788-aa31-a13f1daf3dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bd33f7-3a29-40e7-b561-bddc40780353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd22755-87fc-4c02-a123-26e91d7df882",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b57b7e8-b4ad-4aef-b11e-7342d1619b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ed8ace-08ab-4d80-8c26-a756b3e8fde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75e91d6-834f-49d4-a0b0-9532ac3ef9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7e4092-ecbd-416a-bd29-663b9383a599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bec545d-0f80-4845-b37b-b53aba1f984d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff13f26-f737-41f3-82fb-b31b9b1d72eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de03947-a3f1-4af5-8d82-83ba8e9ecd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4924db8-d9fb-42e4-bf56-d07737e9d30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a61219-2c1c-4da2-b56e-2bec2c1c814c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e563df-abca-49b0-bb55-ed05301ebb44",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f06566-9025-4574-85b0-96463fc3aa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da11e787-d233-4964-9757-b9725e5eb854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8defcf-c5fb-43fc-8e3b-d25c88884cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c43b63-a65e-486e-ad90-e66467085f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5525b074-9621-46db-a7fa-96d12c1eeb75",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64632dd1-403a-4899-9091-930e7b25b78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a53b98-de68-42a1-b03c-01dda8dab1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e334a5-d34b-4257-b7bb-f65ca9a0f251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "168b11fd-4ceb-40cd-b35a-004dd5198c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5320ef-3a49-4cea-a77b-a1e66c9686fc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0abadcf-5a10-4493-a6c7-36ebd29ace47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165a8a3d-d6b9-4b80-9ced-29e325e020b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b160ff6-fdbd-4179-865f-4ba73d1c605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17bfa3b3-7727-432f-a8b9-dbceae90b3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33f99b6-45dd-4994-9481-6ee6fec263b2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48e8f48-a895-470c-96d5-90f29d41c0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc917bd-2ae3-4307-9367-c2626b730d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d90b9e-ca5d-483c-ba60-a3f87fdd301a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6336ac-b821-49df-bcb3-9e6e005c6707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac1388f-a140-41fd-a823-ce0c80c1b324",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b8f657-d0a0-4dbd-8def-6633c4690559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8270d3b-18f5-4924-9e37-f95358f81948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f181c4c-b855-4176-8329-4bedfb2772d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42caeac1-af6a-43f5-8269-b7a5d5bb2022"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "198a17c8-c2de-4b71-83a6-2709f75ef38e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1661fc1c-fec3-494c-8181-2e48d0073e08",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e0722e-b4b2-4b99-ad98-635e78000d76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "655ebe7d-7fae-4112-a06e-8257c30384e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a34990e-bb5a-4bce-94dd-caa9de160af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0172af10-7db4-4014-a9c5-c07862a7abda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fd1b3f5-9ed8-4661-ab9a-22b541e1c665",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87569d16-25df-45b4-8bba-6f1498801458"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d16525b-4f68-45df-aa8b-efcc008a6297",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "167ba015-08ff-46a2-a998-3b4a851bbc3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0beb593-ef7a-4adb-b406-500aed13984b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "370dc3e5-fe9d-434e-9e44-8918bc991c48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afdcbce2-917e-4fa5-9a4a-a3822c6fb019",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b8f5fbc-2150-4d63-b8fa-deea1cc1ff5a"
            }
          }
        ]
      },
      {
        "id": "6bc5a938-41cb-4268-8648-f7952159337f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2e0fd3b8-a39f-47d4-80c8-81161f103b1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "652c5029-2bf6-4266-aa3a-f67af1176929",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a5cef8f6-47ed-4e93-9e9a-bf9b4b624db4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd473de1-cc5f-4f4e-995d-afc36b527652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e789107b-49f5-4cf0-8174-0072b930921e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9f0c67-3b0e-44b8-bdaa-cb32977ef3e1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ad4e6d-fdd2-4691-b70c-9706912b0a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885b2950-3de0-4211-847d-0a763e797cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fc12fa-a44e-4f00-b628-20704080ef93",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911c77da-4ef1-4a3e-b853-91a78045bdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b3b155-44a2-44ab-9ac2-e734eef5faad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec0bcc8-52d6-407e-b4e7-d1722e2bb5e4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1733059-54b8-4fd3-a8e4-f06ad6ef33cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2b280f-4823-45eb-bebb-84d5c414c1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99187edf-c7bf-4e57-b5c6-d83c98cae72e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879939f4-4ab6-420a-a362-ebcf84808f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2342d19-4bdf-425e-a372-73020b2c9a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7469ff45-b586-40b8-87fd-86e8391ffde6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9684376e-85c5-4691-82f1-082c90a39be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fcfa30-efa2-4491-aee1-5390d8a07962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2897b6-9abe-42e8-896c-04b4173a1e7d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ac4f08-72c8-49ea-b12d-d993280d8dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44582606-4a30-4fde-80db-220a58d7bd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37903a9a-f807-4528-9171-e0b5cdad2725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d0d38d-9c86-495b-85e3-8e55dedab505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1b3024-e0b6-4841-a0d7-9b2bdaf83b61",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1359ab0f-7214-432e-b559-4c929d2a7e4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d5bde2-74ae-4390-9325-d2f8231fc1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f7ebed-001f-4ff0-8846-ad60af7ac851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7ac2b9-21cb-428d-af4f-c5b28608c26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b7c8b3-4b64-474e-9224-8551e5e842fa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7c87a6-0e71-48ea-9b23-1e425ae2f729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e0bed4-565c-4011-8131-995f9a7319df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae2d6cf-a361-4e46-a310-d9ab6b7294ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7ca566-38c9-4961-8fea-6e5a8a384356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562edb35-30a2-43a4-ae3c-2ae12a77b51f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2061e191-ffd5-4c9c-9eb6-f69f32655999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02deb7b3-145b-4315-8052-98d94ce76ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c57971-967e-48b8-a218-7f92a7134818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1aa7de-988d-4e33-959c-e309f9d301bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c44503-df3d-4c64-b8df-2a61b1e9f874",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907270cc-d2b9-4da0-98ed-4571efe2a807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90232a8-3048-4b55-8122-8e94be21741e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadcac37-52fa-4ab4-ab28-c6a39d887be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a96f6f-b92a-40af-9f79-38128ce8bcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e378fdd-20fc-4253-a21b-d9279026c8b7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fac5c9-08ca-4a15-b494-2e813a9df127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee527bb3-b73c-444c-ad8f-b2eb4c687081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4570cc5-8494-4f08-aea0-742bb4f05372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1a1c74-47c8-4c66-8c0c-5405a4af1589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd93b79-68d3-49c4-839e-fdf23607dda8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25832bd-c824-4acb-b8ad-8ad1e7b0c005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8149c0c1-bc7a-48d7-9dea-8bb58d976475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e90ea7-7d32-4abf-913d-793a7fd1559e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d13390-4438-4129-b777-de3e1f1ec5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a69af4-c2c5-4743-95fb-eb7211683d26",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d92e5d5-a252-4e25-828b-d717b168541d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa479ca-cf32-4011-96da-65d52bcae4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aad692-7f44-4f3a-94fa-5de037bb28ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de5cfa8-f422-4198-a037-5478dc7f6dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cc0592-e5db-4334-8e39-274f14a380b0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf509e7-baae-477e-9d35-499c6b049f9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da0fb08-8418-4ff3-974d-ec4c7ceaf21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b908b647-c0e9-4acc-aa30-15c17ba99476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0794911c-3864-4f95-accb-39ec34510ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13444799-1b6f-4284-845c-b4754f8ca3a1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7d02ec-9daa-48ca-bf1d-890b0ef29388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db5fcea9-e2bf-4430-af22-9191d760b8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b93eeb-6426-483d-98de-8facebda9c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6062ead-0df6-4d08-8487-da424bb0497c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae6d51a-6498-46c3-b39a-f9ec62e3d680",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f92c480-4f03-4f58-9c82-cd5e41b8a444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd97eac5-d9db-43ca-96a2-699618564188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6738d1e3-7cd9-4783-84d2-30b88da88200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4529e4-78c9-4d5b-a0b5-5d16655e1052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c54dad-9bc5-481e-b736-41e3eec98d77",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cc9cbe-0e2b-4833-b558-ee6884311586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23791baa-6a52-4cca-86ae-b948c8b9be1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b25c76c-4453-4589-bb3b-d2cce10d7169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05f4c74-edfa-4840-ae54-9d1e7a64b0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7485ced-b09b-4f0f-a890-6b070cf1f5dc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0614f0f4-e68c-4a20-9e5a-dd6845ab8aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29834021-a466-4ee9-8071-09389b0526de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d5b5ff-0df2-4ffb-9c78-6d33644efd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8380b5d-8e15-48ce-821e-61442a6977a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cef3fb-8409-4fe0-96b3-0b4875188a80",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c8a844-4a6e-465d-8a7a-3f9010f09dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92958d05-29be-406b-aefe-a4ffa9267f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8ba0db-7b8b-4378-9108-0c0bc48d2a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3856eeaa-75b1-4c3f-be21-0d98f46a943c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5daa33-5f55-4e36-96bb-37594b85e1dc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7d9665-6852-4896-985c-83fb6db60f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b342a136-3cdf-4c30-aa4a-3ad6a9fa71dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319742ef-4fe8-4668-9c57-2f5418b69dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854059dd-697a-4ef3-b769-066ddeb2b118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6f6ea9-2505-4bfc-a97e-b117b8d8b044",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8cca59-87ac-4dda-b543-e643e843815e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe61fc0-b122-480c-b8f5-aad421bef1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b7730f-a2f8-4170-8ec0-13286c04e014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7564fd8-e800-4392-ac06-68463a22fcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a008a63-d09c-41a0-8a1c-0d81015bae6b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9930fed-b2d3-469f-9049-12f81a31470c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef55b35-599c-4798-bce6-3f4f1dfb01da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0c0f4d-03bb-47ee-93f8-0663db949c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9da9fd1-31f3-49dd-aa43-f4e918ed32cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019a5cf8-0d33-4e8e-85b4-c82848918699",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b5dbda-3f51-422d-ab7d-9e3d0fe6cf8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e73d8c-504b-43ad-98d5-06b1321b97b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ada8b2c-ace8-4234-b334-b62af74b6c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce802d7-00c5-40ef-9437-31671a62a259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a0793c-79e3-4c30-8308-ec77f1155a0f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b84cd8-30c7-4632-8d55-52d72c4c8211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6069aeb7-1239-4d5e-a846-64e76e56e8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31aa4e1d-1886-4bfe-bc61-b00012f92cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b3406f-9b2a-4935-a609-5968a2df2ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5944ed-1f42-4919-ba0c-7fba6c2803c3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a8f51d-823b-44b8-a8ff-cd4d2bcd0c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64184780-27bc-4610-bd2e-70c2e25629fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bdbb07-accd-491d-930b-91313c0e4258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb131e80-1ddb-406d-855f-173077703291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5da6b1-04e6-4a81-8179-41540b2960d7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53a9c7d-fc3b-41db-a15d-af0dc9974695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45a82223-31e0-46b0-a085-f4ea3f8c1c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7603f9c2-a8b5-4512-b209-9f94fb7d35e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fce0d41-0eea-407b-bc76-60e548e3d33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5c1893-edd4-4732-ac4d-c743077ec485",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed55aece-fd1b-467b-846d-45da5299971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920654c1-073e-4836-a8d1-4d54a968ba55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3531aa56-8e96-4a4a-8e8d-14736bbd1bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee920c90-f026-4da4-91c7-3e5cc3c74f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08077c65-773a-4f5b-b5e2-99255fde3820",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0425a1a-758e-4f91-92a7-19d928a95de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5782ac0c-cfec-4769-bc42-9cadd43b9923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9e7dbd-8c0d-4d02-8edd-2d570a6b0257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e2b730-6014-485e-9ea6-4d820c05aba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efeac63-fabf-4a07-b98b-ce097890093e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c9f34e-3534-449f-9ffa-1c6cb86a7113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69dc119f-85fd-4733-a50a-d2ad37dff9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2a8c56-c3a4-4187-a375-c5873046a9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69d41fd-17ec-4b4c-a004-ee6d3eaecd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792b5138-20d2-400a-8258-c2ed6651a7b5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afec3f5-9052-4ebf-9f4b-4260da5b4d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f02f418a-7701-40c5-b09d-1a6f27b5e7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c49f4a-e888-4271-9bf2-586975b81373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9473123a-2b6b-419a-9bf8-784e250a6311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8c3a48-5288-4e9d-ae4c-5abfd60d698e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4e698c-93e5-4a0f-90b0-feac7756e02b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60252522-7fc1-427c-8eed-b4c90709fcca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a19a05-62b4-4676-8d22-520a9948c534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f27e69d-2ac5-4d97-b0af-64a3685bba3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff7891c-5fc2-4156-9e04-5d9c329b62dc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa25dd0-91d5-4c35-9a4c-d7990af30bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6228cd-38c1-4c8a-8ae2-9a4902eb01d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c525d488-138a-4784-aa96-e445294d3f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3821da9f-c4c8-4cb4-a440-d7e05071e6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f706b0f-cbfa-44b3-b094-3dfdf83683ce",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba34737-b499-442f-ae9c-c373fc8ca501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8d89e8-6d84-4578-a3c7-249467e7c988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02bd25a-13d9-4cf5-90b7-452045b9a500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9be034-a3d0-4759-a2af-225fe25908d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db920653-107f-47fd-b2d1-9417ac8d08f4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8573f81-afa0-4f8e-b489-8919917f9d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9594c4f4-387b-41d6-a990-98c76ac6495c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1021fb16-fd56-4323-b026-580f0702ad5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5036ec1-91aa-4c28-b5f9-b8aabb80846a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071a2cd8-1491-49af-80b5-01592615ee6c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e9e740-c713-42a3-bf9f-bbda88a466ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b75fd4c-286c-494d-9db5-1e22d0215528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c851be2c-7e39-42fd-9472-48aa2484239a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe56955-43ce-49e9-a2af-7717b287c250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667332e1-0467-441b-a6cf-10e78ffae707",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d44c287-3471-4ab4-b4fe-7e1e47d1ae20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f2de32-8ff2-4da4-8886-ce533b49e90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c50a793-6f73-4792-8adb-e6b2eae7348a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c206099-fbb4-489e-899e-40128c87050e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c1f267-279f-491f-916a-d9c7a3856cc7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fe8493-230f-4d43-ab25-5fe7cae4f7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f094c8a-dd49-47a7-b31b-d232bd347b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f6e166-2ac1-4fe3-9bf0-e42fce12463d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015b8865-e4e1-4812-b6d8-ce420624a315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfbacc0-ae7c-45df-8d82-056bac6e1f9b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a416985-94ef-401e-a773-c8ad57d5c202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce95e9dd-e49c-4a42-bc79-b654a1bdfb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a087e48-69a2-42fc-8346-5b7fe3dd791b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d839a6f0-8fb5-4583-a4f5-7c1be420977e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6e5aee-01d3-45bf-8aec-f22ec0e7c985",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0118fc-bf29-4c75-944b-3401ffdff041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a253e8-1f77-4acf-968a-ac6446b3dfef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d895079a-5033-422b-88ed-5f2a66a5f811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a601d432-0a21-4d91-8cff-ce69870f1c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52170dd6-78cd-499e-b419-929d3073ad49",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ac55bc-0e97-4016-9bc8-a7ee0a66e548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a21c5c-90a3-4d11-af45-f31564502fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1267258-e1aa-4393-90e8-4a407b15f5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14c5d8f-4aa9-4525-88cb-66b8b0c19d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1de5c8b-54cb-4b38-97f6-4bdc55241b8e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893217e3-2caa-429c-8ffa-08d4b3bdee1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b834160c-6e90-4932-8d8a-fc25a1ca35fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1650a5a-b28d-4bd3-afd4-9eb3b6b93780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e333c415-bda2-40de-9cb8-5bf97c90a9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c19138-0a3b-440b-9bac-111f4db6f47d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04d3083-47f1-4e54-9a64-945740cedd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0a7d8f-7372-420e-a742-27947f791aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d32f7d-be38-4640-9178-89927595f66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1ee096-cd99-420b-8cc1-0b566120c6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6788ea2d-acf1-4bd5-b61b-899550a25f43",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a622157-f41c-4476-8a2e-c19c5ba58ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fdb7f49-104e-42d9-8424-37f31d2dcc45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55367651-7a0a-481e-b6e3-ed8b88d76572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db9bb0f-cbf1-4ffd-94ad-75e77c743bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4049f7f-5c8b-4436-91eb-f59144a8d2db",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6f6038-a4ea-4514-8fb5-94d787203627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d41c5cd-e74f-455c-bd98-b9d5516f1ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c1f7af-68a7-45c0-a1e5-3f7421b79426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027938d1-526d-4358-990f-11426d67b5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccedfff-98a2-4b6c-82b7-a2675c05ea5d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee33aec-0815-4f38-88e2-b0d9b9dabe71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50292e04-1434-4fd7-b638-5bbaeb25fa57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a53fbb9-26d1-4263-99ad-4ea7fcbe3310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d186ef-9b35-43ca-9016-d8b20971c44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71dd6d8-d546-483f-9136-a0faf0f4caa1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3702dc6-b2eb-4305-9152-2d4a04af7a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4099e91-0f0b-4eba-a23f-40bebe67b45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07df778-d2a9-4680-8c92-83481ec63fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa36916-0e7b-4f41-b25d-d55e18a33b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624da3a7-efa9-4001-ba64-deeb2c5d65cf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810476ee-d259-4193-bf57-9e22dd42a5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e01bd7-df6f-4bb4-945a-ac4911b9f993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c668fb2c-5427-41bb-938e-6027b5db6738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbebc3a-16a2-4197-9915-4fa65168a210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db050ed8-e9d6-40c5-8101-b785cea0885a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ad23b0-bb00-4145-8741-e079763a1173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41422190-b100-475c-b3db-e9946dcaeeee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d328f40-49d5-4cb5-91a0-e2240318edc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6a2b0a-8295-4c30-8845-45414b37447d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2d14ad-a9d3-4bdb-a2c4-3a61ea8d562b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5f3e3c-38db-4ffa-8463-a8def98bb511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fd4153-9332-4af2-9013-564d7f7307c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db105b7-8f42-4364-b096-d4997ef11b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d07d9a-414a-495f-b0f1-e8eb2c27b504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf3ab51-8ebf-4e85-bfd4-7da306cb82b8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814edd80-783e-4513-adfb-f32702657d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5cd24d-0ea0-49ff-8284-69673808c55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030d2be0-876f-492a-ab7d-4817bfe3637d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a92460-c3d2-4979-b048-b04acb1c9fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1780f466-7d2f-4f7b-976c-87a235af893e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0416ab-f364-469f-aff4-d3e4da59d572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0cd033-06ac-4b19-8771-dc0be41cd842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b62b836-8af4-4844-afcf-d69e5506eab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc85519f-87e4-4861-9f71-9c30873ec5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a01477-9d8c-491a-9511-13908150ff64",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9702b29-9797-4399-8ae9-43ae1e552335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191f09cb-c98e-46ed-ab9f-9ebbe3673b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cbed62-2bd5-474c-9dc5-fd7bfbfb2010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc722727-1a5c-4680-896e-73111106b366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10592e86-43b3-491b-bfc5-1da257657996",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022cc394-0919-408c-913f-ad1f0f1ca057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258415a9-af7a-469a-8c6e-7b6fa9386155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1557e096-a9a7-4de6-b585-bee74c0796c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7552d8-9bd7-480f-9e84-10b3b772eb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe174df-a34f-4bf3-9700-c25ab7a4b91f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ec08cc-85f7-4beb-a5b9-b22c31ab62da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e613a09-95c2-4c6a-aa0d-b52f8b9cbccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1478586-432b-4364-aebb-ab430d3d353d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d1fed7-30ee-4d8f-9a49-0ecaa1bd9c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc59bb5-a110-4072-9c7a-68ff561ecf11",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bc4ce9-a4e3-470d-8625-3fe2bbcda258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136a7477-4691-4cbd-87ee-394ef1beb8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311cf821-c25a-420c-b22f-5791b1cfa28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d29b2a-5d01-4fcd-b6b2-13a5137c1fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed50f9e6-5e54-4a57-941e-e4345a608df5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb400b0d-3fea-4d56-9768-4a4cb0c64302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1222324-7b30-46cc-b9c0-4565e8204fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fa5e21-46cc-447a-9145-8e66940993c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd21ee07-3cb0-434d-98bd-d1b585f7af25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69713aa9-884c-495b-9db4-8324632d5059",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e30a89-a5f1-4640-a93d-c77c76c1f5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdadb89-4769-4bb3-8e5f-b762389d61b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f205007-f543-4e9d-abdc-01b175eb8e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae971b4-7051-45b8-8d65-661254cafdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cee2db1-d4fa-48cc-81ef-b0cafddedb27",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befaaee9-5ae7-4db1-bc83-09c6757203b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b1bc15-70d5-4383-a575-b2764ba633c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efadfd9a-f846-443a-9bff-14ef49b218b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a217724-1ef5-4fbc-9852-344a9b715f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad3e5ab-88b1-498d-80f2-cf8db16fafbd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d828cb-fbe5-4be2-bd22-5da7dd96a3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6218ee-8dd1-46cb-b97e-08cd27ae9334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41584eb2-8115-4883-b68b-0d02889e6c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b5ef97-e77a-4292-b653-f37a63aea5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4541436-d510-45d4-82ba-e3dd560db2f5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4f1112-c7cd-492d-b1ca-7e392757003e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b878baa3-1c5b-46d7-be0d-7334f00b73ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d93ca4c-5c4b-472d-acf6-3ddf1cd1fcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4027a33-eeae-4754-8b04-543fd437a233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554eac74-6831-44cc-bc04-039c8ecfd821",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddabb8e0-4778-4b66-a22e-283e4842b043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6692e9-1d4f-4e6a-aa9d-8b62ce05b4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c44391-e4d5-4fd2-b396-697ff3aef58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba637ba-ecbd-46d5-bd96-608298282688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51facda-db71-406f-aba4-bffccf1cbf6d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c15cfd7-a0e5-4fd0-8b7e-627af1aa53cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9afa2cf-fd8e-4ed8-b7da-4fffdc87dc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90dbf5b-1577-4a34-adcf-cbfc1076d99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f742d1-7610-4320-91bd-c49e1a747481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c6ec1d-93fe-4ced-821c-413dcce78438",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b3005a-1a50-468e-99f9-6e608241c9ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45fdf7bd-8cf5-4f13-b7dd-e8c0f7a28297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e987630d-56d7-4a48-aeb3-3ec47f9d7fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1beb19c-3c21-47cb-8051-2ecc750559bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026f18fb-9ad4-407c-ae0c-ce4afad83e61",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd90825-27d9-49de-b7cd-c1e29aae2a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8337a11e-5133-411a-b058-8ceee83fa088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5851bbce-8880-467e-8094-f1eed6e96caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd43054-02af-4536-b7b4-34a547e50942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8217d7d9-a158-4f2f-9247-0dc0e6a7caa4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd14c8d-bc13-4df4-b2b5-3e054eecedea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b69699-679d-475c-8503-067627c3fba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9ea847-e00b-4211-9c38-80b9ef6e9feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d40ad2f-89ef-4fe2-9a87-614f8a4ffa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f29fa72-cead-47a9-bfc3-00be5448101f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7901cd36-17c5-453e-acca-08a133a2727e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24a819d-4d25-42c5-97a9-8ba4ff038669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71378be-bdcb-4aa4-bec1-86dcf2e6ff57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca762a0-d2d8-4195-8402-a2fdc96af62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1979351-b852-454c-8084-a23938a556bd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a8cab1-88d4-4c04-890d-1eee1becba90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0327282c-bf79-468b-8f8e-e59e3a25d3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6362802-ade8-4e60-a09a-6bedfe5136d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f19082d-2f65-4eda-af45-dea24bd19bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc6523c-0fc8-4fef-9e47-c8e5d2f56499",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b884f6b6-35db-46e9-93dc-8f4d73e59ee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65421f40-20ab-40e1-ac93-f76af4c3a7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb64c1fc-29de-468f-90b8-a09b4c6ab3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a99a84-213c-484a-89ed-a423272ebe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe3b4df-5aed-4823-b665-5ae0c30d736d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beb52c3-0bd4-45fd-980e-9f8824f15248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35f630a9-0826-4e15-b640-a5ed5785921d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd9e8ec-ced1-4ec8-9cd0-09c4c6c7912c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5b13b8-9d0c-48bc-9d5e-77eb4f0e116a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbd0d34-4127-400f-acfd-12ec3bf73879",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35f97e4-85e3-4a4c-87e7-745b2cdfad69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27c567fc-e884-459f-96c2-d1f39c241909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81403b8-bd30-4d04-9f7d-eda75559984d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d341ef4-2b1e-4c20-b664-21ccef2d8090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f28e1d9-4360-4c59-a205-7fc7e8b40b24",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0155e465-e7b5-4abd-a834-bce1afed50ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf981032-e6af-4a54-8999-681c331b8cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e86a5f-e83a-4255-9a6a-170d3201b42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7748213-dbf5-4c23-8fee-304b2d087482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d339badb-e06e-4771-babe-17aff3843593",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7786196f-f0ce-403a-ba4e-1ed24860dbbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aff3637-78db-42b3-9421-b731d0b10b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fe935b-d882-4eb8-a097-f61ae16819ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82296fcf-01b4-4064-8b21-b7182afb32df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86469ac8-9527-4ae4-8af3-3675722e633a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2a0984-48e6-42d9-b406-75249af60773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4b236a-097e-44f8-8cb3-aac594e41dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08457dd6-68f7-4280-a28b-c9e8e0d5bc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477adf09-e28a-46ca-be60-7643fac10e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c38f1c5-a44d-47eb-bdb9-dd3801565d12",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607a8080-7daf-43cf-a896-5cb813af9858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0badd65-210d-4eeb-acd2-7b01d2027356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafd4df5-6038-410d-b59b-c77db852b396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4895b3ef-7951-4567-ba1c-c3dcc9b26887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b976cc03-9827-490c-ba16-4ce5937a79dc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc89888-7611-41e8-a2d5-41ec60f56afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610bdadd-884a-4fd1-bb3d-671c421cf85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad079454-cbfa-4af5-b379-54f720e8ec72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27578326-235f-4f8b-bd20-83d6a32732c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8463cc0f-3d41-43c0-8477-d2e0238c69a1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a06b469-e1a0-4e8d-953d-115437d73301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38acf6a0-1102-4538-9275-1feb8988e3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2886a298-f82f-47d4-8a70-2d35d08656f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a8cdbf-8752-4883-8f55-1286fad3cde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491a66e0-36c9-4438-8000-440d4f39890a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32bc988-7a04-4d59-b06b-ae369998c818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "134b8e71-ae8f-46f1-871d-455c9225d2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78535494-33df-412c-ad5e-f421bf39ac73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ae960c-cd0a-453c-bad4-030c05ef11d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72507679-6102-4768-8495-c2b092704e89",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b4d5be-a99a-4539-8fc5-127cd45e8270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf466da8-8fdf-4f3f-b99c-c7a376104d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57821b57-d011-4c22-9b01-8146277b97c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5492989-efc1-459b-9ba8-25bba2491654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771075f2-1bdd-4f7a-ab89-7820a7fc03ce",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4271e31-dac4-4808-8478-36ea5b869704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c10c699-5245-411f-8738-4f7e8bd65877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcacecb-d4b3-4db6-87b0-2ffc0a9d8c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d2390a-f59b-468b-8ab3-acca8efcc22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439fdbe6-7505-4790-8de5-2b703dbcab13",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7870cb-94a5-4114-a585-a2916f8df5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc61085e-3cca-48ff-b685-2287ab148af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c93d9a0-cbfb-49fa-94cc-5ac6ea649e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222a3a1f-cea5-471d-8fb6-681fd5cc3ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7348025b-5aca-4c43-a87d-1d249365dc85",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb01b65-e010-4932-a117-bdeb4705c62e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b277a9d-0774-4de1-8545-2c7d6e16ebdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477aa001-da34-4cbd-8c07-51027a6a5728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c6345f-0c9b-4e25-89e7-92430be4ce49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76574505-09b3-4399-bff9-0be80fabdc2a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c4c380-0ecc-4cef-8c8f-c7a08b273b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "523ef34f-97c6-4e0b-b87e-4b5697a65ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55937355-5fbc-485c-91e7-2a89c05cb75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d102c5-ea2f-4755-a863-c24becd740df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660e5ef2-4e04-406c-ba1d-04c5dd0c3400",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e86cadd-92ae-41f8-a969-757c9009e3c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e8d2a79-b2de-4cd5-b585-091102fe0cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae8371d-6ad1-4223-a7b1-d69380c962c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a003972-681a-4d73-a23b-832ca75fc00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f26baf-6a44-4b39-b015-2834ae0304cf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219ca8a1-b3de-48cd-8421-ee3502dbf565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3bcd7a8-853a-4c28-8aea-273168fbb67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace848cc-ab20-4a5e-ba71-c87897786cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea00e6e-eadc-4448-8cc0-8bee3d3a599e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a25f6c0-e88b-498e-9342-fc063cf92b51",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3d5e84-aea3-4ac8-84f3-f1491138c122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f88712d-2aac-4ae3-b228-f00a717eab87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8bd496-ff5a-45ad-820a-c059efdf5b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce7ab4e-0bd9-4bbc-b19c-c9e32bc22ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a37502-798f-4a91-a2a4-f20f1763bf1d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d647df1-62ed-40f4-ad41-f1bbe9004de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c2213d-4942-4be6-aff6-93bfdd0a5b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3ab0ee-80c2-46a2-8c68-97729186e2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf2eafe-01a8-44f9-b983-a6e10db30188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d693eb-1293-40c4-9785-f49abf513bfa",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dfcf3a-ff36-456a-aba6-0842d6211178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c57622-f209-4590-a857-7d4c02bad36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b3347f-0575-498e-8b28-ac93823b0b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ff2e33-2da3-4a3c-b94f-392e944f59ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30540911-38f5-44ba-b11b-0e79152b9928",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ae55a8-eb5a-42d0-90ee-08462b1b7c0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b046b2c1-1fc6-497d-92f9-b4be7e69fd98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6af71f4-31df-4b11-8364-685cabfb3578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92fad82-e7af-4593-8260-67b97698e736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca1573a-4723-4072-9e99-8e95bd6be411",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78df304c-6d0f-426a-ba98-e689cf2eac97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8ce112b-9e5e-43ae-b963-4dce1b2198b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840ded23-7b8a-4afe-a4f8-740a0d0381ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa31927-155b-432d-b03d-0adf9e390575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fa4212-ab9b-4569-bbee-f8000947ac0e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdd7509-5f0b-4044-b35c-fcf331fe6ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac66e67-7ee7-4082-a573-db3f6a95bd85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b25ce6-9ff3-43bd-89d3-753e92edbab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6ba64d-2c68-4213-b5bd-6660b1d8a5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f63ba1-c762-42ea-95c3-26c4428e2436",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d2af26-58ea-420f-b9a1-a1a343185dc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6574e2-5de3-4155-b050-d32eae216b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a5fe97-6b7b-4166-bcf1-4d2330d4c404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a855bb16-ab4e-49c2-9062-bd8acd2ff36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa34a65-e20a-42f5-8c94-a23c5b27a37c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d933b26c-5d86-428e-a1c9-0ec0b5e9492c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f6a6adb-85d7-4df2-8227-cdc0401c7f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16eaa808-3f11-4a6e-8702-17e045d97e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058c03bf-af04-4f7f-90b0-f42b6312df5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fdbda5-2640-4e5e-ac97-260370421289",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaec12b-2714-4689-8e37-807ca6612daf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de97b0ad-4456-47ab-908a-9c6cac3c6cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8740bd8-3e7e-470b-b5b1-6e126f48d192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4826be6-6b63-4184-840e-c62141b32eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09021cfe-1469-41d2-bb58-ca43a1930466",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c614cf-c42b-4fdb-9a12-cc6af5e7942e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdca70fd-f3b4-41c8-ab2d-5338be5a1847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa07ebb-8a30-425e-ab1b-c285b8cb294e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5aaaf1b-e39c-4c60-b820-2d565da62d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c0b08e-7ddf-43cf-b49e-c732f3ad44e3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d364afd-0ae1-40d5-8903-ce0c1e7fc3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ad6208-62f5-4fa6-895d-15740ca796e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7112b9e-f551-4cc8-be56-03e2c8509991",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02355ddf-5708-4471-a207-f5f878f71df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ad3e49-94eb-473e-bc79-8845f48e34c8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57547c1-7b3e-4fa3-9519-210f7888594f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25bb6f7a-f119-4125-9393-62c4f2b5b674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c991aa41-557b-47d5-8f28-bb560f2bb4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d7c230-e109-4404-89cb-fa8941f91554"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7824ef11-a6fb-46db-bd7f-6c62e66a1dac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28a400ce-a8b0-4f6b-a3b7-1fd6b4dcb63b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14b67a4d-8ddd-427a-adb5-6b1995852c56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea070438-00c3-4817-9b41-e87ce55e6d70"
                    }
                  }
                ]
              },
              {
                "id": "6109b984-c38e-4828-91ef-de59fcc555ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9aab6c4-317a-4ca2-9e50-9a09799791c3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab320d0-2b3c-4cef-8cf4-ef94348fbc59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0ebe0637-2fef-4930-8e8e-d1e4a27e8f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f1a728-e858-4d82-9fa8-ae6669a73978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f8649cb-6898-43da-9e8f-d754565c63df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d1349a9-eda2-4b70-b04d-ad796f116120",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8555ac83-669d-401e-a98f-3f126eb44aa2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ae280db-304a-494f-ad08-1f929e758407",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64cbb280-d57d-455d-a61f-9a585d4ce274"
                    }
                  }
                ]
              },
              {
                "id": "322daed4-c44b-4f04-8cfc-ecd5c4af1776",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "63273cc7-58d2-447b-98ef-4f7ff5c05bbd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fa9ef1-c1ff-4315-bcd6-e4e4843b1e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "54fe56c9-1b31-4011-9cf9-069b0463d4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9db76f9-ea92-4603-ae62-aaff7a0b7505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84c1a71-3f04-4b4a-870e-0bbd7afb1a56"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e9a6cafd-7bfe-4ca8-8f94-18c1b7c3b677",
            "name": "Positive Testing",
            "item": [
              {
                "id": "673b9ee0-2485-4eac-a560-6acd8443b2e1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e2a3c4a-93bb-449c-a0c6-9b0e50339e32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "83746ec3-e7a7-47d4-a207-87bfbcbd65f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b33ce6e-1974-4784-847a-0b3b9cc7eabb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3681e5c9-d923-498b-bfc7-854aa838f58b"
                    }
                  }
                ]
              },
              {
                "id": "92167aa8-357e-4658-b665-75b0b1d18e26",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2097dbc6-7dbc-4b60-995f-a78b3d288e03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8d2bc2a4-9e53-42a7-b30c-4610589cc188"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f742a6e1-c01f-4f1c-9737-2ed0462c8c61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c93cd55c-6a9f-4647-ada6-22794c471fd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f349c6c4-0e55-4aac-b6f9-6e02755cc88a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "480576ad-1034-4b3d-8262-0962dfb56cf1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b45afa0-3c14-4167-8913-247f3d29b9ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8392ba3b-ddc1-4caf-ada0-c43443a9779b"
            }
          }
        ]
      },
      {
        "id": "8d9dcf11-17a5-479a-ace4-1a2596908a84",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f211b580-a950-45e3-9c0d-672aa567dca6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "217128c7-5066-42d5-8eb0-01fbdfa0c89b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdd7968c-e265-47bd-97c0-8ba996fc17df",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a3bc14-21e9-4a0e-932a-33fdb31bd805",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "19676b28-47da-4044-8045-745d50a850ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76fa9db-8d68-4ab1-8d00-c9fe3acda01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "596121ab-89a3-4b39-ac7d-1f35f02e696e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b2bc7c3-aebd-4792-a4c4-4fdfc3b535e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53e0ee15-9cd7-40e7-9c37-de4757987dd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a48d0a2-4d9f-4c5c-b52a-46d9a1955479",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93164d8e-a76f-4fa9-ac24-a8a941bdede7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfa32db4-2e56-4450-ab43-ca3945f1c325",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c01675d2-75d4-40d4-b24a-bde33199b365"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81e5c715-7a87-410f-8829-83645b540cb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0e46d7a-b4c2-4d5c-aef8-01821971cdce"
            }
          }
        ]
      },
      {
        "id": "55dffe88-653b-4fc8-a298-abd92e6563d0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bae7fc38-e8e2-4882-a0f4-7c3dbfb2a5e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "952176cc-c729-46d7-a7f2-01db0a51bb17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9428b2f-f1a2-4f2f-ba80-8adcf137ce3c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf61eec6-db72-46c3-b847-58d27b795211",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b89b623-1277-4271-9c98-7fdd3810a749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40228514-4d38-48d9-b82b-d8b651fe238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64e8c7ad-6f68-40ef-8391-56945038b4f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25ed14b0-ac39-4207-a61a-d1182885c0b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "880bd3ab-f3a3-4baa-bef1-6b2931b59af1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ae9b2ea-63ed-4b3c-8ba9-7a718612625b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aed6c38a-b23b-4f28-8393-e2bd85b5ee4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "343d2375-191a-412f-96cc-6217a8b24d52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ff3b1f5-da0a-458b-ad0e-a1f4100fe56b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe754f3e-9784-409d-88c1-8dae9ad4fd7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f33fa1a-13c7-4071-8f19-ea23359ff52c"
            }
          }
        ]
      },
      {
        "id": "3d1aac02-76ca-4de9-b3c5-2db0962779de",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3e10fa8a-7d41-44a2-83e9-2ee3eec65074",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f00727a6-bcde-464d-8275-687c40b171f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d98d419d-4084-4b11-a1d4-b7f4f50eb4fe",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3469da5a-cb85-4a1e-9a2e-40417a6e81ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25176b99-0181-4922-bf1e-45b4faf0f56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1bef8e-0f4a-4191-b33c-00a7e020c513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aabeff4-4f37-4ce5-a5e1-45a71e6a2c9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df9309c7-0265-4a1b-b1ba-bd1815bcdad2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49626d91-0d84-4182-aea4-19608fd0060a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5204d715-0515-4d17-b666-d8ec3f73ea7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67f33f80-13f3-4917-921c-e8d06ebeb5f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce3c2fcf-b51d-4692-8d8a-dd42df0ef17e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a82b2a70-b667-420f-8bc9-7aca2f919a84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab395e3c-7e86-4b39-8f22-3d9c4d0173ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05c448d6-9107-442b-aaf9-9e3538303cfe"
            }
          }
        ]
      },
      {
        "id": "275f25f0-7186-4c90-ad36-49baba0af6f7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e50175df-a9a3-4ed2-a4de-e5ac9647d4ed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c87a110-8981-4836-b4d5-18d4b22b94c4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7576b513-0a0b-4619-a16c-f46d0cff931f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4db3112-227a-4ff6-9c84-151750931dbe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d783e831-d320-4e0f-9b14-3e818a0bfd66",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 27.281746031746028,
      "responseMin": 7,
      "responseMax": 339,
      "responseSd": 28.11590212863409,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720658390356,
      "completed": 1720658405502
    },
    "executions": [
      {
        "id": "a74501f7-fc3c-485d-86b5-1e8b894611ff",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ab028a93-377d-4d55-8591-90f04168f751",
          "httpRequestId": "8dfabcdf-2718-4765-873b-53c1c840ca8f"
        },
        "item": {
          "id": "a74501f7-fc3c-485d-86b5-1e8b894611ff",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b66c5457-5af9-4f6d-9ff2-07a67b302d0c",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "8eb7c058-1992-4929-bd28-96b2fdf087b7",
        "cursor": {
          "ref": "8d9cdab5-9885-49a2-bc5f-8c3cd900ff04",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5c03475d-2164-4168-8161-49b3a8cf9933"
        },
        "item": {
          "id": "8eb7c058-1992-4929-bd28-96b2fdf087b7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e900cce3-3ee4-4743-99d6-2bb1e99fc679",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "30b99cc3-c836-4b9f-998d-e5e707bdc11c",
        "cursor": {
          "ref": "ad683257-cca9-4149-9764-880617a381f6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c64c0ab4-8369-4247-afe6-5ae2292f8e2d"
        },
        "item": {
          "id": "30b99cc3-c836-4b9f-998d-e5e707bdc11c",
          "name": "did_json"
        },
        "response": {
          "id": "a2555c53-14d1-4c21-abbb-f714f0289089",
          "status": "OK",
          "code": 200,
          "responseTime": 225,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91405ba4-431b-4f8d-9c84-f05873553f96",
        "cursor": {
          "ref": "20a2e24d-6b4b-4b7f-941e-a15c20c8848d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ab1f0f02-ed4b-40f5-a77a-0ee0b1376785"
        },
        "item": {
          "id": "91405ba4-431b-4f8d-9c84-f05873553f96",
          "name": "did:invalid"
        },
        "response": {
          "id": "10eb6ba5-43be-4f23-914d-0ea9d926d927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91405ba4-431b-4f8d-9c84-f05873553f96",
        "cursor": {
          "ref": "20a2e24d-6b4b-4b7f-941e-a15c20c8848d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ab1f0f02-ed4b-40f5-a77a-0ee0b1376785"
        },
        "item": {
          "id": "91405ba4-431b-4f8d-9c84-f05873553f96",
          "name": "did:invalid"
        },
        "response": {
          "id": "10eb6ba5-43be-4f23-914d-0ea9d926d927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f092a8-2706-4a61-9d29-4ba9edb5c969",
        "cursor": {
          "ref": "9ddf126d-9485-4220-a779-e4555c3a6e2d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6a1ddb0c-2366-4092-b9ef-ec7623e0a1a1"
        },
        "item": {
          "id": "20f092a8-2706-4a61-9d29-4ba9edb5c969",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9c36d2ab-4087-44ba-99ed-d6e91623b7a4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 339,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7963a3a3-4926-4d8f-8b8b-8453b47bc237",
        "cursor": {
          "ref": "81bc3007-8d3b-4c7a-a781-a9df32cc30e5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ba5182ff-a692-4840-89dd-6b6e56c782df"
        },
        "item": {
          "id": "7963a3a3-4926-4d8f-8b8b-8453b47bc237",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fe4abc47-53c5-4caa-bc92-0c6c2e2a8fa8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa6452e-d591-4347-a85c-d1021874f23a",
        "cursor": {
          "ref": "e039ac11-15a7-40b3-9256-41b09907bb57",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3e12ac47-b84c-4b18-b36d-3d3d05d73c6c"
        },
        "item": {
          "id": "faa6452e-d591-4347-a85c-d1021874f23a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "853c97e6-111b-4a62-b0ba-9d62f44918cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1f01f7-ce93-4fe9-8b4b-471f4db21aba",
        "cursor": {
          "ref": "25112fca-273f-4ad2-819e-0407bed0adb7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "658191d5-7ff7-4536-bd6f-26491a72ac34"
        },
        "item": {
          "id": "df1f01f7-ce93-4fe9-8b4b-471f4db21aba",
          "name": "identifiers"
        },
        "response": {
          "id": "fb99a576-7645-4696-8f05-4ea2385601ce",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f08b6f-c052-4ca6-8ba3-d2a8ba374275",
        "cursor": {
          "ref": "e795913a-7116-4b11-802c-7156a6eab1ca",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "55958dc9-a395-4478-bb14-eb8cdd6dbd72"
        },
        "item": {
          "id": "68f08b6f-c052-4ca6-8ba3-d2a8ba374275",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c0c78e69-1d1e-4956-8e4c-3aca9ca0dc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5664ad-23d6-4e7f-9385-ec0bf7207718",
        "cursor": {
          "ref": "911005b7-5820-493b-854f-6ff9d58e8eb0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b8724583-ac78-4241-bf0a-d42c71e1a034"
        },
        "item": {
          "id": "fb5664ad-23d6-4e7f-9385-ec0bf7207718",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a25af6f7-06c4-4c3b-a24f-125000a2cb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3b3ae8-1b58-4f7a-bc55-a96f121d31eb",
        "cursor": {
          "ref": "22972895-4b43-455b-ae51-34cf2e2138a9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f97aab27-3fba-40ad-a674-028e770b6cb0"
        },
        "item": {
          "id": "9e3b3ae8-1b58-4f7a-bc55-a96f121d31eb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "68f0e56f-3f97-412e-af6b-761e88ea9a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bfa7d1-faa8-42c4-9019-03ac8b3892b9",
        "cursor": {
          "ref": "5699b76d-b002-407a-b2aa-70230c66ea53",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b93ea38a-e3c3-4f66-9203-6e01914690a2"
        },
        "item": {
          "id": "08bfa7d1-faa8-42c4-9019-03ac8b3892b9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b05efd3d-84a6-42f8-bfc2-58880caafca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0021a21-dd1e-43c3-b548-d805cd46e429",
        "cursor": {
          "ref": "1fdbfd0e-1dd1-4ecf-958d-aa744f0ed457",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6edb68e1-d966-4fd6-8e29-1084a9a615b9"
        },
        "item": {
          "id": "d0021a21-dd1e-43c3-b548-d805cd46e429",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0afe687e-b670-4a6d-a358-3012f0103eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0baae3-4401-4fda-9079-96b69f2f4af6",
        "cursor": {
          "ref": "8b591f29-5f5b-4217-b151-05548fb33ef6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5a3d37c5-faeb-4a67-8e94-d084f5bc2f82"
        },
        "item": {
          "id": "4b0baae3-4401-4fda-9079-96b69f2f4af6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6f46d108-3f8a-4fd9-ae9d-a10ab4785bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638fb43e-b151-4061-ba96-67b13d2e805a",
        "cursor": {
          "ref": "53695424-9316-4470-b657-bc3a053b39e3",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "685550da-4995-4301-93e1-5b3e3015b29f"
        },
        "item": {
          "id": "638fb43e-b151-4061-ba96-67b13d2e805a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8842ea76-8017-48f0-b12e-a73d5afb01f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec82c475-f37d-46ce-aabe-0298755573dc",
        "cursor": {
          "ref": "837288c9-5fe7-4a74-8d4a-bc2833f4bc1d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b554c56f-8ac1-421a-bf67-ed89e0d6b982"
        },
        "item": {
          "id": "ec82c475-f37d-46ce-aabe-0298755573dc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a0db2f7a-f25f-498f-b22e-8f0dc0f46bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38454d3-00d7-4067-8680-7e593caeed7b",
        "cursor": {
          "ref": "98c68703-7f7e-4053-90bb-4b987f714eed",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a8f65eb7-6939-4992-8ffa-bf02504390c2"
        },
        "item": {
          "id": "e38454d3-00d7-4067-8680-7e593caeed7b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f75925c0-a632-49e5-8107-4db2b38236ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6229f4e2-ec12-4916-bee8-1f0b1a20f4ba",
        "cursor": {
          "ref": "d7a05f58-ca0c-45a7-b9b7-48bf22981514",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9900570b-fcd7-4763-a32e-1cc619bdf4b0"
        },
        "item": {
          "id": "6229f4e2-ec12-4916-bee8-1f0b1a20f4ba",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f384af04-8c61-4005-8592-6efee1c39ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e9b1d6-4838-4311-9b96-82c68502cb82",
        "cursor": {
          "ref": "58089e51-8a33-4b64-a4da-9c48578b450b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e28ac83c-02a5-4325-a678-5610ecfb8a81"
        },
        "item": {
          "id": "e4e9b1d6-4838-4311-9b96-82c68502cb82",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5cafeb94-a1dc-4d6f-ab88-2b811f6fff9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fc2e87-0166-4b11-827d-7ef2dbb938ad",
        "cursor": {
          "ref": "082a96c9-dadc-4316-9e64-bf9c3c359a27",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "532404b1-dd23-4164-a93f-be7836faa745"
        },
        "item": {
          "id": "e3fc2e87-0166-4b11-827d-7ef2dbb938ad",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6e0ab6cf-0771-4910-a8b6-c7197d632f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c928b12c-a0f4-43eb-bb6d-5105d15405ef",
        "cursor": {
          "ref": "956c047b-5206-4325-970e-53797a5f67fe",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "825497f5-336e-4989-92e7-f20d416a9622"
        },
        "item": {
          "id": "c928b12c-a0f4-43eb-bb6d-5105d15405ef",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2b562168-6cde-4049-856f-e4c18294e30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cf663a-aa48-4bdb-a17d-020a98878a9f",
        "cursor": {
          "ref": "f8d47210-835d-4fd8-9f60-e86cedc88d53",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "903e20f6-7eda-4c47-b8db-bb1dc0e1b1fe"
        },
        "item": {
          "id": "56cf663a-aa48-4bdb-a17d-020a98878a9f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "51c5f299-33ce-4870-b351-758ed7d43185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336ac640-696a-4588-b45e-b23b84e547c7",
        "cursor": {
          "ref": "f708b4e6-9e34-4b60-b9a5-fba6c509384f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2299baa2-eadd-4deb-92e0-20362169e321"
        },
        "item": {
          "id": "336ac640-696a-4588-b45e-b23b84e547c7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "48696f2d-e632-446a-9b03-8bb580c5162a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dfe0de-4868-4aba-b8c3-626daea4d9b4",
        "cursor": {
          "ref": "4ae8a8ca-9954-4307-9cd3-4f771253be48",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "075bddc0-1612-45c5-9dd7-c57e9cb45435"
        },
        "item": {
          "id": "53dfe0de-4868-4aba-b8c3-626daea4d9b4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b8fa01b2-aee0-4562-84ac-51f587115c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181d9c31-66c8-4a38-80fc-25674dd6e230",
        "cursor": {
          "ref": "d32b8e4a-e306-4282-895a-16a11e7c76cc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "42c4e4a8-9d97-4606-94fb-d984b8fb04ab"
        },
        "item": {
          "id": "181d9c31-66c8-4a38-80fc-25674dd6e230",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bf7c8cfd-b806-4f43-ad6e-6ac34aa811c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bd0ff7-fa1a-401e-94ce-058db49e788f",
        "cursor": {
          "ref": "9d0bc35c-bfbd-4fd2-a5bb-844dedc286e9",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "082eafda-36c3-409e-9faf-f76fcebf2efc"
        },
        "item": {
          "id": "23bd0ff7-fa1a-401e-94ce-058db49e788f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "06d01d12-8c6b-4a44-b9c2-39304c8f451a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f96c458-e84a-4f3b-816d-29a1fbb83cec",
        "cursor": {
          "ref": "bf344c0e-15e4-4608-bc27-4023d9e77977",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7dabfefe-1ccc-4031-bc52-4b2fb92fbaa7"
        },
        "item": {
          "id": "1f96c458-e84a-4f3b-816d-29a1fbb83cec",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "881cdf66-8cb8-433d-ad8a-22a7f19e241a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15ed8d4-3003-4239-85f6-5b1d944c5e52",
        "cursor": {
          "ref": "861dd003-764c-4d8a-9f3b-4258b9151560",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c3cfbb53-fabf-435d-bb06-4674908dc9f4"
        },
        "item": {
          "id": "b15ed8d4-3003-4239-85f6-5b1d944c5e52",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "85d0c66f-0939-41ad-98ae-a89ad0fd51a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48061a2c-f923-4b71-8c30-a573765e6208",
        "cursor": {
          "ref": "51b02dd0-da96-4ef8-aa0b-f1d71c74b789",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0d3dfe1b-258f-4cbd-be8b-9b8b0ec6bb8b"
        },
        "item": {
          "id": "48061a2c-f923-4b71-8c30-a573765e6208",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "882cb4c6-9b08-408f-85d1-c1f96cfa9ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e6b601-8ea7-474d-8b24-0abc8d96aa4b",
        "cursor": {
          "ref": "fd1404a8-f86c-418a-8fea-b3ecaa686fbc",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c908a8ef-2dc2-4ea6-b7e8-91cca2f49e79"
        },
        "item": {
          "id": "38e6b601-8ea7-474d-8b24-0abc8d96aa4b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "577be2a2-ce87-4fa3-99ee-e7baca04182d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7b78b5-da2d-4fc1-8597-7c33ffe360b8",
        "cursor": {
          "ref": "c78555b5-8dfb-4492-a055-4d99447e8f07",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e134e756-874e-4959-b8de-2375733c9a0f"
        },
        "item": {
          "id": "1e7b78b5-da2d-4fc1-8597-7c33ffe360b8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "eb8fcf08-5e6d-473c-bc6a-57568d07e169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5277b8c3-1372-4aab-83d5-ff80d5a86950",
        "cursor": {
          "ref": "24c7f305-c43b-4b3f-be1a-f5c4a0b1a5a0",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "83f34ad8-1b30-4173-afaf-2ec4ed8c5353"
        },
        "item": {
          "id": "5277b8c3-1372-4aab-83d5-ff80d5a86950",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a7bb0094-c2e7-4fea-8e4b-c7d481e3849b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08f8361-9eb7-4ec9-8393-e7422cf4c6dc",
        "cursor": {
          "ref": "b9c7150a-59fb-4a20-a13b-23bc25d13228",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "67343588-dfd0-4c70-bb6f-b6e82407c2bd"
        },
        "item": {
          "id": "c08f8361-9eb7-4ec9-8393-e7422cf4c6dc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6f21800c-b3e1-4a83-aace-f7fb11136ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd53eb82-707d-415e-ba17-74e81d540e0c",
        "cursor": {
          "ref": "9620b237-8baf-476d-b51a-79ed5c4e388e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9dd24ffe-64e1-45e5-bb07-b9d62661e984"
        },
        "item": {
          "id": "bd53eb82-707d-415e-ba17-74e81d540e0c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e0d4a77a-34bc-48aa-92e5-5604616d6e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98f5bf7-df58-4183-8657-e6a533f20430",
        "cursor": {
          "ref": "4d41ded7-07db-4acb-bd4f-da5cb028337d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9dab5f08-3362-4b35-8d71-3557cc6ed49b"
        },
        "item": {
          "id": "c98f5bf7-df58-4183-8657-e6a533f20430",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dec0cb00-bf13-4181-9b1a-f03ff9928900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9f5743-05aa-40dc-aac6-50f90c2944d4",
        "cursor": {
          "ref": "6be14432-5367-46c2-9c2c-1bd8c5f3a70b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8dfe76d2-00d7-473e-9821-1c522e7a7d89"
        },
        "item": {
          "id": "ab9f5743-05aa-40dc-aac6-50f90c2944d4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d850b57c-e77c-4102-a19d-4b1a7cdc486c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e888d634-cc0f-48ee-a309-59f6a6c4f659",
        "cursor": {
          "ref": "34d36bda-f173-436f-8a6d-5b47318f929d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b40f7fa3-b356-44d2-9643-cc11285d58cd"
        },
        "item": {
          "id": "e888d634-cc0f-48ee-a309-59f6a6c4f659",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "12155059-ae2c-49c6-8e13-67d78722c8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fbce6c-8c56-40de-a8a9-146219d65e0e",
        "cursor": {
          "ref": "9d5fabc5-7f13-4c7d-9fbe-1c68d8d60ae2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a1f338b0-ae7e-4474-8d1b-6d192e959fa0"
        },
        "item": {
          "id": "d7fbce6c-8c56-40de-a8a9-146219d65e0e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "535f91c4-b63d-4f05-bfbd-a1c1eb8ce9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d8e757-a550-4eab-819c-b59d8a1e77b4",
        "cursor": {
          "ref": "063f7e30-2469-4282-af30-fc5e3a52b630",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "51a7adbd-5c82-4818-a8d1-e9212bf1c256"
        },
        "item": {
          "id": "27d8e757-a550-4eab-819c-b59d8a1e77b4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9582512d-a6a4-420b-ac20-1d4d66e317ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936013aa-6b7f-4b91-bd0c-69c47d0b4617",
        "cursor": {
          "ref": "a04dc2ce-fc2d-4ac9-9f39-2cc8689883d3",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "26c136b1-8f03-4673-aeaf-00e21009009a"
        },
        "item": {
          "id": "936013aa-6b7f-4b91-bd0c-69c47d0b4617",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c216de95-d7cb-4917-bfcc-053552d5f76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ecd320-c728-4555-ae39-daddd7417762",
        "cursor": {
          "ref": "f7d40c19-d18d-46cb-bdd0-1e48800cc11f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5cb2444f-4d29-4a2a-8140-344c4d223553"
        },
        "item": {
          "id": "c0ecd320-c728-4555-ae39-daddd7417762",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f258d947-72b1-4ed8-80f7-666627491008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0bcff6-24b3-4387-a9c0-12841abfcebc",
        "cursor": {
          "ref": "d1cd625e-ef6b-4fd8-a83c-8660383eeb82",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b0e9741d-99c2-4154-87db-f537384df692"
        },
        "item": {
          "id": "8a0bcff6-24b3-4387-a9c0-12841abfcebc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d80a2538-662c-402b-9c95-f849b1044b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78277fea-834d-49fd-8e3d-138037003caa",
        "cursor": {
          "ref": "16d104a3-b5f6-4bde-ba66-374371f187b3",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "166f4513-7d95-4079-8fc8-2a20218b6993"
        },
        "item": {
          "id": "78277fea-834d-49fd-8e3d-138037003caa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ba8492ff-3ac7-4f63-849f-fa5af54a73de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49b4fc3-367b-4712-bb0c-d729c2bb82dd",
        "cursor": {
          "ref": "2c5e07bf-7f16-4d82-aac4-71d9f18a499c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "af9b567e-03ef-4f01-8c36-d1850dd7cb29"
        },
        "item": {
          "id": "b49b4fc3-367b-4712-bb0c-d729c2bb82dd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b9a33af9-f535-4dbf-bc1f-3f9a91f9dc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1424c4-3791-471e-9e80-376e97460691",
        "cursor": {
          "ref": "653b9f8c-e8d5-41fd-96ef-8b4a4bcc8703",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d1ee4651-714b-434e-b3c1-c479895ec6c9"
        },
        "item": {
          "id": "df1424c4-3791-471e-9e80-376e97460691",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cb7d489b-6f63-4d85-ae21-6a5210c68807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138214bb-0606-4df2-92b4-c2399258f836",
        "cursor": {
          "ref": "d34eb3bd-df16-4283-9a41-a25e12ce1d99",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "99abdb58-f401-4e7e-bc27-5f896b0f7d2d"
        },
        "item": {
          "id": "138214bb-0606-4df2-92b4-c2399258f836",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "32219f3d-98ce-48b7-874e-0505a9b5d493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65213f13-2289-49c0-96fe-d59904db5e9c",
        "cursor": {
          "ref": "d99ed1d2-8e80-4c21-baaa-a80be0204a0a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "291839fe-ce09-4f0b-b010-236929dbc73c"
        },
        "item": {
          "id": "65213f13-2289-49c0-96fe-d59904db5e9c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7893fa0b-809a-402a-98ed-d37e309b4239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43afbe29-7ef5-49c1-bc11-69ac990653cd",
        "cursor": {
          "ref": "29ba53e4-c788-46cf-b9ef-3bf07cafb0da",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "92ecf583-77ed-47d1-9b4b-ffeeb7fd50d4"
        },
        "item": {
          "id": "43afbe29-7ef5-49c1-bc11-69ac990653cd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0e6a8fdd-831d-4d1b-9bcf-abd26c8d6483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413c7853-80ff-4954-a6b9-ec1783a39d31",
        "cursor": {
          "ref": "8107a99c-3aa8-412f-9c28-dd9f1a209b67",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3f39e38c-a3b1-467e-a5c7-95ea7a19a099"
        },
        "item": {
          "id": "413c7853-80ff-4954-a6b9-ec1783a39d31",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5a02bede-3ecd-4d92-b8a9-213defb9230a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1deec6ec-15b2-4f64-b717-3e0bec58ae7f",
        "cursor": {
          "ref": "33b0b41f-1eb7-4264-b53d-c85d014b5176",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fba7d3be-e945-4c53-bcc7-1eb24a89422b"
        },
        "item": {
          "id": "1deec6ec-15b2-4f64-b717-3e0bec58ae7f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "248da304-7409-4362-af0c-853db6234d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6467500b-90a5-492b-9f7d-6b25c6155f21",
        "cursor": {
          "ref": "cabd6609-95c9-4a67-8378-272aee5ade65",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cb3f801b-f09c-4d47-93bf-d15980a2e600"
        },
        "item": {
          "id": "6467500b-90a5-492b-9f7d-6b25c6155f21",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "aa54569e-c355-4fc2-905d-04855292e080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018a4e7d-c7cf-4e7a-b5b1-79f1eded7850",
        "cursor": {
          "ref": "1636cd06-f18a-49a6-8873-1b497edf9ad8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f41202da-82bc-4dc9-965e-010ce733cd15"
        },
        "item": {
          "id": "018a4e7d-c7cf-4e7a-b5b1-79f1eded7850",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cf05b610-2d0e-4f2f-999e-577e4bb065cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6f9182-bbf8-4cf5-a890-af25e5c82f60",
        "cursor": {
          "ref": "15333d19-4d72-46d5-bce4-b4a996b1d946",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "be04bdda-99fc-4ab9-a0c8-ed9bedbec5dd"
        },
        "item": {
          "id": "5a6f9182-bbf8-4cf5-a890-af25e5c82f60",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "df9b87c0-f125-4507-9d54-26b36cbfe1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7955943c-624f-486a-a263-4b4eae13107e",
        "cursor": {
          "ref": "d913f676-ae45-4cc1-aa00-f875bbd64808",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e22b39b9-c10e-4e0f-94b6-9970697c7b51"
        },
        "item": {
          "id": "7955943c-624f-486a-a263-4b4eae13107e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9f690899-3212-4570-96a5-14c79d4b9221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722819dd-7960-4589-9ca7-11cfcddddf0e",
        "cursor": {
          "ref": "2fc07d9a-029a-4566-8c3a-ee9dfd8928e7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3f7c90e6-8e8c-4144-8b7f-c5c00f5012e4"
        },
        "item": {
          "id": "722819dd-7960-4589-9ca7-11cfcddddf0e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c9bb5f79-31dc-477c-a6cb-441de440187a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62edc7a1-70c7-422d-95d1-a4c145d9bc62",
        "cursor": {
          "ref": "db43eede-d045-4f2d-b302-99b4b8414ff4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d3cfbcac-8318-4ad3-bc06-fd914f305e88"
        },
        "item": {
          "id": "62edc7a1-70c7-422d-95d1-a4c145d9bc62",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "14392cf8-7acb-4dad-a688-f1f48edfe75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bb0576-8c10-402a-9f59-c17159448d28",
        "cursor": {
          "ref": "d4e159f8-145c-460c-a418-69894ca0839d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ecd7f530-2e61-4d14-b9e6-8aa1f1d65cdd"
        },
        "item": {
          "id": "63bb0576-8c10-402a-9f59-c17159448d28",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e7ac816e-2b9f-46b0-b578-c3a1a357a3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869123bb-99fc-4b2a-93d8-8b0607ef2655",
        "cursor": {
          "ref": "a23fdfc1-b1d5-4e10-98cf-5e4fec1ce69b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2405d4de-ff6a-49ac-b78b-5806a6d9b68c"
        },
        "item": {
          "id": "869123bb-99fc-4b2a-93d8-8b0607ef2655",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1397dd67-3d5b-42e2-978b-de8b81a975db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a19206-8e62-410d-b6ef-fbd0ca6d8558",
        "cursor": {
          "ref": "f566796c-8d0d-404e-ac8d-a740f64c6282",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "541efded-4f42-440b-992b-07f132952cfc"
        },
        "item": {
          "id": "75a19206-8e62-410d-b6ef-fbd0ca6d8558",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "61672ac3-eede-4df4-9d6d-53db03623b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f145e355-824b-4be0-af18-510cbbbf7c48",
        "cursor": {
          "ref": "8c203561-3a94-4c46-8b93-65a87f4de10b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a703c70c-5e88-4784-9b4b-7149afc9a7a6"
        },
        "item": {
          "id": "f145e355-824b-4be0-af18-510cbbbf7c48",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "72b47a01-3abf-4d21-a0f6-cf6394a39fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ca045b-fc51-430a-ba61-804c95126454",
        "cursor": {
          "ref": "eb9f4a74-e5dd-4625-a9a4-0324ecd86ce2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a70d0e51-720b-4e91-b487-b60cafa6909e"
        },
        "item": {
          "id": "65ca045b-fc51-430a-ba61-804c95126454",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fc34bf63-fc89-45fe-bf4e-5dcc4990365c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f24f1e-00c5-4794-ac73-aa5b3d42cf38",
        "cursor": {
          "ref": "ce9817a5-5ca7-4b26-a2a0-b632bfee3926",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c002ad6a-8a42-46bb-988c-cd957a9298d1"
        },
        "item": {
          "id": "82f24f1e-00c5-4794-ac73-aa5b3d42cf38",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "77b1e2df-e94e-4bd9-a69a-88f2ec96bf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105ff671-a14c-4319-8416-7dd54b152071",
        "cursor": {
          "ref": "bf68da6c-5d58-490d-bfc9-efb8cda611ed",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9e7861bd-2025-4b08-a619-e78b9aca871e"
        },
        "item": {
          "id": "105ff671-a14c-4319-8416-7dd54b152071",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5dd94b25-18dc-4752-8d40-f8ea3940f328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06abc79d-2571-4ae4-a2ce-3c9fe2aac76b",
        "cursor": {
          "ref": "760aa474-fccc-44a5-9e9d-a3acabcd772a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "72dcd028-209b-43f3-9424-9ea00b4f510d"
        },
        "item": {
          "id": "06abc79d-2571-4ae4-a2ce-3c9fe2aac76b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "573cd823-c1e9-4135-963f-7a192b4bce68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bd6caf-2486-42a7-aa85-fa13780b2a37",
        "cursor": {
          "ref": "49f96e6f-bc87-4d13-833b-d187e4593f20",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "70264244-e50d-4277-adde-e75b5fde6d82"
        },
        "item": {
          "id": "f9bd6caf-2486-42a7-aa85-fa13780b2a37",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "39b7c976-02c6-462e-b375-d3d41e1394aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a695741f-e64d-4f57-bb11-303c02c0617a",
        "cursor": {
          "ref": "a50d68e3-c46d-457c-bf17-bcec1436d672",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "82ef3e4d-631e-4e34-8876-e1a560beafde"
        },
        "item": {
          "id": "a695741f-e64d-4f57-bb11-303c02c0617a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "187184f5-7169-41b7-9b95-69e603811459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e38511-28c6-44f4-ac48-95856d353085",
        "cursor": {
          "ref": "4c53f603-0b9f-4df2-984c-3966c01cbfd5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "59b6165f-e418-4853-87ab-8c572a3de650"
        },
        "item": {
          "id": "75e38511-28c6-44f4-ac48-95856d353085",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3f602a18-6c51-473c-8add-7028a5f9ce19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a579d624-1e06-46a2-b456-0f54bf06dd3a",
        "cursor": {
          "ref": "32ba8f92-e9a2-4b3c-b82e-bdc4f6c4d90c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b19ca830-fcb4-4934-aedc-fedd4bbadec6"
        },
        "item": {
          "id": "a579d624-1e06-46a2-b456-0f54bf06dd3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a55171fe-feab-4ee6-9f19-714e77246d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e4434d-9acb-4fd0-a668-204160b4e3ae",
        "cursor": {
          "ref": "ddd2fa5d-759f-4eeb-b340-705ba69931fa",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2f00b2b5-632d-46e4-808a-5e40017acefe"
        },
        "item": {
          "id": "64e4434d-9acb-4fd0-a668-204160b4e3ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a0b07968-9f06-4d1a-aa90-08656462c569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d97154-f966-4b33-acc7-0847ae9b0490",
        "cursor": {
          "ref": "52243a3e-f4b9-4167-9bdb-c954ce1c2734",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "51820d08-d90a-4c9a-a766-0ed4dd7630bb"
        },
        "item": {
          "id": "c2d97154-f966-4b33-acc7-0847ae9b0490",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8322e9d7-cbf7-4b43-a9d6-4cf117d20d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d23ca0-3766-4239-bc89-e47f3117698b",
        "cursor": {
          "ref": "56a88821-62ee-4f6d-9208-be74d5019e0c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "256f0083-53ac-4f04-a20b-1576c47cd423"
        },
        "item": {
          "id": "f1d23ca0-3766-4239-bc89-e47f3117698b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e74fb784-e557-46e8-ace1-8a7633f5a930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe79db2-c9c9-4db1-b33d-07535906651c",
        "cursor": {
          "ref": "49fb0171-b7df-432e-a736-2dc086f42309",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7c64cdf3-b870-4601-9ed4-2d3537f7c73e"
        },
        "item": {
          "id": "0fe79db2-c9c9-4db1-b33d-07535906651c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b34a7e36-f2ee-4aa9-ad14-5a35b9f3e2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf546ec3-3065-48a1-b3e7-9e2b484024ce",
        "cursor": {
          "ref": "829200d6-4eaf-46e6-a978-f74955dd062e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7e44d8ab-f7d4-4aa2-9ba9-e23817f6aebe"
        },
        "item": {
          "id": "cf546ec3-3065-48a1-b3e7-9e2b484024ce",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "188b4324-f99b-49b9-bdbf-c9ec97692a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bda502-6766-4d63-a5fb-a0235b265f50",
        "cursor": {
          "ref": "2b8602ef-38f0-4389-beaf-dd4aac3fc03c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a2d928d6-a411-4d24-b857-f828cd64453f"
        },
        "item": {
          "id": "c1bda502-6766-4d63-a5fb-a0235b265f50",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e5ff160b-1a96-4326-809d-e59bf710890a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8455986e-a838-4ed8-8118-f68a03d5023c",
        "cursor": {
          "ref": "0d6b5d73-11ff-476f-acea-6c16744bbfbc",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0206f844-8f14-4bd3-8e9d-f54feacea4a5"
        },
        "item": {
          "id": "8455986e-a838-4ed8-8118-f68a03d5023c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "317df826-153d-40eb-9034-c2ca82c219e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24781df-db78-4808-b2fc-038079e86f35",
        "cursor": {
          "ref": "0ef7dda9-984b-44c0-9012-31d108363d34",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9109f52b-9db7-4348-ab0b-43df7807e057"
        },
        "item": {
          "id": "f24781df-db78-4808-b2fc-038079e86f35",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e85cee39-38dc-47ed-9938-10d60c472841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420b6345-445e-488e-950e-d07cdabfcff6",
        "cursor": {
          "ref": "2a7abbbf-d8c4-4784-b4e5-f79e8e41e715",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a2ac39e5-2f61-44ea-bfa4-46b6f2cf614c"
        },
        "item": {
          "id": "420b6345-445e-488e-950e-d07cdabfcff6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9bba0a7c-32c7-4956-a91a-f9f4d449b455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44c0a15-0140-445a-a127-7edff8680b1e",
        "cursor": {
          "ref": "a796926c-2fab-4c45-9b34-94a4d12e391a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "092f9b03-65aa-42e5-90a3-973f980e24be"
        },
        "item": {
          "id": "e44c0a15-0140-445a-a127-7edff8680b1e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1d62d0c2-83ee-4d52-a106-3709102aa631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d207fd0-25b7-45c6-8672-df2cd995ad41",
        "cursor": {
          "ref": "871c3177-f8c6-4591-8ea6-500b5305d3bf",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ea47da96-1506-461a-ab5c-45706d8cf9b7"
        },
        "item": {
          "id": "4d207fd0-25b7-45c6-8672-df2cd995ad41",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "eb4537c7-12cc-498f-84f8-e6e7531fee0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eae593-7ea0-4f2a-b888-efde05fcf1c8",
        "cursor": {
          "ref": "3cb7518b-d5dd-495b-830a-26e7061b3c02",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "96112902-9829-49f2-b0e7-a95043ba56d9"
        },
        "item": {
          "id": "81eae593-7ea0-4f2a-b888-efde05fcf1c8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "28663eee-820a-4fa6-9cb2-52ece9b0a16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d01f56c-3ad4-452c-ad4a-7f4a828ed024",
        "cursor": {
          "ref": "01a1d92f-67d1-430a-8896-2241863cf319",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4ffbc309-0905-4c14-abe3-9e54512f2dea"
        },
        "item": {
          "id": "5d01f56c-3ad4-452c-ad4a-7f4a828ed024",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7483c7c8-ce43-4c2a-84a1-8600e7f89738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22a70c2-cd4a-4cda-b8c3-86952fcdb451",
        "cursor": {
          "ref": "d1567b6e-de92-4eb6-8a59-005559dc04a6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5930e576-8554-42c9-b7ca-99de72c73a87"
        },
        "item": {
          "id": "b22a70c2-cd4a-4cda-b8c3-86952fcdb451",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "52b41344-58a9-40ad-990d-92334156390c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc3d274-1c29-4c52-bb1d-b7a3823d636e",
        "cursor": {
          "ref": "57fdbf6a-d650-43f3-948b-27e5187bf1c2",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3454ff6f-7e37-41d7-87fa-f8f0350ea9ff"
        },
        "item": {
          "id": "3dc3d274-1c29-4c52-bb1d-b7a3823d636e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "30dbc9ff-7843-4ad2-95dd-b22814f9a80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c810e4-3c9b-484d-bb41-5b60fb610a35",
        "cursor": {
          "ref": "c7f24d52-4a6c-4e45-80c2-5339f67f7384",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "30506e63-80ee-4458-ae30-b358e3adb73e"
        },
        "item": {
          "id": "03c810e4-3c9b-484d-bb41-5b60fb610a35",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8237c41a-3c49-4c39-804f-acb819984898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97be7f32-28fb-4d7a-b23d-e7dee2f075a3",
        "cursor": {
          "ref": "cb3066ba-172d-4ae8-b570-2b580e3932be",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1e20be57-6811-4174-922c-76bdcedfb2fd"
        },
        "item": {
          "id": "97be7f32-28fb-4d7a-b23d-e7dee2f075a3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2ed6decd-0858-4bc2-82cd-c0db63162e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d2f583-4bec-4aee-ae9c-f1bd05bfac85",
        "cursor": {
          "ref": "e6ab8f61-b904-44fd-8e00-ba72f46833a8",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "af29f64b-d4e9-4039-90cf-00372f96ead5"
        },
        "item": {
          "id": "00d2f583-4bec-4aee-ae9c-f1bd05bfac85",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ff977908-84a6-4c3f-8a11-569c38b9f55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2152288-22b7-4ff6-909e-a5c2da27874a",
        "cursor": {
          "ref": "81a4f307-4794-444f-beb3-54d415849251",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6651c6ac-d084-475e-819d-98641cabecf5"
        },
        "item": {
          "id": "d2152288-22b7-4ff6-909e-a5c2da27874a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f49306cd-c4ab-4eb1-bb47-ac22fa7887ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193cbecd-b603-4a9d-a437-a228dba0cf8a",
        "cursor": {
          "ref": "613c1054-7269-4bae-9139-85cd124a3c1a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "84d22472-3bb1-4abd-9f31-2f4bdbd90f49"
        },
        "item": {
          "id": "193cbecd-b603-4a9d-a437-a228dba0cf8a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "adc64007-71ec-446a-8417-e03091974ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fed119-21ae-4756-8d78-337a82642ad1",
        "cursor": {
          "ref": "25db26b0-6872-4195-92a9-94759d851557",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "858b55d9-75ad-4592-9c74-a4ac4d106d93"
        },
        "item": {
          "id": "66fed119-21ae-4756-8d78-337a82642ad1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f6d74635-6109-4e23-8b46-249620749edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8b303f-8761-419d-8761-3370ba1138fa",
        "cursor": {
          "ref": "429d9bca-7958-4a2c-ad5b-838ccffb7f29",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9e47dd70-b785-4b4b-8539-67b58a01d68f"
        },
        "item": {
          "id": "4f8b303f-8761-419d-8761-3370ba1138fa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cf8e9b66-9de6-424f-87ce-a9cc0af607fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4f687a-63d5-4fc1-958f-40bd53fa1a0b",
        "cursor": {
          "ref": "9933abe6-ca47-41dd-a677-188aea34fb20",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2d1955c3-da87-4fac-afeb-9ea2a5b19db8"
        },
        "item": {
          "id": "7a4f687a-63d5-4fc1-958f-40bd53fa1a0b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7cefd9c2-83da-4411-9c8b-b7c4f06e6ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35508fb-f125-41ab-8939-5c0d06ef8082",
        "cursor": {
          "ref": "1b0cba40-7ef8-429b-842b-c498505b0239",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1cb5d828-0cb0-4a6e-93a9-168dfeeb29a3"
        },
        "item": {
          "id": "a35508fb-f125-41ab-8939-5c0d06ef8082",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e089412b-1457-4e55-812a-bf4ba808a41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b264f23-d3f9-4216-bced-3398eed1e7c6",
        "cursor": {
          "ref": "78be0a6b-1b08-4e79-97d0-36f60b544173",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4726ccf1-d62e-450d-8321-d7f4fc42595b"
        },
        "item": {
          "id": "7b264f23-d3f9-4216-bced-3398eed1e7c6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "64138379-9c61-44cc-9316-dbdecac0cf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab40ea54-1043-4ea8-ad27-6fd3f039d025",
        "cursor": {
          "ref": "cee1468f-c011-433a-b434-a9dcf63c1cc8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "715e02ef-7930-4ab6-9da9-af6fa525715e"
        },
        "item": {
          "id": "ab40ea54-1043-4ea8-ad27-6fd3f039d025",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6711647c-89e3-411e-bf79-5ac9c6b53f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091f38ba-e98d-427f-96c0-c1119921f57a",
        "cursor": {
          "ref": "0810cc83-62cf-4aac-9a1e-302bdddd9104",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1e050792-ed7f-4f74-8ede-e9394dd7da8c"
        },
        "item": {
          "id": "091f38ba-e98d-427f-96c0-c1119921f57a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "40505151-d7b8-4b3b-8865-8d26b199e541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2374b53-9503-475b-95f8-227027f1f2ff",
        "cursor": {
          "ref": "2ca406e9-787e-4306-a313-eac378144fd8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "31f9e405-0333-498d-8e33-8a107728d1cd"
        },
        "item": {
          "id": "f2374b53-9503-475b-95f8-227027f1f2ff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "38ce6313-b3fb-4517-bb4a-8d3bc92f513d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b0dbbb-3179-411b-8916-4af224154d27",
        "cursor": {
          "ref": "2e051079-5109-462c-b338-0fba394ce2ec",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6c0d0b6f-1d13-4933-9886-7debbb9d76d8"
        },
        "item": {
          "id": "35b0dbbb-3179-411b-8916-4af224154d27",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dc1a07d3-ca7c-445d-9af1-3ea4ec4541ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe69d01-69e4-47fc-85e6-60fe9ccf3ae9",
        "cursor": {
          "ref": "511e0a29-a104-46f7-95dc-7cdc4cd1bacb",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f4c1663c-a7fb-4755-90e2-ee75fcf9707d"
        },
        "item": {
          "id": "5fe69d01-69e4-47fc-85e6-60fe9ccf3ae9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5ee7483d-7274-4f20-97b4-155e9896a151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f159ecbd-4946-4fbe-80eb-dda467c9118c",
        "cursor": {
          "ref": "f3f00fb4-77e1-4fdd-9c8d-445f74ad8a78",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b0fb2f9d-0ac8-49e2-a73e-eb620fc84a7f"
        },
        "item": {
          "id": "f159ecbd-4946-4fbe-80eb-dda467c9118c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c0ab79b7-5589-4a3e-9cda-4f707518059a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733da7fe-f751-4c38-86df-5ea71d8ccf65",
        "cursor": {
          "ref": "430fc882-c883-4c2d-b803-b021a8484584",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c51db5f9-3088-4510-9fff-b650ca439a6f"
        },
        "item": {
          "id": "733da7fe-f751-4c38-86df-5ea71d8ccf65",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "435190b9-9fa6-4e3f-9e12-5bf1d77dc08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f996acc1-f870-4144-bbcd-7698e9e13e73",
        "cursor": {
          "ref": "26d7bd70-7d0b-4921-bafd-290b800f38c9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a84e7316-ef6c-4635-b07d-3dd167468ad5"
        },
        "item": {
          "id": "f996acc1-f870-4144-bbcd-7698e9e13e73",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3e740fbf-7afc-49e0-b8bc-4eab14f62da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d1028b-c4f7-43c0-b7a4-edac8e2cb128",
        "cursor": {
          "ref": "18fe55ac-0ca1-4b36-a7bc-4ef549c655a7",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cfd5292a-f85b-421c-9e90-8f1cdaab0a27"
        },
        "item": {
          "id": "86d1028b-c4f7-43c0-b7a4-edac8e2cb128",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e890456f-6f87-4616-9a77-96b9718f829f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "dbdee340-3096-4034-965f-e48340c8de60",
        "cursor": {
          "ref": "46762bfc-2f8d-43cc-9cc1-b51826ccdaaa",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "11e861f6-5812-4594-ba91-ef824d07bdc0"
        },
        "item": {
          "id": "dbdee340-3096-4034-965f-e48340c8de60",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9a66a92e-7d14-4fd9-b377-036347c3492a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b872d9f1-7927-4133-a6a9-b083265a752b",
        "cursor": {
          "ref": "df2a0c2a-26b6-4e4f-9146-12300f3466c8",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "82ed077a-3ea4-4880-b3e1-f663eb19ad93"
        },
        "item": {
          "id": "b872d9f1-7927-4133-a6a9-b083265a752b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2e50393d-0350-4ed9-a2e6-63856d2b9068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "99b20835-45d2-4adc-bafe-c09b5a425788",
        "cursor": {
          "ref": "10575178-fae5-4cd3-8a22-932efd0131b3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fe54fd20-b500-4296-bbc0-65aa37046d68"
        },
        "item": {
          "id": "99b20835-45d2-4adc-bafe-c09b5a425788",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1742cd63-b54c-4d42-b566-277b20bb07c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1c96ba35-c350-4469-a105-ba65bad58e22",
        "cursor": {
          "ref": "7a5d3cc7-d282-4bd1-9691-cac8cfe8f7d3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "18489fbf-7383-47dd-9d9c-7c4bc5fb88eb"
        },
        "item": {
          "id": "1c96ba35-c350-4469-a105-ba65bad58e22",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "687a3908-5803-485c-ab63-7d197ff19c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7f8522f8-30a2-4a9f-89fc-ee4e7d3def62",
        "cursor": {
          "ref": "5a671b60-4734-45ac-a12c-b9e3929383df",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d88eebaf-d1b4-432e-a46a-f3b63dbf414e"
        },
        "item": {
          "id": "7f8522f8-30a2-4a9f-89fc-ee4e7d3def62",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "15773470-efb0-40cc-9648-ab8f3fe86806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bfe9f0ef-7e5e-4a4f-b640-724c64a53277",
        "cursor": {
          "ref": "d24832e5-a908-4fa3-9709-b3818c2a0081",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7bb00ee4-412f-494d-9ed7-239f991416a3"
        },
        "item": {
          "id": "bfe9f0ef-7e5e-4a4f-b640-724c64a53277",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "925331fa-e9ec-44f1-8c3d-5fab75899a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d83eea82-9d2e-47ca-889e-12bf9ea774b0",
        "cursor": {
          "ref": "614f7bfe-5e59-445e-9cf9-0eba2d74d584",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5f4b7472-d7a9-477a-96ae-88661f7a81a1"
        },
        "item": {
          "id": "d83eea82-9d2e-47ca-889e-12bf9ea774b0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c45d6ff7-5c59-4872-97bc-b588ad5fd657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbb7523-1e75-46b2-a75f-04173d723fe7",
        "cursor": {
          "ref": "b92e23bc-d5de-4080-ab56-22b1b11ac70f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5ed8443a-39aa-45a8-af53-eb762fa43fef"
        },
        "item": {
          "id": "8dbb7523-1e75-46b2-a75f-04173d723fe7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cad8f81b-fed4-4d7f-8966-a30937d98ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf94c88-beef-4c47-88b6-a0079a7bfd38",
        "cursor": {
          "ref": "e23139b9-462f-4b33-951e-decf2d87ffc3",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1ed950a1-d548-494e-a210-f538f6bec817"
        },
        "item": {
          "id": "fcf94c88-beef-4c47-88b6-a0079a7bfd38",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2b04f0bd-af30-49ee-877f-70a8cb1895ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7efe34a-7492-4299-a72e-c2ea04aaa0ed",
        "cursor": {
          "ref": "c9da0280-9330-4c3d-9d79-c3e4f77f3cbe",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9a68453e-0d00-48f7-b188-063ac1f177b3"
        },
        "item": {
          "id": "a7efe34a-7492-4299-a72e-c2ea04aaa0ed",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1d947ff3-638a-412d-82ab-30a6c5a23f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b237d3-e13e-496b-8699-16425063bf08",
        "cursor": {
          "ref": "d8a85461-e6eb-4d38-9176-555b1471288b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d8571c8d-a606-4990-9aa0-93830d835a09"
        },
        "item": {
          "id": "04b237d3-e13e-496b-8699-16425063bf08",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7fb2b681-4be6-4fb6-84ea-abdaaec3e7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b67d2d-fbec-4d51-9859-713a9e1ab96b",
        "cursor": {
          "ref": "62507c6a-fad7-4cee-910a-5c71fd53717f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2039d4a5-ed61-4463-90e4-57f036040f6b"
        },
        "item": {
          "id": "e4b67d2d-fbec-4d51-9859-713a9e1ab96b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7887b153-cd45-4fda-a952-462770785d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a61bbf-9bae-4a53-89df-b8272ff7dfda",
        "cursor": {
          "ref": "19b52dc4-dbb6-49aa-ab8c-57e38913f28f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f5fe82b8-a747-473f-bb78-7b8117a0ceb8"
        },
        "item": {
          "id": "32a61bbf-9bae-4a53-89df-b8272ff7dfda",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a5956aee-4cf5-4270-8866-911bd34cbc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315991e5-6fa4-41d4-9802-0c6be880758e",
        "cursor": {
          "ref": "ee802b67-490f-4aee-a7c1-56d5107c05cb",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8922b76b-7ee6-42f0-81d5-ee6bd56794de"
        },
        "item": {
          "id": "315991e5-6fa4-41d4-9802-0c6be880758e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "46500b45-f8eb-4ba3-8ed5-d3c49ffed038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19baec7f-3e1b-4c7b-9df2-1c3d1c845683",
        "cursor": {
          "ref": "e9c514b9-f2cb-4cfd-b627-0de44b7756c6",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "416ccc8b-a28f-4d61-a998-d47f8b0569f9"
        },
        "item": {
          "id": "19baec7f-3e1b-4c7b-9df2-1c3d1c845683",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fc2ae991-f207-4fad-abae-dda5a2ec58bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5fa2b3-ba09-4b9c-822b-a38eee3d7c36",
        "cursor": {
          "ref": "259cf070-d0c4-4410-b32b-3ba07f692186",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fa75dc7a-7ca5-4a7d-9d7d-f77b5286ad70"
        },
        "item": {
          "id": "7c5fa2b3-ba09-4b9c-822b-a38eee3d7c36",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "01c0d436-71a2-4b35-a469-9aa7372df134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62bba37-2048-4177-a7e2-7625cd18386b",
        "cursor": {
          "ref": "41f08c03-4c55-4c4d-a8a0-55ae035822ce",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b4e3acf2-f041-4ccd-adcd-4b73fbd55e28"
        },
        "item": {
          "id": "f62bba37-2048-4177-a7e2-7625cd18386b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "60c57ecd-10c1-4fe2-afef-c6198e83474b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91be19fa-b88b-49d5-b27a-7c73f3031ccb",
        "cursor": {
          "ref": "d7cf7d4a-db8c-4f80-85d1-7028ce222501",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1052e928-94df-40f9-a248-79a9d028cd29"
        },
        "item": {
          "id": "91be19fa-b88b-49d5-b27a-7c73f3031ccb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "db4a2fea-d4fd-4ca8-89c2-644ff7eb817a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c39463-963d-4cf4-9ddf-e26d698f18f1",
        "cursor": {
          "ref": "bc2a6095-2130-4775-bc39-9d84e40668bd",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c5acd821-9e1a-42c7-92ef-47b9001b75c7"
        },
        "item": {
          "id": "39c39463-963d-4cf4-9ddf-e26d698f18f1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e05ddd37-e8b9-4885-a612-a68e5933124a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa6e6ee-ced8-4d51-9a62-3419900574d6",
        "cursor": {
          "ref": "20cadf31-bc4d-4e72-a6b7-0d9a22c59cdb",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2ebd12df-6d1b-446c-bfbc-964b131a82df"
        },
        "item": {
          "id": "0fa6e6ee-ced8-4d51-9a62-3419900574d6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9460d6b9-ad48-4557-90e5-957a7aee6076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d83d952-0a80-491f-9014-a0d6661623ed",
        "cursor": {
          "ref": "33459f87-5091-47db-99ce-6120d25a799b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d6f06724-3dc0-49f8-8bf8-3e15a32df892"
        },
        "item": {
          "id": "9d83d952-0a80-491f-9014-a0d6661623ed",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0fdaee50-f6a6-416f-a921-c04a7650197e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68c114c-412f-40a4-9e47-57df68043abd",
        "cursor": {
          "ref": "b67c096f-b138-48c4-bdac-4159608becba",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d86e2a31-e6ca-444c-b5b6-8e7f9e28569b"
        },
        "item": {
          "id": "d68c114c-412f-40a4-9e47-57df68043abd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4ce98f70-1018-4b52-97a0-e10ce8461810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf6c117-764e-47dc-ab8e-6cf002a6adf7",
        "cursor": {
          "ref": "11488b87-1ec7-4d7b-aff4-f7cbb5114f4a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b785b8a9-9fda-46aa-bbb2-74e5a2148038"
        },
        "item": {
          "id": "bcf6c117-764e-47dc-ab8e-6cf002a6adf7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ae7cdad5-e5df-42da-b3ba-36e499fc9d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5cda4a-9e7d-4079-afe0-f29874d53dd3",
        "cursor": {
          "ref": "7cafc237-5e33-4a20-9686-c05240d5afa4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f459b351-8e24-4eb5-b807-33da8016a3ba"
        },
        "item": {
          "id": "bb5cda4a-9e7d-4079-afe0-f29874d53dd3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fb9ab70f-255e-48b2-81ea-e8d042080ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8932946-7427-49b6-ab43-89ecd6362538",
        "cursor": {
          "ref": "05db3741-5f87-4427-96dc-178414dbccc3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "337a8984-7406-4869-b676-9de24c833df1"
        },
        "item": {
          "id": "d8932946-7427-49b6-ab43-89ecd6362538",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ad1ff573-8be3-4f49-8250-0b3998c573a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03854bd2-413d-4bdd-9b27-b24ce541177e",
        "cursor": {
          "ref": "dc47a702-f8c3-400d-8710-6860b753defb",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "217889a9-1048-4f0b-9d39-8fc8cbe39bb4"
        },
        "item": {
          "id": "03854bd2-413d-4bdd-9b27-b24ce541177e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f34ef6b3-81a2-4868-99ca-f161f7dec86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074784c1-5c6f-4126-b5f5-04f887f5627c",
        "cursor": {
          "ref": "2934e1bc-6779-4eff-9833-54de5affce63",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f2472d34-3320-4a91-b25c-f649a65bd7b1"
        },
        "item": {
          "id": "074784c1-5c6f-4126-b5f5-04f887f5627c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cff6f4b7-1080-400a-991a-dfd087d835b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bc0ebd-dca3-41ba-9087-d112873c7ab6",
        "cursor": {
          "ref": "39029634-bc6f-4177-a382-b494a698f4d0",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6fa5026e-61f9-4053-af67-f419649f264c"
        },
        "item": {
          "id": "e5bc0ebd-dca3-41ba-9087-d112873c7ab6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "694eb0bb-88b9-4cd2-b221-fbdfc3b014b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a8f627-13ec-4e71-a9cf-b749d7d7cb65",
        "cursor": {
          "ref": "0c7f9b72-92e7-4547-b7bd-e976979ef06a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f0b76f0f-6522-4b29-8269-bb548d441775"
        },
        "item": {
          "id": "91a8f627-13ec-4e71-a9cf-b749d7d7cb65",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f9351b86-c46d-42f0-ab1e-94f0df4fb7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20be0dac-fcdc-4065-a637-0db208dac6b0",
        "cursor": {
          "ref": "6343fcb0-da83-40bf-8fd9-a753b94ec180",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8e0abc0d-f771-4710-90ec-0aa7b1257d5f"
        },
        "item": {
          "id": "20be0dac-fcdc-4065-a637-0db208dac6b0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9cc6a84f-62dc-4eca-90ac-d86983cdf793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff1d80e-e218-4484-953b-71e8696577d9",
        "cursor": {
          "ref": "2ea00b4d-22e3-4703-b808-fcdf81919a36",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "52e90a81-8e0a-4e17-a1bb-20b84cc1164c"
        },
        "item": {
          "id": "6ff1d80e-e218-4484-953b-71e8696577d9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e5ebd158-115a-49df-bd1e-00750b06d452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce287ef-78ff-4a05-840b-13eed57706e1",
        "cursor": {
          "ref": "b498a137-0d74-4b72-97d4-307cbb6a1e92",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "906dd808-9a0a-43c4-907c-fed60005cf21"
        },
        "item": {
          "id": "4ce287ef-78ff-4a05-840b-13eed57706e1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd5dfb2b-cf78-4493-bdad-8cf25e5f0f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008fdc15-2ddc-401b-8913-cd002c6c1d80",
        "cursor": {
          "ref": "c69b33ff-29b6-40a0-8eed-a90919217afe",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "321093c8-6f5f-4d16-9946-a412a68ad4cc"
        },
        "item": {
          "id": "008fdc15-2ddc-401b-8913-cd002c6c1d80",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "13b75ac9-8d8b-4db9-ba21-fde854916cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a132cc-6191-4a83-bdfb-9ac4f4f5e4a4",
        "cursor": {
          "ref": "7ad7619c-ba3c-4cbd-82c7-f78a6a9331b2",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "52356f15-0467-4c74-b79b-2dc589d8c55d"
        },
        "item": {
          "id": "c9a132cc-6191-4a83-bdfb-9ac4f4f5e4a4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "169049fa-7d91-4692-9a8d-69b1610ed951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2ff2dd-a4c7-4bb0-acab-48b00c5c6fb6",
        "cursor": {
          "ref": "90d0be16-bb2d-483a-ba98-b5333d83e206",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ddc98468-69ec-431f-ba30-b0e2740e8d17"
        },
        "item": {
          "id": "ef2ff2dd-a4c7-4bb0-acab-48b00c5c6fb6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3853bb66-9f2c-4017-912c-adb07ff48fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73eeeed-ed21-4563-a3df-d2d2323a06f2",
        "cursor": {
          "ref": "47bae237-ccd2-4f42-9e26-97ed35b60895",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7c8dcc61-9d56-4ca0-b9af-e6a21f761836"
        },
        "item": {
          "id": "c73eeeed-ed21-4563-a3df-d2d2323a06f2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "473ef2ff-5eca-4dea-a0a5-51da381328b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd22755-87fc-4c02-a123-26e91d7df882",
        "cursor": {
          "ref": "770a7f2e-27c8-4a1c-a4c1-63e574d35209",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b7942237-4038-4dfc-a7cc-4e1313e2993a"
        },
        "item": {
          "id": "2cd22755-87fc-4c02-a123-26e91d7df882",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "441e1d96-1ef6-419c-a66a-5a4a09fc18d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bec545d-0f80-4845-b37b-b53aba1f984d",
        "cursor": {
          "ref": "d74b8419-918e-42b9-bc6a-2fa880f50153",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9b3f99cd-bcc6-48bc-8207-b1a6b0629cfb"
        },
        "item": {
          "id": "5bec545d-0f80-4845-b37b-b53aba1f984d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ea8c5201-7094-4576-9ed6-9d3fce9be8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e563df-abca-49b0-bb55-ed05301ebb44",
        "cursor": {
          "ref": "d367538d-01e5-40f6-88a7-e99590e8e5ff",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1349cbdf-f4b1-4161-8668-4aa513febce5"
        },
        "item": {
          "id": "01e563df-abca-49b0-bb55-ed05301ebb44",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6c7a8a55-85f4-4b8e-af12-b817cc70a735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5525b074-9621-46db-a7fa-96d12c1eeb75",
        "cursor": {
          "ref": "be5c2cbf-d7ce-4f69-ba15-d07f4db8daec",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "45182540-fc52-48f7-bea6-03fdfa2c9b1a"
        },
        "item": {
          "id": "5525b074-9621-46db-a7fa-96d12c1eeb75",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dd47c9d0-a873-48ec-959c-83d05a7671e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5320ef-3a49-4cea-a77b-a1e66c9686fc",
        "cursor": {
          "ref": "3e84d661-a718-4ebd-b468-db0c04263948",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "faa5f6f5-3488-4a0d-a934-09c704be6c9e"
        },
        "item": {
          "id": "0f5320ef-3a49-4cea-a77b-a1e66c9686fc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0595d6dc-98e9-4e67-889e-c2f286fb386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33f99b6-45dd-4994-9481-6ee6fec263b2",
        "cursor": {
          "ref": "5a76c1b8-da15-432d-8041-e87067571a51",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c911b2d8-5073-4d7c-8864-1628f5337857"
        },
        "item": {
          "id": "d33f99b6-45dd-4994-9481-6ee6fec263b2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d0d44505-39e8-4b9d-a3b6-c2479c747cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac1388f-a140-41fd-a823-ce0c80c1b324",
        "cursor": {
          "ref": "3de6610e-5d16-4d38-9a2e-5701281b3b62",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "59a51517-ab52-4126-adc7-00db2e72a5dc"
        },
        "item": {
          "id": "5ac1388f-a140-41fd-a823-ce0c80c1b324",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "75c902d6-93bd-404b-aa15-4414b82d4853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1661fc1c-fec3-494c-8181-2e48d0073e08",
        "cursor": {
          "ref": "59c0fdf1-abe1-4445-98f8-39dbda81e50f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0f676f6c-5530-4966-9bb2-ca7ac30bc3c2"
        },
        "item": {
          "id": "1661fc1c-fec3-494c-8181-2e48d0073e08",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b6587b6-0937-499f-aee8-c189b51c89bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cef8f6-47ed-4e93-9e9a-bf9b4b624db4",
        "cursor": {
          "ref": "1685f4df-f408-44d7-86f7-b9dfeebef9a8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ae4e9dae-1d82-449e-b070-8f9611f3b3b4"
        },
        "item": {
          "id": "a5cef8f6-47ed-4e93-9e9a-bf9b4b624db4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4e475ccb-d9a6-41c4-adbf-45d4a5b2310d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9f0c67-3b0e-44b8-bdaa-cb32977ef3e1",
        "cursor": {
          "ref": "ae18acd0-bcab-4b00-ad1a-fcc9ba2d493e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0fde1891-acad-40a9-af7a-f43e2a01da25"
        },
        "item": {
          "id": "3a9f0c67-3b0e-44b8-bdaa-cb32977ef3e1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9cf36671-dcb4-4677-b9f3-3d129952eaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fc12fa-a44e-4f00-b628-20704080ef93",
        "cursor": {
          "ref": "a93acaa2-f75d-4c3e-a5bd-594b08076d33",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "91526f16-f331-4da1-90db-878d8aa7f9a1"
        },
        "item": {
          "id": "60fc12fa-a44e-4f00-b628-20704080ef93",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "533380d3-a3b8-4567-bf7f-e9e4a1ac0eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec0bcc8-52d6-407e-b4e7-d1722e2bb5e4",
        "cursor": {
          "ref": "76707bfc-55e4-4bfc-9d7c-cf9e6e024f4c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bc7ee234-fac0-4193-9456-c5d5752ed72f"
        },
        "item": {
          "id": "3ec0bcc8-52d6-407e-b4e7-d1722e2bb5e4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dbe7601a-d8bf-4670-b809-a61da341054c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99187edf-c7bf-4e57-b5c6-d83c98cae72e",
        "cursor": {
          "ref": "2d214b95-47b3-4a7b-ac28-7f651e3b0808",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ad7cba23-ef3f-4672-ae98-ea7a2c77504f"
        },
        "item": {
          "id": "99187edf-c7bf-4e57-b5c6-d83c98cae72e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c50e15b9-5fd8-4eb9-8fb4-994e3d12401a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7469ff45-b586-40b8-87fd-86e8391ffde6",
        "cursor": {
          "ref": "8a734b7f-90ec-4155-981f-9d4374555e71",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9c7a8d19-0e31-4833-a890-88050ed8f07f"
        },
        "item": {
          "id": "7469ff45-b586-40b8-87fd-86e8391ffde6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "82eae991-a3f1-4173-b0f2-f314eb48dda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2897b6-9abe-42e8-896c-04b4173a1e7d",
        "cursor": {
          "ref": "8da25946-9d7d-41db-a74c-8b4c92df5fe6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a99d3246-3eed-45d9-8d2f-e48bc8dc6e05"
        },
        "item": {
          "id": "ce2897b6-9abe-42e8-896c-04b4173a1e7d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ae8f7a6a-aecf-4e51-aa51-577f8605c4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1b3024-e0b6-4841-a0d7-9b2bdaf83b61",
        "cursor": {
          "ref": "712b7cc8-b21b-493f-90e7-2f5988be5ba0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "43761728-aa27-4f9b-a141-3cbc4297ac35"
        },
        "item": {
          "id": "1a1b3024-e0b6-4841-a0d7-9b2bdaf83b61",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cc1bd101-05a0-4e4f-ad42-76dfd790fc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b7c8b3-4b64-474e-9224-8551e5e842fa",
        "cursor": {
          "ref": "318955c9-227e-4bb5-acea-10de36dd965d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7a21e390-f19d-460d-8c50-4799f8eba30c"
        },
        "item": {
          "id": "95b7c8b3-4b64-474e-9224-8551e5e842fa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "95df9b57-0660-4deb-995c-0aedb4aebc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562edb35-30a2-43a4-ae3c-2ae12a77b51f",
        "cursor": {
          "ref": "f12d287e-2044-420d-a379-eddd65879b48",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "189eb869-0510-4b66-8084-2e9e2562e887"
        },
        "item": {
          "id": "562edb35-30a2-43a4-ae3c-2ae12a77b51f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "05cae147-9e3a-45e4-867d-81f33939c3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c44503-df3d-4c64-b8df-2a61b1e9f874",
        "cursor": {
          "ref": "e6169c71-410d-4a9f-a604-97d800204e5b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cd117ac5-b665-4496-b4f9-db8387384d1b"
        },
        "item": {
          "id": "43c44503-df3d-4c64-b8df-2a61b1e9f874",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "16a75885-3521-46ee-b36b-0b34b259d2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e378fdd-20fc-4253-a21b-d9279026c8b7",
        "cursor": {
          "ref": "60d30d06-c41c-4799-a0d2-997bfa768c23",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fcb95a60-0849-484c-9aa4-b28c5cfb540b"
        },
        "item": {
          "id": "6e378fdd-20fc-4253-a21b-d9279026c8b7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1c2f4187-890e-445a-b623-663428801ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd93b79-68d3-49c4-839e-fdf23607dda8",
        "cursor": {
          "ref": "b50a8e89-ba7d-4da0-88d3-5e6364d7a246",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b9ed8d86-a853-48f1-84e9-327ba044ff34"
        },
        "item": {
          "id": "9fd93b79-68d3-49c4-839e-fdf23607dda8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d8bd91c9-55c8-4a00-8d18-3ebfc1821db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a69af4-c2c5-4743-95fb-eb7211683d26",
        "cursor": {
          "ref": "372f0bf3-2da6-43a7-a597-ae3a6040c6e9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "51606191-2fda-4fba-8ab3-5c1e4dcd331a"
        },
        "item": {
          "id": "30a69af4-c2c5-4743-95fb-eb7211683d26",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "12c31723-8bb7-4f16-b9e3-6157e989a6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cc0592-e5db-4334-8e39-274f14a380b0",
        "cursor": {
          "ref": "9afed49d-108c-43b1-9606-f07c111953b0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "95246102-a3ff-4bd5-9e0f-7b6f3f62e853"
        },
        "item": {
          "id": "80cc0592-e5db-4334-8e39-274f14a380b0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3fcdeae1-e33f-4884-a40e-469e00e1a1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13444799-1b6f-4284-845c-b4754f8ca3a1",
        "cursor": {
          "ref": "91c4bb06-08ff-40fd-8d38-6cb83bcb9976",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c41780d0-85e0-4ccb-9372-c8859df3c6db"
        },
        "item": {
          "id": "13444799-1b6f-4284-845c-b4754f8ca3a1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "026c05fa-dc7f-460b-b50a-ce142d3f8c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae6d51a-6498-46c3-b39a-f9ec62e3d680",
        "cursor": {
          "ref": "144e413a-dad9-4c1b-9e60-3a73c9450fee",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "56187566-8972-4e20-a832-4ad9990ab271"
        },
        "item": {
          "id": "5ae6d51a-6498-46c3-b39a-f9ec62e3d680",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "efc3d27e-61ad-4485-83b8-32d2b880cab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c54dad-9bc5-481e-b736-41e3eec98d77",
        "cursor": {
          "ref": "6ee72abb-d537-4182-a699-e436a23287ad",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "192e0c31-1145-4414-b5e8-5d6276c1cc81"
        },
        "item": {
          "id": "c2c54dad-9bc5-481e-b736-41e3eec98d77",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0dc8ba94-c32d-45fc-8019-9608c673db56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7485ced-b09b-4f0f-a890-6b070cf1f5dc",
        "cursor": {
          "ref": "1abcb6f9-470b-4544-b671-2a74a6ca00cf",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a78648b4-da7b-49aa-a316-1905e381d14c"
        },
        "item": {
          "id": "b7485ced-b09b-4f0f-a890-6b070cf1f5dc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2bb14393-d0a7-43cb-b9a8-25024a013a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cef3fb-8409-4fe0-96b3-0b4875188a80",
        "cursor": {
          "ref": "ff8464fa-cd17-4740-a9e3-d4ce3493d499",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9b637075-1b8e-461e-93f6-47b8639f863a"
        },
        "item": {
          "id": "26cef3fb-8409-4fe0-96b3-0b4875188a80",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3123c051-425a-4de4-ac8a-67cc3f9b4f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5daa33-5f55-4e36-96bb-37594b85e1dc",
        "cursor": {
          "ref": "b12884ce-cb83-4a34-9932-e381dfb645bb",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "538a8ad3-0c0d-46db-979d-3c14a47c998c"
        },
        "item": {
          "id": "1c5daa33-5f55-4e36-96bb-37594b85e1dc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2a911e85-826c-49ad-8d24-8138ca1049e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6f6ea9-2505-4bfc-a97e-b117b8d8b044",
        "cursor": {
          "ref": "f90506fd-355b-41b1-96de-f305353c06c8",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "825fc33d-31be-4bc6-91ee-af82a16b63f1"
        },
        "item": {
          "id": "1d6f6ea9-2505-4bfc-a97e-b117b8d8b044",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1988ec55-c994-4210-bf1e-004d1c33e32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a008a63-d09c-41a0-8a1c-0d81015bae6b",
        "cursor": {
          "ref": "55fcad3d-dfab-42c3-a93a-cde1e5bfc00d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "498ef6ed-e137-4495-b5c4-acb18aa96a06"
        },
        "item": {
          "id": "8a008a63-d09c-41a0-8a1c-0d81015bae6b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "05877ccd-a45b-4516-b2c8-34ec55ab332b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019a5cf8-0d33-4e8e-85b4-c82848918699",
        "cursor": {
          "ref": "b6a0fbe0-a59f-4ee5-b98b-01ee0ea2b740",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4ab61168-c3be-4357-b7cc-3dccaac139b0"
        },
        "item": {
          "id": "019a5cf8-0d33-4e8e-85b4-c82848918699",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f11105ba-ea55-40d1-9876-6ac0a929695d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a0793c-79e3-4c30-8308-ec77f1155a0f",
        "cursor": {
          "ref": "6a1e8624-d92c-404c-b517-30dbe55b75c3",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b68af5ae-69e9-49c5-948a-24d74c0fc44e"
        },
        "item": {
          "id": "a1a0793c-79e3-4c30-8308-ec77f1155a0f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5c488a25-aeee-405a-91f1-992f23e8b94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5944ed-1f42-4919-ba0c-7fba6c2803c3",
        "cursor": {
          "ref": "e7c7ae73-4188-45b1-8583-ddc60bfa4316",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f21e7892-429e-4bb1-818f-acee9daa49db"
        },
        "item": {
          "id": "1b5944ed-1f42-4919-ba0c-7fba6c2803c3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b836d69e-8c81-495b-aea2-d41dd871719c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5da6b1-04e6-4a81-8179-41540b2960d7",
        "cursor": {
          "ref": "fb425b06-56f0-4eef-8f33-96d021a44108",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d1d8b0c3-02e6-4617-ae8f-6f7b48ca45e2"
        },
        "item": {
          "id": "df5da6b1-04e6-4a81-8179-41540b2960d7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "560d5da1-4fc9-4d0f-8ecb-ae9405c1b200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5c1893-edd4-4732-ac4d-c743077ec485",
        "cursor": {
          "ref": "835c10c8-3994-4585-9595-e6535ba5389d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0f0abe34-93d4-4122-a1e7-552eab7a7b04"
        },
        "item": {
          "id": "2d5c1893-edd4-4732-ac4d-c743077ec485",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7984d2ed-ed87-4654-89f7-255e71485fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08077c65-773a-4f5b-b5e2-99255fde3820",
        "cursor": {
          "ref": "8414434f-4108-4aa5-8f39-1eaa79804161",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4aac15d6-c2f4-4846-8b8a-4b65f626664a"
        },
        "item": {
          "id": "08077c65-773a-4f5b-b5e2-99255fde3820",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "81161842-f6c9-4391-a4c9-588bae9db86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efeac63-fabf-4a07-b98b-ce097890093e",
        "cursor": {
          "ref": "1114c219-0e4f-4e22-8f3d-2cf16e5fde6b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1c10005f-d863-4db3-a672-17554d05565b"
        },
        "item": {
          "id": "3efeac63-fabf-4a07-b98b-ce097890093e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7b55a6b4-4b90-4243-8b93-94119745a42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792b5138-20d2-400a-8258-c2ed6651a7b5",
        "cursor": {
          "ref": "f469f320-6df8-45ef-8fd7-82fc98a1ca0f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4756d192-2454-48f5-beea-59ed73f1afbb"
        },
        "item": {
          "id": "792b5138-20d2-400a-8258-c2ed6651a7b5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "21524036-0ea9-4e76-a10e-db15f21ae96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8c3a48-5288-4e9d-ae4c-5abfd60d698e",
        "cursor": {
          "ref": "e2d6092d-6d46-4f5a-8436-e967754b45d8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "766b145c-e4dd-4bfa-a7ad-4303c43626f3"
        },
        "item": {
          "id": "dd8c3a48-5288-4e9d-ae4c-5abfd60d698e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5c89baa6-7472-4f61-ab3e-282c773bfc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff7891c-5fc2-4156-9e04-5d9c329b62dc",
        "cursor": {
          "ref": "ef28d9b9-b5f4-4349-917d-a4925054e59c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "34e6fc94-fcb6-47e2-8e55-0e7ac83f0657"
        },
        "item": {
          "id": "3ff7891c-5fc2-4156-9e04-5d9c329b62dc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e7d034f3-9ef1-4779-8d94-e1445ca527d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f706b0f-cbfa-44b3-b094-3dfdf83683ce",
        "cursor": {
          "ref": "1e5934a0-e013-429e-b25d-9d92d6c8563f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4ed1f841-b3d0-4cfe-a087-e44660aa31bd"
        },
        "item": {
          "id": "7f706b0f-cbfa-44b3-b094-3dfdf83683ce",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "aa579265-9634-4501-8cb6-6a65f6407f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db920653-107f-47fd-b2d1-9417ac8d08f4",
        "cursor": {
          "ref": "3239cdcf-5868-48ff-9a39-46738c9288fe",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7be69b84-7280-453b-9b9b-a45ba5c3043e"
        },
        "item": {
          "id": "db920653-107f-47fd-b2d1-9417ac8d08f4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d42c69e1-6db4-4046-bfae-d3421157237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071a2cd8-1491-49af-80b5-01592615ee6c",
        "cursor": {
          "ref": "5070455c-26cc-4013-a5cc-9be85ffbe412",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "276f9ea1-136a-49db-b098-e9b0fc6a3cbe"
        },
        "item": {
          "id": "071a2cd8-1491-49af-80b5-01592615ee6c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "48ca317d-c183-4bf8-b1c4-727a58c0d75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667332e1-0467-441b-a6cf-10e78ffae707",
        "cursor": {
          "ref": "1d01a91c-6767-4f21-a498-211fa20a87e7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3808e9dc-d81a-491f-a4db-5d7396b57a82"
        },
        "item": {
          "id": "667332e1-0467-441b-a6cf-10e78ffae707",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "81a510cc-ee9e-491e-a952-259d2e064b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c1f267-279f-491f-916a-d9c7a3856cc7",
        "cursor": {
          "ref": "30af8661-92b7-44c6-90c1-b1431ec0ebc0",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "71156f06-2fc8-4260-b70d-5bc18825529f"
        },
        "item": {
          "id": "46c1f267-279f-491f-916a-d9c7a3856cc7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1a6621cd-9a66-4661-b2ee-1740cb5616a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfbacc0-ae7c-45df-8d82-056bac6e1f9b",
        "cursor": {
          "ref": "27a98a41-c348-4897-be19-aa3bb038f82b",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6805bb6b-0185-47b5-94a0-15225c9fe4a9"
        },
        "item": {
          "id": "3cfbacc0-ae7c-45df-8d82-056bac6e1f9b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0e8735e6-dcda-4209-9e5a-4d409fd074b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6e5aee-01d3-45bf-8aec-f22ec0e7c985",
        "cursor": {
          "ref": "2e48cb89-f9ea-4050-b39b-2a9d189bdafa",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c46322a7-a476-4de4-8bc5-5ab43e2eb959"
        },
        "item": {
          "id": "7f6e5aee-01d3-45bf-8aec-f22ec0e7c985",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b1f0095b-961f-4c5a-94c8-def8e6a6fab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52170dd6-78cd-499e-b419-929d3073ad49",
        "cursor": {
          "ref": "6a405632-fb18-4603-870e-1147b26bac7a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3e371e25-1246-4bd1-889d-b16d038dbf84"
        },
        "item": {
          "id": "52170dd6-78cd-499e-b419-929d3073ad49",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "979c7bd6-a17a-4a57-b92a-e0df779cdcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1de5c8b-54cb-4b38-97f6-4bdc55241b8e",
        "cursor": {
          "ref": "694f3f5a-6b9c-46c9-8422-94632b8ed299",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "235fcd06-7c8f-49ad-bf07-1da38f970605"
        },
        "item": {
          "id": "f1de5c8b-54cb-4b38-97f6-4bdc55241b8e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4f381a36-ed29-4166-8fb1-edcd38be09f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c19138-0a3b-440b-9bac-111f4db6f47d",
        "cursor": {
          "ref": "c1daeff2-be6a-4361-8870-e91b64a452d1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d83dff7b-fc44-4234-908f-7356256b1408"
        },
        "item": {
          "id": "04c19138-0a3b-440b-9bac-111f4db6f47d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "222e461b-e970-45d7-9532-ee18bcc0d283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6788ea2d-acf1-4bd5-b61b-899550a25f43",
        "cursor": {
          "ref": "37688cba-58d9-4f71-91db-72b0671149b6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2e1924c5-a39b-4e09-8347-5c813d44b5cb"
        },
        "item": {
          "id": "6788ea2d-acf1-4bd5-b61b-899550a25f43",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "42da6a70-b788-4fd6-ba54-8cc637d341ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4049f7f-5c8b-4436-91eb-f59144a8d2db",
        "cursor": {
          "ref": "877f6bd4-7e6d-4efd-a7c6-c219d44007c7",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c7641f14-2434-47e4-b3a2-ab26ce524940"
        },
        "item": {
          "id": "b4049f7f-5c8b-4436-91eb-f59144a8d2db",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7147731e-0b6e-4959-a50b-8d6e9b6ba554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccedfff-98a2-4b6c-82b7-a2675c05ea5d",
        "cursor": {
          "ref": "66390dea-3bc2-4a91-86d5-94403ddc1a92",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "af8f803b-32c4-4774-a9f0-1efed86578ec"
        },
        "item": {
          "id": "eccedfff-98a2-4b6c-82b7-a2675c05ea5d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fa92adcb-83cb-4bcc-b2b7-c1ac5e02b126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71dd6d8-d546-483f-9136-a0faf0f4caa1",
        "cursor": {
          "ref": "6129bce1-7fdd-4b8a-9664-94df0cf4050f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "868bfbea-b554-40a8-b84d-d5b739b64027"
        },
        "item": {
          "id": "d71dd6d8-d546-483f-9136-a0faf0f4caa1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "43e47fad-3844-482f-a946-56cdfbe7a831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624da3a7-efa9-4001-ba64-deeb2c5d65cf",
        "cursor": {
          "ref": "ff1d5b0c-2085-4a9e-b32d-35a8d0ee6d70",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "16113665-c64c-4eac-bdaa-fe92df6fa787"
        },
        "item": {
          "id": "624da3a7-efa9-4001-ba64-deeb2c5d65cf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "658cb4b8-04ad-423e-9ab7-af7d2c2dfd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db050ed8-e9d6-40c5-8101-b785cea0885a",
        "cursor": {
          "ref": "9e7c9ec3-2204-40d5-b7f8-f9b75e977ea8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a046a89a-3fae-47f6-90d0-66882f83a4f7"
        },
        "item": {
          "id": "db050ed8-e9d6-40c5-8101-b785cea0885a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a4f693d4-4565-4179-9079-b2d23642e9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2d14ad-a9d3-4bdb-a2c4-3a61ea8d562b",
        "cursor": {
          "ref": "f56869ed-be33-4f42-aabf-8ff0088273fe",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "27d03e98-2f19-44e4-822e-7da8f8d37b08"
        },
        "item": {
          "id": "2a2d14ad-a9d3-4bdb-a2c4-3a61ea8d562b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "11b08861-5bcb-4591-bb26-0a8df9860e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf3ab51-8ebf-4e85-bfd4-7da306cb82b8",
        "cursor": {
          "ref": "0a62c812-2b71-444c-a801-838a996c42f8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d63541b5-0a57-4b93-bf9f-adf36daa155c"
        },
        "item": {
          "id": "edf3ab51-8ebf-4e85-bfd4-7da306cb82b8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9398a675-fd99-45e1-8b60-206cbb2f739f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1780f466-7d2f-4f7b-976c-87a235af893e",
        "cursor": {
          "ref": "af8c2253-f2e8-4c2b-b041-85dfe801696b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "780286da-b0e5-4cd0-a071-0a73002abd1c"
        },
        "item": {
          "id": "1780f466-7d2f-4f7b-976c-87a235af893e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "893786be-60ac-44bb-8e8a-8f33b2cb8ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a01477-9d8c-491a-9511-13908150ff64",
        "cursor": {
          "ref": "53286e18-603c-43e9-8a53-c802400ec1d6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0ce0461d-5b54-4617-a6db-5a7aeb2a97a7"
        },
        "item": {
          "id": "99a01477-9d8c-491a-9511-13908150ff64",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4f198a9a-4490-4654-8362-3a9dae83b885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10592e86-43b3-491b-bfc5-1da257657996",
        "cursor": {
          "ref": "1dc0ee84-f93d-4a49-a663-9ed1fa452c11",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6c756aa1-e381-4398-816d-c6de363a7eb6"
        },
        "item": {
          "id": "10592e86-43b3-491b-bfc5-1da257657996",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4b5f3bf4-fce9-4127-9d60-ef92105b9d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe174df-a34f-4bf3-9700-c25ab7a4b91f",
        "cursor": {
          "ref": "6679c138-7cd6-41cf-8416-315d57d4b72e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4c949b4a-2855-4005-ae9d-adc570e2b4c6"
        },
        "item": {
          "id": "cfe174df-a34f-4bf3-9700-c25ab7a4b91f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ce729ca8-d195-4df2-98e6-1a7af3f8c524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc59bb5-a110-4072-9c7a-68ff561ecf11",
        "cursor": {
          "ref": "fe7b5ff8-de12-4377-968c-c29073a2a7da",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "72f60329-5763-41a8-9a61-2753268b6426"
        },
        "item": {
          "id": "ddc59bb5-a110-4072-9c7a-68ff561ecf11",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "49e66f1b-482f-450f-a425-de456dadf0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed50f9e6-5e54-4a57-941e-e4345a608df5",
        "cursor": {
          "ref": "3a61dc81-9578-4a55-9c1b-01860ed16b95",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dd71b3ed-2a96-49d2-8006-5ada01d31c46"
        },
        "item": {
          "id": "ed50f9e6-5e54-4a57-941e-e4345a608df5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0950766e-9d8d-4dd2-b21d-1bb03c018937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69713aa9-884c-495b-9db4-8324632d5059",
        "cursor": {
          "ref": "6002358a-6e19-443b-8d67-c242aa767f4f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c0c07625-8b6d-4dab-8497-e72e1bce2946"
        },
        "item": {
          "id": "69713aa9-884c-495b-9db4-8324632d5059",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0c8c79ea-067d-4c8d-aa99-88d9a955ebbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cee2db1-d4fa-48cc-81ef-b0cafddedb27",
        "cursor": {
          "ref": "f31ed5c5-52f9-4a0f-97d6-dd944c7cc971",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9f7b9a29-6717-4721-ab1b-9df60b890cdb"
        },
        "item": {
          "id": "2cee2db1-d4fa-48cc-81ef-b0cafddedb27",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7e3ce749-d91c-44d6-abaf-7538096312f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad3e5ab-88b1-498d-80f2-cf8db16fafbd",
        "cursor": {
          "ref": "3c269138-f31a-44b3-8206-580f1e322113",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2d813e50-4a14-4010-8e0c-3f2c5ec4e201"
        },
        "item": {
          "id": "1ad3e5ab-88b1-498d-80f2-cf8db16fafbd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c9b1842b-066d-44bc-a082-435647745676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4541436-d510-45d4-82ba-e3dd560db2f5",
        "cursor": {
          "ref": "64eddb30-4802-4173-95c4-559de247333c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8cfaf41c-68dd-4f4d-ad37-88d764a31c21"
        },
        "item": {
          "id": "f4541436-d510-45d4-82ba-e3dd560db2f5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8f1485af-234e-4c8f-ad17-70070001f28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554eac74-6831-44cc-bc04-039c8ecfd821",
        "cursor": {
          "ref": "ca21f73e-8c6b-47d7-90d8-5788c0871e3c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "535a7597-bbdf-4cab-88fa-b048117026c9"
        },
        "item": {
          "id": "554eac74-6831-44cc-bc04-039c8ecfd821",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9112b697-cbdd-4a47-93d6-fcf90f4259e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51facda-db71-406f-aba4-bffccf1cbf6d",
        "cursor": {
          "ref": "042cfd54-9f32-4fff-8fed-6fb33eaabe9f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f90c12e1-a0ba-486a-b36d-b34d4270240d"
        },
        "item": {
          "id": "d51facda-db71-406f-aba4-bffccf1cbf6d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b1a60077-68e6-4ba9-9cc1-58fd914800bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c6ec1d-93fe-4ced-821c-413dcce78438",
        "cursor": {
          "ref": "9915d8c5-1a98-4d8d-b9bb-c3c2473677fa",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "42e8fd4d-8998-4e82-bbe1-604202b5fd2a"
        },
        "item": {
          "id": "14c6ec1d-93fe-4ced-821c-413dcce78438",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "adfb843a-8106-4467-b393-27e5d5c169a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026f18fb-9ad4-407c-ae0c-ce4afad83e61",
        "cursor": {
          "ref": "a2566f98-3acd-457b-bbfd-cc30c475ab95",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f7aebdde-a4ad-4895-93eb-0355a2183de5"
        },
        "item": {
          "id": "026f18fb-9ad4-407c-ae0c-ce4afad83e61",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8b8e9aad-2010-435b-8ef0-f2d466f1c93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8217d7d9-a158-4f2f-9247-0dc0e6a7caa4",
        "cursor": {
          "ref": "cd075281-88c5-4acb-b187-6526a7d6a99e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5ff822a1-8372-4f6e-a31c-310e18a34f66"
        },
        "item": {
          "id": "8217d7d9-a158-4f2f-9247-0dc0e6a7caa4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3d607601-59c3-4724-8a29-3a63cf5ee057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f29fa72-cead-47a9-bfc3-00be5448101f",
        "cursor": {
          "ref": "1dc80ef2-863d-4cf3-9eb2-f29c005d3566",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "675df1ac-a484-46cb-b095-6a0829d8b9b6"
        },
        "item": {
          "id": "1f29fa72-cead-47a9-bfc3-00be5448101f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bef28e6b-6fbd-4fb2-8a9f-234fb44d5f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1979351-b852-454c-8084-a23938a556bd",
        "cursor": {
          "ref": "08462960-a678-4b0b-9ef4-5617ae778e91",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6eefa36c-1947-4f4a-8850-e220257db05a"
        },
        "item": {
          "id": "d1979351-b852-454c-8084-a23938a556bd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2eacd7e7-d38a-478e-8ec4-1f43aa0cfef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc6523c-0fc8-4fef-9e47-c8e5d2f56499",
        "cursor": {
          "ref": "cbad8403-8d08-40bf-86cd-de70afad2a53",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4b062768-578d-4b87-a0f6-00fdeb126e26"
        },
        "item": {
          "id": "cdc6523c-0fc8-4fef-9e47-c8e5d2f56499",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c81389e6-3a8a-44e8-a67f-927ad4f5c2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe3b4df-5aed-4823-b665-5ae0c30d736d",
        "cursor": {
          "ref": "9b67414a-9305-4f0c-bcba-943477228ae2",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d75cc554-1648-46e4-8f34-869bae6c3ba3"
        },
        "item": {
          "id": "4fe3b4df-5aed-4823-b665-5ae0c30d736d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "49a16620-594b-4663-817c-541c4b1c87f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbd0d34-4127-400f-acfd-12ec3bf73879",
        "cursor": {
          "ref": "8ef094e9-09d4-4142-852d-78a3a7360e88",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a563f134-d567-49d4-be3b-4902e1b62477"
        },
        "item": {
          "id": "bfbd0d34-4127-400f-acfd-12ec3bf73879",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "023d122b-c4de-4aad-8382-3342136f3ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f28e1d9-4360-4c59-a205-7fc7e8b40b24",
        "cursor": {
          "ref": "6ad65b70-78ab-4943-9d54-766fd4311b6e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cc0dd599-9bdc-4958-b023-ec20f3711cff"
        },
        "item": {
          "id": "5f28e1d9-4360-4c59-a205-7fc7e8b40b24",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2bda8f74-2f68-4d4f-bd5e-22a3ce41ec1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d339badb-e06e-4771-babe-17aff3843593",
        "cursor": {
          "ref": "6940cd7c-9dbb-479e-82b7-d9ae06146b0d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6dd1d5a7-e7f4-406d-919a-c9e83b070971"
        },
        "item": {
          "id": "d339badb-e06e-4771-babe-17aff3843593",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c421f622-312b-480b-915a-905ffdd2d23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86469ac8-9527-4ae4-8af3-3675722e633a",
        "cursor": {
          "ref": "1a384995-e955-45b3-98ac-26d7c96e910f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0fb685e1-2595-4761-a0d9-934ae2278d27"
        },
        "item": {
          "id": "86469ac8-9527-4ae4-8af3-3675722e633a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6ed69840-39e7-45b0-b12b-469978a65459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c38f1c5-a44d-47eb-bdb9-dd3801565d12",
        "cursor": {
          "ref": "e31e4685-1351-41b3-a932-b330ad3642a4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ada4b291-78ae-4689-bd1d-273e77c31c96"
        },
        "item": {
          "id": "6c38f1c5-a44d-47eb-bdb9-dd3801565d12",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b5857803-830a-47f3-8688-502ac8217274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b976cc03-9827-490c-ba16-4ce5937a79dc",
        "cursor": {
          "ref": "0a57467e-3738-4126-b2d9-4b59f84e593d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "077e0331-b780-411e-aa6b-5f57519374bc"
        },
        "item": {
          "id": "b976cc03-9827-490c-ba16-4ce5937a79dc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "08c1d299-6a2f-4a1a-851e-42955504f844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8463cc0f-3d41-43c0-8477-d2e0238c69a1",
        "cursor": {
          "ref": "e937cae0-15a2-4ae7-a62d-09a8739fbe90",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1bc2e471-8beb-48a4-b6a6-2157d6eabec8"
        },
        "item": {
          "id": "8463cc0f-3d41-43c0-8477-d2e0238c69a1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2d826647-0cbb-4947-9567-4d7ec1407d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491a66e0-36c9-4438-8000-440d4f39890a",
        "cursor": {
          "ref": "21909844-7436-4855-9a34-f03f7d0de0bf",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1fb96347-18ce-47f9-a7d0-f2aca2a2ca2c"
        },
        "item": {
          "id": "491a66e0-36c9-4438-8000-440d4f39890a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b30cfc95-f738-45bc-97be-882b4f140742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72507679-6102-4768-8495-c2b092704e89",
        "cursor": {
          "ref": "5e2a104a-e5db-4477-8c42-03136ec37b89",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "87f2a7bf-5972-4bbb-ab10-856ca56a03e1"
        },
        "item": {
          "id": "72507679-6102-4768-8495-c2b092704e89",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "43d1678d-6926-461f-8894-13a38dd525c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771075f2-1bdd-4f7a-ab89-7820a7fc03ce",
        "cursor": {
          "ref": "0bc82bc2-48f6-4b9f-bfeb-63d81d1f709e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fdc95c1b-c56b-4adf-b1f6-9c9f23cdbf05"
        },
        "item": {
          "id": "771075f2-1bdd-4f7a-ab89-7820a7fc03ce",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f1eed4e5-bc24-4e3f-9365-6ba3bbc6b7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439fdbe6-7505-4790-8de5-2b703dbcab13",
        "cursor": {
          "ref": "06fd042c-d4af-4e48-9dfe-5f92e0b6edb6",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "362873bd-fd72-45fb-8a6b-c08c10289641"
        },
        "item": {
          "id": "439fdbe6-7505-4790-8de5-2b703dbcab13",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d5150112-8bb5-4f55-a23d-c12ba2ef41ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7348025b-5aca-4c43-a87d-1d249365dc85",
        "cursor": {
          "ref": "ddb96b7a-a794-4efb-9f66-e06b0a987d2f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f55d6e23-217e-48ad-a1c9-2f14904cd8b7"
        },
        "item": {
          "id": "7348025b-5aca-4c43-a87d-1d249365dc85",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2ec377c3-e2fc-4275-a46f-872e57f426ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76574505-09b3-4399-bff9-0be80fabdc2a",
        "cursor": {
          "ref": "495b22e1-a215-4dfe-af5e-a04c5b84d431",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a99bdb8f-19d3-4e54-87c5-baaff25714ee"
        },
        "item": {
          "id": "76574505-09b3-4399-bff9-0be80fabdc2a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2aaf0abb-5e6a-4311-891c-3f5259c0ca3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660e5ef2-4e04-406c-ba1d-04c5dd0c3400",
        "cursor": {
          "ref": "5b772055-8b05-4912-b13a-1d62ef00866e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "43e13d07-3930-4ea3-8a24-99ab08043b72"
        },
        "item": {
          "id": "660e5ef2-4e04-406c-ba1d-04c5dd0c3400",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c9964239-12a6-4959-b477-2db16626aecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f26baf-6a44-4b39-b015-2834ae0304cf",
        "cursor": {
          "ref": "13deacc8-45f6-42df-aac9-7d717ac2adc4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "215b38d9-987c-4993-a6c0-1e18acd4b61a"
        },
        "item": {
          "id": "78f26baf-6a44-4b39-b015-2834ae0304cf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dcfd414b-f19c-45b5-ad62-03387648f568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a25f6c0-e88b-498e-9342-fc063cf92b51",
        "cursor": {
          "ref": "731b6abb-b9ac-4cb5-b589-a1c6517de43f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "acb23c12-b3b1-45b3-ab22-7fed674686d5"
        },
        "item": {
          "id": "4a25f6c0-e88b-498e-9342-fc063cf92b51",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1ec88cc9-656d-43d3-b822-d596e67a9e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a37502-798f-4a91-a2a4-f20f1763bf1d",
        "cursor": {
          "ref": "493cbdb8-1c3c-4388-9808-1d154127cbde",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a0b5dc87-77a4-4f91-9355-b1709dbd1458"
        },
        "item": {
          "id": "98a37502-798f-4a91-a2a4-f20f1763bf1d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "79ee7b3a-156a-4db4-9dca-9a25ec3ef707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d693eb-1293-40c4-9785-f49abf513bfa",
        "cursor": {
          "ref": "c877f87a-ac7b-416c-bd51-aba048ccb068",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d8686e09-d6ea-49ab-bd22-1e05f05c5ec4"
        },
        "item": {
          "id": "03d693eb-1293-40c4-9785-f49abf513bfa",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b2c16abb-25c4-4df1-b21f-e8e881ca6a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30540911-38f5-44ba-b11b-0e79152b9928",
        "cursor": {
          "ref": "0c666b48-cf5b-4282-b67f-f473229dc2aa",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "592002bd-9333-41bc-96f1-3ac379248a25"
        },
        "item": {
          "id": "30540911-38f5-44ba-b11b-0e79152b9928",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ee9687ae-6377-4187-90ae-9ced0bce7cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca1573a-4723-4072-9e99-8e95bd6be411",
        "cursor": {
          "ref": "8eb48d7b-504d-4705-a942-5023683bc489",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d77526a9-fd2c-49d5-bb3f-3f04d58c5fd6"
        },
        "item": {
          "id": "9ca1573a-4723-4072-9e99-8e95bd6be411",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "41a5600d-e70c-4ae7-b39c-5f8e15172442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fa4212-ab9b-4569-bbee-f8000947ac0e",
        "cursor": {
          "ref": "7e2a4ff4-7efd-4cbc-965b-f53bdb56de8a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cde98e5d-25b4-40e3-b6f7-cb93014e86d3"
        },
        "item": {
          "id": "e7fa4212-ab9b-4569-bbee-f8000947ac0e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "09a5c5f1-d238-4835-bd11-a0e9525237d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f63ba1-c762-42ea-95c3-26c4428e2436",
        "cursor": {
          "ref": "fce3c63b-3857-4bec-87a4-de7cd306e757",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "200a25dc-14fb-4169-80f0-b4d0006c58ae"
        },
        "item": {
          "id": "34f63ba1-c762-42ea-95c3-26c4428e2436",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a4aed605-e056-4d05-8694-a9d735ea738f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa34a65-e20a-42f5-8c94-a23c5b27a37c",
        "cursor": {
          "ref": "73b3f110-57bc-4a86-8772-39e4e61cff4b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f08c448f-ac69-4247-b105-2d8eb2328177"
        },
        "item": {
          "id": "aaa34a65-e20a-42f5-8c94-a23c5b27a37c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "06676bea-740e-4df5-a706-f5c932dc7c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fdbda5-2640-4e5e-ac97-260370421289",
        "cursor": {
          "ref": "05f4271b-47a3-4650-9c27-0ae4d0daa0a9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5a834a18-6f3c-4a48-a484-b6b11265f3a8"
        },
        "item": {
          "id": "76fdbda5-2640-4e5e-ac97-260370421289",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "02a733ae-ee46-495a-9ca9-62fe1037150b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09021cfe-1469-41d2-bb58-ca43a1930466",
        "cursor": {
          "ref": "a1c965c7-6ca8-4a46-9f69-58edfbee0237",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a6e17f3b-ac0f-4db0-8a4f-8ff27333b74a"
        },
        "item": {
          "id": "09021cfe-1469-41d2-bb58-ca43a1930466",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b95adb97-eb7e-4e76-8ea3-816246879a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c0b08e-7ddf-43cf-b49e-c732f3ad44e3",
        "cursor": {
          "ref": "35146ffd-6888-4724-83e1-7b34e8c25058",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "119e2851-6f0e-4a29-b6b7-039098eb50ea"
        },
        "item": {
          "id": "26c0b08e-7ddf-43cf-b49e-c732f3ad44e3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5ba42402-fc69-49a7-9eb5-afb59e034f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ad3e49-94eb-473e-bc79-8845f48e34c8",
        "cursor": {
          "ref": "3c68972b-fa31-44ba-ac16-3bf20029b232",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1335754b-823a-4e79-8bd7-3a2132231d8c"
        },
        "item": {
          "id": "a4ad3e49-94eb-473e-bc79-8845f48e34c8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b8f679b1-a1fa-49c8-8ff4-26d548eabe14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aab6c4-317a-4ca2-9e50-9a09799791c3",
        "cursor": {
          "ref": "3085a00e-825e-46a4-a4d5-b50aa5d37253",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9e88edfe-aa44-4aef-a40d-7b91732a2912"
        },
        "item": {
          "id": "a9aab6c4-317a-4ca2-9e50-9a09799791c3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fbf816b5-c296-4062-9e6c-c882045d57e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63273cc7-58d2-447b-98ef-4f7ff5c05bbd",
        "cursor": {
          "ref": "44353146-4bf3-4f32-abd9-1d02b665537b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "27e3e4a4-5340-4f26-bb5a-86168fed0ae1"
        },
        "item": {
          "id": "63273cc7-58d2-447b-98ef-4f7ff5c05bbd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "153270b1-6e43-42d6-bbf2-9a84888ded3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "673b9ee0-2485-4eac-a560-6acd8443b2e1",
        "cursor": {
          "ref": "27a432d6-6efd-4b46-8aef-5d3b9c65a123",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e4e2e162-abd7-4772-8fd7-1ea7c12169ef"
        },
        "item": {
          "id": "673b9ee0-2485-4eac-a560-6acd8443b2e1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e891c273-bb80-4606-9369-566f08ca415e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "92167aa8-357e-4658-b665-75b0b1d18e26",
        "cursor": {
          "ref": "66b76c63-a634-4209-86e8-21b53c4d8f7a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b88bdaae-5b7a-47f8-a87c-e7a6545546ff"
        },
        "item": {
          "id": "92167aa8-357e-4658-b665-75b0b1d18e26",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0be43097-8509-4181-a347-f34e9329ed71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "cdd7968c-e265-47bd-97c0-8ba996fc17df",
        "cursor": {
          "ref": "7c9f54d8-55b6-4a1c-ad31-1e8cbf5eae90",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf885609-7678-4d5b-95c3-1048f9712db7"
        },
        "item": {
          "id": "cdd7968c-e265-47bd-97c0-8ba996fc17df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8dbcaa4-1d43-440f-b24c-f3519f6262fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd7968c-e265-47bd-97c0-8ba996fc17df",
        "cursor": {
          "ref": "7c9f54d8-55b6-4a1c-ad31-1e8cbf5eae90",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf885609-7678-4d5b-95c3-1048f9712db7"
        },
        "item": {
          "id": "cdd7968c-e265-47bd-97c0-8ba996fc17df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8dbcaa4-1d43-440f-b24c-f3519f6262fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9428b2f-f1a2-4f2f-ba80-8adcf137ce3c",
        "cursor": {
          "ref": "b93be97e-7954-4a04-bca2-3d0fa71335c6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "58a4af15-9dde-4fbc-8fb6-44c7d112acd2"
        },
        "item": {
          "id": "c9428b2f-f1a2-4f2f-ba80-8adcf137ce3c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "eecc6b0f-92b6-4044-a03d-c51a61ae750e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98d419d-4084-4b11-a1d4-b7f4f50eb4fe",
        "cursor": {
          "ref": "51729be9-06ad-464a-896a-81b30cf054f1",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e4877dbc-5d05-4d60-9aef-677578d743af"
        },
        "item": {
          "id": "d98d419d-4084-4b11-a1d4-b7f4f50eb4fe",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6df3dc4f-e409-4896-8568-68a2d27db635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}