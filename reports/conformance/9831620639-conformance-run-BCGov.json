{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2f0ae0e2-74de-4b7f-a3be-af425adaa560",
        "name": "Clear Cache",
        "item": [
          {
            "id": "48d27fd4-ccdb-4483-9b7a-a89c6854c7a1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70555473-cd39-4f37-b7c1-9bb690681387",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5a6d7ed0-ef63-4d8a-83ee-e41a59edd16f"
                }
              }
            ]
          },
          {
            "id": "cdcd65cf-dacb-4c2b-aa4b-7eef36debd03",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad2fffe0-260e-4f4a-9dca-4c28c1ad6de8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "97157570-c341-4214-b3ba-6ea6280ad338"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "396cba83-181e-4da5-8070-da89b4577198",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b648e514-370e-4c38-9697-d38a2d9991f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dbd6601a-de1c-4d47-85c2-02b12464b6a9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cec4bfb-d2aa-41bd-9ffb-ccfd65eb3e6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64a997aa-0758-48f2-af95-043d5abc0c42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3be30d7-a05a-4ed0-aa8f-008428cec549",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3bedd5a3-dea5-4ae1-bb55-8fc0166577df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "286e70b4-3c5e-4984-a35f-586259ffddd7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46b18a50-b114-4305-800f-557a7f8fd8be"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87ec8ca3-ddfd-43be-9662-3c80ffc84124",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9f8ba9e0-7bc4-4766-9ea1-6f6078aa3bbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "733b294d-cc51-4d9c-8688-9988849f508c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "045a5e71-c986-4f64-b100-1cc85121f825"
            }
          }
        ]
      },
      {
        "id": "b3d4f4ac-20c8-46b3-9b79-4e2e768853b0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "47e01c0f-5293-4217-94b6-009d9aefcaf3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2f4bd24-b16d-489b-970b-9f83af62e1f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67575715-a731-4529-af19-139ee82d1e98",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd210a28-50c9-4a72-a289-3611bb548b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57c795cb-12a5-4f59-aeae-9c1db347da5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f105ee-cae2-4c4c-bac8-3494602bb734",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ade14d-aa75-4927-ae69-7bd13032778a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f616406-01c2-478f-936c-6114ec5affa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf581d1d-4220-4e35-b9a3-ec3d578979f3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ff6cb9-fb52-45d0-b6f7-64c2d0159823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbe05366-1b4e-4db6-b9e7-7bdcd9ad7345"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "784a64bf-9c1f-42ee-a4f4-d6ffa2b33444",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00781384-6754-4466-b3fd-e6b6d289aaee",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b73750-0c92-420f-963b-1d756535d0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "167f9259-3319-46c9-bed2-b0deed656731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7381e9-4e6f-49d5-8d05-afc13539edfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6856c303-3771-4772-8716-fe7f20c15863"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3df8e744-a7f6-42d7-9645-39794be3d2b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "85c62370-f1e1-42c2-aa18-b92c74300087",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "604819a1-877f-42e9-b55a-e01c6b99edfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "12618920-1a8e-4b88-8531-9be19c76144d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a0d01c0-46f1-4c8a-8afa-71a078d76e4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "201a93b7-c0a2-481b-ae38-8c28118c2c3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a7ea46e-6a3e-479c-a280-65a9aa6473ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4e0f530-a634-4967-a045-ebff6b66da69"
            }
          }
        ]
      },
      {
        "id": "889c5cee-45b5-4e52-8ddf-5749cdf82a31",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5fc088f3-6152-4f8b-923e-57822c52df40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7eaee98e-0be5-410b-8348-c672456aab2a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "05c39739-0c45-4ac7-8900-c91c572e7819",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe0a0ef-47fd-4f26-b531-1498cd81295e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e11af4b-2033-42fa-9bab-f79c078c2594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb7d6d0-e336-4f99-8373-fc64f7c4ff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa0827a5-5ad1-4a53-a907-addf57d7b473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2698ce-8a8d-447f-aa6b-2185a7b56f7a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8570190-ad4e-498a-bbd6-35b36f24a56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c1f62e-2d71-42f6-832a-40e97beb254e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30125133-2aef-4f69-b5ad-2a43c9de52a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85296001-f76b-4084-9f20-e8a80606616a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3592bb-9904-4c17-be7a-3f435773a87b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dc761f-f85a-444a-9e9a-6db67da34add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cf9662-79f0-4856-a9ea-a75615a0ec21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d60bc2-e5ca-4e9d-8ce9-08a62100840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8719001-1d79-4fb0-a75a-80abaa3656b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992e28f7-550b-4e39-b23a-511ae9c2fb5a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2f0426-170b-4070-953e-0e6455f2927a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4566f70-b1ea-4f3a-8ebd-8d529e74b97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385468fb-77a7-4c8b-8189-7a96b9a5d903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34fc973f-aec2-4f71-b11b-762474cb22f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9493e5-bae9-48d3-b628-c4e30d65c5cc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bf164f-628f-43f7-933d-fa4c5db9ff28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4480a6a6-39fa-4add-ab6c-a8a39c7f66f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506eb490-c9a2-43ab-9ba1-645ed8722e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "456f1bc1-0b18-4b94-ba21-1fef00d62b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9b1177-10f1-4579-8671-30ba6903c47c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3887f0d-ad11-4d07-916b-f607e92e2a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8eddc6-9702-4951-87e9-f0dbe1978e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8569c146-5eca-46ac-9908-186835510326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e14dcf50-ed60-4c08-98d3-d50f8cad83f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f097632c-007d-4612-9a6c-aa70a3dfefad",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d7f59a-3db8-4bde-b476-a30418a6ed78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba4cd57-0b35-4927-81db-10e0cc0c9a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dc981a-5ad0-4f97-a6cb-324c97f70b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11f428f7-a067-4523-abc6-5535e1fb2f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22156ed3-384f-4edd-a1ee-1c927b2768fe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696d480a-174d-451f-bcdd-0b1470fb1dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5905a59f-9623-459f-a20d-d7e7c18f52d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3634c497-67f3-4c0d-9ac4-dfae750fd614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8257ab43-77d7-4728-82ac-ab5f219dd214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604d6b94-cd75-4e8c-9d72-d51e9744b4b4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b380bdb-b391-4176-9ddc-e8c4034e0171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f41f0d-8de7-49b3-92ec-bc9744ac54ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e706ad-4c45-4bc1-9919-7406dfc959ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47e0fc98-76f5-43bc-bb0c-8a1e30494494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3921988b-e2ba-4026-9186-ec93fcc2886b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0144fe9-192c-4e00-8f1c-3cebf305e490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf01f23-a231-4331-b368-370d643453fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042e33f6-7e69-4af0-9fbd-0cd3bf25e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7ddacf1-70d6-4ace-9665-71c76dd6cd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ef9df1-8edf-45a2-96be-428b9d3328b9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfacee85-fdce-46e0-873d-bcc485041409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e76e42e-a3b8-4736-acc1-0ff5cba2438c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d15385-7571-4072-8707-86edc73aaafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9419953-31d7-4fba-a4c2-90f2c68573be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fb3073-7611-4486-97f3-3e3e6786390e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b40f9b6-b0df-43ff-b802-d46c77a70cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8a628c-f391-404d-952e-c7ec93554633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd05d9c1-b203-441b-9392-403e6d4e0599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f783f8a6-9259-47d0-8fbd-22b6531ef549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c977ffd-010d-40ba-900a-ce0375a0b64f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039ac1d1-d76f-4fe1-9bfb-838834d4c997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25216b02-6834-45d3-b9a0-0b34b8cd24b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bb89d3-365a-4b48-8c8e-380f7c047eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5af7bca-2060-45f6-9006-426ec5cf99f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a69104e-3889-41a2-b90e-067dd01f13e9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8e09bb-b5ef-4fe0-8386-3aa13a0051c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d67275-b815-4a60-b077-6eb6301cd9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ae8e0b-5143-42f0-bd92-42e56c591a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78c0a672-2c9c-4285-8346-6918e97d31ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ea6386-81a1-4eb6-97bd-cdabfeb3ad64",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2e99b9-c2db-431e-8449-975681cfb3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20d4806-5e67-496a-a10b-e990d3ffa0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c73ff7-e17c-47f1-9963-8fb7992f0331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57f55423-1cee-47dc-9aee-c2c443f49301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a82602-c37a-478f-bf4d-7e1a5f4b9338",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a603c2a5-0ffa-4154-9748-141d5181e600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58db1a12-83ce-4342-b4cf-357be24745c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f523f84c-b318-4ee2-aaab-05b926b43770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b40e707-f1ad-435d-9a79-43646369921e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620efbde-5c0f-4870-b53d-bbadfabe1921",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d02cea6-1ba3-455c-a5a0-1eec94ef8420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab6fefc-25ec-409d-a2bc-c7506de72ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338ad61e-4670-4d75-9c16-33976d0f39da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "748a3616-dfde-42cb-add8-2025f60bf0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43fb962-20e0-484b-93a7-0bf3815e916a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b8d770-5a99-45cb-a2c5-2a88754e6c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bb9399-d57e-4233-a932-906e807270f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be41262-9fe5-4b87-9ecb-e283525123a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f08c22-538a-43c0-9cf5-787409a7df01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9e52c8-f497-4e1e-b709-fe720f42599f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6bb20f-7133-4ed9-8a09-c182725849a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30747461-88ca-4403-965e-1b3984846ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e1d563-dde0-43a7-a0a5-7afe6ddee371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c02706-65a9-4152-a080-7073aa76374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c073cd-0e32-4df3-88d7-aad7e7b5660f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3990051-64b6-4377-bf70-3a9dbcaea437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c83863-05a1-4c76-a734-9a5d99fa1fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc94a33-b99b-41af-8a07-4c41379f865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52bd862-441f-41b7-b7d2-604157e2192d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918f900e-2473-41a8-ba2f-bda34e9d894e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ae1694-fdbf-45cf-919a-343a5e36abcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23b6799-f7b0-42f6-84b3-3e1fb83a4ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c860d6-c7b4-423e-b8ad-5a6f75136494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c671121-4896-4b90-b477-3cb32fb6d3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab8925d-ba6e-4424-878f-8d5464470163",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571c9258-d687-4328-91b2-e4c94ea862a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29eb49a8-d7e0-4327-8b69-ee0d54705283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579af9b7-f72e-411b-b120-3cb5c97482da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11651675-1a0e-4896-a300-03faeab1fe2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ba1379-7259-40b0-8f3c-0f8113383122",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68c7f28-c151-4563-8e0b-f504b4fe18af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c38984-35dd-4261-8a42-47de2a6d64d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f454db-6cd6-4409-a075-0a311dc04fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94c34af8-8664-4152-9053-8bee064c03f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95fa0fd-f6af-4527-8dcf-84caec36578e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099d3b06-e9b9-4741-b8b0-28436eaf460f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cc2fd0-27f4-4fdf-af77-7d14f823c85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc31669c-d51a-48bf-ad1e-c5ace4bdd007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c1decc-0062-4383-8afc-0d9bb9c63c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3136c6d-4bea-4247-82cd-d3bb07e87575",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b9626f-4d55-4964-93c1-ab759bb32dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1940801a-b833-46ed-93f2-af2994eabb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e0fb8a-fdfc-4262-821f-10f32357a8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd3f4e8-d4f8-4e89-a4e3-fcb4374ab11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa642df2-1c55-4755-a4fc-55aefe85b153",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f40976-ef6a-45d3-b066-f256fefbe2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788d0da6-43a5-4acd-a52b-4b133024d2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e04c5e-68d7-4835-9352-41551518d5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38e1e598-53de-4dd7-8d60-d98a5f638ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b3a085-cef0-43e1-9502-1afa5932b50f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ac4691-c1a7-4660-ac08-c78c999a78d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb55732-83cf-4a6a-b0c7-0da55be08b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc598cf9-52c6-4a57-aa84-d7b61741610e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1a3b51-a628-4ce6-a6dd-e8d5b7ff2be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4e4eb8-22bf-43d2-93a3-750df92e7e5d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1357af28-7901-418c-bd54-62ea5170f82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83543651-9cfe-47e0-b8f1-6e622be9e033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939f0fca-fb75-462d-9792-0bcd07128bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "869788a1-6e76-46e3-97bd-ce8bee4a11ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db525b3-86c7-4859-866e-8296a4ed9190",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec478ca-89c4-45f6-a5d3-7d48fc2de243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cb3f47-0f79-4289-a9ac-e665201b915c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6f236c-4937-4140-b9cd-0e0e33c20607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4099189-b05c-41a0-94a7-0713670dd3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751d461c-b661-4b4a-9993-9e2d9a8e029f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae35b69-bb7a-447b-ab70-f93f699711de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6955a5fb-c145-4d0c-a9d6-fc2336bc7c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dd08c0-f776-45c5-8ce7-c03dffabb00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cae80eec-2c59-4d02-ae24-6f67c989c9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a18eed-d7e0-4d6e-9403-6f33fa199618",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb6e4f6-f78a-4cdf-a389-b12a294b8a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8417ec63-7fd8-4165-9039-9fa15e318e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d32e12-04d3-4c10-af6c-369a55e43521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1c9e04-27e3-4bd2-9985-0649b143fee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e99303-eafe-45af-9cef-f2a980e758c5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc904b9-03db-4a40-beb8-28157db6cb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90bc85d-3e28-4a38-b076-41644e5ff092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f93956-b14f-4a07-b6d3-e4c8e27d8210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f370eeb2-4c90-4ae3-9622-87bcc999d545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d95488-e6dd-4eab-a66d-a7273def4737",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93787ade-920d-4c64-9449-e23f0da6d9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810cac12-b98f-486d-8e50-7acf1227f799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91330aad-69ee-4bd7-a39f-63e9c0bebf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a3c4df-33c7-49ca-9f97-b087b6fc279f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07c16f8-e62c-4330-aa41-bbae9981d55c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e60e93a-138d-430e-bef5-635ca3c16a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83fd829-0f3c-4e17-b19a-415d2dfd2dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2069ba-f116-4833-b7e6-3288b415c6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5099c624-b6fd-4867-9561-c78fef622692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c7c86d-3224-455e-aa08-a2ce71b7096e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07369eb2-dfa6-44e4-91cd-cbdd52d5c84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09eabd8f-ba54-4c88-8a80-2f149a880454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5067e01c-75ac-4d38-972a-252113aa2b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "460d2404-5adb-4192-8309-96a07f97baad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8a0759-264e-4f83-9bc3-6437f2d20d39",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00cbcec-376a-461f-93f6-c16500a18c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c94c0d4-f25a-4915-8fb2-46e39bcadb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ea2c42-6729-45d8-b646-f84c257a0197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de7e8001-068f-4322-81f3-64cd70273ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80400d2-5dd0-460d-a628-86319b82df3e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3a1963-03e0-422c-bf3d-6870421f027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1734efb-25b4-4826-a8df-abd45f05b60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8b29e6-de79-4eee-86be-653212863a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3bf8b9-d211-4767-8b23-0758918395a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63087c55-aa4a-4c77-82b7-b8d7bf0f42a4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365f38e9-d6e6-4c48-ab3a-c2b9fc44e782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56035ac8-cd4f-4946-9025-4045f5ac845b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7cf595-41f6-4452-a401-3e13c60db8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e48e2258-24ce-4825-aff6-091b59e9afe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e329780-7b21-4bba-b1e3-3717292e3ad1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162bf3a2-c62c-4114-a3fc-9f36c1bfa7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577c4f67-c09a-4b33-9617-7da28c7d915e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e745b25-30c2-4a43-ab1f-e93cd50bc282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0baa74b5-fa6f-4c1b-8dbe-7ba579d455fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7fc50e-a537-4efa-8d61-a1ed87523782",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb0f34e-1fb7-4994-a9ad-0d13254503d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9dc5d0-346f-45a6-8552-c49b42c14453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee41640-1042-46cc-ba56-18cc8effade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "95be7566-c751-4634-8e69-a3d7ba152acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bac97a-a371-4f16-b41e-fdfa451a4cd7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0254ea6a-3b98-4940-a65e-4e6946c4bd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0069de-3d51-4dbc-a4de-2550b74534f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6cae8a-6172-4958-90b5-0882556c3029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "957bbcdc-de75-47ca-b966-27267cfa1543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22273240-08df-4988-9666-cd2a2c880e60",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b409f4-bb5f-41ff-b9e1-8b046da5ed90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f73d045-e3e2-4a69-9650-34a65ebf7a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a7bec1-d5e8-4e51-aa1b-908f6af13571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a838a5-17d3-42aa-876f-cec91d2003af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f726aee5-cc9e-4810-9f94-95a331a3c04d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fd24de-282b-47e1-bea7-35b227687d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76172ce1-a12d-4a5c-9da6-cd0b7d098854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c523fd-deaa-425f-bc80-94537810d6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "af1aeb30-9d54-4dc9-9ab2-7855ee01d60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd516cc7-9077-4559-9371-5ecad5c9a41f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c898fc3-05b8-47c2-a365-b7a11ff75c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87ab3a3-1086-41cc-ab03-f72c672e1f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506f3767-ab68-40e2-b348-a21c54e66059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1a6d51-1d10-464f-a5ff-290ddd99792f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f84e0d-348a-4025-aa75-6dc296cd0eb9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c682009-e659-4626-bb34-6c285c2c406f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84290c34-769e-4144-8877-215a10db078f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996c3c14-ca2a-42b2-bfde-8fa4f4dcf7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f09d8d6-2f38-4cd0-9b24-464ae4e5f435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e72c26b-47b7-4304-9a27-a8bae5bd729e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b45cea-88b3-44ff-a8e5-1c594c9bed0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59815729-8e0c-47ad-8b8a-9f4af4944da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4568d34e-0548-4f4f-a453-1e60ae1cce99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7367e5a-dbe7-4ec9-b9db-1c3458f32cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a589d8-d163-46f4-9b6e-cc8e3b83a5d7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c40025d-8166-4df6-852a-c770bb20f826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65010e11-cba1-4620-b853-404c84290c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53b68d9-73dc-494c-a526-b40a4bb406c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47bea2dc-694c-4447-8c6c-01e8f0c97a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec01629-f087-4b83-a5f9-68b5e82bdb11",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e591aa-604d-42c5-84ad-f90d359b5f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96602a61-8e3a-426b-a2f5-f4618063b5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50c38ac-ece6-4fbe-a077-921d79033b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47780826-6c1d-49af-b2a6-3fdd26b56b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b1f180-4839-4bea-94ff-422e8ded8ae1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caffec1-4fd2-4fd9-8377-d6a77fe0dbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41017d1-5ca9-438e-80a6-5fc6036ad19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0044ada1-c924-4a16-9c9e-89b8d1d18684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "779faf8c-40ab-478f-806f-cdb7d005854b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29901bb8-c329-4afd-a7f7-25d23d22a18d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e99199f-f1ba-4335-8329-c97c41a36b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1adbfc44-8fab-430e-a702-e999e35d8ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831283a0-c0f6-450b-b9df-bcc97a7f2884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cb4662-14b0-46ca-8c22-73c63fddff15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ea896d-9d3e-43fe-9265-503c352e1277",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132c06c3-cfad-4aeb-8b08-a95448ddd999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94aefcbc-7f16-4bd2-807d-2419eddd8dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca33c13e-ba46-42f1-b406-e341f77001be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7f940d-aa6d-4cd6-9035-10079ba1c030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe8e28e-5ff5-4538-ad66-5c9bf1017b28",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778f3699-5bc8-4181-87d2-b67abfcaba1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b94b5b-2ab1-4da8-b0a4-de07cb1a9b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b532251f-df64-47d3-99ef-2d2e7b9fcdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be5e44ee-ebd0-4200-b652-74ac4124876c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126d95c1-0394-4c92-bd5e-c993987b35cc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540dcbae-c3ac-4fa0-aede-8c90ab069319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17c56dc-10a8-4d77-a988-9d48b9fabef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c098b6-b678-4d12-8e0f-e4124c06ddc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35dff7bf-2d3b-4bc3-a539-dcfbbc785174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf2bac4-6fca-4257-ad38-481589170cb5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee3e6e0-b284-4bdd-ba9b-9b5ae1a7f31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87af37e2-363a-4522-b81a-c5e6ecb93bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0314f096-5054-446a-b1ee-d0962765e3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40b1025e-53fd-4cb1-accf-40fbeebc7491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8f51d5-1afc-4bb9-b733-28a60a8679f1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9eeed79-a085-4fdc-9155-1863fb9b28b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63d96ab-bc6a-434e-b718-027cf62f738d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527cca70-7f57-4447-abbf-f7fec5432104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be5e01be-4727-41f0-9781-725440b8180e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68991c0-7692-4b17-bbca-ad39ae981a25",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4380752c-cfed-46d2-86c6-5a65b1800396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7385ad-3197-400a-8f03-524d376719ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b951974-7fb3-4aa1-8d19-0da0c38eb0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "264f1fd0-98e0-44a1-810a-c8ba2d9a7751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4294167-9581-4365-86a8-82a9ed7b2235",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3f4fa9-2e46-477c-ab74-4b268dc4cebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a31919d-f562-48ff-8752-58d0de926772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c68aafe-7762-467d-9d1a-9a7aa0251804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91b3dbb0-1082-4783-8edc-dc87639c163b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b496bf95-5326-4968-8808-7b77ed9995f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eeb5aff-bf90-45f6-8ebd-fa1c1e40f5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b20bc59-e4b2-4540-8bd2-a76e90fd73c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917eccee-8d51-4128-aa7b-0d0b4a19b931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f55209a-98af-4648-8fab-4f27a4c8babd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c2d58e-5d4c-47b7-967b-c39db4fc208d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ee25ce-9ad5-40bc-a00b-6a52fdc9af34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1678146-1f7b-423c-b102-ccb9a308ca6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29871ef3-ee54-4a3e-b720-0805024c8d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a202be0d-6761-4634-87af-4079f5861981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b037150-db51-4796-b929-8ee8f2fe4b4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99900cdf-c15b-450e-9797-02df6561e95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f995e4b5-aa22-42fb-be38-dffedf48ecf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb37459-c36e-45d2-930f-ebb316687b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c14a7f5-c9b7-4bc8-a692-f5d978c1fd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd70514b-65fe-486c-b0ae-d402eb6ad3c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c240e8-45f9-4419-b36b-c384594cec00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebffa2f-294f-4a25-afee-a5227e3b31e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f36d56-f85f-47d1-8178-33fa28cbf237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c230f3c7-671d-4840-a0d6-23ef12d735fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07617b07-158f-4037-bcd5-cbe6f58c7b85",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f6c8b4-4743-46f5-b62d-fd6acf0fb254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cf3f1f-a782-4ca6-bc79-47b65ea6e25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49eee7cc-def8-497b-b7d4-037de13537ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "082135dc-8a75-49a8-a83e-bc126b882c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f03eb3-c715-4de1-91dd-e911a29dc998",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c8771e-ae5a-4962-a7e5-ced99a34e4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d453cf-0f90-42f6-92a2-f1cdb8e8f656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff6c398-4836-451e-9228-4f4f99358bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "017e3781-544a-4c36-90ca-e4cca49b6aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e62e5a-79e2-4783-8a77-421c28057667",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30645b7b-a049-466f-ac57-757c270fd533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047967bf-9821-4581-8e7e-267c52a89042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc49cc50-b64e-4eec-b50c-db183950f62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07034105-187b-4326-a1e1-6797bcb73676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d4e663-110b-42e0-b18a-97d835c7670b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279c5057-50e8-43e4-bd34-83e787e21562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1839cab-40de-4b4a-ba1c-f37f26977fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf1800b-c901-4580-a425-4946ea03f973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84e76389-43a3-40bc-a675-3543265a3f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e158ab74-3281-4d4f-b546-38e21577d2ba",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3939913b-375c-4fa8-86ed-511bb2715014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d42c3a3-3fe2-46ea-8cf6-afaa20005b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff9c9f6-adcc-430c-bf7c-d698c2b7aacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6865750a-429b-4b73-8019-e72a10cd3e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570bf4f2-e1f5-4ee8-aaaa-19dc3a8d770a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce8c60f-20a4-4b43-b6f0-ad45422c07e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3feb4036-48f5-4fc1-ad13-570d34e287c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a536dd-536a-4d30-a656-66c72c36c498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7a9d99-5d36-463c-af58-2cfb4f98e1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dbba73-21a2-4ef1-969c-22cfe9efa13e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c7f159-5644-4b2d-966c-678a1eca11ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a828bd-e804-4dbd-897a-1f5afbec50ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ae96ec-5b64-4bf8-a674-861bf7a457b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be067d77-a84b-43c5-bf25-35a56e03d3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2215599e-e317-4602-9e61-d5e90f22b1c9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a54808-ff4a-4538-8116-1db9358ef69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c9b3fe-0f25-4aec-8e8f-4f9ff7c9fc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f547926-d330-4ba4-9240-e693c9a4919d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b098c5d7-bf7d-40be-82d8-c03747205995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288684d8-6aab-4d82-94a7-cae779cb07f2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04abde54-e5a9-4131-bbaa-fab80601a143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfd2c03-3c6f-4c99-9516-d85a6927f5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26f1691-fb9c-4c9c-a169-97b43c12c65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99fb61fb-9091-4354-8f17-666be6472d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee205b33-b0fd-46c6-82e7-56d1b60d833d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f238571e-2fe1-4f4a-ad6c-f91085c4a916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb946f0e-a672-4786-a244-82899c6449dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1d63b7-4492-44a7-abfc-f1185605e16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a999ffe5-cc8f-4a1f-90b1-1552112bd382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523e5b38-4bbb-42ed-bd90-46f494fd2a1e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c67e56f-7e0d-4ade-868e-e08d54219e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5815bf80-119a-42bb-9ded-13bb04d4ffeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01af5311-693d-4424-9dc9-199bf514c41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3eb5013-d2c0-4a07-8c25-fe1df36c2b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daacb728-bae2-4bc9-96e2-44861983eb89",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc6e377-55d5-4991-a424-9381787679d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c6e39c-72b2-4728-a6e5-715cead2175d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd121b8-7971-4af6-bd5d-c84f615ec77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2c1866-4a75-4377-8b4c-0beba1910226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac428bd2-8622-443e-9b6f-f9609f1d0b9b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbcd2a4-30c4-4495-802a-24b545f4dedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6262e0d-87d9-4651-aec4-cea69d8988e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401e34ff-f36e-4d1f-bbf1-7772cc3e23fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48849d80-91b2-4330-be92-f464dde3691a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676b2541-cf93-4f8c-86e9-0508abfb0a33",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d113aec6-7ae6-47fc-b089-80065d7d001e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39a772d-b37b-45da-91eb-c2caf89486b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1139dd4-3700-47bd-b797-5ccfe5d8663d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "091eed87-b6b5-44ea-9547-6c32271dd76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57362a3-9a4b-4e3e-9e83-b39723cf16dc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d0973d-3ce0-406e-ae47-23efc66a3f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee02aaf-f56c-4a6d-ae98-c9b4c609331e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6920eeb-4a79-464e-bf5e-f61e349eecd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "762e9c54-546e-44ca-b3e3-ae76922354b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4e613d-afca-45a2-b440-5aa6fab273ba",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e886a057-73ab-4fe7-b120-cc8b7d207118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe0925e-686e-406d-a48d-7175e8365691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e38fa7-699a-4bd4-9ae5-0248abdb840c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0fb1a6-96c8-4d77-8288-6edb1b869cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36d67ec-95d1-4101-9eb9-a37df9962be7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2390243e-b6b7-4133-8d7f-dbc40b34abac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942b79c1-c625-441e-b59f-e0cf0bbd7ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc550312-957a-4fbd-acce-8e610864d551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2796a748-1af4-4c8b-bbde-b714b04ff84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba99670-4b7b-420b-ba75-ac8d9340cc69",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd84598-cf5b-432d-ac24-db38a695c71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99de516a-48f5-48dc-bf1b-2f0773b2fcd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5488706b-fa7d-4ffd-9294-094ec8b1ebba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39b2cdeb-38b7-4026-9ce3-a3e01f637bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec8a10e-412e-44c6-be13-166cab031b55",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ed03a9-0c26-426f-bfad-4650c86529a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8523fe-477b-45b0-b9dc-7443b54e41f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893834fe-636a-4b5f-b67f-258fa4f677ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0259dc61-45a2-4983-afd3-ca4447b98b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c9e9fe-b082-4882-8ab5-d2c5bf165a8a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dea173-ca92-4d3a-8f30-fe49cc3349cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655a8ca6-5cee-4bb6-a49e-3bb7a55a282c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca45a307-8bdf-4004-8376-eeaaa35ffaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1f2079-0c0e-4726-9f25-3c607ea5a4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ad9ed3-e1c5-4d4b-943e-f1943206bfc0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa188951-e823-4817-8b9a-3c4840de9893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe2294b-e8bc-4916-a6e1-d1f4b4875604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa67809-9ebc-463f-8fde-3eec155f3e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e56df7b-7de1-4620-a2a4-f685924bd698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48e7586-9e1e-40b7-8c46-7cefe0c1d12f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dad26e-11da-4506-80b6-815bfedee02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4543c09-6cfa-4bad-9781-e033b072666f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7298f8a-fa52-4e70-a751-f1f7dcbcd2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1b5e6c-31d1-47d1-ae16-258d5d175c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c593b0c-da57-4967-ba0f-0c511bcbd861",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f8fef4-2ba8-460f-8599-e9b4c1b459c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18ef713-6edf-4a0f-aba5-bbaf5566d23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376e6208-c640-424c-bda7-1589fd9f2ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb057594-42e5-454e-ae29-38f5e60baad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbfdf40-0444-420b-b632-0c2a4da0bf4b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61b6a9f-4eda-4976-af49-fffd29910e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0823fbb9-8b93-468d-83a6-a19b25575044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec90a1b-7a75-4523-9bfb-0a29ee6755a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d355efe2-a42b-4c8c-a3af-4899c586acf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf615992-b19a-439c-b06b-47fb74c1b710",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a945715-e1f6-4af8-a79b-0532639ca88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2a71f7-1923-4851-bf3e-8fb4c64fdffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8364ef61-b76d-4291-afa3-5a0a49ca4d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1893eff0-5b70-4b95-b8db-6c2680f31a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7ca6c5-8eb0-40d5-aa8b-8cb54a415b1d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d048ab7c-fc36-4515-8b22-621982fe88ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8317985-a804-4d85-9739-28b997543906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f2f10d-5f04-470d-a3e8-8ea46dc01389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "badb715e-aa33-4fb5-9f72-0dc1c291d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6a11b2-828c-4e05-88cf-3b9e2d0ca406",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6487ba1e-a82a-4e26-9e34-4a8316147a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f85656f-f18a-4849-8c49-946ee2f02957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39c5407-62b2-479a-bdb4-6db33ba7fbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36a27ca8-9758-4c1a-b043-7b0caa9c756e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb316f8-3b38-4823-8da3-7fc3e882ebd7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940bfc4c-ed8d-4541-b06d-214dca9f235f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b1bb23-edf2-4e45-b07d-2218ab3205e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c76459-1cd9-443c-9f6c-ac9b112e7ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9386b8d4-f023-403d-8f25-1835a4e91ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06780772-cc1e-4e61-86a0-c8a82b3cf505",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c80180-723e-41e3-aa59-ada6a56f5621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af9d0e9-f555-4af3-baee-d15d552d97c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f530668b-4d01-4f5b-b157-9a12aa92b046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "73f484c2-94ae-4283-b43f-4d2468fa94df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebbd567-8cc0-4072-9e00-bddb40b5c784",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0b7d25-0dca-4986-8ea2-3829cba47ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c397390b-e744-4c34-9e21-b1450f613734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13523d6-79f6-4e75-97f7-4d844d200e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "454201cd-e5ae-4607-a05d-99966ec99213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2e57ac-a93f-4a99-adc0-99dc8fd387d6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dc8164-b0fc-4541-a893-a1993cb24795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "32126c1b-8df6-4b58-98ea-ae9e643f886c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd37684-bbae-43be-b80c-e1c17e424ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e13c2142-6d75-4e99-9427-5dd99c31949d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a1dad8b6-0287-4ee8-9401-be693b799976",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b18306b-934c-432a-945f-91e1fb1ec02b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8642e61-e8c8-4bc6-aba7-2bd167aefaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08170505-a928-417a-acd4-b33b5f592637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a779ee6-15bb-453a-85a9-f5f3d8a8986b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9de6538-756c-48c3-aa1c-c400f4e74360"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee76e23f-638c-430e-ae85-a2663b2a4977",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3c092d8-a4c1-4b30-8c09-28378a183dfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "972fa680-5822-4e46-a352-31ab1237f366",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82c775c3-5ade-4ce7-9672-2beec21fa95f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f691a590-6356-4e81-81cc-79f0faa49154",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56816262-54b0-47e5-9d5a-23e849a02ab2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bded6a73-95df-42b9-aec3-57dd66703e5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "258bcab4-53b2-4c3f-84c4-3c97db8bab67"
                }
              }
            ]
          },
          {
            "id": "b6c9b671-cd5a-46c3-987c-d537bbe88669",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6bce47f-05a2-4b53-ae3f-9f5829a3dafa",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "27d7a932-7590-4af6-a887-0e9803829c05",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a37ebb9-8c6c-47fc-92cd-542626321436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6f9537c5-2296-4719-990d-305c677137b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2dd2fe-d601-438c-aeae-3b5dec4615f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2000cb6-d5b4-4b79-b32e-5ad2196cb55a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3505bbf-34fa-4e1d-a64e-eeddfdb84352",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfe2efad-aeff-450d-824a-f7c5db36373a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa697e53-1944-4198-876b-3d9b654110d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7946a53e-f063-4cc0-bf14-247966b2f1cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2208ea0e-d067-44eb-b566-7f19e5b00429"
                    }
                  }
                ]
              },
              {
                "id": "cf64c7e4-bea9-4104-b64d-d850cb55aad4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0282e484-0dff-4124-89cf-1b112f5fd10e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e6e31b2-0c2c-4feb-980e-45ea7f050b95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63d4a486-26ec-4a6f-aec3-0b838e122e8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b35703c-2c89-4ace-81cf-96cc01737626"
                    }
                  }
                ]
              },
              {
                "id": "e4954890-bd49-4474-b6f3-02d436bac8a8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de21791f-3031-460e-851a-fb291aa69443",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ce35189-de56-48d9-bbc4-2b7345dfccf0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e67fd65-4c91-4ef8-82f9-987439e8643d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "058e1bbf-ad78-4277-acc9-05f979a8ac8f"
                    }
                  }
                ]
              },
              {
                "id": "584e5045-cabf-440a-ba00-2386667dac71",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ee1098e-98d5-4f02-a8e8-6320a59bf234",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5bfeb5e-2073-4664-9ba6-41315a45c9d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da5323dd-01e4-4375-a64b-2a34888217a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "61f487ec-88fa-480f-b5fe-739f70882b74"
                    }
                  }
                ]
              },
              {
                "id": "af4bc20c-c1cb-4974-b4f7-dda130b05066",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7180de7b-da0b-4855-81e5-683680303cd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1a43f9f-2993-458c-9b14-cccf2f3bbf5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a03cfda0-1df0-413f-a6e1-d059a92d204d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a66e23ec-9f54-4435-acf2-06d42ded9e6e"
                    }
                  }
                ]
              },
              {
                "id": "12af5e12-826d-4eb8-a5ea-21fc1a84de90",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "252af233-b6a3-433d-9ebf-9b6ebec921d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4e67b6a-0e58-4c1f-b71c-28f9d401b836"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5345b356-a71a-4759-a8c0-28840170810f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae5e03dd-88ae-42e8-a912-b7454306376c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "412ddb40-3e0f-47ae-8bed-785d278f3369",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3eff73b-add1-44ad-a796-1f763126b769"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5431be58-5c75-4a2e-8a70-2bc8e5b7b488",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a52bae35-39fa-443f-85b7-0201a96a233f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb38b327-c3b8-4c84-88b2-b212978bdb61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "91bb0981-2ae3-4406-809c-89ab49edd4a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9fc5c43-f4f4-4f75-b7c3-f24d00c76879",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4d6fa54-3acb-42a8-8b0f-c70e7ce1b627"
            }
          }
        ]
      },
      {
        "id": "e7b9612c-9979-4c7b-bda2-c16f75c2075f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c08523f5-f889-4102-8ad9-1f4b2329f88b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "511498e7-72d9-4d0a-b52e-1efaccc7dea9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bddf5f8-7eee-4f25-b926-125ab59f980e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e6fb0f-ca31-4c00-9a67-a4eb4c294d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4de99d-bf88-4092-82b5-586f46847cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee3b235-446a-443a-8d72-ec885d2aa734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30f7ead-7ab4-40b7-a628-2852e053d4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236b5b97-6ff2-42ce-9fb9-f694b4fa22a4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b7f680-c46b-4dcf-8f8d-8b48ef80a52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55995fb-790a-481d-9b19-c60c46661f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6147232-5ef8-4f30-b5c5-2a086b1ec09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd1a95f-dd35-4642-8616-eb92e289346a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76290cf2-b7ac-4913-b652-28c1fb07df74",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1958b3-07d0-4bae-9a9d-8b095111f3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd40513-ab37-45b6-a98f-fd0d599775cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7caffa-8625-487f-9d11-aa141254fb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4429b00b-094e-4a21-9c8d-3c7b384c1d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9dcd45-1f16-40c8-84a8-50133d810c5b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796a01c7-2bc5-4de3-b22a-088654011a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ab2ee3-b421-4e1d-8002-7a2ab760e08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1dd4b3-9660-483e-8949-9656c71c0fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52b9893a-2615-4092-a5dc-000fa74f26ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c24a7d-eba3-4b3b-b35b-55866c8a902e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844f5ea9-afab-4121-848f-bd9e36b3e63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735c8b64-3a71-4e80-9024-1e2bd0eb4709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe27be55-d0d4-42ae-8fed-04e0909b676d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ab741e-b843-4db5-9446-2101d7e5dcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0597f0e6-5ec1-4b10-ae34-2d5dab7a4038",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dfe49d-d119-41c8-95e4-3ae78704b248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b7f0d2-f7b8-4210-b60c-a9e906e182fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1d3c00-240e-4d95-8b64-e92ea5b5c2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b0daab-f071-4962-aaf7-939f4f5b7f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d4350c-f408-4b94-b1f0-b21462e77a9e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ff4599-b722-4015-8b25-ec5fb3842fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1104c99-86d1-4caa-94b1-dab61888ca64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b891a3-dbf1-413a-ac76-29254982e634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2df6cea8-7ffe-4ec3-8425-45c5a9c9cd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc46d65e-1198-417f-9af5-36ce17764119",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b252e7-afec-4c21-9f89-5244b017884a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3df7e2-36f9-4098-8e55-da4afa3de80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e611970-8720-421f-993d-fca9929d98a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45eab687-ccc8-423c-afcc-4a0b287760b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a91245-144e-4382-88e4-ef0350dd5027",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c97f841-a066-4418-bb90-432896621192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861d2ee1-4222-4604-b874-e74b1dbd0d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ec95e5-a4cc-4aca-940f-c51682a5a71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5317a793-a8b2-4327-952b-73c53f05298d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0df9ba-dd77-4e2e-bcb0-e48b24478e02",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344581aa-1ec3-432c-8a30-6d358e1827e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76448554-ca3b-4bfd-8717-bc43f74187ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6695f8cc-aa9a-499a-9478-8f6b73f8b63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "805f3651-310f-4b35-859b-8ea11a797fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5fd881-2743-42d5-80b0-6ce2e6021870",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b9e8c4-40d2-4194-aafe-053ba45797b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d25122-a4d2-445c-a690-73f865ac472b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f62672-498e-40c3-a336-7f700d899bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdcce3f-8dd4-41ef-9a04-c040e3c50227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0df8358-b650-4a5c-bce9-f4f42358833c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf6f14f-de80-4c7a-8e4d-7d7fb68f0bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807474e8-a013-4c4c-b151-5b8ae54ee3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e884b3-f776-4442-a206-e3734df4776b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb2d6f1-72b9-44b0-bd49-0fffc315afd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b9b215-24b0-47d5-8f92-c6a3d3087663",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1be315-3ea8-430a-9ec4-59ce766c3543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84604e8-07eb-41e9-a9b2-a75c74925ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e279956c-ab5f-4f1e-b57d-83d46d6856cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b630c632-2cda-40f6-b5bd-d77745d560c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1f6fe1-adc3-47cd-b588-47320796db29",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4272e07c-db7b-4a86-a7f7-9e9cc1d9cbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821e0322-3390-4e27-98ae-6d9f5b3f20db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bb0225-e414-4691-9ff1-24cacdd92e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3915843-7a49-4353-8430-f40aaeb47c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7b6d7a-6437-41a8-ba7e-a78d7acbf590",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303920d8-0111-46dc-a42f-7a6c07f1773f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f6976e-c6ad-4f5e-bdca-0b855ccc31a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d256cd91-7d7a-4228-922f-084f82ca31e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "657bd506-f1ab-4ee0-a26f-b31de496928a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c753623d-9d62-48ef-95ff-21bbd64525bf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91e4972-0b55-49f7-b627-fe7a98d34634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eef13b7-ebb5-455c-b8d9-6e6528eea0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2fde89-75d7-4fe2-9670-90ca7dc2d2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c299101b-ac2b-4c92-9715-9c771cd161eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e944664-390a-4aee-b649-88b37109a63d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312641dd-1ad7-4e9b-8dcd-f04750f6a68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045e238c-341e-48b3-bafa-aa35aefc912d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbac4c2-6904-4b64-935b-b8820670baba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f5a2f8-23cf-4806-9ec3-a2df6505a014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfd6f3e-ff75-46b8-92df-53a1ac857880",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca0a914-d8e2-44d5-bbd4-d19903e74e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c7bec4-27d7-4f71-a0ee-2547e318e2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ed7d43-a634-4bac-8164-01ba5dc82f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b19d272-ff18-4235-9901-be2ddf457632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2e7c50-3abc-43bd-8102-e168b91e6f8e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ce10d5-47b1-45bc-9724-6e392daced59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78eac2f0-ceeb-4523-af67-55d54a34cc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9b27de-112e-43c1-9bec-ea3a8269f7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19ef7f4-e000-4f35-80c1-cd04f7df6a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f83a84-4106-4f12-9d9b-3fa3313de840",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795477ca-96d1-4f04-9c5a-71aae04eb7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02c20ac-cbcc-4ebf-9880-8e3a3ce3e53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec9f330-7265-4020-a3e9-b066c8ee5f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4d5cdf-1661-4e3a-91d8-082f1e0455af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643b8a84-8bd1-4715-a107-00ca6479e11e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a15993-1ed1-4efb-a178-14a22e9da5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ca442c-9cb3-4fd9-8402-7fae6282566c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba3b7d7-9cd3-4efc-b2d3-42c2e1e98c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2c5275-3a3b-407e-9688-078de7f93ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360a9c93-b552-4266-b3f3-45745b70c952",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5243b852-dcff-4491-9722-f30f56814a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab999a2-aa6b-4ac8-b16e-ee4f8d33c396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a55d44-7075-4f28-86ec-dbea60747bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6d28c0-2688-4e89-9c52-3d3e8ef40cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21de9f80-d74f-4d6a-9db3-fb2340a072d0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0464c246-d274-4c71-b54d-2ae0393536ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80001750-74bf-4ce4-9083-a2569397cda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4e8764-dfc7-481e-998e-de71e80cc5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d35ea6-dfe3-47b0-a3c0-7427734804b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9749ab57-c3b7-4467-a426-afd90a871fc6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab201c96-b9d3-4084-a5da-eae3719cc469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6d4814-9c83-4b9d-aea4-18244259df7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b36492c-079d-4366-ab08-ae9966c22a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a359aec5-6f27-4bc1-aff9-8b5bd9b28d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c880613b-e610-4113-8d07-504f10bb2c69",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68eaeff5-2b75-4083-a67b-7c75dbfa8638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96dacd59-3085-4ed3-a188-27274db86036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3395a34-9afd-48f9-8702-d04a9a2c380c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ac922b-5913-46fc-9f34-45ae0f80681e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e0ff34-8b37-40a4-ab1d-a809102c4272",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b770c6f7-4722-4b18-bcdf-9669be8ab6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33de7904-aafd-41b0-bb71-fa575cce9e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d704fa-f8e4-4950-8430-19f0ea0aad4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0738689-c53e-4828-9a7c-780cbc95854e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010f08e5-2074-4162-84f1-d162e91d260a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df852adf-fdeb-435f-aeff-9234f95cb5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca751b1-f10f-4ac7-af9e-3407f2b22903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cd7b27-b10e-49e7-b8c7-52dfb8f55069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b43398cb-2c83-4a17-be7a-9e8522694d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6bf1e4-f7fc-4948-bf23-6d1c6e9a0dd1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f9db20-9354-452b-95dc-3815d5666a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934a334f-a6a0-4210-97fe-a41e9d4f9712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedd5e66-5a5c-4a59-8330-2b0631e6015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ffdc406-c094-480e-8f17-dbb5fa74095d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635b7456-fa09-4c34-8b5e-8cd1b4b5197c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530fe93d-1daa-4edd-868d-3d767fe269d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a08635-4e16-4877-ba8b-efcf0b23f1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222c10d9-f5bb-422b-8dea-5904cd1bbb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d987843-ff68-4ce9-90c5-c0b59931bab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdadf9a-4d74-4b67-8f12-6344f74b6494",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c444b042-e00e-4bd5-adcd-d4f74adc7d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8454965-17cc-45a2-8228-86dfdf08ff53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d585ded0-d441-4517-badf-2c62c33d6b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b5ff05-2d7d-4deb-97a5-7bbecde3dae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f32f20-06d0-4b36-810a-2663ea37c3c9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe89e913-807e-438c-91a3-202e72b24486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bf4ef2-c038-4ce7-a35f-6af0f10d1b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac840816-0b5d-47dd-a26d-4b37b7546ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7480962e-ed47-4208-9f39-350816b18bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a2f7ac-3c19-4909-9960-a64dc0031811",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb2c4a5-e85d-4094-a8d3-ed6893bb1ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bbd8d8-02d3-4840-aa2d-91490646b654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4f42d2-175d-43ff-979a-f8217a7b0ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df814ee-6eed-4b18-b2c8-70b33fd3b328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b91a72-626e-4cee-8596-6222d170d6c0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcce4f43-b57e-4c3c-b79c-815f4d1c072d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db13ab0a-0c40-4358-a7f4-dd1474506236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c197d0c8-3123-402a-ac23-1e60bb1a81c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2285e4-b62e-4fd2-8d81-74c6559ba7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7cef18-0213-4861-918d-4303714fd17d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280faecb-8560-4ccb-afc2-f69a88f19a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbebf3dc-8c7f-41d3-8d5e-85d353a14f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c16d3db-f30a-419b-8e64-2bb6dbcd247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eac363d-e84b-402c-b83f-d8a905926e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64926116-a474-460d-845b-1214dc3a1799",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbe00e8-9514-48d0-87cf-bb569623aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c64cd8-3e1a-4c4d-ba68-fa6b58b80664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995ddc4c-f2a0-4320-8198-a2da28cf16b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2cf2b2-6f16-4be3-a19d-dccf7aeb23a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e28f2e-4d87-408c-82c1-6c6a791ef9d3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbbb5b7-73ac-4d0a-8fab-c4cbe86d03f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7629122-3794-4714-8036-83a6ab1aae2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4733ad0d-6ec2-401e-8496-0188812cc34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52dc428e-6f82-41db-a8b9-bbcd12a8ddfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbaade8-4cf2-428e-94db-f9f8f02a6b4b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d885902f-35bc-46d1-8b09-8c782210a7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edd3b73-cd38-4d51-a652-f151c3f61b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04943f37-0a29-4e8f-a4c9-24cdea53f538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e82803a-f3d6-49ba-8c54-55a25a68958f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9d4933d-f778-4067-8a10-4ae62b66c238",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc8a919f-2868-4b46-9e9a-a66b18cefb34",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c1de86-ac68-421b-bb87-896f633d6158",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "462c46da-883d-42cd-afb1-706525f2e945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d30c00-462d-4d01-93a7-7e9d7f73333d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bd088d7-a798-453f-b812-7aae31de0c31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b54bae33-24e9-4ade-b3d6-37c677a33eb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "723ca81e-b126-4a62-a489-14d436863fb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0e1faff-b3d5-41ea-9ffd-d66fb4de1429",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0e4d815-e300-4595-81de-6dbe036e2374"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44f94cb6-e326-4a14-a390-0d4773422016",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cbec8b39-831d-43ca-b5df-488eb884ce2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "002fcb36-ce5a-45f2-b235-b80d9e1dd413",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0fce56a-a1a1-47b8-b79c-ac06563485ac"
            }
          }
        ]
      },
      {
        "id": "d30b5fd9-aa5a-4197-bcd1-8a8d348a7637",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "546bc053-2b36-4489-8c7f-424b2787d218",
            "name": "Negative Testing",
            "item": [
              {
                "id": "758f5b1c-8360-4b5c-9393-9bca459d4654",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ec6917c-5bea-4aa0-a6cd-8c0d9091e24e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a16f1a-6a36-4a8c-b42a-6a7dd38bb326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc599fc-7a35-464a-a20a-b05c0c7d010d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128ee6ba-362a-4d35-859c-c514f127bad4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08c1623-8be3-49cd-9c5a-6de8a38294a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b2fdd0-c70d-4820-92e6-847119b61087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9323351-6199-4007-8c85-813812656dac",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e2a622-b572-4bfb-9724-7351ba5f9e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1190c351-ad5e-443d-a300-d59252f4685a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce916bda-b0fb-4809-8e7f-d74063385454",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cab34e6-390b-4fd2-89fb-293a94e48dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6e0a89-795b-4f6c-8d0b-1819137e6227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4b54d8-0271-4658-96eb-68c61caecf72",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e663c6-c09a-4b5f-860e-cb5a44af9d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5babb171-20de-452f-9727-7b796b8d6324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9539cb5c-f445-46b7-a45a-5cecdc5b16b8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b13764-9744-4477-b8c3-ffc1064c4494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb362b35-7203-44b9-bf52-94b7402cd8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53708c31-318b-457e-9b07-f4b5a7d1f798",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb804393-c867-4653-a2d4-3b30527a85e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42b4569-d18d-4a64-b198-26a41af3b45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b043d1-edde-4578-8660-23c2a7d0971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67d373a-2e86-4219-9067-eb42b8f64058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f0bc28-5f84-465d-9401-2da2d697c3f9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec00d53e-a8e8-4330-a5f2-a812432cc6e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836dcff0-3649-4d81-8cbf-64237051c14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773fdf90-7333-4c0c-b3ea-1b54498f11d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8bcfe1-db37-49d7-947f-b3602fba8900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c4c727-b18b-40b6-b2a6-9e0b3d706e75",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d86b9ee-1057-4cf9-937e-14c64472a80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af3af9a-3861-42e3-ba02-7bbdff79d3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f834e5ed-27ee-40c1-9b3e-9b17f4a24c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062df4ef-eeb4-4bde-9084-2bfc61717161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53b4cd1-0426-4097-ab51-3745ba680a40",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918745b1-f9de-465a-9faa-a1131f9321a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e6343f-bcca-4784-b701-f9f1e3ebdb7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f8be09-f695-4b29-aba6-22c41a387c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cf2a5e-70f8-4b72-a5d3-93672078301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7881d6-2508-4bd8-8b0a-c5ebd3e7df51",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6126de-537f-4861-9ffd-91350661a73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044238c6-d335-4858-8174-d42719d429b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98a3b77-8fa5-4dbf-836e-352bdf8ebf0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8721147e-1c80-4c2b-a456-0d2f782d52ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf6671d-8045-4886-9a4c-5bc81505c0cb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039e1bd0-9bb0-44d1-a1da-f51f79ce81d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7d320e-1ff1-4f62-9572-dec61e873e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bc5b3b-1970-4323-aa49-d01896c5835d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb02369-aa9d-4711-b1b1-ab5a020a3199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5c1d96-a879-4dda-a689-30743a6b1ae5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55045208-af3a-4e6b-9182-df4771e7611f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4add0615-5243-4267-af5c-16ea3a8f94a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06af701-e303-4175-a41d-bbfa75314bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fd844f-94e6-4318-8a67-201949cdc64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ee398f-5274-4d53-8a6b-93d9cbd974a5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cc7649-fcd7-4f1f-981f-7ed793ec302f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b04a7163-24eb-4416-b56b-c1d2c53f926f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d605da-5f85-4cae-ae26-cc91564a1de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c8a246-3620-4745-af2f-7ab4cc274a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f01e81-eeac-4ac1-bfb7-a6f33a42363f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3949ea43-0618-40a4-b177-d207948c2b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "555b4aa0-3d8c-446c-9609-1016debc54ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8c89e8-6da3-4c06-8ceb-11423f3bbf48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf019f6-0892-45e2-8a83-32cff2d80bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c87857-86f8-419c-b095-dc8475fcaf05",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0307d4-1ed1-426b-89ab-b442bb0bf005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ab5a89-87f5-4da4-991d-eda47b540d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961e58ae-4489-4cdd-b294-9b3e5093c021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e73ca9a-7c8b-4252-9827-c3a6470f379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fec57ae-2bab-4fd5-a2d7-8a63214f3bfa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b62f96-5b5e-462e-882f-8e1914cc1278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76afa35e-8b38-4d40-a34a-387dd7d663b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77bdd03-1bfe-4742-895c-76909a455620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d8a3dc-6513-4f17-a603-2ffe426666e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbec85c-1c0e-4067-9b38-745beb271e81",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb732ef-492e-40a6-b863-829632be1f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241ac4ad-0472-4ee5-94ef-49a3412534ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56147d4-6559-4995-8803-108570151db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347e04ea-2923-47aa-bd77-1ddafd2288f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465f8190-9ba0-4761-975b-527dcede195a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fab671a-8ba7-4984-a594-a99942a8d1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d403978-e204-4597-ac30-a877c6d43317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c70d8f2-18c0-4de0-a778-bfbb9ab76c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809ce3e2-dc6e-49c3-99ef-da6ac2237a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7be04ce-c56a-4109-8969-3225b6cc3a80",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2bd88b-876e-4e5b-91f6-46bf8ee35f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fff6a78-d541-43fd-9fc0-a392e9a3b94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd725c2-f764-4e7a-9502-cd4e645a68b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885c0771-be45-452c-b193-6dcbcd7b954c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2b59e7-f6e5-4e3e-9180-708dbdcde720",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6563b85f-12bb-401f-9af3-0fdad1d2f193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9bf738-9d5e-4711-829b-ef7ba81d14f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d31a73-46ff-42fb-98ae-140a6ce3f1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85afbb97-cc9a-463a-b67b-dc6fff490168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadc5931-a1b5-401b-ae03-f5996107b191",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cb1549-991f-400c-8b2b-235c60bdabc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370ec5e2-6677-4ad6-b219-542006b98621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba3acbd-9179-4d73-84a6-b261936b3e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99dd950-077d-4dc0-a20f-d9fc01c03e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c6161f-b686-4642-a09d-9c8be5b13f2b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76d6411-d269-4c24-8d0e-b359508dcc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96328c04-d9e5-466d-ad86-695c4228a6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65dbab1-a3a3-4db5-babe-cee58951cde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e57058-b482-4ef0-a784-87e576441770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da55145c-2be8-43b1-b76f-8ca28278400d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef48f0b-87e7-4cd0-9714-60e64f2c7104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2569f89-fe0a-4952-af13-51ac132be932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a7ced4-f4f1-4a61-b236-1da44c54f0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2542ce4-25fc-430f-b7b6-3b3dc07cfabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc7fbf0-41c7-486f-99d8-6fbcca52b04b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e1f510-6e5a-4a7f-8b70-993d80ab871b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a375e9f-559e-4238-83e2-06bfc63ec3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28597609-8e45-4127-ab5b-4f4eb6563006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b421137f-5f9b-4ce4-b27b-6b6768ac7cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a603e79e-9ac2-43f2-8c7f-e335a5a8b48d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b5e3d6-548a-4b8a-b7c4-c852c2b8c831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e23237ab-627b-49ab-a82c-2cb02f85326f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e6dbf2-1437-4477-be5a-84a07cd865fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2710c650-c564-4009-8475-7407644eb806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc822d4-368b-4760-b9ea-bf88abd6d0bd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c0a82d-aba4-49a4-9216-8eda53460ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ee9a3c3-1ffb-490d-8b4f-62c4c70aed05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1bf8f2-b8fd-46e2-b2c3-9c8b9ca5f46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65ad0d1-69f0-4484-bdb2-a0c13f18b1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb317ad3-3245-4dca-910c-f2a7fdca0549",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce00864-b553-4744-9eda-f15b11c35490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8ab446-31c8-489d-b9a2-6709d2b8585c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180388d0-46a3-431a-baa1-329f7eef967f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebb4c54-54ac-4847-b4c5-ad3b7cb3335b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7a514d-a882-4760-9a7c-8836ce545d10",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aff3c91-e604-4108-b255-9bd9c2212815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10e41143-219a-4ac1-9756-9484a0878178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a585c10b-c3c1-4814-b069-928c8f2a5022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cae70c0-f352-4d76-8e77-4a562233e53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702861a4-2df2-4799-a986-3dbf18075372",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d212fe71-980a-429a-825d-365067efe927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94ecdacd-3552-4cde-a192-c01ddc22e9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e04f29-a604-4e33-9d0e-c983bec6a090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349fd8ef-6240-427a-8c88-0fd0df7771b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb44e972-d640-4015-a77c-e9680c6ac75d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc0620d-d08c-453e-b0fd-3b39f28e8af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e258424-4dd6-42ef-a373-7d7a7e67aef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7496e2f1-c5c4-46f6-9310-6bde81afb420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9811f9e0-0d3a-4874-abb8-b4935e2186a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f66452-5d61-45c3-a062-875d205e4839",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63592350-b24a-47b8-9848-438c0d275141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b16100a-fba5-43db-8171-82aa8e71a2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea428976-157b-4188-8822-633405e06045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6371d90-2281-4c94-8029-696101916ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a0352d-0bab-4e72-b2e6-dd41962ba0dc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bf7ed2-e91e-41ef-a37d-2c2c941d38d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c318db0-8700-43a2-a34c-a2050b9e2153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7c474a-d035-4034-a924-e990b011203d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128d5f71-27c3-4d88-9bc8-cb5c530d059a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0a5944-0429-43e5-9531-a3fc62be1a95",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c199aa4-fb0e-431b-896c-0903632a9b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecfad9b9-48b3-47b7-9b3d-e4a9bc4813db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d478d9c0-fff7-4a11-9a09-2e1fac572c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16b743e-e9c4-41db-b8f8-3f5483f4a3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aaa22e5-f9a4-4e70-9acf-d6f8fa0c43a9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b37c29-8fd1-4aef-a77c-ee53ac5e0c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd662c5-5e76-4666-8cd7-516b1c17d5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6c6f10-c3ad-48a7-9864-b4dd67c6dd6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2ae0c2-82c9-4f76-9172-d9582879a4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4054860-1258-4a35-ba50-3138f3dc18d4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0191ef5-195b-4fa9-b083-742f268af636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485bf518-f618-414d-be57-11cbbf3d0b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63b292e-809e-49fe-91f7-43b090f149ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6832627-be2f-4fa0-a80c-7dc64ad4e0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444389ae-17b3-4cdd-8b11-5339c514017c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f4b746-c835-461c-a562-4e5e2f7d78fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e3d138-dc8c-4f2f-9ceb-651b0403aa0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ef7baa-83f5-409b-a7c4-1f74e2956888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220e072f-502f-41f7-82a3-5fa5b5495470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1fb0c2-5a6b-40f6-a51b-a0ab4101dd4b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f166c3-77f6-434d-ae2a-28aefaf7b32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1855af9-46ff-4b21-93eb-81b8157dd8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0518a01-b9ba-4ce9-b3ce-56a7e6bcf64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9798b96f-ea63-4d81-ab31-801537889a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edd70c1-ae71-41d2-a333-776b5d789c4d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e87a5f-c9a0-4b2d-8361-f3c0d423d8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d0f67b-0a65-4944-9b3e-e12c4d819402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c86511-5b08-4359-8990-6b3b9e854e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f36de9-e48d-4814-8bbf-65d86ad55282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35d0dfe-67f1-4511-8feb-e809cd7c987d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1b96a8-5cb3-49d9-8852-75621fe88628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4e8e6f-b244-44b8-ab0e-8675d05d2eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9262ff39-90b1-4f7f-ae31-0f68db47ddc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fb5be3-3138-4854-a222-eb0715b8f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b21c32-dd2a-45c1-8331-bbd9cfe4dc61",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3245509-f300-44ab-9e6b-8884805a89aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5471cc-e216-4b61-b477-e8a0a9f4ea34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de87471-eb5f-4f56-bcf0-d3c176422f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660dd04e-10ae-4261-9d40-c500990ce246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd419c34-7871-40c7-bb57-e0b3dff32ee7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a6ae80-c103-44a8-b404-df7ce132adb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdfe68d-5a97-40be-9ffc-504f2ead8169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3184e1c-b148-4602-95e0-31368987cf32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6307d2-7ba8-45ad-a21c-4dc11129e149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e27fbb8-bf06-4ecf-a4e6-5bd8f3d96a27",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68be97e-1be6-44c3-8add-b4149830d987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a14f2e-fa9a-48b4-a484-68fcf10cad02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049a205a-d1b1-4a6d-98e2-99282541cdec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02d3907-854a-4d67-a946-e54db1adec1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8638e57d-a58d-4d52-b44c-27ba484eaecf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab609d3-cb37-4a0a-82e1-171df23d9ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9f651f-b3b7-48f7-be46-56e56eb7bf38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192a48b9-ae14-4462-a019-f64c8666213b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34df38e6-5cc4-4e30-aa44-f701562f1534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5b7cb8-2ef3-4ff3-8422-9fc39ccfc57f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339aba48-1d16-49f8-8849-0b2b8d272755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0336889-37f9-4f55-92b1-5f001e2f36e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b26e2e-4373-4dd4-8cca-69c4f6984148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bf49f6-c86b-4ee1-817c-92fcb8c3fbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838f91db-d6d1-45eb-818d-45aec5d779bb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759eb999-5158-4518-9a9e-851d30646b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05492b2-2085-41cb-83cf-ff1939dddb1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1e4723-db4d-4daa-a3a5-c452202811a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f304cb7-7adb-4c6b-becb-05d469ce878b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9444990-fd83-44c5-8a75-8b3889407fbb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7805da-e15f-424b-b735-eeb814c04900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7214fd9e-807c-4cf4-b5cc-a1c9a34b72ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adf478f-bfe7-4b99-820f-f42635dc32eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0364b45e-f1df-4af4-a99b-a235125ba239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15eebc7-92fb-4264-9239-3ee0d3600c4e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952f1552-af9e-4543-8bdd-fa67107286d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b723a1-0e82-4272-aa7d-c7d90b24cc67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273821b6-6ab0-43aa-bd33-c3752db89bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afafd24-8653-42fc-b014-7d274489747a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8ef5b0-f4f3-4156-8751-ec2ad4ab4a13",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb1a52e-6410-47b4-9325-fd96968d8c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc234a1-f767-4dd3-8dc8-b3f1e12c5879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a498794a-fef3-4ca2-a1e2-6ea2be4b4b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3b12d9-6e9a-499c-b0f8-a50784347c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08051014-a82d-492d-a559-39009f5f8d56",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82b291c-9865-4b14-b5d9-f6974a1dcf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119597e5-3466-4d53-ade2-742d5de0a8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633332a6-51b8-412a-8142-7fda43263c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadf1c5d-a9db-4221-ae09-ea22b3b237b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a1de51-3f15-4e7b-94da-067f07f286cb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fe6212-194d-4e29-a82a-d270032cd571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f76c8b-f3de-481e-a73a-689b26544607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fe2bc6-b020-4bc8-aa42-c7cf121855b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d68f75-a610-480b-af59-f110a031372c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd8c02f-261b-4fec-a8fc-13ac472dd70a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa110c72-1663-4714-af3a-8e4cc7dcc44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c89bfe-4274-4496-a66b-b96d67e3d998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088c9010-c847-4244-a4a3-4ecde3bfbd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ed1566-42a5-4ced-90ee-567ff23fc718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fafcf19-3f14-426e-a061-e4f07b193f9d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16b2bb8-e364-413a-b6a6-255cb0e40316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47a3446-d966-410c-87c3-506b66c4f74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb327d6-474b-4fc5-8c14-0eed08906212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e874db34-3d13-4ac6-ad7f-f0dc41478dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cfd3f9-4bf9-4ba9-a596-ab397efaca73",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802afe06-e0c3-4eb7-85d1-9d72c50bf8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403d669c-0a96-402f-a3d1-ebfa2f50f386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42558365-3669-4b44-b5bc-689e838a176b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff8af7c-0ff0-470b-b209-df4a6eec2edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff7328b-6a7e-4101-81ee-2fe72b3c0055",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c362a4-5f08-40bd-83e0-d0fa70a6b249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5be97b-b36f-4171-9dee-d01d1f7fb4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69526aa1-b467-4aa5-aa40-b973bd08a716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54676e9-b8af-4040-b339-c4d905cdb7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405b8fe4-b93a-45bb-9a64-c42e7cc16e99",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e283b3-c01c-4687-8c12-af9f5314a88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806c358a-732e-4394-acf3-c16d51b25882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad9fd93-3ed0-4449-aab7-ee33e4d60341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892060e2-d526-4680-b2a3-126e64cdf6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdc78a1-fbfa-469e-bc04-2903f6f63338",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f62064-a034-48c2-9e54-422498e523de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fa1d64-6e89-470f-94c7-5eb7d3a44127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce0f9e0-eec8-4c2a-8b3d-696a2ea05e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060aa0f6-04dc-4696-98ff-bcf085a65d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5290e89-4f16-4b04-8ad5-83ad3829330a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fd9364-d6d0-4e1a-8404-bbea1f59c31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883549a7-4dbf-4188-8860-d67a9565cdf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c9a8a4-5b0c-4c32-b346-96733c63bf61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aaf9f1a-699e-4d5a-9aa8-fce9b4c30745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be34d43-63ab-47ad-8789-dfc85e02618b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056a4ef6-af7f-4c04-9ebc-603bda932e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160a0e7c-ba38-43e0-8427-581ec6f5481c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23af435-8b11-4d22-a28c-ac167657c429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73d64ea-e13d-4927-afc7-658917cb2fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7a3afb-6102-43ec-9d88-87357bda269c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39c706b-4502-4088-aed3-408e0e72c134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff849e1c-21d8-4bf2-aabb-797d1a1c18f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76007834-1a83-45fa-bb2e-48c60ce1ac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418308bc-2fe4-4037-8274-5ddfd0b551a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad982d31-2471-4f7d-8d0c-5c5749ea85ed",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deec76b9-8829-4aea-a751-b3df8a8086fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53685fb1-ab1b-4229-85da-4134ddf88ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1360e78-7d0b-4913-a124-722f4ca9913f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31bb35f-9998-4e52-bd9b-d444d195490a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499e3c85-2f18-44a3-b945-dabc6757318c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cfc8b8-efb9-43b6-98e6-f37d790085d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e536d8-b245-43ce-be2d-b7aafa047d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e4b8f2-07e6-4247-af8e-df9c83ddd4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a6c977-24df-45e9-8e18-31f46f573cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e2a126-0d94-4a62-8716-7ed45d935b0b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df515592-c380-4c8b-a71e-fb9e3af7dad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2005dd77-270b-4f14-baab-e576a5906d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda99ab9-b28d-4b76-b5e7-0265c3576e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079951a8-b43a-46a8-be2a-ac0c47d3e2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6bee9c-e2f9-4dd5-aaff-3bae5baa9ee4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a51f23-d776-4f87-b037-b87f4de3dced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0dc00c8-9970-4b4c-a08e-c9e1539c4fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcbb9b5-53d5-4b7a-870d-06f695a5f8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2bd900-fa8f-4cee-be6d-34dd3ea75341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb68c1a1-b2c7-419c-8750-9586dd42ab83",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ef4f48-a448-49d1-9733-40c9cc2b2481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68eb3c46-a5e5-4b38-a9a0-14aba14c9ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0f6772-6104-4f1a-a33b-ef0ef14dd871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646bdc17-5c25-4967-9ccb-dcda35e95de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7180c081-36b0-45ab-ba44-de113277ffee",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbaa1a8-ab61-4a1c-8b91-366ffea48948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa54c88-13fc-428b-90bd-7358e2c21de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec388af3-c81d-4eed-9f1d-cabf97810d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c2dc76-22a2-4977-bac3-fafbe409ddac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f465f510-9acb-42f9-b3ad-75d9271432dd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb284939-ec5c-4fe2-b1f6-7d6d13901e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e0f1f50-ed4d-4dd2-a0cf-ca0deaaa0241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1647a40f-455c-4aa6-b2e6-358a6288cb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e333932-0eb3-4083-9607-f78d25a6f853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad654bce-854a-4d25-bb40-be40daa3c398",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79fce45-f3a4-4b94-a905-c2ec553b1ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9656e5f0-6536-49a9-9750-35f1a71c53a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb777ab-42dd-4ec9-ba9f-26e37807f9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f0e41a-196e-46a1-a428-3cecf4753271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b331ff1c-231a-4d9a-b089-a1b182a9cebc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bd5acd-f0b6-4ae1-b94d-d66fa0e5980b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b48c6f12-832a-4e39-bc48-447506979843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd52367c-de58-4cf7-a104-37f5a785e93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb0a9e5-17e1-4910-875f-176ed170c6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8737f9-e750-4a79-9073-30bbc043a81b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ca317d-c6f4-47ff-895b-8fe90d811e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72450aca-bf77-4dd6-8325-a2ca55c30118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd38a81-0936-4202-a45b-368ed2d841b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19db9066-0b52-40d4-a445-23ab7d737c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce414c0-828c-468b-8d72-f79657094f1d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a93ed1-db64-4a74-b19e-95c85b54cf5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617c0114-cf10-4abe-9d1b-a47938c78940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d0bc63-43cf-435c-9656-0c01d6607759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433033f2-ebf1-4a98-91a8-8ec9c37be363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d1aa5e-6e7c-4962-8b67-63612b0ed764",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5799bc6b-fac5-465d-a7b0-e2bfaecd66a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "659789b4-08b7-466c-b452-8d8c453be7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b24250f-1e9b-428f-bd46-8e7ca10681d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb3fbc1-0bc2-4271-842a-22f98ce35944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86637d0b-365b-43eb-87bb-8dd4a314583d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0ad3aa-f199-4299-8bd0-468200bedb7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194076a2-5a13-4964-8ac9-444766b8c049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed47017-5b85-4e02-b828-543e67ed2b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636e9ddd-8f5d-4d7a-aba7-16975acccf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca8da88-635d-44a9-9f50-c6118ca1b719",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c0f95e-e205-459a-8e09-1a8b9d56acc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae554f34-7174-4baa-a2e9-c9e4a9848a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544b7e8b-3464-4ed8-a06e-a9cfa42aa31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bb6fba-b2ba-45b0-a555-a86757d25e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94355677-73c6-4963-b377-d9ff230e6b47",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551818e8-e64f-44f5-90ff-c3d507451136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01973ab-4f29-42c7-acc2-01c281ac7c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86144893-fd41-4c69-bf2e-7220f92554ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f53c44-9633-4efd-9369-951fc356c41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a125b86c-2264-4246-8369-f08dce7d1dbf",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737509c3-8ce2-4778-8fcf-ff30b1105899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30280f2e-2839-42f9-9f54-6fe7764f8021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8c23ab-777e-4471-8f7a-0a1fac072367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d89832-74fe-4428-ad4c-a9f41a62e50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a06206-81ef-4acd-8032-d022a6936804",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52096b68-52dc-4d2d-a236-503f900b3428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3d0ad4-d7e4-410f-9f90-47d955b4e53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42415f08-93dd-4ea1-aebf-c6fea0ea1dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915bd937-36db-429e-8d64-0672a55acdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806cb732-2b71-4cab-aec0-c7c33d0262d1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31761a1-ec30-41fd-84d1-8511625236eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64237d44-50a9-4bc7-aff2-4aaf8cbc2a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0416e9df-abcd-4805-a235-75ebeeb95f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09a079d-175a-4400-9329-68d29d31ef3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcde4d87-a2ed-4583-90f0-b8c570cf6b3c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594a1cfe-5941-4deb-a8f6-bf09dcaa0248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37103716-f4bf-4350-b507-17dd965fb132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95abe9f9-94b6-4b13-b28a-f4cf2c9b6084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6b607d-b87a-411f-ac95-af5c786e3f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41a9c07-81f7-4cd2-91dd-f21516e034e5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43811150-4de0-4ace-99af-6c3ef95a19d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77202135-761f-4966-a742-1ce1748763fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5498ce0-48d2-42c6-877c-72479a45738a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b51478-5804-4ef6-81fb-37a959198281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6129758-6cd6-4c24-b2a5-2f61b2a1b253",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5178b8c5-aaf0-4c38-8824-74d83a81a169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86da099c-9f3f-4c15-b8fb-3784334f07cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbc0749-04c6-45d7-b4f3-fa63f01a0002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5c3a68-8720-4199-bcf8-1fb856d9be29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8010e44-7af0-4147-992d-57122e35848a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc37df8-78b2-449a-9128-63cc932e9ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a043e2-3697-42bb-9ef3-32a23b7ca0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ddc342-acfd-4e3e-8431-96831db9a1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcce70d-dbac-4482-9a7b-f2a5d9d00993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37cbb6b-3555-48fa-87da-a4addd999926",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c893d932-cc31-4891-b696-e72f9b43a38f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b94c96-99a0-40ef-88fa-2bddb0c6d8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c3d13d-b737-4d62-a9b5-ef8f24eb7d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a568360-4c3c-451f-ad7b-dd405265cf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364e482a-11d8-4e51-aad2-c23d666dd930",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4092f27c-7819-4558-b3ae-e05cebe176f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67297f8b-1562-4a1e-8c54-e8447873edd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189e0c0a-8b37-4e6b-a384-35bf7e331d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7e2fb7-06b1-4533-a1af-d5a3da436e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531320a3-69f7-432b-8fc2-8dbcf4b5c67d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb48be8f-064e-4523-9223-25c3ae8516ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e225cc28-2eab-456e-8bc0-cf4700be1bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f5c878-5528-4375-add5-b935b6ee52fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658d3262-b508-46da-b0ca-c0a9292828fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee625dce-68c8-4f65-be6a-5e53c97e446e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b510a0df-f073-423d-a11a-3397891e7ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8cbc998-9ae5-4074-afe0-ba0f5fe4b23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd9ee94-ddd2-4952-a86f-05af40842365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173036bb-8e1e-4de2-bd4d-67e3cb204a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7597cdb-cb5e-433a-b9ad-84b90116e809",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2027fbd2-bef6-4c95-9db8-96bebe4260a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2f6396-bae5-4305-896c-c93a07ed77f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4ff31a-ebed-4e0f-b0f6-9523e49534c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa443748-a349-46e1-b79e-377d6d1329a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f45afce-6d11-467f-9881-4fe74a8970a7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7794f380-1dd8-42bc-a470-c7502314826c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af97d2d6-1c50-482c-adcf-154dc09e516e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebeb998-4a62-44f4-afba-8aaf9e5253ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83b6554-b4fe-45d5-bd10-938328333e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364d5456-ae2e-45a6-ad0d-bdbb12e6a408",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1d1afd-13df-4b61-8e79-cb28bed32b17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "608abe29-f2a0-4353-a52d-0fcd0808f223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55533090-2121-4b5e-964e-bea98a8383e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab7aab6-5ce0-4446-8c51-038fdc7c8048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b09748-40f5-46a5-9dbb-fbaf55a58115",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fdf39c-9d2d-4781-88ba-fb16fb6dcaa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a531d8dc-1a74-4967-9283-77e4b632b5bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc6814a-a68b-4213-a7b6-869100e3660f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4a4318-4f8c-40d4-9aae-9213350a2ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302a52e3-4f52-4c88-8742-197b6bee3e29",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89bec82-752a-4a67-8029-14aafbfb9d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54677d8c-f4dc-4506-933e-901d1653d162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af70a50-b58e-4979-bec0-7ad53b92883e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a78ba19-5e9d-4b3f-8428-062cd4346a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c70fa7-e84d-4568-ab6c-0886b0bf9741",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0645a3-2159-4d60-912d-aecb39253dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4585e556-b57f-46fd-a451-6065727a0b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b34055b-3453-4d45-a9de-ffa44db75652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33cf571-8cea-480a-a0bf-1e5132fd3380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffc3c05-aac8-42cf-a93a-7dff56e08af2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11160dcc-d4e5-4b6e-b151-87c81f746017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ea453b-f993-4b45-a265-b7a442477e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21d63a2-5318-47a5-bd99-d505106f5058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39c5cd9-408b-4e80-b140-b5d4fcea50f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48031206-099e-41a6-b324-2a3b08460d6b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd41a63-308c-435f-b916-4202343f38c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "722a66d4-6e2c-4ddf-ab5b-8d75f50e62dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef78d40-7055-49e5-a926-bebb58653c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb9c4aa-bac9-45a5-bde8-8ec3f433d44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51703fe5-a5c4-40b0-9a14-c3215968ce6c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4d5382-0342-4100-991e-649dfd5a6e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90df96f2-c1eb-4c80-89bf-858d0e755167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9959452-b63e-4419-a054-1b57ea3ae10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a535c126-9255-4417-97d3-aa165e2f31df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8627ac6-e64c-40b0-87f5-7fb46d640260",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac38c47-332a-4d7a-a09a-4862ccba51ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89767749-6310-4541-8dde-fb7ccbd9bbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a2c16b-1f75-4d8f-ab8a-9db23c94bbb9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8176583f-63f1-4f08-82a1-352e4140aed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f8ce18-64c8-4672-be95-1f6ff194c682",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343445d5-aa56-4dd0-b40b-12df1b26f7d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e2f596d-3b98-4021-ab92-52ca82ba3905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e225e2-7e73-42f0-9fa0-52ad043672a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318793dc-4e17-4a73-9e36-661fe449fc57"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f6c7734-695b-42ae-be9c-c32839b66925",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3278da99-5387-4515-8075-051ed96076e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a75d1f2a-3ba0-4ae1-a8e1-d8d9469f7ffc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d37e97d-629f-4743-b603-8c3135d86cf8"
                    }
                  }
                ]
              },
              {
                "id": "fcab356e-0157-4a16-91db-3fae38e774dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7054420-f352-46e3-a195-f7f610232ebf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346aeb09-c87b-4320-8bc0-d017a257bc90",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "68b89046-feed-4a9b-a97d-671623132baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1624008-81ce-4890-bfc3-0c1552521153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e964e844-6ef2-4e2f-855f-a3a30049ce91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87431556-5cee-4ae9-b160-f114c5582883",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "316d8fe4-f787-4db8-97cb-5d65dfe3c855"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "757d567b-6b27-4acb-a5d1-63a9186ed306",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98a65f90-dd39-49ca-b372-cc9b39ac4149"
                    }
                  }
                ]
              },
              {
                "id": "e82afdda-b5e5-437c-ac69-611e0f864f09",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7ab0ad81-e31e-46ac-9ef6-836218f8466f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fd1e36-c179-40c4-ba50-83cf481b468e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "af012fb0-37df-4eac-82b5-25ab6dc988d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b59ab9-243e-422a-8edc-5fe5281f4b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d95df7-5fbd-44c9-b375-d133f21f9adc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fb79e932-8f99-4731-9ee2-48aa7d5357bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d40e49ed-4db8-4f99-9b49-0f1cff4d6da2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "885f7a9b-80f6-4442-8032-fb9e94f70eba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2069419e-5be7-4407-bb88-bc8cee2efed2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af746634-068f-4100-8f4f-78c03a862e26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46aeb97b-e466-4bba-96d4-c653ccba00e1"
                    }
                  }
                ]
              },
              {
                "id": "df8523fe-73e5-4559-a312-62a265cb6e96",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33df567e-4edb-4335-98fd-b4129c061b27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c43e2745-8985-4a79-a111-5a313b65e40b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "250c022d-8878-4d47-b6a6-749fa5a063a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5adea2de-2cd9-41f6-844a-73a998c0c985"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "807c7c21-29fd-4eef-a82e-c75a065110bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7f7066d2-d595-481e-bf7c-0fd839234d33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1501c85-8e26-44e0-a117-cc826bd8a1ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba135639-1912-4660-96a4-6c53fa59ccb9"
            }
          }
        ]
      },
      {
        "id": "16a4428a-979b-4bb6-bf27-7d0dd9dbe5f2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a6cd18ae-c6dd-45b5-ac70-d92ac5425a7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f349d7de-6ff4-4835-a414-41cbaa8d5864",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3244555-f33d-443d-abdb-a3fcbbfd93da",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5270713e-0ebd-4e2e-81d9-f01c2cc10a62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "34521b76-bc39-4bc7-8da4-d55e3d217f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779a12a1-b955-4634-bc76-ddae2bb232ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "325121b5-4ffe-40ea-bd76-332771b187eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b97b02d0-edba-4a1f-9bfc-9bc9591f940c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03c51117-436d-421b-b6d9-8cd0887b75d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5541d85-2937-4d64-ab60-70caba95efc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71a23ca1-9d47-4622-b6bc-37d20928e709"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82015902-7b34-4e49-87d9-3cf7dd2e023b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f2e70f76-fc4c-4933-a3a7-6e82cdcb98fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f221edf6-6dbc-43e2-8cec-f19322963c95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "873571d5-f896-480c-8e74-4fb2ac03f196"
            }
          }
        ]
      },
      {
        "id": "8e2ac9ad-1cd2-45f9-9792-bb68787fd97a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "86703dad-1b80-426d-8990-e3330b83d860",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90ad31f8-8c6c-46cb-84d7-801e58bbb289",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eecdd7f5-77b6-4fda-a4b7-8f73942b9c9a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9885ed93-dc01-42d3-ae1e-0d60f1985f90",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "959a5d7e-7f84-4918-a6db-44e87b431128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1271473b-3d83-4aec-8d6b-688063adb7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c813e2d-5b38-4d24-b49d-88191fc60ce7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a57e5ab8-7026-47c6-bcb0-b30862407863",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "155c0c8f-dafe-4259-8653-8e257e55f963"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "897c466c-bed0-4b36-a0c0-85d9e8225d4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23cff39a-7354-4304-8b8c-2a5310533f28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36670a49-889a-4474-9e2f-1a0b2c80cf6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a93fe25d-c309-45e9-827d-f104fa28dadf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "978f867a-0cba-4c4d-87b3-fbeb516be839",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47f2ac6a-6fa3-455a-a270-c2c053b4024f"
            }
          }
        ]
      },
      {
        "id": "87033a27-893e-4bd2-acc7-6275058992da",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "189f8a2d-23cb-4325-a207-e3ef14de58cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d94a7dc-e4ee-4693-be5b-d4a7f934acca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cec61ee-a2b2-492f-abf4-e8ee830d9b8e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e0d33a-3c96-4c6c-b1dc-b21779ef1527",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08f2303a-f9aa-4e74-9a6a-b9978261bc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee15998-306a-41a0-9854-5a453ba73195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e915167b-63ba-4ab3-8244-2284aca69405"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3613785e-c751-4620-b605-77afb6e01979",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c607caa-1c38-4a20-98c3-013878d247e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f808730-eb62-4aa8-941f-3cabaff61ecb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63143b02-7017-45c1-9496-3ec71add724f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25cc1d2e-89c1-409a-8f40-e5cd0459f49b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68c5da5c-2800-44d4-8b20-2e9b7fd851e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "173f3fee-937a-4a4b-b215-b0e9157d80f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2dfe423b-b989-47f3-a8fc-81cc5f14b91d"
            }
          }
        ]
      },
      {
        "id": "e448a2c2-06eb-4cad-b8db-7633c6be971f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a4fa110-b4a2-46f5-b1c2-5203689e4877",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82297a34-e9d1-404f-a954-ed5ab1acdf23",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5bd16de6-689c-4e78-bf28-435e85ac8658",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96ff8e4a-420e-4cf4-8aa7-591f0d02c794",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e96e63c-73e8-4f60-a5d0-e76077f2b28b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 375.51190476190476,
      "responseMin": 5,
      "responseMax": 10263,
      "responseSd": 1534.6259315736431,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720399229490,
      "completed": 1720399332705
    },
    "executions": [
      {
        "id": "48d27fd4-ccdb-4483-9b7a-a89c6854c7a1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f8d03315-3c08-4b5a-98f3-1771bc63966a",
          "httpRequestId": "cb4dd165-391b-4ee8-8fc9-af8334a20a5c"
        },
        "item": {
          "id": "48d27fd4-ccdb-4483-9b7a-a89c6854c7a1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "28d40d7f-3aaf-4bba-9ff5-a00a60fc365c",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "cdcd65cf-dacb-4c2b-aa4b-7eef36debd03",
        "cursor": {
          "ref": "b25adfa3-8ccb-4f31-a134-387e459e5334",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3750c183-3f3a-47c2-a1f3-09fba7e043a8"
        },
        "item": {
          "id": "cdcd65cf-dacb-4c2b-aa4b-7eef36debd03",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a0812c2a-be13-40b9-944f-53832b40813e",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "dbd6601a-de1c-4d47-85c2-02b12464b6a9",
        "cursor": {
          "ref": "97885f66-2346-4054-b44c-c40b6879b237",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bd893172-1a18-43f4-a1c8-191918843919"
        },
        "item": {
          "id": "dbd6601a-de1c-4d47-85c2-02b12464b6a9",
          "name": "did_json"
        },
        "response": {
          "id": "f4fdc2d8-f853-485a-a073-f6335f0ed46f",
          "status": "OK",
          "code": 200,
          "responseTime": 462,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67575715-a731-4529-af19-139ee82d1e98",
        "cursor": {
          "ref": "841d7408-d285-4c0a-aa70-9d0a9d2cdcdc",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "783efe09-fe0e-49b2-8efc-41a6e1ec979b"
        },
        "item": {
          "id": "67575715-a731-4529-af19-139ee82d1e98",
          "name": "did:invalid"
        },
        "response": {
          "id": "f9756ccb-ab00-4612-916f-1ca8da69b871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2092,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67575715-a731-4529-af19-139ee82d1e98",
        "cursor": {
          "ref": "841d7408-d285-4c0a-aa70-9d0a9d2cdcdc",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "783efe09-fe0e-49b2-8efc-41a6e1ec979b"
        },
        "item": {
          "id": "67575715-a731-4529-af19-139ee82d1e98",
          "name": "did:invalid"
        },
        "response": {
          "id": "f9756ccb-ab00-4612-916f-1ca8da69b871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2092,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f105ee-cae2-4c4c-bac8-3494602bb734",
        "cursor": {
          "ref": "9ad42864-e90c-4f3c-9b12-4c1c6638f21b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7bb710f0-f54b-4533-9843-c8e606332af9"
        },
        "item": {
          "id": "67f105ee-cae2-4c4c-bac8-3494602bb734",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e4e43881-d18f-4ea9-baec-c84d850d7a05",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2646,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf581d1d-4220-4e35-b9a3-ec3d578979f3",
        "cursor": {
          "ref": "8b321b36-a8e5-471c-a032-5d7622d01562",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f7004753-f4c5-4610-98e1-3b7380577a74"
        },
        "item": {
          "id": "cf581d1d-4220-4e35-b9a3-ec3d578979f3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b5e3c07b-6cf4-4b46-aa4c-21a8035dee81",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2304,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00781384-6754-4466-b3fd-e6b6d289aaee",
        "cursor": {
          "ref": "b539f37b-f36b-4b9c-9372-64a51e905b6a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0f16233d-5be6-418c-816a-21e7aaa9b9c3"
        },
        "item": {
          "id": "00781384-6754-4466-b3fd-e6b6d289aaee",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5f990cc4-14c4-41d5-9d85-f53320503317",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c62370-f1e1-42c2-aa18-b92c74300087",
        "cursor": {
          "ref": "5dc8a0cc-8e50-4aaa-b9ee-2460981c6553",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2c11aa73-1724-4b70-b8a1-6e1ba9e1ed5b"
        },
        "item": {
          "id": "85c62370-f1e1-42c2-aa18-b92c74300087",
          "name": "identifiers"
        },
        "response": {
          "id": "a72d099d-e2cf-4a22-b7e2-0bdbd808396a",
          "status": "OK",
          "code": 200,
          "responseTime": 2543,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c39739-0c45-4ac7-8900-c91c572e7819",
        "cursor": {
          "ref": "60f2826e-5554-45e2-ba77-4d52a018becb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3441ed69-9e9a-4ede-9a8f-a9c20961d365"
        },
        "item": {
          "id": "05c39739-0c45-4ac7-8900-c91c572e7819",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0047dfe1-e44e-46fa-a995-3fbdbff28f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2698ce-8a8d-447f-aa6b-2185a7b56f7a",
        "cursor": {
          "ref": "0159f808-580e-4495-8e80-90b5e511cc7f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1fdc0bcd-9b2d-4075-ab87-5f2e87522ca3"
        },
        "item": {
          "id": "0d2698ce-8a8d-447f-aa6b-2185a7b56f7a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bf70fdac-a421-4e4a-a0f3-5b96197e86e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3592bb-9904-4c17-be7a-3f435773a87b",
        "cursor": {
          "ref": "1e2d8f76-751c-44bf-8ccd-beb839e55bd0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d58a1395-4ea4-42e7-87f1-84eefe120548"
        },
        "item": {
          "id": "ee3592bb-9904-4c17-be7a-3f435773a87b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "df04f917-07f6-4955-95a9-bfd4b05257f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992e28f7-550b-4e39-b23a-511ae9c2fb5a",
        "cursor": {
          "ref": "aeedf9b0-3823-4719-8335-da0b0d162b3b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c4567460-ed74-41ff-8fb2-853c63754611"
        },
        "item": {
          "id": "992e28f7-550b-4e39-b23a-511ae9c2fb5a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "79036bcb-dd1f-49cd-a4e9-30cf139f7145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9493e5-bae9-48d3-b628-c4e30d65c5cc",
        "cursor": {
          "ref": "cbe188ff-e524-4d66-bd7b-076d64792567",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "debbca31-cd9b-4fe0-b131-5f45601c1d5d"
        },
        "item": {
          "id": "fd9493e5-bae9-48d3-b628-c4e30d65c5cc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "75339005-ca0e-468a-89bb-930ecefc7eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9b1177-10f1-4579-8671-30ba6903c47c",
        "cursor": {
          "ref": "939f5495-03bc-4266-9ea1-9a880fc01f22",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "af53e3f3-bff5-4c9d-90f2-d5cc945a0f49"
        },
        "item": {
          "id": "cd9b1177-10f1-4579-8671-30ba6903c47c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8e4df2f8-0e07-468a-81e3-10f8a2d42f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f097632c-007d-4612-9a6c-aa70a3dfefad",
        "cursor": {
          "ref": "e5e05557-4fbb-4427-a88c-276dd3231b7f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8dd47e5a-a55a-467b-9020-55408b61c99b"
        },
        "item": {
          "id": "f097632c-007d-4612-9a6c-aa70a3dfefad",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5b397f0a-297b-4934-89de-d95e8e1a1572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22156ed3-384f-4edd-a1ee-1c927b2768fe",
        "cursor": {
          "ref": "1dea1ddc-dc9c-4e61-b88f-acffbb6152de",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2b499a1e-df1a-46cc-b7e9-1de4172b701a"
        },
        "item": {
          "id": "22156ed3-384f-4edd-a1ee-1c927b2768fe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3ca3fcc4-4f01-463b-a155-e3a701e38807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604d6b94-cd75-4e8c-9d72-d51e9744b4b4",
        "cursor": {
          "ref": "70b65672-cb65-4241-9819-7b72b51442d8",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8de2ce2f-216a-4a17-bc7a-1743d8714f9e"
        },
        "item": {
          "id": "604d6b94-cd75-4e8c-9d72-d51e9744b4b4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "68905e96-a026-4bb1-a2d5-e10c08f5311e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3921988b-e2ba-4026-9186-ec93fcc2886b",
        "cursor": {
          "ref": "e225fa3c-78db-4515-b51f-cae33bcffd3f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "66906c49-0b03-4d0b-a92f-fc0f989ae730"
        },
        "item": {
          "id": "3921988b-e2ba-4026-9186-ec93fcc2886b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "354ecdf7-7198-4d74-ac52-48904ba3f754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ef9df1-8edf-45a2-96be-428b9d3328b9",
        "cursor": {
          "ref": "12f9a935-7ab8-49a1-85c3-6624b3a607b2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "668b1673-c2f3-4b47-b903-3b98fdda547a"
        },
        "item": {
          "id": "b4ef9df1-8edf-45a2-96be-428b9d3328b9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7f62904b-e772-43f8-95b7-046cd6f36505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fb3073-7611-4486-97f3-3e3e6786390e",
        "cursor": {
          "ref": "e6f39dec-ab05-4a36-803a-9ed263bd4f8a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "91805304-ee5a-4ef5-ad88-abfd7050b025"
        },
        "item": {
          "id": "94fb3073-7611-4486-97f3-3e3e6786390e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "651df9f3-0507-48b7-9904-134ace312789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c977ffd-010d-40ba-900a-ce0375a0b64f",
        "cursor": {
          "ref": "154e4d7c-dfc8-42eb-9bfc-fea8d1cd870b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5dfe4d1b-e817-4ca6-86ac-be564caa7d63"
        },
        "item": {
          "id": "3c977ffd-010d-40ba-900a-ce0375a0b64f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0a0b11fb-7e50-479f-bd58-86230e9674f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a69104e-3889-41a2-b90e-067dd01f13e9",
        "cursor": {
          "ref": "0aeb86ec-6389-4455-af9b-5f765f6cd5c9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9f49b5fc-7c46-48b5-ab88-6b52aade5298"
        },
        "item": {
          "id": "2a69104e-3889-41a2-b90e-067dd01f13e9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a3c2decf-f535-4ce9-b0c9-dc48a288d2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ea6386-81a1-4eb6-97bd-cdabfeb3ad64",
        "cursor": {
          "ref": "dcc3ac38-404c-435a-9bda-6ba5126afa33",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ad64dd55-d4f5-4578-b10a-4cf3e452cc65"
        },
        "item": {
          "id": "55ea6386-81a1-4eb6-97bd-cdabfeb3ad64",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "686593aa-a49c-4445-8c5b-07460c18fdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a82602-c37a-478f-bf4d-7e1a5f4b9338",
        "cursor": {
          "ref": "4ff3c7a3-1838-4648-b39c-91c635252c59",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "038d605c-a0da-4844-9ad0-c7bb50c4d576"
        },
        "item": {
          "id": "97a82602-c37a-478f-bf4d-7e1a5f4b9338",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c06cc735-c6e9-4b14-809b-3e93564b5f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620efbde-5c0f-4870-b53d-bbadfabe1921",
        "cursor": {
          "ref": "a89b97bf-e270-4ac0-bf86-15b3947db634",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "76709371-7d95-49fd-bff2-19c8deafbc5f"
        },
        "item": {
          "id": "620efbde-5c0f-4870-b53d-bbadfabe1921",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "37d8096a-9f72-4a03-9424-5061f92e6495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43fb962-20e0-484b-93a7-0bf3815e916a",
        "cursor": {
          "ref": "2eb3b939-b6d5-40cb-a3ae-e92f6463814c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6ea06bd0-af56-4b22-bd9e-1145978cf370"
        },
        "item": {
          "id": "b43fb962-20e0-484b-93a7-0bf3815e916a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b616df77-f5b4-4365-93cb-0a5a07641143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9e52c8-f497-4e1e-b709-fe720f42599f",
        "cursor": {
          "ref": "960138a9-6309-4cf3-bdfc-e500969abb17",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "87d965fa-3fe2-438b-822d-60d69bd0d13f"
        },
        "item": {
          "id": "df9e52c8-f497-4e1e-b709-fe720f42599f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e2a6309a-a947-496b-97be-551f5f3fe241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c073cd-0e32-4df3-88d7-aad7e7b5660f",
        "cursor": {
          "ref": "5a488ad7-4269-4751-8265-a690e74c213d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a0e2f6d5-3c87-46d5-a101-a8cca5f1c655"
        },
        "item": {
          "id": "13c073cd-0e32-4df3-88d7-aad7e7b5660f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "440af63a-c2df-4d11-83e2-ecc5b7e24cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918f900e-2473-41a8-ba2f-bda34e9d894e",
        "cursor": {
          "ref": "58e14bbf-54a8-46b7-8422-dde4b22d3fac",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f3bd1078-6c7e-4ead-b43c-a3416fef1e0d"
        },
        "item": {
          "id": "918f900e-2473-41a8-ba2f-bda34e9d894e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "aac505ed-69c1-4eb8-831f-b052b6a40444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab8925d-ba6e-4424-878f-8d5464470163",
        "cursor": {
          "ref": "a97bd84f-040d-4b7c-9126-f7e2e9c3a342",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a928dec7-6de9-48f8-873f-90752e8ddaca"
        },
        "item": {
          "id": "6ab8925d-ba6e-4424-878f-8d5464470163",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f72c654c-b2f0-4c7a-af2e-42edf48c5be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ba1379-7259-40b0-8f3c-0f8113383122",
        "cursor": {
          "ref": "2723e742-5176-462d-9a01-12c55e21ed50",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b5826c88-bf8b-48f8-b5c6-cc752b0de8cb"
        },
        "item": {
          "id": "e7ba1379-7259-40b0-8f3c-0f8113383122",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f287f172-9f73-4816-9652-d0b58e6924cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95fa0fd-f6af-4527-8dcf-84caec36578e",
        "cursor": {
          "ref": "8027267c-cee8-4b6d-9bb5-dbaa67d5d62e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2810c2ed-0ab8-4fcd-9a06-25e8561b5f94"
        },
        "item": {
          "id": "b95fa0fd-f6af-4527-8dcf-84caec36578e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3614debb-c172-45c9-9355-3dec1cba4f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3136c6d-4bea-4247-82cd-d3bb07e87575",
        "cursor": {
          "ref": "3e6bea5e-97ae-4301-8ba5-8030b95a706c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3db35c82-f288-4ca5-a155-3fe30a465fbf"
        },
        "item": {
          "id": "a3136c6d-4bea-4247-82cd-d3bb07e87575",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "24dafbf5-2ec7-47a0-94d6-0f0c24df57f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa642df2-1c55-4755-a4fc-55aefe85b153",
        "cursor": {
          "ref": "25df4fee-80ed-44a7-8d1d-f6b82b3d4ac8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9a645f8a-d0e7-4d25-8f3f-76e53dab84c3"
        },
        "item": {
          "id": "fa642df2-1c55-4755-a4fc-55aefe85b153",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "131b6e97-1adb-4332-994c-146b607d2364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b3a085-cef0-43e1-9502-1afa5932b50f",
        "cursor": {
          "ref": "ed3384d7-0364-4936-b09d-0bae08c77132",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9afa297b-cd90-4c30-9eee-00b7f15b43be"
        },
        "item": {
          "id": "b4b3a085-cef0-43e1-9502-1afa5932b50f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "448d391a-ad93-4fc3-ac67-6858b3902a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4e4eb8-22bf-43d2-93a3-750df92e7e5d",
        "cursor": {
          "ref": "cd96d9d3-2186-4d03-b766-ddc39ddf11af",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cb1bfd2e-6588-44f5-b026-2cb4bc62a1ba"
        },
        "item": {
          "id": "da4e4eb8-22bf-43d2-93a3-750df92e7e5d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ac56a2c9-f0c8-4e1f-a2d1-17324af40528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db525b3-86c7-4859-866e-8296a4ed9190",
        "cursor": {
          "ref": "a088a98b-b222-4e5a-a6cb-183f479a5e7e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5d28b7e5-a110-4934-bce5-c50c1e421825"
        },
        "item": {
          "id": "3db525b3-86c7-4859-866e-8296a4ed9190",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d17eedd1-c4b2-4ace-9958-f1a5695f9ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751d461c-b661-4b4a-9993-9e2d9a8e029f",
        "cursor": {
          "ref": "098dcca0-4f55-482b-a5a1-e1df476a8176",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ef4f1def-39f0-4aa9-90e8-8e81c98f2e5d"
        },
        "item": {
          "id": "751d461c-b661-4b4a-9993-9e2d9a8e029f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c13b01e6-5dac-4570-a5e9-83969172a23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a18eed-d7e0-4d6e-9403-6f33fa199618",
        "cursor": {
          "ref": "18b9291c-9d76-48f0-970c-54c6b5766745",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3bd42dca-5b3b-42b2-a8f3-6e560e98343d"
        },
        "item": {
          "id": "d8a18eed-d7e0-4d6e-9403-6f33fa199618",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0d22ba66-5e12-49b2-a0fa-a36874493157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e99303-eafe-45af-9cef-f2a980e758c5",
        "cursor": {
          "ref": "42bf98db-2ced-44d6-9df6-42b547d21c89",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "948b47cc-0e29-4d23-b21d-e3a271193e40"
        },
        "item": {
          "id": "51e99303-eafe-45af-9cef-f2a980e758c5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2e5c463a-e155-4e2b-954e-5f97fa94a98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d95488-e6dd-4eab-a66d-a7273def4737",
        "cursor": {
          "ref": "14a50cf5-c03a-4f56-a9ea-bf15f7a6be2a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5ac55c07-efcf-485a-945b-812efe0237ae"
        },
        "item": {
          "id": "e2d95488-e6dd-4eab-a66d-a7273def4737",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3cfa0ffe-8442-481b-9b04-5de3ad787741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07c16f8-e62c-4330-aa41-bbae9981d55c",
        "cursor": {
          "ref": "d6a14fe4-dc94-4528-b729-cda75455cfbb",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e6837b2d-bbc2-466e-9fcc-7c50899f7121"
        },
        "item": {
          "id": "c07c16f8-e62c-4330-aa41-bbae9981d55c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a87d3221-3d01-414d-af3f-4c0275f00e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c7c86d-3224-455e-aa08-a2ce71b7096e",
        "cursor": {
          "ref": "79ca473d-ed21-4778-bea8-ce07c54012bc",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2cad6522-6b49-4f8f-84bf-13a9e55faa2d"
        },
        "item": {
          "id": "51c7c86d-3224-455e-aa08-a2ce71b7096e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "480f45f6-6fae-491b-9a80-d779c0dff02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8a0759-264e-4f83-9bc3-6437f2d20d39",
        "cursor": {
          "ref": "35746e5e-4937-4492-9241-a0dd206048d4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d7aed505-75fc-49d9-8a25-d5c66185a824"
        },
        "item": {
          "id": "ec8a0759-264e-4f83-9bc3-6437f2d20d39",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0c88cb0b-72f7-499a-a212-87d6b4ef705d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80400d2-5dd0-460d-a628-86319b82df3e",
        "cursor": {
          "ref": "5a16e2b2-5e27-4e4b-bd4d-147c623166ce",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "43880363-ed72-4e11-a774-4be9ccf5a5a4"
        },
        "item": {
          "id": "c80400d2-5dd0-460d-a628-86319b82df3e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "43392872-e8d9-44f7-91a5-9e26dca9380a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63087c55-aa4a-4c77-82b7-b8d7bf0f42a4",
        "cursor": {
          "ref": "524cace4-7382-4934-bd6f-629444ee0f85",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c20a5184-79b6-4178-807d-9a38d0ee25b6"
        },
        "item": {
          "id": "63087c55-aa4a-4c77-82b7-b8d7bf0f42a4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "933f0b65-d3ac-4c68-ada1-620522490dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e329780-7b21-4bba-b1e3-3717292e3ad1",
        "cursor": {
          "ref": "a9e4d8fd-0aa2-4471-8dd8-18b42e083248",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7a068a25-a58b-4f64-9788-662db484ddb3"
        },
        "item": {
          "id": "4e329780-7b21-4bba-b1e3-3717292e3ad1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bff6ca5e-7389-4dd7-80e7-4fe3835a2da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7fc50e-a537-4efa-8d61-a1ed87523782",
        "cursor": {
          "ref": "b478e931-53d0-4e13-80a1-f33785539110",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1df1e9d5-7d56-42fc-92d4-94b589f6fefa"
        },
        "item": {
          "id": "4d7fc50e-a537-4efa-8d61-a1ed87523782",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "91b599d5-f4c0-4e34-9820-5a57e9cb500f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bac97a-a371-4f16-b41e-fdfa451a4cd7",
        "cursor": {
          "ref": "3cfba3b8-2310-49ff-ad76-584e893385bc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5fa7a702-9cb9-4043-b1f0-1d0e4b5bf1b3"
        },
        "item": {
          "id": "83bac97a-a371-4f16-b41e-fdfa451a4cd7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dad5b7d2-f127-4a72-8758-355a423c68ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22273240-08df-4988-9666-cd2a2c880e60",
        "cursor": {
          "ref": "b12dd00d-393e-416e-8eee-a9815a7e90ad",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bc6ddb9d-02b7-434d-b557-640fb2556266"
        },
        "item": {
          "id": "22273240-08df-4988-9666-cd2a2c880e60",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3b5ff82d-d6a2-4ef6-81d4-32147a0f9e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f726aee5-cc9e-4810-9f94-95a331a3c04d",
        "cursor": {
          "ref": "b138f684-de3b-45b0-bbcd-546fd682602a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a342aae8-63e3-4b44-b42a-a97331da9b00"
        },
        "item": {
          "id": "f726aee5-cc9e-4810-9f94-95a331a3c04d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "41c81fb7-9101-431b-b94b-b20e624047be",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd516cc7-9077-4559-9371-5ecad5c9a41f",
        "cursor": {
          "ref": "11167ffa-d2db-4596-96b4-b5444b42ec00",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5121af97-ca57-4788-8b62-c38f2702c18b"
        },
        "item": {
          "id": "dd516cc7-9077-4559-9371-5ecad5c9a41f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6110af0d-41f8-481a-80b3-651d5ac13930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f84e0d-348a-4025-aa75-6dc296cd0eb9",
        "cursor": {
          "ref": "4c8f0939-fbd7-45b9-bd77-fabf29ca2749",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7390ad9a-0a4a-4219-8f32-a9b8ca1d7cb9"
        },
        "item": {
          "id": "98f84e0d-348a-4025-aa75-6dc296cd0eb9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5b65702f-adf1-4ef0-93d3-fb8476f1ec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e72c26b-47b7-4304-9a27-a8bae5bd729e",
        "cursor": {
          "ref": "e5eb6f6c-9ee8-48d6-8d7f-f6346539fab4",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c98b952a-2009-4c1d-8de5-0c015209b798"
        },
        "item": {
          "id": "1e72c26b-47b7-4304-9a27-a8bae5bd729e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7c3350b2-9697-4db7-b0cd-a85f2cdbb7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a589d8-d163-46f4-9b6e-cc8e3b83a5d7",
        "cursor": {
          "ref": "a80ca8b3-47c4-4b11-b819-3622cee348f0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a751a454-9bb7-43e9-a31b-8458ca847c2a"
        },
        "item": {
          "id": "42a589d8-d163-46f4-9b6e-cc8e3b83a5d7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "28731553-6561-44e2-811a-b54d3366dcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec01629-f087-4b83-a5f9-68b5e82bdb11",
        "cursor": {
          "ref": "652f433f-208d-4687-9494-e9ff9e514cc5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6cf496ea-d0c5-4e61-86be-cefb65f67f98"
        },
        "item": {
          "id": "3ec01629-f087-4b83-a5f9-68b5e82bdb11",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5ab46d72-dd6b-4aa2-bffe-8099411184a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b1f180-4839-4bea-94ff-422e8ded8ae1",
        "cursor": {
          "ref": "fe6bfec7-f6b4-41d5-baa0-4bc5a485edf0",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cf9b6cce-d4cd-4c75-9762-18b9046f993b"
        },
        "item": {
          "id": "e2b1f180-4839-4bea-94ff-422e8ded8ae1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "743df2c9-3c4d-4900-b017-78b653c0e17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29901bb8-c329-4afd-a7f7-25d23d22a18d",
        "cursor": {
          "ref": "b93e7194-d6df-4804-b43d-0002ee9e775f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2a55ec5d-be91-4971-ba73-96a9463043a7"
        },
        "item": {
          "id": "29901bb8-c329-4afd-a7f7-25d23d22a18d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5815b361-68a9-4cf3-ae66-440df86d3a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ea896d-9d3e-43fe-9265-503c352e1277",
        "cursor": {
          "ref": "33fed9ea-182d-48d0-a321-677097102a4d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "acccef9e-5327-4dc4-ae2a-d10d8a20a71f"
        },
        "item": {
          "id": "80ea896d-9d3e-43fe-9265-503c352e1277",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bd6f4fc3-657c-439c-84ba-fe1b782dfc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe8e28e-5ff5-4538-ad66-5c9bf1017b28",
        "cursor": {
          "ref": "2dadab15-eef5-48cd-8abc-8138975166a7",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "98e21ad8-fb23-484a-809a-3e3d305a8001"
        },
        "item": {
          "id": "9fe8e28e-5ff5-4538-ad66-5c9bf1017b28",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4987d86a-d02f-40ee-a499-b34d60c1c2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126d95c1-0394-4c92-bd5e-c993987b35cc",
        "cursor": {
          "ref": "b2b0cc44-6411-4589-8e38-c17e88432ed0",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7867868e-1a98-478b-bc16-968c176412e6"
        },
        "item": {
          "id": "126d95c1-0394-4c92-bd5e-c993987b35cc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c0440382-b5c2-47a2-a48b-c0bddae3da12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf2bac4-6fca-4257-ad38-481589170cb5",
        "cursor": {
          "ref": "06f5c60d-a0f0-4ab6-b77a-bd36e38436d8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0485af4c-b804-4a68-9eb8-4fa6d93de3c0"
        },
        "item": {
          "id": "8bf2bac4-6fca-4257-ad38-481589170cb5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d667920b-3135-4b93-b07d-eaab6aede867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8f51d5-1afc-4bb9-b733-28a60a8679f1",
        "cursor": {
          "ref": "547da52a-d0ad-4e80-a081-4d7b42c78b61",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6ef130b8-e1df-4959-91bc-4290241a7298"
        },
        "item": {
          "id": "da8f51d5-1afc-4bb9-b733-28a60a8679f1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e69d392b-681a-4bae-a3b5-1d398235a815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68991c0-7692-4b17-bbca-ad39ae981a25",
        "cursor": {
          "ref": "9650767e-5993-4d28-8fb0-d76058d7dc2a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2226fc86-3fb2-4376-8d25-f82d1d08a312"
        },
        "item": {
          "id": "d68991c0-7692-4b17-bbca-ad39ae981a25",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4a6d18c6-ed61-46fa-88b2-d936b3c36f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4294167-9581-4365-86a8-82a9ed7b2235",
        "cursor": {
          "ref": "bb8c7588-aade-4091-abff-ce79f69e45bf",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "beab9391-b6ba-4232-8480-628b53edf54b"
        },
        "item": {
          "id": "e4294167-9581-4365-86a8-82a9ed7b2235",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "606ff718-ef8d-451a-9f09-5cb253e83801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b496bf95-5326-4968-8808-7b77ed9995f2",
        "cursor": {
          "ref": "b7a32d7e-4be7-42b9-9a2d-c852cce71d38",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "16e2e364-8f29-4e24-9ecd-3a2569f09686"
        },
        "item": {
          "id": "b496bf95-5326-4968-8808-7b77ed9995f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9aaf8bec-5c81-4da3-9f18-95faa8c96c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c2d58e-5d4c-47b7-967b-c39db4fc208d",
        "cursor": {
          "ref": "25ff7973-9dba-4d37-966e-22b8f52e761d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7ef769de-9cca-446e-b6c5-d37336bb93e0"
        },
        "item": {
          "id": "05c2d58e-5d4c-47b7-967b-c39db4fc208d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a2e3c99f-720f-4a16-8be7-13cdc1043d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b037150-db51-4796-b929-8ee8f2fe4b4b",
        "cursor": {
          "ref": "be4f8549-dd71-4b04-a5ff-f702322596d6",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "42f5381f-30e9-4904-a2c2-c8f1eda62b02"
        },
        "item": {
          "id": "2b037150-db51-4796-b929-8ee8f2fe4b4b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "41877dfb-9955-4e94-b4aa-682780e4db7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd70514b-65fe-486c-b0ae-d402eb6ad3c5",
        "cursor": {
          "ref": "e8296122-e23b-46f4-a12e-71fa0af2c02c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ae5363f7-a88d-4f2c-9cb4-5c595923aae8"
        },
        "item": {
          "id": "bd70514b-65fe-486c-b0ae-d402eb6ad3c5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "30399c96-dca1-4c1c-bf79-3ca989192252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07617b07-158f-4037-bcd5-cbe6f58c7b85",
        "cursor": {
          "ref": "3dbb630b-da7c-451b-a839-f7b52a07ff61",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1e787250-611d-41d8-9521-62e9d4acb1b5"
        },
        "item": {
          "id": "07617b07-158f-4037-bcd5-cbe6f58c7b85",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b8eb0b4e-5028-4c6e-813d-6f49749e41d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f03eb3-c715-4de1-91dd-e911a29dc998",
        "cursor": {
          "ref": "979819cb-edd5-4a3b-99fe-e746f77f8a92",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "678de01f-13a9-486a-8058-891be37514d1"
        },
        "item": {
          "id": "01f03eb3-c715-4de1-91dd-e911a29dc998",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0251d8eb-9ad5-4b13-95ca-9e106beb78a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e62e5a-79e2-4783-8a77-421c28057667",
        "cursor": {
          "ref": "a2b69618-b45e-44db-b99d-78865e7d5a30",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "90aeb97c-02dd-4432-a961-bf4e4228d031"
        },
        "item": {
          "id": "59e62e5a-79e2-4783-8a77-421c28057667",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6922507c-20f6-4571-9bec-1f99d4bdbe44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d4e663-110b-42e0-b18a-97d835c7670b",
        "cursor": {
          "ref": "11f399e3-b2c5-42d1-b9ea-c50bdef3c3f9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "863a9564-74e5-460e-93b9-7622d1a6eba3"
        },
        "item": {
          "id": "43d4e663-110b-42e0-b18a-97d835c7670b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fea05ca4-4f19-4133-9c5d-ff89a5d456c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e158ab74-3281-4d4f-b546-38e21577d2ba",
        "cursor": {
          "ref": "0fe7f552-0cf1-4e10-8fc5-f40f5eb84160",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6f4429ad-ffc2-445f-bb9b-4c543a619bb0"
        },
        "item": {
          "id": "e158ab74-3281-4d4f-b546-38e21577d2ba",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "20763066-ce1d-4186-88ad-8621fd514d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570bf4f2-e1f5-4ee8-aaaa-19dc3a8d770a",
        "cursor": {
          "ref": "fc00b055-9218-4cd0-ab77-ff567a5e386e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e6022fab-05ca-4b71-9d71-9cf925edefa7"
        },
        "item": {
          "id": "570bf4f2-e1f5-4ee8-aaaa-19dc3a8d770a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "29cdad79-d4b5-4417-ba91-61cfe1720e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dbba73-21a2-4ef1-969c-22cfe9efa13e",
        "cursor": {
          "ref": "9cb8a142-0559-4f8a-8b7d-5e040aa95f65",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c14807f6-18d0-4a26-96d8-050fb071158e"
        },
        "item": {
          "id": "20dbba73-21a2-4ef1-969c-22cfe9efa13e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "15b521a8-bf20-46e2-81af-19db3978787d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2215599e-e317-4602-9e61-d5e90f22b1c9",
        "cursor": {
          "ref": "50dc7589-62d3-4d0f-840a-e5b7664958ab",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9d7c8885-0a1a-4d26-b7f9-e1647ee8d3c5"
        },
        "item": {
          "id": "2215599e-e317-4602-9e61-d5e90f22b1c9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5fd865cd-f0b3-4e49-b873-24d8223a52d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288684d8-6aab-4d82-94a7-cae779cb07f2",
        "cursor": {
          "ref": "95b74f2c-0f76-4ad1-a56b-06f2218425e2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "19d4653a-e8c4-4790-b71a-f334e3f0cd68"
        },
        "item": {
          "id": "288684d8-6aab-4d82-94a7-cae779cb07f2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "08af0eae-67ab-4b56-980c-b8cc429db9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee205b33-b0fd-46c6-82e7-56d1b60d833d",
        "cursor": {
          "ref": "6cef6ef1-d5d3-42e0-b733-c1bcb86e4814",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7e888eea-c2a0-4853-802f-3b98a39a9afd"
        },
        "item": {
          "id": "ee205b33-b0fd-46c6-82e7-56d1b60d833d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a053339e-ea72-40b2-b65a-d26df6d85c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523e5b38-4bbb-42ed-bd90-46f494fd2a1e",
        "cursor": {
          "ref": "55d5a5ca-a1b2-4d0a-a118-d351d15e83d9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a9a6493e-1e91-4d60-a704-1fb7f03e69be"
        },
        "item": {
          "id": "523e5b38-4bbb-42ed-bd90-46f494fd2a1e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c6de22d5-c367-40f5-8085-755af0766822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daacb728-bae2-4bc9-96e2-44861983eb89",
        "cursor": {
          "ref": "2da84333-b5fc-45c1-a4e0-a7e1c0d5a790",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1965261b-aac3-48d7-acdb-cd9cd8d973ae"
        },
        "item": {
          "id": "daacb728-bae2-4bc9-96e2-44861983eb89",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4a531cf4-32c7-47e9-8d68-d86f0817beaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac428bd2-8622-443e-9b6f-f9609f1d0b9b",
        "cursor": {
          "ref": "c13ce06c-f62d-43a1-b8c9-b1e03c82f712",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8c2d435f-4725-4cb6-a67e-92cb8d6639cf"
        },
        "item": {
          "id": "ac428bd2-8622-443e-9b6f-f9609f1d0b9b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6575121b-38b9-469f-a689-beee125f7cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676b2541-cf93-4f8c-86e9-0508abfb0a33",
        "cursor": {
          "ref": "d756836a-61a4-4564-8289-c1fb4ef72ae2",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6c8fba14-b55f-4fba-a948-15aeac37253d"
        },
        "item": {
          "id": "676b2541-cf93-4f8c-86e9-0508abfb0a33",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "29f88682-06c5-4e7e-afb7-6f6140a8f5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57362a3-9a4b-4e3e-9e83-b39723cf16dc",
        "cursor": {
          "ref": "2fa1baa3-f935-445b-a45e-d3eb0cedfa2d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7b04c423-dbe8-400b-a039-923a97a613e7"
        },
        "item": {
          "id": "b57362a3-9a4b-4e3e-9e83-b39723cf16dc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b7e161fa-af4a-48c5-8afb-13fa90638c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4e613d-afca-45a2-b440-5aa6fab273ba",
        "cursor": {
          "ref": "42e33085-c3aa-4415-9959-a1d8ff2671c9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "18378526-6b64-4374-9b25-37b90b8bf293"
        },
        "item": {
          "id": "2b4e613d-afca-45a2-b440-5aa6fab273ba",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "535e4674-4947-49b8-be65-5d7f6551433b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36d67ec-95d1-4101-9eb9-a37df9962be7",
        "cursor": {
          "ref": "b70dcc38-658c-48b9-85ac-dabf73920832",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "83a7c49f-0869-41e8-9bca-5f39916edf91"
        },
        "item": {
          "id": "f36d67ec-95d1-4101-9eb9-a37df9962be7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bc354956-98a8-4559-aea3-b5cd279cda9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba99670-4b7b-420b-ba75-ac8d9340cc69",
        "cursor": {
          "ref": "de9f1fac-03c9-4efa-a080-da0969568f68",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b54eeccc-27e2-40f2-9b71-302bfb5aeeed"
        },
        "item": {
          "id": "cba99670-4b7b-420b-ba75-ac8d9340cc69",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "30d557d7-0774-4106-af9f-6d9201fbd9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec8a10e-412e-44c6-be13-166cab031b55",
        "cursor": {
          "ref": "41fc2110-60c4-4b0e-83cb-ecae4084c40d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "466f7833-ed2d-4344-a989-9c6ffdce6f57"
        },
        "item": {
          "id": "9ec8a10e-412e-44c6-be13-166cab031b55",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2d33be15-cac1-4b67-85df-1791330eedd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c9e9fe-b082-4882-8ab5-d2c5bf165a8a",
        "cursor": {
          "ref": "bfe2bc9f-975e-424d-b8fb-9e1ebc3e2bfa",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "34b5e55c-98e4-45b0-89bf-158e26299e7c"
        },
        "item": {
          "id": "a7c9e9fe-b082-4882-8ab5-d2c5bf165a8a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f6a072f9-5ed2-45cd-9991-50902f3ea977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ad9ed3-e1c5-4d4b-943e-f1943206bfc0",
        "cursor": {
          "ref": "a7bce1f7-c134-4dc4-a375-6f1a862dc8ff",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "70d671f8-a861-41d1-92e7-1adf8ef341f4"
        },
        "item": {
          "id": "67ad9ed3-e1c5-4d4b-943e-f1943206bfc0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b1b054e4-68d0-4acc-9990-9a3aa9fc7a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48e7586-9e1e-40b7-8c46-7cefe0c1d12f",
        "cursor": {
          "ref": "66b0562c-8e4b-44e4-a51d-7d5170b67267",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "08f09eb3-d219-4a53-847a-72c61779442d"
        },
        "item": {
          "id": "d48e7586-9e1e-40b7-8c46-7cefe0c1d12f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "431efdfd-de30-4129-9727-18778f18c196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c593b0c-da57-4967-ba0f-0c511bcbd861",
        "cursor": {
          "ref": "d3329dfa-88e5-464b-8a5e-c7c8459201f0",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "caa633ea-6ec5-4388-a789-1eb9558c0886"
        },
        "item": {
          "id": "1c593b0c-da57-4967-ba0f-0c511bcbd861",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f43a1009-46e6-493f-b6a2-877da56200e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbfdf40-0444-420b-b632-0c2a4da0bf4b",
        "cursor": {
          "ref": "658d443d-5a47-4423-9ddc-93a68c090a0c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2b5d5fdb-21f6-405e-b83b-9c5ca37bc3a2"
        },
        "item": {
          "id": "0bbfdf40-0444-420b-b632-0c2a4da0bf4b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8a852d4b-b21e-4599-b53d-14a35a915eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf615992-b19a-439c-b06b-47fb74c1b710",
        "cursor": {
          "ref": "eeb0b3a6-25a7-4b8b-890a-52a7cf36031a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d566e33f-9d0a-4f8c-966f-d9dc4f29e773"
        },
        "item": {
          "id": "bf615992-b19a-439c-b06b-47fb74c1b710",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "86a6f9ec-3d99-4717-a064-873268428907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7ca6c5-8eb0-40d5-aa8b-8cb54a415b1d",
        "cursor": {
          "ref": "d13a1212-6090-4403-a88f-883f21d193f0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e49dc800-1ea8-44ac-b245-d2ac230821c3"
        },
        "item": {
          "id": "4e7ca6c5-8eb0-40d5-aa8b-8cb54a415b1d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dee8d9ae-a457-497f-b139-815db7bae021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6a11b2-828c-4e05-88cf-3b9e2d0ca406",
        "cursor": {
          "ref": "a901814d-db64-417b-a69c-9576f0298ae9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "82365c06-65b3-46a1-8047-46c0c1000b15"
        },
        "item": {
          "id": "0c6a11b2-828c-4e05-88cf-3b9e2d0ca406",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "57493892-2007-4c5e-af63-822fbcc9e8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb316f8-3b38-4823-8da3-7fc3e882ebd7",
        "cursor": {
          "ref": "6fdde6c7-591d-4ada-a6c6-de380c30c4cc",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ba1a9f39-95af-4db2-a73a-a185d56ccd2a"
        },
        "item": {
          "id": "7eb316f8-3b38-4823-8da3-7fc3e882ebd7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a0451be9-1b45-4e25-995e-af321613b4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06780772-cc1e-4e61-86a0-c8a82b3cf505",
        "cursor": {
          "ref": "6770bf46-2349-40b9-b8f2-4c22af38d5b2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "32d7daf8-5033-4e14-9fea-6384fa85953c"
        },
        "item": {
          "id": "06780772-cc1e-4e61-86a0-c8a82b3cf505",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "20d2252a-b1a2-45fc-a84a-aa3f4a1d1b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebbd567-8cc0-4072-9e00-bddb40b5c784",
        "cursor": {
          "ref": "23dc0ef8-b612-412f-bb38-9f1c556bff9f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e617e27f-1711-47a4-926c-79e2fc539441"
        },
        "item": {
          "id": "0ebbd567-8cc0-4072-9e00-bddb40b5c784",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98ad9c63-a56d-4641-9523-d5a65044298f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2e57ac-a93f-4a99-adc0-99dc8fd387d6",
        "cursor": {
          "ref": "c9cc91a1-409e-4f4c-869d-8090c74c2a31",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c26905d8-4b38-4067-8cc5-f112aa191f24"
        },
        "item": {
          "id": "2a2e57ac-a93f-4a99-adc0-99dc8fd387d6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4afbe270-7a6e-4286-921a-1e0eefa3430f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b18306b-934c-432a-945f-91e1fb1ec02b",
        "cursor": {
          "ref": "a0eaca24-91fb-4bc6-9bd1-baa58ab17769",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9667186c-b4c6-4e8b-a355-d6d8b5021c56"
        },
        "item": {
          "id": "5b18306b-934c-432a-945f-91e1fb1ec02b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "89774e11-a94d-430b-92a4-6f5bed012606",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d7a932-7590-4af6-a887-0e9803829c05",
        "cursor": {
          "ref": "fb90582c-fb12-4661-a5a0-69e6ed339c89",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c7638610-5130-42d1-a42c-09406705d3f5"
        },
        "item": {
          "id": "27d7a932-7590-4af6-a887-0e9803829c05",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "73d92d13-ada0-40df-a89c-098bb0f45130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b3505bbf-34fa-4e1d-a64e-eeddfdb84352",
        "cursor": {
          "ref": "259f7a81-07a8-42bf-ba87-827bfbc2978a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "85ab1bb3-06cf-4a20-964e-e2e7b7812d26"
        },
        "item": {
          "id": "b3505bbf-34fa-4e1d-a64e-eeddfdb84352",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5547081b-62f0-4d4b-af60-dbb209fec91c",
          "status": "Created",
          "code": 201,
          "responseTime": 10263,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf64c7e4-bea9-4104-b64d-d850cb55aad4",
        "cursor": {
          "ref": "9429082a-4b59-4794-a9a2-a0dcace2c391",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f29d31c9-b2ea-474f-a91b-fb4ce93acb31"
        },
        "item": {
          "id": "cf64c7e4-bea9-4104-b64d-d850cb55aad4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "84de3d51-7874-4169-ae08-49496900b925",
          "status": "Created",
          "code": 201,
          "responseTime": 9731,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4954890-bd49-4474-b6f3-02d436bac8a8",
        "cursor": {
          "ref": "4dab273d-e816-4948-a4e8-28b157d49f8b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "acccbaef-097d-4f59-8cbb-7dabed623a07"
        },
        "item": {
          "id": "e4954890-bd49-4474-b6f3-02d436bac8a8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "52b48096-6d9a-4591-8963-ce0aaad5cc94",
          "status": "Created",
          "code": 201,
          "responseTime": 9833,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "584e5045-cabf-440a-ba00-2386667dac71",
        "cursor": {
          "ref": "ee557dd0-554e-415a-98c0-3091a9f7d2af",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "01d079eb-5606-4504-b4dc-ccd53165d0de"
        },
        "item": {
          "id": "584e5045-cabf-440a-ba00-2386667dac71",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e726866f-ec30-496d-b5e9-7663d52f0ee4",
          "status": "Created",
          "code": 201,
          "responseTime": 9957,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4bc20c-c1cb-4974-b4f7-dda130b05066",
        "cursor": {
          "ref": "3f7525d3-a253-4ef1-8281-a46fbbafa67d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8a078059-2893-4cde-8e5e-77c5f61a25e6"
        },
        "item": {
          "id": "af4bc20c-c1cb-4974-b4f7-dda130b05066",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dad8c77d-007b-4b6d-a284-b717a050f766",
          "status": "Created",
          "code": 201,
          "responseTime": 9641,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-07-08T00:41:39Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-07-08T00:41:39Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "12af5e12-826d-4eb8-a5ea-21fc1a84de90",
        "cursor": {
          "ref": "d1ce71b1-c8bf-410c-86a9-07459f22ee12",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2c98ff86-c56e-4584-be75-fec383eddbd8"
        },
        "item": {
          "id": "12af5e12-826d-4eb8-a5ea-21fc1a84de90",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f45a7123-7cfb-47e7-9e1f-18907c688528",
          "status": "Created",
          "code": 201,
          "responseTime": 9736,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bddf5f8-7eee-4f25-b926-125ab59f980e",
        "cursor": {
          "ref": "549d14c7-c966-4d33-b452-234813467901",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d55966ff-f20d-4356-8ff1-0c055a6fd2ae"
        },
        "item": {
          "id": "1bddf5f8-7eee-4f25-b926-125ab59f980e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e78b1fb-7f80-484d-b0cd-00fada949bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236b5b97-6ff2-42ce-9fb9-f694b4fa22a4",
        "cursor": {
          "ref": "d8667bf1-d93e-458c-848a-1b7172985832",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "02c38572-4333-4afb-9451-6de3e22ba238"
        },
        "item": {
          "id": "236b5b97-6ff2-42ce-9fb9-f694b4fa22a4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f37e7cca-2d79-497e-b1df-3c1d6b60a0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76290cf2-b7ac-4913-b652-28c1fb07df74",
        "cursor": {
          "ref": "505dc56c-d14f-4983-8bef-a74d645ca73e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5fb020e5-c63b-4247-beab-a1de6f83fe10"
        },
        "item": {
          "id": "76290cf2-b7ac-4913-b652-28c1fb07df74",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "75c508af-0f53-4310-952f-1967c9b0b066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9dcd45-1f16-40c8-84a8-50133d810c5b",
        "cursor": {
          "ref": "295e3945-3e41-432a-b567-bae8b0d224e0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "154d7b55-8673-494d-ae29-49be994b6300"
        },
        "item": {
          "id": "7b9dcd45-1f16-40c8-84a8-50133d810c5b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b700ef21-076a-4111-be42-7e766d888f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c24a7d-eba3-4b3b-b35b-55866c8a902e",
        "cursor": {
          "ref": "82405303-560b-437e-a6de-fcc1b26f2431",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f097525f-6daf-4498-b16f-df5df59a6c8b"
        },
        "item": {
          "id": "73c24a7d-eba3-4b3b-b35b-55866c8a902e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2872d861-9748-4fb8-988e-9fd5ee56fb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0597f0e6-5ec1-4b10-ae34-2d5dab7a4038",
        "cursor": {
          "ref": "d407da72-87b1-4da9-bd62-4535e36a94c3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9c302d5a-e0fc-45bc-8a13-13ae2aa72f30"
        },
        "item": {
          "id": "0597f0e6-5ec1-4b10-ae34-2d5dab7a4038",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "35084112-41c7-4d71-8ef7-e3f2c78aaecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d4350c-f408-4b94-b1f0-b21462e77a9e",
        "cursor": {
          "ref": "6547c36a-e6e2-448a-b4bc-8f120a67a56f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bf6c6ee9-6bf5-4d27-a3fa-f421cf3f476f"
        },
        "item": {
          "id": "37d4350c-f408-4b94-b1f0-b21462e77a9e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "30529b73-0ffd-437a-88a6-d3fbe0b1f20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc46d65e-1198-417f-9af5-36ce17764119",
        "cursor": {
          "ref": "71db935a-10a4-4c2b-919e-a1b8bc8e4ad5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9362a864-644a-4bca-b3e8-803ef799eb5e"
        },
        "item": {
          "id": "cc46d65e-1198-417f-9af5-36ce17764119",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "64dd0116-bcca-46bd-890e-561611f32c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a91245-144e-4382-88e4-ef0350dd5027",
        "cursor": {
          "ref": "185d32e9-669e-437d-a682-7a015be4730c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "19b23800-b1bc-4143-ad8b-dc203cf3529f"
        },
        "item": {
          "id": "61a91245-144e-4382-88e4-ef0350dd5027",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3e667dc1-f610-4673-82a6-7edc530ef29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0df9ba-dd77-4e2e-bcb0-e48b24478e02",
        "cursor": {
          "ref": "f81f626f-20c4-40c8-ab72-a44a43d086b5",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5df9d1b6-9476-41e7-8914-beaacddb9ef8"
        },
        "item": {
          "id": "7f0df9ba-dd77-4e2e-bcb0-e48b24478e02",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "13b5469c-2585-4a57-bf59-0c8815667e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5fd881-2743-42d5-80b0-6ce2e6021870",
        "cursor": {
          "ref": "7fff2bb6-b738-4c03-93e0-92d97be68203",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "308a3e87-882b-46de-a285-e0f41ed6e0b1"
        },
        "item": {
          "id": "df5fd881-2743-42d5-80b0-6ce2e6021870",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "21f03c21-581c-46db-b2d9-76b5af5e20b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0df8358-b650-4a5c-bce9-f4f42358833c",
        "cursor": {
          "ref": "06be947f-3d52-43b0-b0e0-f1d1f88a08eb",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a9923392-837f-4f16-8a72-439f75ad929e"
        },
        "item": {
          "id": "c0df8358-b650-4a5c-bce9-f4f42358833c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "723985b3-4d93-4668-a43a-e9dd0a5ba828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b9b215-24b0-47d5-8f92-c6a3d3087663",
        "cursor": {
          "ref": "624461d9-f557-4b26-9986-6460c9ee292f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b8c34ba2-6582-498d-9d75-2a13f7cf3552"
        },
        "item": {
          "id": "11b9b215-24b0-47d5-8f92-c6a3d3087663",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8e6b5f5d-12a5-4f8f-be67-dcc387fd7806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1f6fe1-adc3-47cd-b588-47320796db29",
        "cursor": {
          "ref": "e718c627-7f10-42bf-8907-90067e74528c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bf1e079f-c49e-4b68-8f30-83da76858509"
        },
        "item": {
          "id": "5f1f6fe1-adc3-47cd-b588-47320796db29",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4fc65bfc-6a9c-4c2b-98c4-6c6701a0f65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7b6d7a-6437-41a8-ba7e-a78d7acbf590",
        "cursor": {
          "ref": "f5ee0883-42ad-46a3-9d18-8fb2048a32f6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1f126a3b-28f5-4893-9eef-d2501760fab8"
        },
        "item": {
          "id": "ed7b6d7a-6437-41a8-ba7e-a78d7acbf590",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e57c9b76-7fa2-4fea-9389-8456d67d5335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c753623d-9d62-48ef-95ff-21bbd64525bf",
        "cursor": {
          "ref": "79326c99-c841-4476-90c9-07d1baaeae45",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "56d2440c-f55a-4479-8fcf-bf92e5fb0e6b"
        },
        "item": {
          "id": "c753623d-9d62-48ef-95ff-21bbd64525bf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a0908e00-c1ca-4e80-9848-437e1c7741d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e944664-390a-4aee-b649-88b37109a63d",
        "cursor": {
          "ref": "ae38725a-4c6d-4917-9e9a-c7fe459a8f1c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8303982d-f566-47b5-ad8f-71d6703ee3d5"
        },
        "item": {
          "id": "9e944664-390a-4aee-b649-88b37109a63d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9cd43dce-963c-47ed-b137-b7e4a511feaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfd6f3e-ff75-46b8-92df-53a1ac857880",
        "cursor": {
          "ref": "86dcae45-2a7c-4ccb-ad9d-78654f332cb5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5c369937-2a3f-431f-a6d8-900278018032"
        },
        "item": {
          "id": "5bfd6f3e-ff75-46b8-92df-53a1ac857880",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "efef739e-cb7e-4ac8-b2d7-8603946d237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2e7c50-3abc-43bd-8102-e168b91e6f8e",
        "cursor": {
          "ref": "c120186d-4bb3-4aa2-b9b0-4fcb7978eca2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f44db1e3-f0f6-40b7-ab32-05a9cb9b0d23"
        },
        "item": {
          "id": "fb2e7c50-3abc-43bd-8102-e168b91e6f8e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "08bd9976-8960-44a2-b799-6a88c2850756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f83a84-4106-4f12-9d9b-3fa3313de840",
        "cursor": {
          "ref": "38035d0e-d973-462c-ad22-637a9e25b9f4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "62823e51-6abe-4ddf-9ef0-83b737b1cf98"
        },
        "item": {
          "id": "b2f83a84-4106-4f12-9d9b-3fa3313de840",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "056d6b5d-8d99-4506-b346-feaf2879c234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643b8a84-8bd1-4715-a107-00ca6479e11e",
        "cursor": {
          "ref": "653f480a-0731-4c8e-ad76-57f8a856df24",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2b07eb0e-d1e9-47c3-b216-e194d3e27332"
        },
        "item": {
          "id": "643b8a84-8bd1-4715-a107-00ca6479e11e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4809bc60-8bb6-47bf-ab30-87e8a94647c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360a9c93-b552-4266-b3f3-45745b70c952",
        "cursor": {
          "ref": "c1e4ce9f-34b4-47bf-b867-10da92471c62",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "81e2531c-851b-4e7b-8631-77abef387997"
        },
        "item": {
          "id": "360a9c93-b552-4266-b3f3-45745b70c952",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "63b3b7db-6ee9-4eae-a6a1-f195c3719947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21de9f80-d74f-4d6a-9db3-fb2340a072d0",
        "cursor": {
          "ref": "d2b00bb8-ba52-4450-8762-9425640a5c19",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d23f282f-1898-4479-98c9-fa03bed6173c"
        },
        "item": {
          "id": "21de9f80-d74f-4d6a-9db3-fb2340a072d0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "79c8a318-d2e3-4cc8-98d8-489760744632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9749ab57-c3b7-4467-a426-afd90a871fc6",
        "cursor": {
          "ref": "4c8a5f60-7605-499d-9de9-d69303be82cb",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4c3605b9-d763-4d92-b338-828347e49e02"
        },
        "item": {
          "id": "9749ab57-c3b7-4467-a426-afd90a871fc6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "888fcc88-0aae-47db-8991-ceb2c8b2ef7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c880613b-e610-4113-8d07-504f10bb2c69",
        "cursor": {
          "ref": "6fbb447a-ac76-4115-b52f-c6163d88787d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6b1ddc16-9d2d-47aa-b97a-61f0a91a010f"
        },
        "item": {
          "id": "c880613b-e610-4113-8d07-504f10bb2c69",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7a093632-45cf-4166-9199-a1cd78d76d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e0ff34-8b37-40a4-ab1d-a809102c4272",
        "cursor": {
          "ref": "25873438-30b3-49d2-acde-39b7b8509e20",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d4b8a2cb-1b92-49f9-8bbf-7ac19e167532"
        },
        "item": {
          "id": "d0e0ff34-8b37-40a4-ab1d-a809102c4272",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7b4c1a33-d350-479d-8e62-7caccd9926c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010f08e5-2074-4162-84f1-d162e91d260a",
        "cursor": {
          "ref": "e605e780-d97d-4f6f-942a-d5caf1142dab",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6b510d58-fc58-4338-9241-24f9b86747cb"
        },
        "item": {
          "id": "010f08e5-2074-4162-84f1-d162e91d260a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c59b6755-fa65-42fc-bc44-b226ee880733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6bf1e4-f7fc-4948-bf23-6d1c6e9a0dd1",
        "cursor": {
          "ref": "84422ec3-3d25-4042-9aae-b518c493c46a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f5971006-d163-46aa-bf26-427837dd4213"
        },
        "item": {
          "id": "9f6bf1e4-f7fc-4948-bf23-6d1c6e9a0dd1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f49b2826-a792-4993-9e7b-cb2e1e9caa25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635b7456-fa09-4c34-8b5e-8cd1b4b5197c",
        "cursor": {
          "ref": "79538cf2-26bb-4360-aa02-627646ac4aec",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bc15d3d6-67fb-4082-8ae0-3651b8d42e89"
        },
        "item": {
          "id": "635b7456-fa09-4c34-8b5e-8cd1b4b5197c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b5122e06-d364-4ad3-930f-3882f13b89b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdadf9a-4d74-4b67-8f12-6344f74b6494",
        "cursor": {
          "ref": "74407702-6665-4253-a057-48bf8703e656",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7b604403-d0a6-4f4f-8826-138d998b3751"
        },
        "item": {
          "id": "0cdadf9a-4d74-4b67-8f12-6344f74b6494",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "90cf4890-8b93-4223-a36c-2fdfece4e358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f32f20-06d0-4b36-810a-2663ea37c3c9",
        "cursor": {
          "ref": "de41ad59-47b0-4b22-adc8-d02420bd731d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "965135e5-5889-4ab4-8d1b-03b7f9b4c683"
        },
        "item": {
          "id": "24f32f20-06d0-4b36-810a-2663ea37c3c9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e8279d3b-49a6-4cbf-a497-93c6e3c140d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a2f7ac-3c19-4909-9960-a64dc0031811",
        "cursor": {
          "ref": "de9bbb4e-9d1d-4c0d-a945-1edfcfc4d845",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "04737c6c-97c7-4d9e-8041-b285c8bb3d34"
        },
        "item": {
          "id": "20a2f7ac-3c19-4909-9960-a64dc0031811",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f0a322ab-4397-4d0d-bd5c-4e93b1c52c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b91a72-626e-4cee-8596-6222d170d6c0",
        "cursor": {
          "ref": "083e767d-c25d-48a5-9e9b-71b3bc5460b4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c5d1b3fe-5df8-4d7f-aa65-2385b33fb8db"
        },
        "item": {
          "id": "72b91a72-626e-4cee-8596-6222d170d6c0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1558017e-b7e4-415d-bacd-c9a2dc5b53de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7cef18-0213-4861-918d-4303714fd17d",
        "cursor": {
          "ref": "9da0874b-4215-428d-9779-683ec2742951",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "338471f7-9c2f-4ad9-9ccb-eb4838dc4a84"
        },
        "item": {
          "id": "8d7cef18-0213-4861-918d-4303714fd17d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a579989a-32e1-4125-b215-08f501e054e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64926116-a474-460d-845b-1214dc3a1799",
        "cursor": {
          "ref": "7d74e63c-6051-4f32-afae-9e0220386676",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ef29a979-ca74-45a8-8d5d-dfeffe15d6c4"
        },
        "item": {
          "id": "64926116-a474-460d-845b-1214dc3a1799",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ddebe891-ee2c-4e83-9c3b-1c0724cde4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e28f2e-4d87-408c-82c1-6c6a791ef9d3",
        "cursor": {
          "ref": "2073e7a9-1225-4f5c-b7ef-5e4c823a4fee",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c6e141b1-f5f4-462b-ab34-42f1e1e67c3c"
        },
        "item": {
          "id": "d6e28f2e-4d87-408c-82c1-6c6a791ef9d3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1dc7cf29-6afa-4332-a0e7-94d102128084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbaade8-4cf2-428e-94db-f9f8f02a6b4b",
        "cursor": {
          "ref": "52c84dcd-53f0-4a6b-9c93-e6e64aafb942",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "46c670ef-62bc-42e2-bf59-2e1549cc0d22"
        },
        "item": {
          "id": "7cbaade8-4cf2-428e-94db-f9f8f02a6b4b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "97892d1d-b6fb-4952-a878-bc0b1da50229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8a919f-2868-4b46-9e9a-a66b18cefb34",
        "cursor": {
          "ref": "b6069c46-3b85-4da6-b8ac-99aeb1e4eda9",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0a7ea1c8-2173-4b75-a411-9e67a024dbcc"
        },
        "item": {
          "id": "cc8a919f-2868-4b46-9e9a-a66b18cefb34",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6215c780-e50c-4b93-9ed9-cde0562c1948",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec6917c-5bea-4aa0-a6cd-8c0d9091e24e",
        "cursor": {
          "ref": "3f2b5ab5-f62d-4915-b263-d12a5bc44c13",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "84debb90-a989-469e-a058-becd0ca34ee2"
        },
        "item": {
          "id": "1ec6917c-5bea-4aa0-a6cd-8c0d9091e24e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "23f38399-4955-425d-b0ae-a57f267025ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128ee6ba-362a-4d35-859c-c514f127bad4",
        "cursor": {
          "ref": "5ccbb036-b88a-4213-9f4d-77ed19265309",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e0352677-f0ba-435f-ae1f-4b18ae09c527"
        },
        "item": {
          "id": "128ee6ba-362a-4d35-859c-c514f127bad4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1c1b9be1-d555-40bd-a98d-2758c36afb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9323351-6199-4007-8c85-813812656dac",
        "cursor": {
          "ref": "ff1b112e-64cd-4dc7-8a03-7109ded2e2d0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "01c7f72e-bc19-4e73-8020-7008197a7041"
        },
        "item": {
          "id": "a9323351-6199-4007-8c85-813812656dac",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ae7a324e-0b17-4edd-85a9-a83e03dea51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce916bda-b0fb-4809-8e7f-d74063385454",
        "cursor": {
          "ref": "e2d88b4f-c463-47d0-a637-57433086e98a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "69d9cb56-760a-437c-9c30-ac33ef56c420"
        },
        "item": {
          "id": "ce916bda-b0fb-4809-8e7f-d74063385454",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ca84a471-0331-4c31-9c6a-5d19b1567e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4b54d8-0271-4658-96eb-68c61caecf72",
        "cursor": {
          "ref": "7f19ad9e-1c7a-443d-a821-1fe906e60dbf",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7b950780-f6ef-4144-904d-17449d0978ee"
        },
        "item": {
          "id": "9b4b54d8-0271-4658-96eb-68c61caecf72",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "762f922a-25a6-4eac-90b7-6d7ad8555b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9539cb5c-f445-46b7-a45a-5cecdc5b16b8",
        "cursor": {
          "ref": "962114b2-ccd5-4566-a2eb-54159fc04527",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "53ce607c-b63a-4c57-ad39-2afdd97c7ce4"
        },
        "item": {
          "id": "9539cb5c-f445-46b7-a45a-5cecdc5b16b8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e2d8db43-4e56-4a05-b2c1-3f18b8cdbe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53708c31-318b-457e-9b07-f4b5a7d1f798",
        "cursor": {
          "ref": "04a22cce-e80b-4f64-af2f-d1f7d1f021ba",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cc0fd318-540a-4e0a-b00c-124efac43133"
        },
        "item": {
          "id": "53708c31-318b-457e-9b07-f4b5a7d1f798",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "61a75782-85a4-459c-95ea-cd7c2963ccaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f0bc28-5f84-465d-9401-2da2d697c3f9",
        "cursor": {
          "ref": "66701a17-8057-4491-a7f5-f25c97bf1553",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "78fcb76c-071e-4fc6-b5f3-5686fa6ccf3a"
        },
        "item": {
          "id": "11f0bc28-5f84-465d-9401-2da2d697c3f9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "24be9617-f11c-4e5f-b7f7-180fd1e07a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c4c727-b18b-40b6-b2a6-9e0b3d706e75",
        "cursor": {
          "ref": "b98ac3cf-be71-480c-ba16-d4c82ab28815",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "08aaeae0-8804-4f10-890b-48a6284d6918"
        },
        "item": {
          "id": "b6c4c727-b18b-40b6-b2a6-9e0b3d706e75",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7fdc0053-bbf2-4ed8-8995-56554b7448bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53b4cd1-0426-4097-ab51-3745ba680a40",
        "cursor": {
          "ref": "8e48e4fe-263d-4f51-ba34-aa136ee6db22",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e52021fa-ee5c-4278-b564-37bd8fd011ee"
        },
        "item": {
          "id": "f53b4cd1-0426-4097-ab51-3745ba680a40",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4e7ced7b-64f0-46d0-a515-264353d5bc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7881d6-2508-4bd8-8b0a-c5ebd3e7df51",
        "cursor": {
          "ref": "1c3bf5d1-2e06-450e-8294-fc431de5e0fe",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c4c895a2-40d9-4587-a5a7-b39f80954e99"
        },
        "item": {
          "id": "ed7881d6-2508-4bd8-8b0a-c5ebd3e7df51",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "02f2fe20-7e85-431b-9a83-c14eb9791db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf6671d-8045-4886-9a4c-5bc81505c0cb",
        "cursor": {
          "ref": "ddacfec5-7833-4499-bf17-97c4360fd5eb",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0797dbb6-9534-4707-adb0-a9e3a30b6d67"
        },
        "item": {
          "id": "5cf6671d-8045-4886-9a4c-5bc81505c0cb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f8e3af28-da05-49c5-9974-d8e5d25ca0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5c1d96-a879-4dda-a689-30743a6b1ae5",
        "cursor": {
          "ref": "31291c83-c8a2-4075-b363-3600240adea5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0e816bf1-d33e-455d-a80e-4b61cb63f14d"
        },
        "item": {
          "id": "bf5c1d96-a879-4dda-a689-30743a6b1ae5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9f023624-1e30-4636-94f0-dba572914174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ee398f-5274-4d53-8a6b-93d9cbd974a5",
        "cursor": {
          "ref": "54237326-6eb5-43e6-bb1d-a7992c9220cd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5a9faa82-ad56-4268-8a87-fd69f6e01ab4"
        },
        "item": {
          "id": "20ee398f-5274-4d53-8a6b-93d9cbd974a5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "049b0dbe-2aa3-4225-9e2d-dc1a97f114ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f01e81-eeac-4ac1-bfb7-a6f33a42363f",
        "cursor": {
          "ref": "a5a35336-8664-43d4-92d3-1b537b4be5c9",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0c621799-60d4-41f2-b295-38a2abbbaad8"
        },
        "item": {
          "id": "b9f01e81-eeac-4ac1-bfb7-a6f33a42363f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ddb1f6a8-1288-4d26-a015-1e63be72f5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c87857-86f8-419c-b095-dc8475fcaf05",
        "cursor": {
          "ref": "f167d656-5f3d-449d-8371-a01a0c43234f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5c5561f0-5d7f-485f-a6d3-75eda6386f4f"
        },
        "item": {
          "id": "28c87857-86f8-419c-b095-dc8475fcaf05",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "940f6e6b-76fe-4eed-9599-666ab95546bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fec57ae-2bab-4fd5-a2d7-8a63214f3bfa",
        "cursor": {
          "ref": "0fb31c3e-ff0c-4c70-a281-6ed0d90c0427",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9dc4f20c-37b1-4b4d-820c-ec3759d81ada"
        },
        "item": {
          "id": "1fec57ae-2bab-4fd5-a2d7-8a63214f3bfa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "db7a0add-e773-41a2-9be2-a00a5c265c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbec85c-1c0e-4067-9b38-745beb271e81",
        "cursor": {
          "ref": "5d106667-89be-46e0-8901-a22c4ff8a978",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a7c6b169-5995-412f-820e-ca36c560404e"
        },
        "item": {
          "id": "4bbec85c-1c0e-4067-9b38-745beb271e81",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "82d25681-24ca-4d57-8cff-687766ad1f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465f8190-9ba0-4761-975b-527dcede195a",
        "cursor": {
          "ref": "6a81af05-a75e-4ad8-9d6e-e2a8287ffa49",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "306736d0-be4a-4e19-911f-ca75c5a8da4c"
        },
        "item": {
          "id": "465f8190-9ba0-4761-975b-527dcede195a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6a5ce0f2-f0c6-4d68-b889-f0b0f6dbb24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7be04ce-c56a-4109-8969-3225b6cc3a80",
        "cursor": {
          "ref": "101ac03b-90e0-4ecb-b611-8d11132944f3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1527502a-b911-4526-8cf6-5b000305c577"
        },
        "item": {
          "id": "a7be04ce-c56a-4109-8969-3225b6cc3a80",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "73643f0d-a6c6-4e25-a2db-f7b848cd4684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2b59e7-f6e5-4e3e-9180-708dbdcde720",
        "cursor": {
          "ref": "b6c1e6b5-bc9e-425d-9150-08cfc63f18e3",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9c632128-2b5e-4397-9e79-449af311dc61"
        },
        "item": {
          "id": "ff2b59e7-f6e5-4e3e-9180-708dbdcde720",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "319e7791-fb85-4f81-92f4-0e9f0f61f95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadc5931-a1b5-401b-ae03-f5996107b191",
        "cursor": {
          "ref": "31d985c3-8f64-41ca-b115-2d57d36dbd07",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "14108df4-c301-4698-92b4-1f18bc204ad9"
        },
        "item": {
          "id": "dadc5931-a1b5-401b-ae03-f5996107b191",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d2feecdf-3b02-48dd-99e6-e6a4e8ab5fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c6161f-b686-4642-a09d-9c8be5b13f2b",
        "cursor": {
          "ref": "c08e1e9e-e434-4b37-b82d-548604d75027",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ab1ba9db-5b99-4827-b321-5f0cffba6409"
        },
        "item": {
          "id": "01c6161f-b686-4642-a09d-9c8be5b13f2b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "208802c3-772a-490d-a93b-5057c0be2827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da55145c-2be8-43b1-b76f-8ca28278400d",
        "cursor": {
          "ref": "dde6ebe9-af41-428f-8803-2b5916aea43f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7dc9a673-6cd7-4a2e-aa86-3cd58dea90ef"
        },
        "item": {
          "id": "da55145c-2be8-43b1-b76f-8ca28278400d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9b0e48f4-7b5f-433d-9c4a-f58ef89466c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc7fbf0-41c7-486f-99d8-6fbcca52b04b",
        "cursor": {
          "ref": "e0de76fa-a4e1-4392-aafa-aadaec93f6dd",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d3c3885e-0634-4085-864d-a717a801164e"
        },
        "item": {
          "id": "9bc7fbf0-41c7-486f-99d8-6fbcca52b04b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "508d7e32-04cc-4288-be22-de8a2e3bc2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a603e79e-9ac2-43f2-8c7f-e335a5a8b48d",
        "cursor": {
          "ref": "ea8d4c06-fe21-4a62-a32c-65d036d38682",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "91b245c4-2278-4e58-bafd-6baf399a53e6"
        },
        "item": {
          "id": "a603e79e-9ac2-43f2-8c7f-e335a5a8b48d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b0f354a8-bc1b-4703-9001-6fabea6b2b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc822d4-368b-4760-b9ea-bf88abd6d0bd",
        "cursor": {
          "ref": "879cfb6e-c0ad-4d07-8f56-79836f9fbdc4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ab6f2601-606c-438c-bc4a-80579118a91d"
        },
        "item": {
          "id": "9cc822d4-368b-4760-b9ea-bf88abd6d0bd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6a10d900-269d-4748-aaf8-335e2a7b41ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb317ad3-3245-4dca-910c-f2a7fdca0549",
        "cursor": {
          "ref": "f1aff791-344c-4b67-ab4e-0346b20c198e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bab55ed3-b5ef-488e-bc29-7a919d317a9b"
        },
        "item": {
          "id": "eb317ad3-3245-4dca-910c-f2a7fdca0549",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b7fc95c0-367e-4620-bab4-d3b7d62f008f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7a514d-a882-4760-9a7c-8836ce545d10",
        "cursor": {
          "ref": "504e03a4-4279-4eb7-872c-06d6e3bc4067",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2b34bfe2-a51e-4ef1-8da9-010da1c583bc"
        },
        "item": {
          "id": "ec7a514d-a882-4760-9a7c-8836ce545d10",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9f5b4b54-790a-424c-962d-2b59101c1005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702861a4-2df2-4799-a986-3dbf18075372",
        "cursor": {
          "ref": "7e88954d-5656-4074-b866-b4578ff7cb76",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "26cc3260-8c8a-4883-84a9-2883909d5507"
        },
        "item": {
          "id": "702861a4-2df2-4799-a986-3dbf18075372",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5af5aeda-0505-48ce-8416-b964b3d741fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb44e972-d640-4015-a77c-e9680c6ac75d",
        "cursor": {
          "ref": "c5f45a75-01d0-4b35-9f34-a9a5846d59b2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "00221b54-38d6-46fb-b37e-cd3fa55d95dc"
        },
        "item": {
          "id": "fb44e972-d640-4015-a77c-e9680c6ac75d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6ab2d7aa-91f0-42ef-bdb9-6a8f2761259f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f66452-5d61-45c3-a062-875d205e4839",
        "cursor": {
          "ref": "4fad4b6e-ded7-4225-b9dd-b5e76bbf94df",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9a61c394-7d19-4a06-bd0f-800d729eb35c"
        },
        "item": {
          "id": "e0f66452-5d61-45c3-a062-875d205e4839",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "069cd941-3324-4a8e-ad9d-b3606f743c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a0352d-0bab-4e72-b2e6-dd41962ba0dc",
        "cursor": {
          "ref": "9e036d54-28b2-4610-ae8d-9b0d96ab6e89",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7012c4a8-3d66-46cb-be4e-bc34e7f6cff1"
        },
        "item": {
          "id": "d2a0352d-0bab-4e72-b2e6-dd41962ba0dc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e988d14c-dba6-40b2-87b2-38c06cd378c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0a5944-0429-43e5-9531-a3fc62be1a95",
        "cursor": {
          "ref": "e268886a-ce6d-4b8a-af0d-58bbc33c34d6",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9b53aa3b-823e-419c-979f-38859a096868"
        },
        "item": {
          "id": "be0a5944-0429-43e5-9531-a3fc62be1a95",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5621f7a7-3ebd-4110-8e03-d2383e728a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aaa22e5-f9a4-4e70-9acf-d6f8fa0c43a9",
        "cursor": {
          "ref": "715251e3-02b6-4888-a25d-cfcda089f8c6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0c6c5e81-f68a-4132-8e27-2fc9d3af61b4"
        },
        "item": {
          "id": "4aaa22e5-f9a4-4e70-9acf-d6f8fa0c43a9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8fd4f457-9e9f-479b-b77f-97c1a9a90164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4054860-1258-4a35-ba50-3138f3dc18d4",
        "cursor": {
          "ref": "0fa91ba8-ff0e-4312-bafc-56549f114779",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6e3d1b04-67de-4724-b936-8923559930da"
        },
        "item": {
          "id": "a4054860-1258-4a35-ba50-3138f3dc18d4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "efdd9639-41e9-4069-a5cf-457c9dd97fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444389ae-17b3-4cdd-8b11-5339c514017c",
        "cursor": {
          "ref": "dd488bdf-161f-4176-bc5d-83598bb8fc1c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "428de9ab-72a7-4cb7-b6de-e702fe513b50"
        },
        "item": {
          "id": "444389ae-17b3-4cdd-8b11-5339c514017c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bacf8f53-338f-4687-a8eb-7e98a64baf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1fb0c2-5a6b-40f6-a51b-a0ab4101dd4b",
        "cursor": {
          "ref": "8ea08b57-6076-4849-b727-0b41cd88344b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "64a363ed-2a20-4359-8029-50e2d7b11fd5"
        },
        "item": {
          "id": "3f1fb0c2-5a6b-40f6-a51b-a0ab4101dd4b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "13ec4ab2-9ff6-49df-a06c-03ee2343dd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edd70c1-ae71-41d2-a333-776b5d789c4d",
        "cursor": {
          "ref": "098284ba-a0ae-48fe-80a9-d502b3cb95c8",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d8203a71-f72c-45ee-b3e5-3bf79f7154c4"
        },
        "item": {
          "id": "1edd70c1-ae71-41d2-a333-776b5d789c4d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1cdf67ff-4ae8-45c4-821a-dbe1e4f97ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35d0dfe-67f1-4511-8feb-e809cd7c987d",
        "cursor": {
          "ref": "2b7d3e7a-308f-4682-b6e4-7cc78b875131",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "67787bec-a723-4d27-a717-f244cc206b21"
        },
        "item": {
          "id": "f35d0dfe-67f1-4511-8feb-e809cd7c987d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f9c628c6-ee26-4e53-9df1-f5b427e81e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b21c32-dd2a-45c1-8331-bbd9cfe4dc61",
        "cursor": {
          "ref": "2259cb8e-4b1b-4a34-95e3-3744a0e99180",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "12595195-07f6-44b7-b76c-050a97ab92fa"
        },
        "item": {
          "id": "01b21c32-dd2a-45c1-8331-bbd9cfe4dc61",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7837dfb8-8ae1-4aff-8b4e-5e2c603a68aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd419c34-7871-40c7-bb57-e0b3dff32ee7",
        "cursor": {
          "ref": "8f56b32e-27fa-453c-8d02-466bff78aaa6",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8a354b9c-dc03-4283-85a9-b862a7c5b55b"
        },
        "item": {
          "id": "cd419c34-7871-40c7-bb57-e0b3dff32ee7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8685254e-faf4-4ddb-91ca-944f88e3968f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e27fbb8-bf06-4ecf-a4e6-5bd8f3d96a27",
        "cursor": {
          "ref": "4bc6d14a-5339-4f7d-8cdb-18068a498345",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ce9baaad-92da-4441-9f3f-fd08fd647974"
        },
        "item": {
          "id": "8e27fbb8-bf06-4ecf-a4e6-5bd8f3d96a27",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "aa4ad260-797a-40d5-89da-a3b6c67c4858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8638e57d-a58d-4d52-b44c-27ba484eaecf",
        "cursor": {
          "ref": "cc73956f-ef13-4259-832f-3583d270901d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1e7c6e50-bbbd-40f5-95c6-e394ace43537"
        },
        "item": {
          "id": "8638e57d-a58d-4d52-b44c-27ba484eaecf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "662b9d02-7469-43f1-a750-e5aa04adfe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5b7cb8-2ef3-4ff3-8422-9fc39ccfc57f",
        "cursor": {
          "ref": "f593e0f1-a1f1-4c48-a53b-56e746be2a97",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "54ccf2e9-0a66-496f-ba88-3eae3eda8db8"
        },
        "item": {
          "id": "5f5b7cb8-2ef3-4ff3-8422-9fc39ccfc57f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2afb9f61-c0c2-419a-b127-31f603926e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838f91db-d6d1-45eb-818d-45aec5d779bb",
        "cursor": {
          "ref": "d1deea40-f746-4523-9a04-21e4b038a750",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2e22614a-d6ba-4178-980a-7fa337f0012b"
        },
        "item": {
          "id": "838f91db-d6d1-45eb-818d-45aec5d779bb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "da316d15-af66-4258-9f0c-740da28a4019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9444990-fd83-44c5-8a75-8b3889407fbb",
        "cursor": {
          "ref": "617e9bbc-88d7-432e-9afd-c168da8a4791",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6a55d924-4095-465b-bc93-d0184853b87d"
        },
        "item": {
          "id": "c9444990-fd83-44c5-8a75-8b3889407fbb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3e3b17bc-feaa-44e3-bf6d-8f7cb1fd15a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15eebc7-92fb-4264-9239-3ee0d3600c4e",
        "cursor": {
          "ref": "08811e2b-7e4d-40c3-a4b5-57c6e4f7cfd5",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "62dda8e0-6a66-4663-8cb7-365b53225247"
        },
        "item": {
          "id": "f15eebc7-92fb-4264-9239-3ee0d3600c4e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "505b7725-8a50-452f-a19c-108e63db51ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8ef5b0-f4f3-4156-8751-ec2ad4ab4a13",
        "cursor": {
          "ref": "5c7a4b74-4ad5-4639-a338-b170b9ec2976",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "41f2ae7e-81a5-4f3e-b83c-5a59260418d9"
        },
        "item": {
          "id": "bc8ef5b0-f4f3-4156-8751-ec2ad4ab4a13",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "82a2c8fe-7843-4563-b97e-7fcc1618770d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08051014-a82d-492d-a559-39009f5f8d56",
        "cursor": {
          "ref": "1c13d4a9-b2ef-4a14-aeee-2c9b3889280f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d9b4284f-efaa-4d9d-bc38-37fe59af2d77"
        },
        "item": {
          "id": "08051014-a82d-492d-a559-39009f5f8d56",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1e585d5c-a233-4bc2-a496-388023c864ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a1de51-3f15-4e7b-94da-067f07f286cb",
        "cursor": {
          "ref": "1761a006-419e-4c6d-87ea-7aa9f7bf8460",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7efb1f7c-675c-4076-9b1b-00d289f294d7"
        },
        "item": {
          "id": "08a1de51-3f15-4e7b-94da-067f07f286cb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2344960c-7c2c-460a-98f6-5b242a893bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd8c02f-261b-4fec-a8fc-13ac472dd70a",
        "cursor": {
          "ref": "8cc5fbed-527c-40f0-8a36-1b6192719a68",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7ac85383-b93e-4aae-b5fa-e6b8195d2876"
        },
        "item": {
          "id": "afd8c02f-261b-4fec-a8fc-13ac472dd70a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e195fb32-e09b-47d9-a1bc-d76937997c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fafcf19-3f14-426e-a061-e4f07b193f9d",
        "cursor": {
          "ref": "853afb9a-5808-4906-8064-909e1212b883",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cdc73ca6-059c-4a5f-aee6-aef2dac39dc3"
        },
        "item": {
          "id": "9fafcf19-3f14-426e-a061-e4f07b193f9d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "54872061-7c47-4acd-b37c-99a129a68ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cfd3f9-4bf9-4ba9-a596-ab397efaca73",
        "cursor": {
          "ref": "919b151a-677e-495c-b179-0a5ca438e66c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "aeeb9a0a-6b56-48b2-ac2a-052d39a6b456"
        },
        "item": {
          "id": "83cfd3f9-4bf9-4ba9-a596-ab397efaca73",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f2890db9-abf2-439c-9215-14f2a3867c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff7328b-6a7e-4101-81ee-2fe72b3c0055",
        "cursor": {
          "ref": "bb9d0efc-b46e-4cf5-837c-f65aedc1078e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0220fee3-e816-43e0-ad88-853c339e5c04"
        },
        "item": {
          "id": "aff7328b-6a7e-4101-81ee-2fe72b3c0055",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "20ae1a9a-fc3e-4e66-94a8-278a815d221a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405b8fe4-b93a-45bb-9a64-c42e7cc16e99",
        "cursor": {
          "ref": "b16c5a3b-83bd-47d8-92d5-05e88d205b3c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f17fe011-b2e7-41c9-a5f6-fd904bd6e518"
        },
        "item": {
          "id": "405b8fe4-b93a-45bb-9a64-c42e7cc16e99",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6f1cf994-b193-4bc7-8a3a-e86436b77def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdc78a1-fbfa-469e-bc04-2903f6f63338",
        "cursor": {
          "ref": "dcfba442-44d5-4763-a4b0-3cb51d8cbb81",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e114b65a-8d56-493f-8021-dbb1d3306af4"
        },
        "item": {
          "id": "2bdc78a1-fbfa-469e-bc04-2903f6f63338",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6f2e9042-806e-4354-b07d-0139940c8c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5290e89-4f16-4b04-8ad5-83ad3829330a",
        "cursor": {
          "ref": "d6b375ad-cd00-45c2-a524-50455a09d9b1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "166279d5-f5a3-4a87-94d9-0378103cca20"
        },
        "item": {
          "id": "c5290e89-4f16-4b04-8ad5-83ad3829330a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "eb7ca40e-90a2-4062-931a-e7bc2c22c4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be34d43-63ab-47ad-8789-dfc85e02618b",
        "cursor": {
          "ref": "12c8d250-1633-448e-9b72-e4b804ffad2a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3e8bc2fe-3826-4ba6-aad3-63cf09377ea4"
        },
        "item": {
          "id": "0be34d43-63ab-47ad-8789-dfc85e02618b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d66face7-2722-4b67-b957-1c0eaeaef5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7a3afb-6102-43ec-9d88-87357bda269c",
        "cursor": {
          "ref": "6fd5e2d7-9047-4ded-a1ba-8e81bdafd546",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "99152836-6c2a-4e93-9e08-b93e760d77a5"
        },
        "item": {
          "id": "6c7a3afb-6102-43ec-9d88-87357bda269c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1e37cebe-5a72-44f3-8769-f0242c3a0c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad982d31-2471-4f7d-8d0c-5c5749ea85ed",
        "cursor": {
          "ref": "7b432bdb-22fc-470b-a0f5-f1cf5b376c69",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "127d955e-e1ae-49b9-b1ea-014203eae7cc"
        },
        "item": {
          "id": "ad982d31-2471-4f7d-8d0c-5c5749ea85ed",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7fded16a-0c1e-4f6c-8f84-15188ee50ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499e3c85-2f18-44a3-b945-dabc6757318c",
        "cursor": {
          "ref": "5e6699b5-4c99-48e1-b667-df0815fdcbf2",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f646d34a-d900-444d-800c-696fe567ff36"
        },
        "item": {
          "id": "499e3c85-2f18-44a3-b945-dabc6757318c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "951001a1-8cb6-483f-9338-4670482184fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e2a126-0d94-4a62-8716-7ed45d935b0b",
        "cursor": {
          "ref": "f7a5de5d-8af9-47da-b8cf-2a08da253960",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "39a85656-961a-4027-bc6c-98b10d21d050"
        },
        "item": {
          "id": "d4e2a126-0d94-4a62-8716-7ed45d935b0b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6765bc60-63b1-4e88-aaf3-5217635e2a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6bee9c-e2f9-4dd5-aaff-3bae5baa9ee4",
        "cursor": {
          "ref": "d274d77e-d885-4ee4-b451-72944cdafa13",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c25a882b-0802-433d-bdbf-1a801675d2ae"
        },
        "item": {
          "id": "fe6bee9c-e2f9-4dd5-aaff-3bae5baa9ee4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b5445110-97b3-4e60-8abe-c65d7c01ba90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb68c1a1-b2c7-419c-8750-9586dd42ab83",
        "cursor": {
          "ref": "62ca278a-b0cd-4892-8a1c-f3a1919de8b1",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d13fb220-6747-4672-940f-6a7f8dcc7686"
        },
        "item": {
          "id": "cb68c1a1-b2c7-419c-8750-9586dd42ab83",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cc5b44d3-9780-456c-ae67-cd4242efdf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7180c081-36b0-45ab-ba44-de113277ffee",
        "cursor": {
          "ref": "3ef885dc-4084-4536-b6d7-b07d11330e25",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f6024ab6-4571-4e51-8d0b-cc1304ec6bac"
        },
        "item": {
          "id": "7180c081-36b0-45ab-ba44-de113277ffee",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c1fbbb66-9d1e-48dd-b430-49a021fb3f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f465f510-9acb-42f9-b3ad-75d9271432dd",
        "cursor": {
          "ref": "6e0778bf-95c1-4c6c-9e17-9e60da0fea42",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4415a81a-77ef-422d-8711-d7246ffb7bf4"
        },
        "item": {
          "id": "f465f510-9acb-42f9-b3ad-75d9271432dd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "08c74c1a-45fa-43a0-a9b3-6bc4d1c2fdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad654bce-854a-4d25-bb40-be40daa3c398",
        "cursor": {
          "ref": "5c1c797d-0dc1-4053-b7e9-65493f20d9d4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9eac25a9-68f6-4ea1-9faa-5354e079e404"
        },
        "item": {
          "id": "ad654bce-854a-4d25-bb40-be40daa3c398",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e7522a14-6f36-43ea-a3f6-e0d2c52926ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b331ff1c-231a-4d9a-b089-a1b182a9cebc",
        "cursor": {
          "ref": "102f46f3-ff03-4c45-8b0e-c131f429cca1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "841c607d-e556-4147-b384-7ef196264fa9"
        },
        "item": {
          "id": "b331ff1c-231a-4d9a-b089-a1b182a9cebc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "950d591d-db27-4c23-9721-678e5b42694e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8737f9-e750-4a79-9073-30bbc043a81b",
        "cursor": {
          "ref": "589f5bc6-3018-47d3-a05f-2226a9e59013",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e219fea2-8e32-4cb2-8fe4-7e46d69ac168"
        },
        "item": {
          "id": "6c8737f9-e750-4a79-9073-30bbc043a81b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "196f7215-d524-46cf-ad97-66f1eef2cd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce414c0-828c-468b-8d72-f79657094f1d",
        "cursor": {
          "ref": "73f12770-01e0-4f5f-9f9a-007a3da90b96",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "323c775f-2824-4a89-bf5d-ca2cee1d54f1"
        },
        "item": {
          "id": "6ce414c0-828c-468b-8d72-f79657094f1d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "29da09a9-f890-4a06-b70f-e82565c8b8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d1aa5e-6e7c-4962-8b67-63612b0ed764",
        "cursor": {
          "ref": "308b5cbe-55ca-4d6d-ab78-4539dfe999fa",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "08343dc5-73bb-4911-9263-b1c2270bbe81"
        },
        "item": {
          "id": "79d1aa5e-6e7c-4962-8b67-63612b0ed764",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cda6388b-995f-47f8-a862-f8323dc77768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86637d0b-365b-43eb-87bb-8dd4a314583d",
        "cursor": {
          "ref": "214adbfb-d9cc-4ddb-a511-17b27803b9a0",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "01938743-62dd-4021-a77c-906cedd7f5e6"
        },
        "item": {
          "id": "86637d0b-365b-43eb-87bb-8dd4a314583d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5427f7f0-1191-4e78-a125-3812bc758da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca8da88-635d-44a9-9f50-c6118ca1b719",
        "cursor": {
          "ref": "ced064d1-c364-4ef8-b44c-f4bf5b2ecebf",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "92536583-69a3-4382-9a66-e2b9c4fd56a8"
        },
        "item": {
          "id": "dca8da88-635d-44a9-9f50-c6118ca1b719",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e85c28c1-09af-4133-998c-734456bc5985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94355677-73c6-4963-b377-d9ff230e6b47",
        "cursor": {
          "ref": "43746c0a-dda9-49de-a918-c179a40c5aa3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5bf930ae-deea-4e08-9e5d-f3a14dd66b96"
        },
        "item": {
          "id": "94355677-73c6-4963-b377-d9ff230e6b47",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c675da0c-8d39-46de-9c28-8856a28f21c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a125b86c-2264-4246-8369-f08dce7d1dbf",
        "cursor": {
          "ref": "476754e7-a098-4301-881d-624d3589433d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3eefd25a-94db-4b0f-aa98-35ee3a3fb82a"
        },
        "item": {
          "id": "a125b86c-2264-4246-8369-f08dce7d1dbf",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "92562462-3e44-4444-98ae-0017499f1573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a06206-81ef-4acd-8032-d022a6936804",
        "cursor": {
          "ref": "2ddefc1c-7835-4591-aa53-9568104499c7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ae9547f0-77e5-45ce-827e-efa58615d6c8"
        },
        "item": {
          "id": "88a06206-81ef-4acd-8032-d022a6936804",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "165ade9a-2d53-43d2-bdec-48cf0b3acf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806cb732-2b71-4cab-aec0-c7c33d0262d1",
        "cursor": {
          "ref": "07df4b18-01e6-451b-af9f-cbbc963e070f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "17d6ddf2-d0c3-4a8e-861b-babf233af9a9"
        },
        "item": {
          "id": "806cb732-2b71-4cab-aec0-c7c33d0262d1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b45de28d-526c-4559-816a-b74e964be0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcde4d87-a2ed-4583-90f0-b8c570cf6b3c",
        "cursor": {
          "ref": "daae2d6f-90ac-4305-9fd2-2ad4579be4b0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "29eb6279-e6e9-4464-88fe-a2d6a6df280a"
        },
        "item": {
          "id": "dcde4d87-a2ed-4583-90f0-b8c570cf6b3c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6bf26878-9402-48ed-8d0b-944967f77d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41a9c07-81f7-4cd2-91dd-f21516e034e5",
        "cursor": {
          "ref": "103cfeed-89c9-4ea0-81fe-39a0c8d90b86",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9de4c241-8678-438d-a397-132c9d5b2b54"
        },
        "item": {
          "id": "c41a9c07-81f7-4cd2-91dd-f21516e034e5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e675a752-27cd-4ab0-a58e-8b05007b0faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6129758-6cd6-4c24-b2a5-2f61b2a1b253",
        "cursor": {
          "ref": "a76bf5dd-7951-45f2-ae1c-48969231fc88",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0940a7af-3d6f-422e-a658-03b86bbba6e9"
        },
        "item": {
          "id": "d6129758-6cd6-4c24-b2a5-2f61b2a1b253",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "22621202-7b98-4f66-842e-1e8bc8e36218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8010e44-7af0-4147-992d-57122e35848a",
        "cursor": {
          "ref": "69e623fc-5f68-4096-9214-f71af986ceef",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5968a046-c2a7-473a-86c6-1104ae78aeb9"
        },
        "item": {
          "id": "f8010e44-7af0-4147-992d-57122e35848a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3ee1506f-403b-4c00-954c-816eed46c67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37cbb6b-3555-48fa-87da-a4addd999926",
        "cursor": {
          "ref": "801cea76-912d-40ce-9ab6-9c4dc64fa8b0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6c2e31d6-906e-4a00-8cc9-6761617bf520"
        },
        "item": {
          "id": "c37cbb6b-3555-48fa-87da-a4addd999926",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5a9b3870-4773-4459-8174-6d591be1f0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364e482a-11d8-4e51-aad2-c23d666dd930",
        "cursor": {
          "ref": "7e25307a-de95-409d-8bc0-5c30f976efdb",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d9233358-dcf6-471f-a907-1e4e38a192e0"
        },
        "item": {
          "id": "364e482a-11d8-4e51-aad2-c23d666dd930",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2563207b-f7f3-4e9f-b834-a052d489012b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531320a3-69f7-432b-8fc2-8dbcf4b5c67d",
        "cursor": {
          "ref": "c75568bd-e9ea-48c5-b861-ae63d7a81ba8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f619264b-2061-4e08-bb90-ae927a815f2e"
        },
        "item": {
          "id": "531320a3-69f7-432b-8fc2-8dbcf4b5c67d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8775e130-f579-44fb-81d8-c9995bf59199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee625dce-68c8-4f65-be6a-5e53c97e446e",
        "cursor": {
          "ref": "705bac1e-2057-4326-8dda-09b910615c51",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8683ff63-010e-41cc-9ddb-7f2f0cc70770"
        },
        "item": {
          "id": "ee625dce-68c8-4f65-be6a-5e53c97e446e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eac90881-4dd0-4198-88de-4113ae7f5c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7597cdb-cb5e-433a-b9ad-84b90116e809",
        "cursor": {
          "ref": "182270e7-9f79-43a3-8136-6ad5b23040f4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0a649b43-8d2d-4f3e-93f2-91d828e42a8e"
        },
        "item": {
          "id": "a7597cdb-cb5e-433a-b9ad-84b90116e809",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6b695668-a827-41c6-84f9-7bf1fbb5e25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f45afce-6d11-467f-9881-4fe74a8970a7",
        "cursor": {
          "ref": "d2f871a9-436d-4499-896e-d06b2e40e2c3",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "679f8f4f-2172-482e-84f0-b915791011cc"
        },
        "item": {
          "id": "3f45afce-6d11-467f-9881-4fe74a8970a7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b7dfa548-83fc-453c-925a-20f45d37f607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364d5456-ae2e-45a6-ad0d-bdbb12e6a408",
        "cursor": {
          "ref": "e3774879-8325-4ae0-a232-08f43835dfb9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "eb983b9f-2db3-4a9f-896c-fd918c88660e"
        },
        "item": {
          "id": "364d5456-ae2e-45a6-ad0d-bdbb12e6a408",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c0521fbd-a373-41e6-8cd1-7bf480f9ca82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b09748-40f5-46a5-9dbb-fbaf55a58115",
        "cursor": {
          "ref": "02298069-0720-4315-954b-d7625ddc1e56",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0fc50014-68e8-44f8-a148-5a074779b340"
        },
        "item": {
          "id": "24b09748-40f5-46a5-9dbb-fbaf55a58115",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6b567e87-f430-481a-bd2c-9dbf541d8a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302a52e3-4f52-4c88-8742-197b6bee3e29",
        "cursor": {
          "ref": "e5b81185-fc16-4b61-9f9e-1a2c680d3377",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4c2c7203-2663-4240-ab5c-09277018ef80"
        },
        "item": {
          "id": "302a52e3-4f52-4c88-8742-197b6bee3e29",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3f668de0-dd71-4cb4-8b6b-a3711798ffde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c70fa7-e84d-4568-ab6c-0886b0bf9741",
        "cursor": {
          "ref": "e9d3421d-acd1-4401-a4c9-8c887d76a343",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fb4d17ee-44b1-4252-b3e2-af92dfb5f42a"
        },
        "item": {
          "id": "d1c70fa7-e84d-4568-ab6c-0886b0bf9741",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9c9d188a-4240-4f55-8e9a-77312b9b7ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffc3c05-aac8-42cf-a93a-7dff56e08af2",
        "cursor": {
          "ref": "263f8e10-f81a-46ef-a27b-d450b81be6dd",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f3025763-9379-4e5e-aeef-02e3e12aef73"
        },
        "item": {
          "id": "5ffc3c05-aac8-42cf-a93a-7dff56e08af2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "615c42ad-f1ae-4c57-b658-fdeacae886aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48031206-099e-41a6-b324-2a3b08460d6b",
        "cursor": {
          "ref": "ac59f5dc-d25f-4d88-9071-65ac1a659472",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "56e56179-3df9-4289-8011-2e46a5ed736b"
        },
        "item": {
          "id": "48031206-099e-41a6-b324-2a3b08460d6b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9c01ca78-352d-49f0-b7fc-1b42c8f8d06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51703fe5-a5c4-40b0-9a14-c3215968ce6c",
        "cursor": {
          "ref": "38965164-55a7-40b0-82ac-2188a93617b0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cd03e9a6-536e-48e7-8150-fbe6ae3096e3"
        },
        "item": {
          "id": "51703fe5-a5c4-40b0-9a14-c3215968ce6c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "892abac9-60a8-4ff3-a0c5-0baa3afd4aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8627ac6-e64c-40b0-87f5-7fb46d640260",
        "cursor": {
          "ref": "8a3b176c-f593-4041-b15b-d89e6a7018e3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "29d73814-4062-4ee9-93a5-77c879984760"
        },
        "item": {
          "id": "e8627ac6-e64c-40b0-87f5-7fb46d640260",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f368cd60-7a76-478d-b00c-71eb216829db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f8ce18-64c8-4672-be95-1f6ff194c682",
        "cursor": {
          "ref": "127f90cf-5596-4c8d-8cd3-c2f44e10b174",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b22ab033-ef70-4e3e-a377-03eae0441e07"
        },
        "item": {
          "id": "31f8ce18-64c8-4672-be95-1f6ff194c682",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c6c81f81-c81e-4b1f-8bac-128d2a6fe982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7054420-f352-46e3-a195-f7f610232ebf",
        "cursor": {
          "ref": "36260ae6-d08c-456a-8266-184cae225c05",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eb086aa1-fdca-418c-a0de-3652eb67f34c"
        },
        "item": {
          "id": "d7054420-f352-46e3-a195-f7f610232ebf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "52135c81-55e3-407e-8d96-f1f382199e6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab0ad81-e31e-46ac-9ef6-836218f8466f",
        "cursor": {
          "ref": "dc6ba9e0-f60b-4f94-be04-9aa82657cf26",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dfa5b6a1-6251-4984-9e1d-d7ca1b31594a"
        },
        "item": {
          "id": "7ab0ad81-e31e-46ac-9ef6-836218f8466f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d8feb77b-9465-4cf4-b190-760c1694a55a",
          "status": "OK",
          "code": 200,
          "responseTime": 2354,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40e49ed-4db8-4f99-9b49-0f1cff4d6da2",
        "cursor": {
          "ref": "76a13f96-5e05-44a8-8e8e-3621bdea2784",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9be545cf-a548-4ee8-8cc3-c89b9878ea8a"
        },
        "item": {
          "id": "d40e49ed-4db8-4f99-9b49-0f1cff4d6da2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fa4bee00-f26e-4b96-b86b-05c563073705",
          "status": "OK",
          "code": 200,
          "responseTime": 2936,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8523fe-73e5-4559-a312-62a265cb6e96",
        "cursor": {
          "ref": "70a50f7a-b7da-4aba-9946-eb3df1c52560",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dead94d3-42e6-4abc-937f-43c66aab2720"
        },
        "item": {
          "id": "df8523fe-73e5-4559-a312-62a265cb6e96",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f4e711bc-54e7-4c42-9f45-93527c9ac8de",
          "status": "OK",
          "code": 200,
          "responseTime": 2566,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3244555-f33d-443d-abdb-a3fcbbfd93da",
        "cursor": {
          "ref": "0a2a461b-7b89-45ff-a1b8-6a5ffbbaf893",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "61c1c586-90f7-4bf0-b543-1e0f8debb4ff"
        },
        "item": {
          "id": "f3244555-f33d-443d-abdb-a3fcbbfd93da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "283716cf-24d4-425f-ad8a-9a2ecb0afa1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3244555-f33d-443d-abdb-a3fcbbfd93da",
        "cursor": {
          "ref": "0a2a461b-7b89-45ff-a1b8-6a5ffbbaf893",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "61c1c586-90f7-4bf0-b543-1e0f8debb4ff"
        },
        "item": {
          "id": "f3244555-f33d-443d-abdb-a3fcbbfd93da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "283716cf-24d4-425f-ad8a-9a2ecb0afa1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecdd7f5-77b6-4fda-a4b7-8f73942b9c9a",
        "cursor": {
          "ref": "e6d6bbfd-faba-4fac-9ad5-9021427c0336",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "64c28ca3-98d4-4dc5-a0c8-24da8b338ec5"
        },
        "item": {
          "id": "eecdd7f5-77b6-4fda-a4b7-8f73942b9c9a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2e2ecf17-1b3d-48ad-a450-3bb15e414284",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cec61ee-a2b2-492f-abf4-e8ee830d9b8e",
        "cursor": {
          "ref": "96d6eba6-fdbf-4a97-92f2-aa186c3038f5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4d510174-1a4d-4f95-9b07-62d80fd8b102"
        },
        "item": {
          "id": "8cec61ee-a2b2-492f-abf4-e8ee830d9b8e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b2ad06d9-5157-41c8-9c0d-504c6e2f402b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}