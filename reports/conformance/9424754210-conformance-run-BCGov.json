{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fe4cd350-2834-44c7-b3e8-5ade89663ebb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "64465225-b3d8-4890-ad86-9ebb23b84166",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d5d56bbc-89b9-4205-a130-8df476228a0a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7ab87740-29b4-4677-a348-aa978ea95033"
                }
              }
            ]
          },
          {
            "id": "b0cf1f4a-be20-457a-977c-aa9769e35a1b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c37423e4-a8ae-4cc1-811d-01ab193096f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "44f84b6a-ac07-4fb0-acb1-a1a5096620ad"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5b720c48-4916-4711-8e20-2d9916992e9d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cb16c64d-bf47-402c-b594-969d87de85c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9585ac72-a373-4b5d-b374-e1db6c7f5c20",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95be6abd-7af1-4f7d-9304-035b2c71a56e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "345a1c21-e62e-42f4-9732-3f29c6fcf7e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "221ad161-2ca0-4d65-b3fc-361edabda87f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18dcec24-3f2c-49d9-a26b-a9ca20561212"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b965845-22f8-4b73-a49b-ee2ef00d2c92",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6033d2ac-5a22-4c2b-bfbc-a781ccd9d5f2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33600c04-26ac-4c55-abc2-d94d9b157f7a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4459f32a-ffc7-4127-aadf-aed4f02596bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdc4e75d-5dc6-4fb8-be4c-bbd3b2e4ba7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4393cc41-c261-4cfe-a7aa-ee1a50e15cf0"
            }
          }
        ]
      },
      {
        "id": "eeafd663-9e24-43da-a48c-b700da974ad6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8cb275a1-d390-4e1a-85c8-77c90c9a4269",
            "name": "Negative Testing",
            "item": [
              {
                "id": "984b30fe-b9ed-40a4-8e20-048bb69a2836",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be63e79b-3a04-4b4a-876c-072196b6fe17",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e6732d-45c9-4f68-94c2-79bdd4917ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "149db3a4-9efc-4630-83d7-524df6145950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e24a444-6b57-4bb1-ac48-6025e06309b2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d94f2a5-8d59-45f5-87d3-c0a748008423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1051ba2-1c3b-4d4d-b16c-ee97fef746e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be9f14d-1126-4675-97e1-e44d996af18f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f81e32-f8a1-4cc7-ad0c-01ce0b15b420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23ec1f56-8424-4a61-8b89-21415b8f4850"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "159102f8-e040-48bf-b7ec-63c0d6608fd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53aaa14f-977b-496d-9f43-37b082351c7e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286b934c-21ec-4d09-8c1f-24ae505030f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b92d1372-fa52-4fb7-886f-090ddda26f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e507ba93-f624-4e44-9e60-08cb43330988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f920e485-d057-4c02-ba24-334c25ce7c76"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "070e8cab-0345-47fd-94cb-7693cb7f13e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e6de9da-1600-49ca-849f-5608c84f2480",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a78fd70-5d43-4525-8b01-48fe7a1e67aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "83a7a027-6595-49a6-b8f9-dde6d3b57718"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11cf7a2f-2788-4256-800e-207fde20d549",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e64ec885-b1aa-478d-931c-8bd2d3ecc76e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a67f5907-09f3-4e2c-b4d9-df93eddb7095",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91cde58b-4a8f-401c-8847-59a8fbf582e7"
            }
          }
        ]
      },
      {
        "id": "680375e8-9630-4fca-9a97-55f72581af4a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "02585ead-aec7-45ad-983b-f0df575af9fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d4807e2-14f7-4977-9a38-0bc1a9e74fe1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "068dc069-acdb-489f-8d01-52d5b7dd9aca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f52024-1b8c-4ca1-a3c9-39833e1c3b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67459400-6305-481c-859b-6f3b9e765a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f798f24-77f5-4a7b-a4f6-2013b8beb7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66a2b200-1db8-4ea7-b43f-ac2f95c3ce73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8466d9-4ac9-4833-a0cf-73eca57f3973",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45724be-90f4-49b8-b83f-95f9b3a0eab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699a2057-7a62-4d2f-a26c-409f3cd9cddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ba7bfa-6201-4472-85c6-b8e3c68954dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44c5aa42-8c60-4326-8c65-e6221b4caaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae08caa-fb65-430f-a76d-fcbdb9534c15",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d60a0b-ed39-4f6b-b465-c28fe4bdc8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c532a31b-ec7b-4e4f-8e48-cba6e51c0f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847b658d-6aa8-41f0-8737-979b378a4fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ceee850-5078-48f9-9dfc-ebdffbc2ffd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7729852e-354b-4830-821d-32dac130bfeb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5053aae6-33b8-4516-bc11-be151505f5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90ff5c0-a50f-4a99-a278-be2c5919acda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f402e0a-a5fb-4d4c-b87b-81828dc0cee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0918f161-3684-4636-8f55-ba7cd5eb732d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfcd718-4494-4ccb-814f-0ba793f9599a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912df892-abba-4028-b05f-a7d19efbea18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd98819-aaef-4bba-bfac-064ba1704809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a519f95a-382e-428f-b763-828865c4898f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0f18045-7074-4b59-9f29-fc66d4271b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ff0fd2-f9e4-4525-b579-30ecd5ecd44e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1522b1fe-63d2-4e55-a227-62a81e402403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8105ea2f-ccbe-474e-aaa7-0a5d9bff1607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990f84af-4a16-41c0-a819-8c0ffa698269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee8d6760-2aa8-4b8b-b52f-26a490128bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f066b0-4a55-433b-99f6-bc661de64954",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d8af7c-8f1a-4cb9-a757-cf9b0704de69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbd64dc-2036-4d6a-b2d8-c4eda6fe671d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd203e00-49e2-4350-8fa0-e8ce8f5c994f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e606c59-71f3-453c-a900-73f8ba557b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e743ec-f8d5-4cbe-907a-59b1a413a4c7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8153b48-8f12-49d3-b1b6-cc4619a6def3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e36c99c-dfa9-4ebd-9a11-c25f94d73dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3aada17-d208-4a15-8a6c-b05d35edf169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f9afe50-2c19-40e2-a1c2-6ec0334e2668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffc1cc8-1019-4504-a9f6-2cbe1f13bad9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e4c26b-ff97-4e28-a99d-47fb657953c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d99144-d57e-4a5b-b16d-5b84168167d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e17c6d-ac5b-4c53-a9a4-b36fb4fde5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87155af3-440d-4c92-8997-fdbba43804db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b009ed-a3ff-49eb-86ed-2fed582d7f58",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae60c494-3334-4486-b0be-766c4052a765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012343ad-9481-48f2-aef9-2995641948e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4039fa-9a4c-4b44-b2f1-2e5608e31512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d930324d-1de9-420f-86d2-11f32725cdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870ac470-79bf-4327-8333-1f94653936ec",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37e5a86-375b-4429-adc5-a1b193bbcb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed249c9-1f16-4e1d-a815-cff5c888d051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019ea08c-c68a-457c-a085-23cb5f4ebda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d28cbec-cc89-4908-b45c-1390c70a1fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a89f60-97d9-48d7-96a8-d1254fcc4587",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1333504-00f4-4f6d-b0bf-ae65cac0eebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd28790a-5dde-41a2-b67b-510dddc02ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35cbab9-8585-456c-8e48-931e888906cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffc86cd7-a31c-4eac-a9dd-493071778161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9922f64-1026-462a-b156-249b6ebdb7d3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cd16b4-9b1a-489a-9e4f-ca0a63cdb970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a3e8d4-0a1f-4b2d-a4db-854400adf5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492ec0f9-5f79-4dda-a9fe-c1b457309678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "638ab673-fa53-4f8d-bfd9-57f7b2ab85c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e68e9bd-aba6-4654-80fc-a9f90c2d4950",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674e4f50-0930-4c1d-9235-cb37ba30c708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08432ec4-62e6-479d-9dea-9aef61c74b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9269372-134a-4733-a5b3-58578e826c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0d9aaf8-2576-4542-8d27-75f68baae3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e2fd8a-d916-40df-bfef-dae6b84b213c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdc0d0a-106b-4b6f-b106-58db3bfcec30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36e0a3c-38e8-45b0-a3d5-ff076c95af47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e411dd95-2bfd-403f-8494-61c1e33961f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecad7ed5-d3a3-40f6-89c8-83900c4bb660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc55c15c-33fb-473b-af4d-8fb8271f664b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27f78b3-3b1c-4c0e-a5d0-9d940a0efb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785e8cca-50b5-414d-9c02-3ec041c77661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fec9d4-e029-4169-91b3-3b5c6edd5061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca503c1b-c352-49ae-8936-e4123a5c8373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d57915b-0fe9-4ea9-be37-1a39627d8343",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2c8dbe-4f1b-450d-8419-d3795532bd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8db9735-21fb-4dda-bce5-76790d18dd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c614af-851b-4f9e-9af3-2a5989991c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da558d97-56e3-4171-bb39-a6cca623adaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f90e4b-30d0-4d4a-9ab9-1c84d5256b00",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d568a9-349e-4d4e-ac95-1c4fedd8297f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9622736a-ae62-43c4-8355-755589776907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6ee2ab-5e27-4b80-b714-32f9bc320754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb2204e-c54c-4f51-8bdd-e8c19a11642b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1eeac3-7458-4e4a-8c74-ded4d1f815e1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06ec8ec-e416-4ebb-a287-ea4155e55be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b573bd1a-2a2b-47bd-8320-dc4c2ce3ced9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75519b56-533d-4eed-a72d-addcfd40c18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f82597a3-cc97-494d-a426-5a3d9384b3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06f01f2-1bc8-47e0-ab61-e44d361cb9e6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fadc2a-8033-4a53-b51d-5654a7298d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7c17da-0729-490e-82f6-34365ca3a10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc97d920-f34e-4573-951a-aeab0c0b55c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a07963a-06cf-4486-ab8c-81c89917169a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea913597-9663-4110-8b6f-fa0ddc035c63",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7476aa-bb37-481c-8a2b-f9da34e989c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dc8eeb-70c1-4520-9b70-d83901276bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e267d017-fac3-43b3-8921-eea882b142ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d3b3c0-2b05-435c-aa28-4c78e975bb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3388888b-ed41-455e-8672-f1208c0fd451",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9012a3cc-f61d-4428-b723-4fcfe5fd4dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70cb576-0229-4b9f-8892-add1c0c9839d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513b44ef-4ff2-45d5-a69d-0283ea78be81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b002577-e613-4903-97f9-59bc67d098aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec6c37c-4b11-4dc4-b0cc-58726df8a873",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c60fcb1-3724-4bea-96c7-75b18c69661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7427c474-2d92-4d5c-a144-7f007301422d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5d8e2d-e541-4396-bcbe-6d4f437c5ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "196103e5-3398-495b-be5b-bf184f9380ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8271b8f4-f700-46f1-b983-f04d35803682",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9011f48-a023-49df-ba24-961ee921288d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e250e8b-58d0-4b59-8b12-dd7d2b857a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac35ef2f-b1ac-4ac1-8e17-d03be66975be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "efa58be3-1656-4ffb-862c-7da37ad83de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928d9b52-68dc-4419-94f1-192698d6921f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8a22a0-4122-4f5f-8620-d8add147cf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284459e5-48e4-4143-8381-aa22e3080734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47c2783-ad7a-47f2-ad0a-15c4805a711b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c87637c-acfc-4a83-821e-447589e3425d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e729f33-a0cf-4566-bf8d-3a2c1ae8b8bb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f07d7b-b664-4cdb-8e12-36cf3df3bd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6e62e3-6f5a-47b0-b563-6eeec95ca41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c2fa81-9f8d-4bf6-a425-2eb38ccd305f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2d9c2a-eac0-416a-a853-b930a611d27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7859d0-d434-4e70-8523-11ac055982cc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9288dd-d026-4cdb-95c3-4ae83e76761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735893a0-a61e-465e-973f-1d3079ba29ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5acc12-2cfb-4af1-95a0-39d9284090f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe58eeb3-7105-4b53-a58b-a8867f14b987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e877603-0fc8-441c-a11f-5687e0460f3b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c08936-f21f-49fe-a863-7f80e5f62895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd7587c-1aed-4d08-bb33-584d9311bedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0662759-7ee6-49a8-ba7d-eee36f796165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56717b53-6a3d-430b-a306-6231f222b847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d5217f-497e-4a9c-9804-69b3f8318402",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eec6716-333a-41d9-b701-5f3e44bd3621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d996ec40-dec9-461a-8fea-33b2b8b245bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdca91d-4008-4ba0-9151-625bbb533cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe27f78-a511-4918-aefa-11a7fabff801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a246ed91-ed2d-4973-9490-502d2a9ec922",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268399b6-0285-4c43-9ae9-734633ccc5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f881052-b14d-42fc-b660-edbc03c1cee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3f3278-781c-4768-a2a2-3f482f28035d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dec6a7fb-b8fc-4cdd-9a28-392be8b1ee1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9c8eb4-01db-4208-b4ab-1097cb8b2419",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7602acfa-ee6f-4736-a498-90127e11445b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525c1f39-34f7-469c-b672-b5fe6f32b048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfde470-0786-4161-a49a-e27d14a8eedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c64584d1-624b-4754-bef5-84233ba1b7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b9ca6f-a2f8-4baf-99d7-fb50510a86a6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0c2c24-8256-4355-b11f-876b3e0719cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb57aea-678e-48f1-b024-590f2aa455e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e16e294-3d41-4918-81b8-15b500a604c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b6bb3c-ce35-4606-99b0-82ecfdb11517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47b18e8-75ca-462c-8760-2ceeb88371a1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4150394-7383-416a-aa8a-0fa1263d50ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e75a83a-f63a-44d8-9c20-cbce53caf531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0947d378-bac1-4f9f-9a93-d236f047334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d37b25-f63e-462c-8daa-04f9dc46f0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c13e7e0-d756-4c67-a533-751afb78aea8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9181913-9f0d-41f8-8c36-1fd70444e114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1777c4-62fe-4c1d-a6c6-541b098690e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a6f6f1-8479-4af6-9688-ae9a5582c3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb612d41-8e86-4bcb-9a75-9b1716b10b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e2a856-eaf8-4d30-96b2-5ae9c36e66d1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c72f598-cd5b-4a28-99a0-f1496be1b0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb7cdba-ab4b-48c4-be26-c88b08561840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7683acf9-f86f-464b-8a21-dd03a54bb545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb00136-4de3-4259-a2be-65595460c0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55afefc8-155f-49d1-97ca-03b7667deca4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de2adc6-accc-41ef-a872-8f2a2297f82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50f277d6-5b2e-4cea-b696-a35b3f19eaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49072d9b-c59e-4271-b468-acb786d44a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91de377f-34dc-405e-906d-894708261885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3c16b6-4000-4976-bb66-c42455881aa8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a345bdb-0fef-4392-9e72-1f6f36913f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0f2e43-33a1-4ca8-8691-0f645aae726d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b56cb58-6f70-449f-8f2c-9f9b7a334b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6827f2eb-3a0d-4e40-9de4-41c5cbe39f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a21ad5-9a6f-4572-a4ae-107863cd72e9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc814b02-d763-41a8-a215-07892d2925f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b092d9df-f952-4a20-b9e4-13978c44a01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e9e034-ecfb-490c-a17a-5fe7aac42a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "500b6bcb-57f6-487f-bc63-cc2b92c5c5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e73bc93-51b5-4a27-992e-25eb5707bcb7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6024667c-a9bb-47de-9a1d-6ce015939de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff79dc7-518d-4cac-9de9-5cb307a90651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cb6add-bbe7-4715-bb97-f6c7145d4f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4046f43a-7a7c-48f0-82cc-eca791091d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e544cfca-a1ff-4f7c-b1bd-6c0c045f4fc0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6ea9a1-f59a-4a78-96a7-677789c39b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f00446-4574-40ba-b41d-01fb16b9c7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97e3e7d-3c87-4a12-b8b3-4a14b5073554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c977169-7980-4c26-af39-aefbea884b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bab769a-4a26-43bd-9cde-f8151a47d4fb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e83fdfd-2b66-465a-b66f-96a4bf618405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3378fd-6696-4469-aff4-8f1584892270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a391467-c8b3-40ee-b376-edf0fab8fd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85dffd8a-6642-4aa3-95fe-da0f4cedfc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958881da-c6c8-4485-9c9d-1acc5d1ca33f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0075d84b-b1a2-44de-b170-d97d5f73d578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d8e9fb-6fc4-4d86-951e-b041359a5973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfed874-e722-4f1b-b789-957bec6cc769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "74829cf0-4ed7-48ca-85ad-dba8ac560f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c5c613-631d-46cb-b749-4c240afad7ae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c5073f-9e24-4549-a08f-8b67b6141333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e8e923-005a-4fad-a08f-f7ab595e5436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387ee236-c066-48f0-908d-0238e9cc34a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "79009f82-094e-437c-9a8c-cdcd80bc2a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265a57fc-2d9a-42ff-83e2-935a2f7d0150",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527141d7-d0b2-4ce0-944a-a04e38e9dd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a015c5-49db-4698-9819-3c16619db522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d6a424-f8f6-4e60-8d7e-62676716217c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a06ad6cb-35e1-49d9-990b-4728aebd5c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bfc26d-f0fa-4939-86d8-7c221c0b01ca",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b578f128-ebfe-4353-968f-22fec17b54fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b014ce2-990d-4a1e-97c9-16aa2fb59f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4f764b-ff23-4281-a963-927bfb89dd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c7c7a3-22bc-4f00-a359-596db616cc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7115b62b-b4fb-4a79-b487-dc373d2d7a77",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e317fee2-1fd4-4aa0-86b9-840db4826601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817599a5-2c44-46f1-b97e-cd0a854da06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3495e92f-d0e5-41cb-9373-8d8115161438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "044572ea-b13d-43a4-bd25-58b8f76541a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fd3589-9b03-485e-9484-7f65eaad73c7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4614fc2-f0fc-44de-b83e-0cf26deb0522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391f2727-0ada-4c76-9775-81bc24911389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2c7e73-b179-434c-a8d1-3026a0fed00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8939c560-337d-4f42-9c68-17c4685ee2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42c843f-aa75-49cf-b3af-1ccca36e27e8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13d28e7-0693-487c-aee3-7408139512ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7b66c4-a576-4f58-ae05-2f799137a1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4274b396-0765-4246-b28b-6f64323febe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08cc13a2-7463-41b0-8d9c-0c14d4f0ada7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c31acd-973c-4279-8592-f071fc181345",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7d1edf-fa5e-43c6-9af2-e0858ea7a36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a69e9d-f0f7-4fc5-8e0b-9283e19aed2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d1cf05-66b6-4710-bd54-2478c02ed848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b134d6d8-f4f7-4e25-9d13-dc7e46e92d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b753b953-d055-4eab-80d3-b5215f66f744",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006ca49c-1bc3-4574-8565-6322cedeaf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0106c461-cb1b-4a94-9145-fb48b344f3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bf2221-62fa-4b6c-9864-aee26a4f63f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71bdbde0-7974-40c2-a362-373f3205d348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5455554b-e2b3-4a72-ad3d-d398ab08a81a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e082d621-d522-463d-b8d7-09d4be361333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069bf1d4-34c8-47bf-8b51-b4ca3f3e831e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dc9e05-4c3a-4a29-bcbc-bda282617537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "776d0fc7-42ab-4126-9133-dd42371f2bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6a0859-4ecf-4445-9ac5-35b47667aeb0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e133445d-4e52-4628-98f2-3107e265e62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b631f8c3-6017-4d06-a8e6-3ab6c855b41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0885d56-c872-4c49-8910-8f323a462dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55031024-eab9-4ab1-8a34-14dd08410635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735517a9-d49d-44c8-ae35-da776d0c2eac",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9764b77c-14ce-4fc5-afe1-9d7a76cc59c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe572d91-d804-4b02-b0a9-69cc3e85a3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add6a562-51a9-45bd-a083-41b71dc2de37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11b5960c-352e-42e2-bf0e-6a698d5cb389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5822867-ac9a-4f0f-83dc-27f780ccd068",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36edf2be-9c19-44d8-b8e6-f1a78300618a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0e22fc-c76b-45b7-81a1-58a25c83c8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c234e7be-afce-4fca-9fe1-ae446aeb0620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d08937-b60e-4507-be3f-3cf7215794b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f186a3ba-5427-4e64-8fdf-d778eb512918",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345b9da0-bf3c-4ed3-b7fb-bda2e3b548e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2df838-6de8-4176-90c1-3d49a1e5264d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273b5f15-dbac-4fa5-9b92-291ad786099a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc60c6fc-af26-4dd7-aea8-b82cca755fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43ec79a-0b1c-42bb-a36b-33c6def3be0e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ed6c68-5147-4625-9b53-d4ff1fe725f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f0db84-f606-45de-b4bc-7c1bfbb55d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8dec41-8b9b-41fb-b376-d9790d93158f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecdebf4-b6d0-4d43-be56-83bffbf9fa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b553463-a01d-45e9-a062-82db62b279bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4fd2e9-2ee1-48a1-8145-1eb6f371acb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8ec7ee-18eb-401c-9e23-172a4a9799c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1d1744-9c6a-4e41-8a55-8e7804cf1093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "871f948e-e084-45d6-8445-b7c1c6d53a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffbf181-0d97-4b64-ba3e-9f0711fdd304",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef7a0d6-88ee-4400-a153-a53fd76940f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55316ee9-079e-41bb-bb67-84e1c4b657f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba24b21-44bd-44d9-8d48-c4e933594d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dba577-31c8-41ff-8b4a-597c4f83e8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbbeeb4-6bc3-4837-965f-b15f04613b25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb93032-88d5-4ad8-9463-891696686223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f5850d-61f5-42dd-8e10-dbd16bb9eb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fe93ca-669e-4672-9b2d-15eed25aa758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88012d1e-3a5e-482d-aace-dbdfee06a480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be7d173-4f2b-487e-a99b-b8ed80ed3b65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da058b22-d491-4339-9068-46bf6d8081fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15c420c-38a0-4cc8-8493-53f9845b538e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bb84fe-74aa-419c-892a-8f09111a8ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1148f6-393a-4694-acd4-49195611075f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4cca43-f481-430d-b2b8-94de2b8fdda0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1177eac6-c5f1-48e4-9103-c6464468315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb861ae-1d35-4111-a25b-d633cbfb20be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33853986-eb82-4398-a85e-fa142d4add87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ade229-253f-4c48-aef7-4baaeda1a62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98280ef6-61f3-4227-86c7-e4927dfdc358",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfd092f-02d3-469c-bfc5-2b0ed6e5f36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4518d4-c26b-4f9d-9ed1-d918c7d8e341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfa7072-c0fb-4c26-ad7c-154e1cda376a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2982c56a-67e9-4176-89d1-90cfd5c080ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c6deaa-0271-462e-a194-320969097b4a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329262d7-19d1-4187-8554-82021ec97e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d1a033-1483-47aa-bfe7-505d62442b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a29d542-4d9c-40ec-96fd-fc1ce7ea23fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f68744cd-9cdd-4ffb-8f01-0dc82b81cd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d1358d-466f-470f-96ac-38e67e56841d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bae06dc-82f2-4220-a68c-b2ff9bdacb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45be618a-a06a-4592-80f5-2edeef45a2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c10c4c8-27b9-428f-aa47-4947f4200f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1dae1a-2ff2-4c9b-8e20-00cbf1a5bcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96b490f-dd55-4c09-9e89-c783682783e7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546ccd55-49c8-4fa5-a4b8-2a3e3b1669cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25cd6b1-8fc7-45c0-b68a-647b195b33e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f26151c-1952-4cd7-91ef-bdabe672a0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "159e404e-1f1b-4521-8b4a-dc90afc8d175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c528a8e-ce6a-44f6-9dcb-11048b68067c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4899e1e1-febb-40e6-910e-d45499d57dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1251abe4-3925-4a06-90d5-282eedb382f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6821d3e-2cb8-4a11-9bb1-500b53560508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfbf190-6aa1-4509-975e-687eb79816a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092eda2b-a361-47f7-af7a-214d3ef84602",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4cee25-d901-4e62-892e-6e3a287966b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9547a4-f6ea-4afa-9a9f-38e3a7456959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d71700f-66b8-4715-aed9-5afe505e6b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec59884-a339-4df4-b3a9-1c6fd9d64e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717f9e85-2778-4f63-a0f0-8f81a58708da",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158aec15-3d8c-4a2a-9766-b824dcff062e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9c96a3-1d89-4cdd-99f1-bf41161167c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adce0a36-6679-4349-a24a-2f42424476a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c1e768-fb87-4330-853e-358a4e41f1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036da076-6b13-4e0f-bad1-13e23b4e4563",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83688f32-9f05-4437-9373-4c3ba5af0075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb35b46d-75f8-4e4e-a16f-24d55ed76bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f20401-bca2-4abc-a0ab-a15a6e7360bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c95e685-f573-45d3-bd8b-d5a55a38c470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433dd7bd-3cac-42ec-a085-67f8321a3680",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469b4a15-7fcd-4f34-a6ff-512a17806bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8211f2aa-e1a8-42c2-952a-77f178b2cbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4b2c90-5a13-48a8-ac96-4c61435efbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0970654c-3d32-4363-b1f5-e6bf5f4cf4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175f4a6e-0d8d-416b-bfd3-21feb1005fa5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58b9af5-33ea-4809-9a23-1f1b8acd38e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e90720-1143-4dd8-b783-3fc12c05e3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05b7f0e-13ea-4c7b-bb6b-97007252f69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9013565c-61bb-4379-9a63-f08b2e645ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebaf4d06-1dac-45dd-81c6-b7f35e00c5bb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b638168a-589a-4535-a9ea-369650c89fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94db5f28-860d-4efa-87f9-14a393b52225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192f73b3-dd06-41c1-9b90-40deae3497fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd9c22e-30de-46b7-9625-851d329da38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896fe1f6-474e-40da-bfb4-8a488bf660fc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0610845c-448a-4f23-885a-ee8281bb437c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4382af13-74a2-4e06-85af-5b2650325ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab6843e-d637-4b03-bf7f-d318f67cc427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b92c5b3-5e2b-4d93-9922-0f8fb815bf1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff8d0cb-d6cb-497a-9ac1-bc6f34019203",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5bba19-8048-4eb3-a25e-e832e35bf6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70de2327-3a5b-4a17-87df-e819c6581030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57c6a4d-8fc1-498a-bc89-59133884e081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0449eeff-ce2e-4049-bb05-f58feae306d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2949898-106e-4448-a05d-4a19caadff1f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f13e7e-f857-46a3-b543-1c0014307e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dffa4f2-0054-44f6-8419-b82bd7b8e6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797299b6-490a-49e0-a10e-225c5ba3067f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd31f86-7789-4edc-83e0-48c07f35fcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa16c44c-a5b2-4b18-a969-98952e7aac1d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae67d9ac-fdf3-49b7-a55d-e437fb66e7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ead5d70-0dc5-447a-b556-c24ef49fcecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f076b0f9-8f85-4429-b19a-5e1eb75ecd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5610fb-d6d2-49c7-a49c-47ecdbc54838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0452c6e4-ba10-4caa-88e0-59a5c4449253",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb15f2ee-86e6-4e77-8ab6-992102b0ed7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a811a4c0-a035-47fa-a92c-5645ff564139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8656815-2932-41e4-9d85-d9308c95645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e277147-0425-4748-a0e4-b4321f956969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7466ce-238d-40e1-b9cd-7f9fad9c0c7b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48fb1b6-f502-4f49-9c7f-46216731d9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4693666e-2ed9-46e0-8eb0-e6536b624a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02ad3e9-172b-45e2-9dba-08c48a574633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acfe4213-25c5-4ce0-a258-bedaa056ce00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b48933-ba50-49ad-8f78-5cb5963047e9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11442161-5599-4281-9fd6-ba73a12116dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3ad51e-65f1-469b-9eba-d3e80b66a787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646025b9-a5e5-4e02-9e34-e3732cc38ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3861894e-e9b0-47dc-89de-0e25e1f7faf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9382c899-bc9f-4663-a039-4b5f87e255f7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123bed19-5d22-4d6b-9d04-0b56d278781a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0f1d43-ea67-4c8a-b6da-922f720b8fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4855c3d-1f21-4a62-b367-43968061174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb1fa72-537c-4910-9783-3418a00b0292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcc4377-d063-4003-9f64-6b823182fe0f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f632a688-4e80-4c1b-ae8b-1ff7b6d92657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e360c994-f580-4832-bf40-4e3330c943da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2f462c-85f6-4a29-bfd9-e5b55d334009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd06414-cfa9-44aa-9557-139b942768e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7000c8-aaff-4bf7-a10c-bc9d79278b64",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c0c8dc-8041-46c5-b13d-3ee3a4bc83fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b0d5c5-6e2e-47cd-8984-82df28fe0dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f90287-3d61-476c-88ad-cc560b6d4140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "041399be-9a11-4f31-be80-acd8b09b2807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3ea1f4-cc7d-4f01-a6bd-9c138db175b8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d45df60-c8a8-4555-86b1-772a5e2b9862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5937ee27-ec0c-405e-8364-02ac1233db03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc2ce2f-c4d0-4ebe-b58a-151b2a4167d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd40439-8661-4b62-b34f-40e804d58c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad21b66c-ce14-4e1b-a50e-aed6a55a2342",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcd22cc-4fb7-41cf-8cf4-71a47db136de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4840a464-b2fb-4044-aabe-abf5d5778501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abbd407-bed8-42d9-82ce-4d56b01062ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2bb3ad8-3671-4fd9-aeb1-3b1593bec938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0618ff4-55e0-4fb0-8273-08968165ea57",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e289313c-b54c-4102-afa9-a9126106736d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e8fbf2-66ae-4b8c-996e-872fbad4d63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c4f88a-3ad8-4bca-8563-4ac3f73f6cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bef7928f-b41f-4be0-8bbf-1775367f43f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e0b849-1ffd-4779-8dca-5b4d35fee889",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d923b-e67b-4eb8-aad0-0e684649055e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6817c4df-508c-48f1-bc39-a75ba584d163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7ece71-c677-4736-8595-1d4a822f07e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65dba1cb-32e5-4ba5-bc7c-cdea55b664e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650ebfe1-f233-4257-bd7a-7151a221ca36",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997b3a60-0e3f-40a0-9e53-ef2940d32479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94965497-b990-49f9-9b01-98429c890356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373fdbb1-c92e-4525-9b3f-7e6a89087f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6de08d0c-594e-4834-8c11-f558868d9392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f0539a-6fd8-464c-8788-c2877e9062e6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701ce912-f56a-4aef-92f7-120c9c29a9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a49019d-3308-417d-ade6-ae579631bf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a323c47-ad7f-47b6-9889-9564b64c0056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf0e2bc-a41f-480e-b0e4-380f3b47321a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b138678-74e6-4560-aa30-535b235bfe41",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fd79b9-e93b-44ac-aac2-26ee0ed387e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428cf311-e2ac-42e8-81e4-417865d8d41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fee573-6ce6-4741-bb9a-0e615a34c2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "172310d8-b577-47ec-841d-caa4ff0d287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefbb087-3395-45a4-b657-1340bafd1eff",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dafe48-e833-4100-9315-679d334f6b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88719a49-014c-4ac6-a33c-d0ffced9a13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c72dfc0-b166-43c2-be82-fea04ff9630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10a42f14-fd24-401e-8cb2-8499c1f818b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96da9cbc-e58f-480b-b1bd-d2af8c0fe28a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9736aa-b283-4afa-b230-fc6df337a80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574a32de-f5d2-4b33-91c5-1cdc84f2dfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7075f133-cd6c-48f3-a512-55ce406be525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd11979-e1dc-4d0c-be16-8352b2e317d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6d8aca-9d52-4ae3-b9f2-4bdb13f4fd1d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a76b9b8-4e55-4d0e-a586-3012695af619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d055cb32-46dd-4da2-abcc-6666200257fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aa0813-a336-4dc2-bd28-55f84672a7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "76ad6207-01a6-45fd-9e69-de5470858c72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0befbc77-00d2-4eff-8d87-2c9f830c6b3a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0980f10c-006e-4a99-aa7b-5c385b266596",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df68fece-f118-430d-b5eb-2027554fe0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55a37c64-4ae6-48ab-9cc5-804109de857a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe703c4-0dd2-4a84-ae23-110d036c81e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0bd0f17-6f54-41af-8783-5de290d7d4e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c60a2ce7-cb14-4a72-8bc1-7cc80884e4fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ae952e4-8b1d-46c1-bcab-efc90bff944e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1f47e27-96c8-4747-81ff-f592f28b9f41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a949aea-dcac-4da3-aa6c-06285fbbec3f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc03fa9b-3ac4-404b-80be-b82e8e0a22a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9ca319a-4a04-4cda-82f4-81ba1f583cf0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f8959dc-4bf5-4ca6-9538-17ab444a12fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90db2b30-d07b-4f44-b589-9eb85339a6c5"
                }
              }
            ]
          },
          {
            "id": "96b95b6d-d768-4ed8-a2df-d72893aa1caf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31149c4b-b5c2-4021-99f9-8bcfde28d4c2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "30b50a16-578c-40b4-b5d9-f3d84f842132",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c0337f-ca54-4cea-b1bc-b61830dfc424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a6a1bd3-e580-45ea-aa73-a8273ad74c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3f3a4c-20cf-450a-afc9-cf6ecc26cbd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f637fa-82f9-4912-a989-f4c88930cf12"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0054812d-6a4f-4514-8d99-21875c13a760",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c8a2172-6829-45fe-909c-8ab8f495ede0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d82395a6-dc0d-4bf5-bed1-4ceffbbc2080"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "089ad111-bf0d-4253-90fb-ecd1e62bb6e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "384a41dc-454f-4cbb-8c09-05fb0b90d2bf"
                    }
                  }
                ]
              },
              {
                "id": "c1393917-ff59-4a47-aa70-1b53f331cc0b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eab1f919-8583-4ebb-99eb-66b60f4f1cf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f447bde-4ecf-4a62-86ec-899a86595ae4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e175f11-875f-4ceb-9c64-c18c8d2adb52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1ce4f04-6d62-4055-83f7-9498d01d387e"
                    }
                  }
                ]
              },
              {
                "id": "921b7e2e-0c3e-45a7-b452-3d6278bc52a5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bce83f9-d44d-4a2d-8f7a-ab86d8c27ec0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6195355-eb74-4387-a3ec-b924c3d77051"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ab536e6-6603-4bc8-9eaf-8dd5b4cba409",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5854e8c-2eff-4f4c-a2e5-4fd13dd1f650"
                    }
                  }
                ]
              },
              {
                "id": "284cff51-43b0-4348-b290-b86ceca6d42c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4c80d01-6df0-43e7-bf17-dba1b737de14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a7356d5-8a2a-450f-8c63-fa990b3a8c82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7793c698-e565-4e48-9f9f-3f40eb485d19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "32deb21d-70ba-4935-bfec-aaa191daffef"
                    }
                  }
                ]
              },
              {
                "id": "c0503aec-3ea1-416f-b119-e9ca47a11189",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "568138e9-3d2a-46fc-86b4-264eb8006f35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98a4dc0c-3082-40eb-befd-c35498fa0e1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53c4260b-c768-4b9b-aed7-1336ff4f4623",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b5a99928-7d14-4331-985f-087896b904b0"
                    }
                  }
                ]
              },
              {
                "id": "0fa35594-450c-4577-9642-3cafec23c3de",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12b557f3-f381-4bf8-ba9d-57284007c5c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d4513ef-54af-48b4-b34d-06eb93fcadd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4a09bf2-3957-45fc-bd7f-927fb3fa1c07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25849b62-1908-43ff-aaa7-84e5106c716b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "945ca795-6dcb-4e84-9746-7a7b72173260",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a666d36-4018-4c17-8907-bb37142833ac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed87d86d-beae-45dc-ae75-870d558c48cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a948935a-f421-481f-8d7e-9141fb314a0d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1969a4ca-a893-4a27-a218-886a03c2df70",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e3079ec4-8c7d-40be-84d2-0107d25fa82b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5e83398-4a9b-4f90-88d1-8bf40ea37ee4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58271175-ed9c-4c42-bfbe-3a5ba12085a4"
            }
          }
        ]
      },
      {
        "id": "6bb34a95-f773-4c1c-a1ea-f3fc7306bdb5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "aeeaaabd-679d-408b-9fb1-3ce2a0af3371",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca45de0d-da47-4feb-bf98-5bdb669f51c5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23dc6a90-7dbd-4202-acfd-13f70bdd36b8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a61774b-b664-4eb1-b461-255cddefc10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e3bac3-5ad5-4d07-bc8b-6d54923d897a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837f5577-9d0f-4b60-b4e0-6e8714a22ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "92ec69f9-c2d0-4dfe-93ae-c4a4d601092c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770c22df-23d0-4081-bc7f-d14025de3e0c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b603dd5-dffa-4a2c-8a08-b665322db6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7118ae02-a3bd-424c-91a0-cccd3c7d946a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae80dc3-7b9d-4de1-904a-5c61af83e2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "174e8706-2aee-40a4-9e14-00c51682fb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706bbc73-f4bf-49cb-a083-b3d9765be6ff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf30260f-acdf-43e6-a50d-73073c9ab8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5454242f-d062-48b5-828d-534b8efe8607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbaf76c-a399-47e9-9cb8-dd7b0fdb4b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df80a320-5649-4bf3-9f1d-142257848de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c0fb9d-4e90-4971-b277-c30bb995ae24",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5087100a-4c42-4030-a923-fce4e1b78cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc471e5-9688-457d-b28a-9b33157b60e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9037f0a2-1513-479c-b213-f648e8fc3fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d89bdc36-bf21-4ae4-8030-5cf55295a327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292ca71b-a6d5-44a9-a410-3df7f3644062",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22db4d3-b6bd-4ea1-accf-9608c5529501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd07061-a0c5-4a0e-bfd3-6fa635b29fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dd4723-ce4d-487a-a918-6ea168fd49e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f57cb9e7-4fc3-4b23-9def-21aa71b9400f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f5829b-a00d-428d-a7c0-873f241fa755",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d002a5a-d4c3-4982-883b-37b6b39793a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3b9802-2e92-41be-aafb-3f0d8e09b7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff722248-e552-4d7a-ae82-18627a3a7104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb66abfd-bfb7-4860-b7e2-caec40333e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aca9695-b016-4a05-904c-9c325deda60b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288fadab-7441-40c8-9a94-3ed04a98ae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5198eda9-98d8-4367-915d-9d2a7a23008d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b41ff7-4f04-4a94-b0bf-1dcf639ecc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c80703-ae23-4ce7-b42c-a10f783d00aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23ee570-a1bf-4444-984c-a5e9760e1b09",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f7d89f-baec-4742-b66c-b4f830bf0fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec22e8c4-5563-4e37-b112-6efb21194600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d2134a-459a-4ba2-a572-1f12d6b64bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0d598c-c1d2-47cd-89e9-79e0ea86aae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f074a7a-606e-4b24-881b-bb2ed1a4769d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f469355e-8751-4207-8759-4a7eb848c79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7423660-06c8-4946-b52f-fa62ce9a7c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d31d79-6fab-4001-b0cf-880c20c7ea77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f90c779c-2846-46c5-947e-ba8176535ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f0d21f-178e-4105-9a9d-bea24a836012",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416007a1-8c67-4401-9429-e9226da75467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1db683-1a55-4d63-b8b2-ed6ff3cdef35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a785c887-9c8d-4ed6-b57c-dcf287f9de19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89edcc34-9eae-4b8e-9917-acc07271ad85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9133c284-d52f-48db-a006-a64754c374cf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c36d13-4ac0-4bcd-9efe-d877bef9171e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b89682-01af-4b74-b222-1732efc15d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dc9feb-3a85-4db6-93a5-18d9a683e1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f1244a-9e2e-4458-8db7-f164779d02ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ddbfe0-f1d4-4223-95c4-3395f337ea29",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf52d21-88c7-40f1-b387-9ab530a38f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b4bc51-b671-48b3-8882-e5a8cb7ed5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc96c067-dc8d-4b6a-aa43-68cd196be18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea76b290-104e-41e1-8b5b-b679e88d269b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532f4d80-156c-424f-96e3-f1507b1624ea",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10efeb99-ff79-4687-987b-89da62c572f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aee5821-70c4-4816-aff1-e27e63da35aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc1de0d-fb36-48fc-9a25-9e85ef83209a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c99f102b-51b5-4c6e-9461-e87229b5f163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c25d78-b3d1-477e-8769-b9452fffcc45",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71704a3f-d752-4b86-be9b-ca2988bad9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20072e3-c18d-4031-89ee-620488eef4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea8bbca-3d6b-4b9f-a4d2-8efa4da956a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d89c8873-13ce-44fb-a808-b020a586e7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885786da-b83f-4d8a-8a83-d9fae527a641",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bed06b6-54c6-4281-bacb-2789beae09d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d7ba6c-b05c-4309-8750-4e68f7da5d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f1ffb2-0b48-412f-a436-e2f0b7d23a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5fdb67-3d0e-432b-b795-415ff792d2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9d0ad0-3b81-4a57-ad4a-b52b402e675f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad47a4d-e08f-43ea-8285-99a704780a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6977e0-93b4-4660-8637-e466b51e205e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c061be-126c-4d5a-82b5-cd8cf6585614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6a1234-1255-450c-be1c-96d0f4b8275e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bda6806-5ae3-4064-9af3-7a247d789e85",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1444877e-f11a-47a1-98b5-68a022ee5fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054b946d-453d-4802-8d32-15a92ef5ae75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133691ff-6a3b-4203-9f79-e6df4c9e05d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c3d9fd-99dd-4532-8e5c-f0193a5b1317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec46a5d-3ae3-42de-b97e-204aaf136d4b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47f355e-a744-45a0-805d-c03d98be774c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc830530-1aaa-4b24-9965-4ad255a2cf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340340d5-2e42-4bf3-a2a4-43bc8472de53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16b5d93b-a400-43af-bddf-4e8147848d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60af1032-d269-4aef-9374-0f0de739332b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a5f581-5abb-498a-8c6c-58c40d56f7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70d52a5-4c28-4dab-bbb6-39efbe308610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd54cb9-a56c-4702-a462-e1ba51ad1e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2627ad50-8430-406f-a5a6-099273bcbfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2cd30a-3f81-44f1-b7b0-c8232456301c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826de0d1-6049-4fb2-82e4-590d51eeaaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed7bcf3-2a11-4dd2-9fe5-475a7a1e994a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c24db3-10a7-4af4-8d99-915a6ec26b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6663acaf-1112-4714-88ea-100d78da7f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87b994d-a1b9-4be1-9caa-ac2a1db4e7cc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1d952f-88ae-4291-a4ab-731a88afc903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0e2b20-8411-4e50-a967-a340ec3d333a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5a56d4-191c-449b-81c7-556ab63b1988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b89c74-da29-4d8b-b3c9-2c939b55c057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1783024d-81e5-4ad4-81d3-d1cd551392cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e76665-d0e3-4666-90c8-efdc373db26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb30ac2-29a3-4a4b-8343-9837e1f785bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a170d4-8358-4459-9192-dbd095e8fb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb622c1-117b-43ae-80d3-6f91ca4bb9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f95707-41c3-40ef-9d04-e4009a161de1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2912e9b8-331c-411a-9404-5fb3109b3893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f0e953-1f2d-4447-a1cd-a045c5d3f5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2991ac1f-4deb-4d7a-a356-5803de5df740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19dc5448-91de-49f7-9b04-c7165aab386e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3d874e-29bd-44cd-b02d-c16c574dbdc2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2736b2-8d1c-4fa0-9a9b-ec1e5b10fc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a94eb1-efd9-4d38-8ea3-f36c0503a402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e561b509-3dd9-433d-a24e-f233db8e3da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9763c0-c35a-44a8-9db7-7039b04eff5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf1670d-d29e-4e72-a8ae-617c062cbd83",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5acff9-96b0-4258-9b2a-94fb4bf03aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb88a26e-77b1-4028-b148-8bf753441425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cb20c8-d704-4590-9585-c0e8995aa7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29288cc-1aea-4110-8020-d3d97ccaadf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9011e8d-8289-4ac1-9521-0cbb515a1c0b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96704081-3d46-4ba7-9b98-3a89f6c8d0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fe8fde-61cf-4fdf-acd3-dc55fa1bff1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4bc42f-fe22-4d8f-a088-b22ca31d0912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbcbf9b-4e5d-4a30-a28a-a57290b983f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec11de25-1ae8-430d-a119-0026dba1c34d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf8c5cb-e187-496d-8263-fae7263ceaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88fa495-4ccf-4db1-8974-387d3d74f9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eb466c-2f5e-4467-bbf9-cec151c5d52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a133e481-5af1-4839-b483-b0d465b69306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0052967f-7e46-4254-af2d-7e1cd12bcdfa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ac135f-7f17-4096-9c15-09afd2394717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dae68a9-8746-488c-8cb6-98e55ecbd2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cc93d6-ee18-41e0-8a2c-b78d8d4de772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9731f103-66d6-413e-8e0d-46df447687c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd88795-cc33-497a-a252-d46f42b0cfa6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7086ccef-9f89-407b-a4b2-da33f13aa3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08850d1-20e3-46ab-9501-dfd1d7b6b783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd8c1a1-fe17-4bb0-b2b7-30deaaad30ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb023253-cee2-4531-8f83-ba88a570a2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c067f27c-70a9-459b-b325-cf59b6e9c876",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291ec6aa-0ec4-4c79-b99e-28b19a5ca0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002e9c21-f3bd-49ad-9657-47ab613b220e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd086e2c-7d78-471e-993e-5bb3fa5f8861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88fea6a-6117-4a5b-98b6-7e1c47299029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3565ca88-ab3f-4fe3-ac6e-fabe2588e3c9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5707f4d-d701-4dd8-80dc-2df3a8c13e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e3980a-6a43-4e73-b2c3-81316bbb9623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be18981b-9eab-436d-a039-f376aec2870e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "438e7a35-cab0-4498-94c1-01172f6ca6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bc2df5-d6c4-4254-91bd-7855fcc1bfcf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c925efb-a6b9-4c96-9a95-68ea442b2fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4682578b-8998-4700-a6cf-46638928fe92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8c15ba-ec37-4106-ab32-27dfbbf1381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9943350a-f094-45f8-be99-db510b26ca7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5aef85-de66-4a38-82c5-a41e0967e342",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554524be-efaa-4e23-b367-68d11c845683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25137b66-6e4b-4471-a04c-d854e7ac7ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b5b141-cef2-48da-bcf3-292a33e5375c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2109ecee-10d2-41f4-9d07-a5dd62b28952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa94767-f7e1-4fdc-8a01-b01d15926cf3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcabc938-45bd-4549-a8c3-af6327e97d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a96483-9a87-47b9-bdb6-0518db970a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6882e0c3-eda6-4c95-a340-96890438f939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93467fe-2b0f-436d-8fd1-f2e5581eaa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e90bbe3-02f3-4b56-ab1b-56e47b47835c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69932fd-ebcd-4917-a9e6-65385d34042a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee5fdf5-5fc7-44ea-bfee-d3b62d8c13b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e76465-868a-4c90-8cff-8b0d97b6d443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1689733-b81f-4bbc-92a9-58016aefb04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf541d4b-e050-447e-a5c5-07dd92ce7b4f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da04461-3539-470e-ad1b-216fbae9f258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca370b2-8a25-4f2f-99a4-34db25d419a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00a6645-245b-4fc3-a12b-3906df420f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b4dd48-a89a-4a3f-8e3b-86eccf205bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d341cf-8708-48a5-8d7d-7093435a1065",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f616c59e-8c32-43a2-a70e-871138aaf078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8d6178-7b11-418e-881d-39fea10aa951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d439f475-8cec-42f3-97ec-85ca36cb9c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0524232-c70e-4163-879b-e554bd591afb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f85b71ed-a59a-4b96-a1c6-b15bb4ba0c4f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08af88c8-0a7b-4857-acbb-0f6456bb6957",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8c3ac6-149b-480a-b6e8-910a8bf88588",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a9eb6b14-99fd-4e97-bbc3-7183783a95bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb3cba3-ebd2-4e80-aa64-0aa6c85fb244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "153b0506-6501-48be-9af3-acde9a159dbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cf70451-2119-4078-894c-499f015f3f65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29b939f7-3514-4c85-83ce-dff0cd647fcd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "328d4145-ca94-4d94-be42-ce1eb43bb79b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de7f9ded-74e1-4105-b6ec-e09940cb6ba7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "192057f2-9e1d-4903-85ce-cd8d9f2911e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c0e56d4f-8bd1-40f5-a7c3-5fcbf021b9d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f69b3b1b-6a1d-4f9b-b7d0-c1a0dfbb5435",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a13b0c5e-4b81-4563-9539-a9052a8273f3"
            }
          }
        ]
      },
      {
        "id": "a0c348c0-4bdf-4864-8d14-5b4a8354eda5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bed3694b-4d98-4718-9e4d-8b3528c1bf53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd651615-c6dd-4f2b-b259-3678450eb11f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cfd894f4-5094-444c-be1d-16258179b11d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97acd2f2-6595-46ff-8eff-93201fe398e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c8d12d-5d45-437d-958e-ee99c984ed44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d73445-b884-4294-a97b-5c22925aa982",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc71a20-056a-41b7-9220-a89468478da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3597c2ec-06b4-4209-82b7-f039a4be2a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a1b262-5c16-4d1e-99c7-2e373473e2a6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ecec12-6901-408f-b303-8d28aa41fc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb400ce2-28ac-4002-b89a-129635b63561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd76c97-e881-473f-b9de-94d5ccc7978c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c33a42-ae06-488e-8226-77b025bd5689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac287fd3-ab54-43a1-9171-040d32496822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d71a228-a1c6-4247-907a-cbe3a24e216b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7a7416-bb00-4873-82a5-46d016387eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa68c38-b29b-4a7f-867b-624f219c64ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459e6dbc-8481-4bfb-bea3-b6b96b04e9c3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579d955d-7a0b-4756-baf5-96e3e9c41453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f446dea-e775-4ae0-b5af-3a276b056162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e672b1ec-8249-4ef6-bbd6-c5a59f527582",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f30536-0ea9-4e2c-8e27-f7cdf7dfc42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b03d44-5598-4e61-bd7d-e34ecef8a724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a02fbd3-e292-443b-9c5a-a9a1c40f222d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7491e91e-423a-48ca-9418-0d35e10aa5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156198a4-b32a-4cbd-a21c-b5f562209821",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439f7048-5783-4735-8dc2-3c6885ef1666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30dfd7f5-b77c-4894-91bb-ca48dbf9d339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2286ba73-1fce-40f4-a0f9-18cdc89c4303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eaadfc9-90a3-49fe-8795-50a5ba4e2137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0501c9a3-c19b-440c-b01c-e427bcef10c6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77582ef5-2327-4c32-9d93-b84c1cc209a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef21d751-4fd3-47d3-aeb8-662cf5712c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15987a1d-5e7c-48f3-9fa9-4e60b7f272ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fccafe-b2fa-45ed-9490-2c55fc724a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd63d882-d5ba-41e5-9a99-4bcf994019f9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba66607-bf10-4837-bc87-bd461b46c23c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1974fcd5-7bce-471f-83ab-637943495e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35957a83-dac2-42aa-acd2-4b16a0d6b226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e76efa7-7ab1-4eb5-843f-8515d0af4200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4580ad96-e635-4605-a030-218b56b8ace3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d16501-844c-4fb3-8788-8a4e095b5f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0a8364-01a6-4efd-9754-2b9fcfc94b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e4493b-99ac-475e-a3dd-e17e53b0490b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dab70ce-2cfb-4600-bd0c-bcd25d3bde1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b05593-82a3-4cb9-8d65-5ebc7e1449fd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c0d848-115e-465e-b1db-21f4080dd6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373e2558-74f6-442b-bba5-f8c18760f5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f592a465-4cc6-4e47-9e8e-aeca6074a4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92ef526-96c5-4a9f-bd23-5721924a9ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3082c6e6-f648-462a-b3f3-26c4f7aff5ed",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3e3ef2-77e7-45ff-9529-40e0f9ca17a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98f1b36-1da8-4c6b-93d0-a4fcd7007ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4496e4d-80a3-4434-b580-d59ff0fbc472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec77cab-6e71-4a2f-b576-233486167dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6922eb-7fcb-4a83-8db7-c0e4441d3bb3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983167ac-7c3d-430d-86dc-0b27913ae1c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b3bc79-4d27-4665-8d56-0c640c72361c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713641ee-f540-4679-b10b-4d73e08ab184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b47a736-21ec-4eac-9815-5dcbafcc043f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead80482-2eef-4e25-8c8e-68bc068e800c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a424a6bb-5fb9-49e3-a7e9-955e472a6a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "442084de-143d-4ec1-b8cf-02e0f5917081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c23372c-7d67-468c-b7b9-df873ac67f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2600514d-cda0-4239-93df-e3ad81cac5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c96e872-5079-41a9-b5d0-84c33e77c3af",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bef0c7-93da-4922-8b2c-16aba8385701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57284f12-9235-400f-a7c1-583da233dfc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1283e076-d295-4882-a5a4-c80e39b25bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3ec42e-de6f-45ba-ac1a-9ca7770a1850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2e4e7e-b0f9-4e96-8a8a-9a230397685d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b29858-d403-4eef-8595-1c54253812f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd1f493-7185-45bf-93e6-d9a22b9c5c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5083c495-94e2-45b8-86b0-c0a1a499e78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff93fa73-a87b-41ed-92b6-411f8f706562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7a796e-62c9-4a37-8b6a-d2850332358f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8316ae77-efa9-459a-aeb6-1c2221c3a2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0720f0f-799d-4cce-9ae2-b3d1c88e2662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebe6563-d09d-4afd-8fa6-6541cfa45c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be705e46-7a8c-4a6e-9cf0-cc7db495fad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0241a4-dbf9-42b6-9fde-fdc2f21c8b8e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76808054-9173-4b6b-9e5d-945700d3f0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c70ec4-0ec9-4306-8372-31f8ce44ba5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3b5775-7333-4002-83a6-e2d63050339c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc431b77-a3f3-4c59-a23f-c8a8779934be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67b8913-e81b-474e-a3c8-8f60a10030ce",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb39f0bf-156b-4aec-8af5-940d354151f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bca2db-0a6f-4f24-80d2-ef1f91412a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e975dc-2a64-4dc4-a0e1-bc1be009f4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdbc4f6-dbaa-4b89-82fb-b65fe16a7e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54533aaa-c0f8-46cf-be30-76755242da3a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78db9c8-f250-4788-a32e-c1dbe7030419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b187e3c-8123-46bf-b432-0b2780ad9cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f87aa0-9335-4681-8593-39272deb62c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82004dd-9b2a-4fd1-9388-9d734bf58bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62faba7b-5d47-4292-82a8-596cd4c71d95",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cedb3f-7b41-4783-99c3-eae698bacfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b12b007-50d1-4a1b-a899-b6aae44a180f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd55e51a-63de-4a72-9ef5-91ea1e0defb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf329e23-69a1-4725-b617-e36206dc19ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c3aa68-0b21-4408-b6e3-8e9ce9be4a00",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1db7138-4bfd-4fc6-b801-8bb55865227e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2340f14-7af9-41d2-b746-b5ee544b3787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f40a90-50a1-4bfb-8cb5-549362e8c61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cb20e7-32e7-4261-b988-c1d76baad15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f04406-8ebd-42bf-8f1e-d934dc267510",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd03510-7f3f-419d-98fc-242304158ae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2379fd24-015d-47ee-a176-dd94e3cad3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d60cdd-ef82-48ed-872c-59d3595abca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f0a381-7f99-4fac-b0d7-ed59fa2e3552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f700e318-6817-489f-9358-9f8b3c72a549",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31cd726-08f6-4e95-b882-1584c64992da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c38ef133-e1f4-415f-b0da-dd1c89551805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e55276-c2ff-4155-be01-9c35234cc094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63f8433-8fa7-47cb-84cf-2c069c608088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff26231-f09f-44b7-9188-649bfea8dbbc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1919ac68-3cf4-4215-9795-0a85455bd502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf82c88-ce08-4805-8827-b34f29f522e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0632e2-ed0e-4d85-8747-2f0c73be586f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57de027e-38e0-4828-b86b-344d2d4f09a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2ed7dd-383f-46de-91f9-9396a698308a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ce06aa-9c9e-43f0-a7ce-2e442fc92cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b098dbc-e97e-46f7-a49e-f10385d66a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb8d52a-da7e-4c16-b3a3-06bb76ec6e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef50ffc-e15f-4aa5-af07-59a6c61826a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300b2a56-ef33-4399-9805-36b18a3f1612",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9624225d-7169-4146-8d61-51594831efbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bfadd7-d409-436e-b295-5547f92dc7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef89cc94-f1d7-40cb-a547-ffc6d3e884f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981e9f8a-a8bf-4209-9114-07bf675d6205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffe8ec5-7a55-4552-84c9-57d05c9424a7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c3c8cf-7365-4966-99f4-48cb59853058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5b9a63-f1bd-474b-87e5-534f3b25bd15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1bfd0d-e209-4c53-9480-51e4868d0277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4804d1e2-d528-44d2-b96b-6a2b0857f7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21331061-b51d-4a21-871e-e9bcccc6d4ba",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acef729-60cc-4391-a683-ab4c91b7aaa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074a4942-63bb-43fa-9801-309c8264e25c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c81475-fb7f-419b-9960-7e1dca1db569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf183cd-fbc1-4d75-9c72-611ec748f41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecf1e6a-0ad5-4ca7-9864-e5fd13332474",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1a5869-c29a-4f38-b613-cdac5c3231e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9d1c345-231b-49de-a3aa-ca58294fbf53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55358a74-847d-4539-a27a-438bd8b55f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e460d72e-b646-473e-a3a4-f3090d7904d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c426fd-08f0-458b-a477-d74d0400d62b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afbef5d-a377-48f8-9ebc-3134bdefcf5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acdf2cd7-09d5-4c53-9f5f-b163e5f06682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb22f925-6730-4731-a835-e8474de1b8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89793e0f-db2e-41be-b8b6-8455f4966959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d48ba7c-c57c-4939-99bf-27d7569154b7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c647a9b-c61f-49fe-8516-a21593863268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c572fc1-8ccb-45a7-9ef2-f803ed968d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5b627b-3854-4e79-a47e-9ff55ed2f9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4735208-00e7-4dd2-97d4-dedef6dce120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188cc09a-98aa-4059-bd7e-f0e30d59f271",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe510af2-a74e-4b34-940c-842573a96c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee5e047-ce6c-4544-b6f3-6d556c56d8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b88eb6-f9b7-4a16-a0e1-6206766e19cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d618af-3a80-44cf-8ba5-6f592596cc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7c046e-d043-4ec4-9dc9-51e20ceff16b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ce381d-3f0b-403f-9bcd-f094b5868bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a432681e-7cdd-4c99-beee-e536ba8edfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0cc4f8-6d20-4c39-bd08-4482272f94da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0474aff0-2ac6-4d8c-aea6-6a9e929a0342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be49845f-ff8b-4e95-abc5-d917410155bc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5be95c-bb29-439a-b988-4eded3ac8be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12de638-3cff-48b3-8c4b-c8a86788e401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0cd27d-af79-4491-b6bd-f363d8ad5e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebb0d8d-353a-4211-8d69-2ce085b02ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2b2896-d1e4-4309-9d9f-1412c6fba8d0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88684bf9-7629-4019-a6a0-365cf947a159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534ccb3b-fb6e-459f-87b8-11e8ddff7a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca18da49-157b-46fd-8067-306db4408df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427ca579-b240-4671-b46a-0a4e474ee38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c597750-8d34-403d-9fe0-63d636135c5c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e02d56-29a2-4be7-9daa-a071e964e25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b9e8b0-2c17-44ad-b98c-5c58b95ddafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6d3f75-aa3e-4ac4-bd8f-907c1d9ba1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c8ac83-c3c1-444c-a715-926188108cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82bdb01-355e-4617-a2bd-5fbc3d19dadf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecb23c6-4873-4f40-8eb6-8420a1734f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa61200-ba6a-4747-879b-2b74befdf732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b6085d-6742-4e86-8bfb-eaa3d77dc297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fd07d3-6b5c-4539-b0cb-727e3e7add4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6166d480-1b07-46d0-b381-774673b04c8c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2f9e20-f3f0-4bd1-b194-b9c1a601cebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2086465e-accd-430d-afd4-0d6e0eef5840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c141900-36e9-407d-b521-d9f00378e2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac1555a-1784-443a-b1d4-8ebccc900f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539b21d0-7312-49f6-9240-3fab36b7ea61",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a39d807-95dc-4f86-bf14-7d8b926b17c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d4e93b-63f3-4259-8d1f-8afc0cd905ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ab8d3c-a4f3-4c7c-84c3-11ed88f30e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d43f4b-c936-4fd8-87f4-871652bb3640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48daf53a-6a85-4dc0-b086-ba440d0f772e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25803eff-d96b-4971-8c17-e475f0c9333f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc294e5-d52a-4835-bb45-ffc5899b64ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aea877d-1881-4c17-b832-2ef11169caae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ce203d-152a-4321-938a-42ac75785fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692c80e2-9477-43cb-bfed-7272cc48e531",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8d4d35-a001-4448-858b-6bb36515fe76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d20add-194f-4529-a969-90ea5e9d7d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe71d291-dd9e-4119-a1d9-b9e08a455de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1718ce-8ca5-41a2-be1a-d236e5588550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82584b3-8271-480b-a5d5-05721643cb8b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d1c9a8-5c98-4565-9ac2-3f8723a48e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5471b7-2802-483d-ac4a-4d1f3355fd63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdbc19e-e662-45f8-ad06-203fcd66281c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988fe774-ad70-4e75-b7c7-7688bb97d035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4b53f5-d327-4d55-9d5a-b73efdd1ed09",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f22fe46-72f2-42eb-bbae-d7d85dcf4e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411cc960-a40f-41e3-914c-b9048df11393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f893e049-b68e-487b-89bc-5ceaa5748c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e4752b-0a68-4169-9bee-dccdcdf4cd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d464887b-ff2d-4991-b54d-fab94fe03b5a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c427832d-708d-4d00-aa57-92228ee8cb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1233fee8-469f-42f2-a3bc-d3158c5a35da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bed8a2-70e4-4018-8384-2d3493e96123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e75c81-e0d7-46d3-b8fe-934a2ab82ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffb1327-a719-4cf5-9381-9d4d31fdb8d4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968e95cb-34f6-47fb-be29-c15ee88ef9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0cd9f9-7d40-42de-989d-da9b29154ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06206521-f6cd-4ceb-8dbc-1a38abd30b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04083769-2052-40da-97f9-e312785838cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f61f0c3-bc25-422e-999d-273f924d349e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39a103a-f450-464e-8d50-20e7ef44c5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15fcf57d-de8b-482c-ba44-28c04c17e11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5c56f6-a619-4f10-8604-713d720415fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4220e24-9611-4c38-9b49-6109d07d1562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5003acd9-4b52-4531-a5aa-86487bcdb06f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c1f84e-5947-468b-adf6-8188bb7777bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e742f43d-b74b-4a06-a603-47f11a468d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540a2be6-ebec-4698-95a8-cc623ff3547d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b90068-545d-43ed-85ad-f186b89f2db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a692922-b7db-4eed-9f52-f2cfcc0754e2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47ea80b-a071-4f86-a01a-df153299f6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03cd3e6-afa6-4b3d-a26a-52d148bd0ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294a4874-f84b-4dca-98af-d56c1ba3c4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca485b3-113d-4cc1-8a3f-b6ad4994e8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3e9c78-608e-4cf8-a453-6274efb174ed",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7a38af-e5c1-4cda-8beb-4f25efef8651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bf83b9-1840-4a19-b353-22a9ab900446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6ada84-b8d1-4372-a631-19b6c97703fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e795d2-dbc6-49ec-a384-d35c030ec417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd3ea9c-dd37-46b4-b362-6fcad522b35b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711847be-4966-4635-8d1b-6b59b18471c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a479237-9cb3-4af1-b6c1-60fa388979ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7ab5af-3818-4967-a553-7cfa2e58483b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe3452e-b978-40af-8627-6ccfd49887bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8d052b-c865-46b3-91f8-9cb69c347a95",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10b4d24-7751-4c94-b593-cabe6c593b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4eadde-5d84-466d-8579-1f48576058da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d406a6-ac5b-4c7f-8292-3eb9d18ff24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf027fc0-7e24-4319-b596-ccd952b5cb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e958d2a0-4c94-4b14-a7ee-ad8b87e6fa47",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c260e3-4406-4b25-ad03-ce216d7abf71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c8b51a-cff1-4a5b-8845-d955c6c01fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30bacb6-99ae-4904-aea1-e1e1ffe10347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b2a454-7f3d-4c62-848c-7f557fb00538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1454b083-32ed-48e4-abc9-e979cc0222ee",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd532e3b-e8b0-49e7-bd47-cc44f09920c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8220f9c5-0ae5-4a38-a836-078b9ecfdb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86b3adc-197b-4fc1-92df-6cb073ac29bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caebc53f-35bd-468f-bd86-0aaefdd57b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2809af-3ea9-4ad0-a80d-2544d11b8004",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64eadfd-019e-4189-8ec9-5b97604c1732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894714a0-4cde-466b-9e9f-2dc7b4ab4d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c62614-4954-412e-877e-cdfc2c390374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecae098-add8-4055-a906-b50e79c05bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c28b110-f568-4838-9812-bfb6e34e94e8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b94c591-4841-43b0-b787-46ab5eac0fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219b5068-6832-477e-b34b-4b25b17cffba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d2a034-e685-4da3-818f-495beeab4b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d14209d-3e6f-4d3c-ad59-8b3a88a49c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dd5d80-2359-4363-9af8-61f0e6dffcdc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b614ac0e-25b1-44e6-936a-aba42c2e5701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8ebceb-6868-4951-9f77-a06801052422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22618ea3-7f39-4331-8a50-9f8464d7ee73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb53ffc8-74db-412d-8933-f21375590beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fbc69b-8b64-453e-a0fc-5c72827e0637",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5ac368-37f3-43fd-9581-f893fa440ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0d91d9-bce0-435e-bde1-5cc8b92ec6f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c64d51b-e190-4164-b0c6-754225a64e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0d3372-8a9c-4a8b-82fb-acc4ee3dee99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99253ce-1fc7-4f0a-8c74-de2e8dcc6088",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca924251-70ce-44c0-9e8b-2c1fbc4551d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29f7f53-d7e4-49b5-af23-135f7e7399f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6c948e-ce38-4832-96b9-c368e09b10f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38fccca-7de0-47d5-92a5-2762228f5b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0523ae8-03cf-4494-b0a8-4f60c03ccb92",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db22288-6d30-4bb7-954d-2a41527cc9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893f76a5-d843-40e6-8c45-83c860c1ba12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c806286-0268-435d-9975-bd0bcb414a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a949eb9c-9e8e-40c8-a5b7-853bc1fbd0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbda2e1-f2b4-4e9b-95b1-317e5d7165f6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4029abe-94b3-43ed-a6b7-6c3a500145b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce89eb9-2e8c-470d-ac0f-0ab33a97e5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e3fa73-5fd5-4bc9-a04f-50f7eec2470d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bb813b-845a-4195-9218-4ef9a802775a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00f28d3-1f0c-4aec-87e7-ad6848e3764e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aceeb9-e638-4c96-95b6-3c187562ab10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e965405-603e-48fc-8624-154a61725cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e73fed6-81c5-4149-9927-27d7336ed67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b3be04-bd21-4ccc-b9ed-357e0ee2c723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f861de97-0f59-430a-b1d5-123ec0c8704f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff83f48-d4ef-4fed-976a-93170ce06104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8268772-e140-4429-881d-b0e595936eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb58d7c-724b-444b-b14b-5f736be02397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fb5cbc-a397-42ef-9ae8-d0779724abde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2abc38-846c-4965-84fe-0ed53e8606d7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f53b87b-5873-4fad-a863-49166a040906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12dabea7-d8eb-4b6e-a500-246e6e21c012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ac0daa-9e8a-4ee8-8097-70ada01efbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882df20d-6275-4246-85ff-801b7634e7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697da626-4f58-4b3f-9cde-a2093723bd2f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c824bcb2-4ce5-4b4e-9e6d-e47d509aff57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce449973-51af-4afb-9c47-bfe457b347eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0fa16d-5cef-474a-bada-80f96134afde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c5d404-a259-415b-82ac-6e4566c6803c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53be8dfc-3ece-4e58-99f1-fd3c538ea210",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a179b9a-abc3-4dbe-8753-39a869d9e7e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ddee6a-909e-4b12-a249-ce6d16e515bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0c2383-f160-42f1-9f66-b792468b8181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ada73f5-4b3b-4ddc-b270-a68f6c9f1950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24386439-1cb1-4b6a-9dda-5998c8c7e98c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7378da-7352-4bf0-88ea-2138b8b23397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9086e806-b279-4208-9811-1466a31a8716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2530d3-c0dd-4248-be49-048c604e3850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e16836-c5ec-44eb-9d02-cf5a01cc3653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949c835c-363a-4af7-abd4-01b7b0fd22da",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c064cc6d-0945-4913-a4df-1be17425343b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0708fdc5-6446-4dea-b39e-705be9a08f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce0a8a7-a689-412b-8f92-3810a93c0b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b945267-5a5c-412a-b0cd-8ec1322822c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f2e6db-42d1-452d-87f1-5e7408e016fb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05f3b72-f44e-427e-945b-331f83c1a4b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdae1272-d30f-4996-91d6-cd4f10379743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc19755-9487-4a76-8fc4-d511502e3e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14826081-c386-4810-afe9-6cf2cf37a857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983410ed-f3eb-4049-875d-237338b9b15f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c68ed0-69ed-4b8e-a8bc-1064dfdad4c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c35e21c2-5a65-4bb6-b110-dc1d3d3fe70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffbb404-40e1-43ae-a04e-e119401036f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43dc1fc-a2f4-4723-9fa6-9a2c9a434ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d335476-a69a-40ca-9842-05ee4e7692ef",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00c8fd5-f35c-469a-935d-f4cac0e6c0fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b311a4-e1a9-49aa-a275-ac5e2e1f8fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0ae1be-4e97-450d-9230-95d6f433e8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324a1ef5-d313-41d9-b931-cf2f4c7b68ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26713070-6756-4780-a024-b9296a856f4e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b0b150-ee0d-4b87-9f0b-a63e7b9c9131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe0b4fb-899c-475d-96d0-101a013f6e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5239ae57-1862-4e2a-aba5-3b63c7870357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4207102-d6af-4423-9da4-22a963d2b589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024a5920-55ce-4e74-8be3-f8b6ab060c45",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04155c7-126c-43d0-964e-b719ebb04b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dba56ce-55c6-451e-9773-5dae7ef12471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e1c064-3b82-45ab-8c61-8ec557daf766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377fb622-1320-43bf-ab44-1fa03308b9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c1c530-bacd-4b87-9615-713153bb86e9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98564be8-8815-4276-a79f-a44a402fb5dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df1aa97-7f6f-4502-a058-f52ed7ed8ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8fb5d8-4f4e-4872-a83c-aeeed11c130a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88abc87a-aaa2-498e-ba1b-91e636e0dabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49aa1a7c-fdb5-44e6-ac11-60b0ca654e0e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cf18ac-d577-48ea-8e2b-7591d3af5a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5061f5b2-6653-4ffb-b3ee-4fc37aa5bd5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2fba84-d0ab-4aa3-91a3-a9c02589d1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76feb512-1caf-4aca-870b-17e349be6e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c3f476-cd23-4df0-ac72-e4990a25c3d2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e9c1c7-4af6-4078-8980-81e8ed5da9c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9603da26-7a80-42ea-b8c4-5d5d775ab220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d178e23c-3d7c-44d3-a874-3fbe3be09db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d1126e-440a-4428-b7d2-0e12738887f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72a7ff9-cc68-43e7-b8da-3c804ac019ad",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d873ec-d6f2-42b2-9a4d-ed053fb04464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a05705-e38c-4b00-9a35-1fb14deb8f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461c3d1d-51ec-43fd-a00b-3a0526758522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d421b2-3796-4300-a500-5fb06015ead0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5176d8-c549-473b-9a90-8f4c28773037",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a16cd34-d6ae-49af-a236-5b3c34ba3906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e91eb151-558f-4b7d-831f-c0bfa6c18402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f9e35d-9cdf-4b60-85cd-e61cb1d978a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da2c8b5-5490-4352-a69b-a4523a53dee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd557dfe-ce9b-4f1e-a64f-aa894258ddd6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eef0ba5-83f9-4e22-b652-ac84c37a8152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e28cea32-e421-43df-91bb-f9c357c0cf54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de91b925-bcca-45ff-8957-5c553965dc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eef41bc-ca66-426d-b062-6920accd2517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b782d4f-ef7a-4fd1-a445-377ba00660fa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513ec127-bb8f-4090-b001-07b7a12365a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf0f528-0276-4072-8ba1-99f5518f780a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8cbe2b-2157-4f1d-9b3a-f9705ecd62c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de69b3a0-30ef-4aff-a6a9-a6fd228296c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7a0cc3-203a-477e-a540-e660ef927d04",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07960df-ddde-41ed-8d0d-f3d2a7bbbf25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e6b38d-006f-4311-9bbe-137569242a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37b5d55-6a31-4dbb-8044-7b9bedb734fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb8efa9-4227-4082-b102-ecfdfd8bbed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a273c58-7e7f-4ab7-adaa-8f8e7e64b218",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c74f1cd-0199-4cc5-949f-31c136fc9b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1dceaf-314c-4295-98fa-e3b4d110ff0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c848c1c2-3475-413e-99bc-1136b3314417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6affcc-a4e6-40e2-8d5e-fca3a76b8135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d528ed-09a7-4a86-a5cc-5e8acd7ef9a9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9306e30-b237-4299-bc3d-73ebb63d8c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "237c416c-f87e-49a1-8b4a-c47c186f6c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812cbc8b-8f1a-4ed6-a244-f5881f441566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66443236-763a-44d3-8cf8-fa9e7c3963f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b6da5a-1be9-493a-9288-1a879dabef13",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d91a9f6-1418-46d6-befe-f6abcff4f03d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "162ff93e-6113-4945-948f-3aa8263b8807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84de266d-f757-47e0-a262-479c937e9dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5427b306-2100-4314-950b-f8567ebab1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f801bc0-24dc-44dc-9db0-6a22f3e54851",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad9586c-9b18-4299-9b5e-ea32eafe6c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cff096e7-f7a0-496d-8419-68aefede7df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bae698-3d92-465b-8145-10574bdd9864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fbdf63-084b-45ea-9fde-6af0117ab8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acc220a-399c-4f1e-9cb8-9f6fcd3773f6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f7bd31-026e-4cd3-825d-699df80400ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9db330-abc9-447f-8146-87766941dc68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a90fe75-46a7-49a1-a4ee-64084e3fcc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16522bb3-26e7-4680-80c7-d2125489cb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fed8392-b1db-4a7a-ba48-8f92062c58ce",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39109511-4540-42fb-8abb-332f761b2e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "429674e5-e4de-457e-afda-d6567109f1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a2cbfc-734d-450b-9e1e-5f770c14af48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518c1a54-166d-4e2e-9543-dd1d00294449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695b66bb-7075-4358-ad8c-5bdd46500a61",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d25204-2786-4d15-9d74-b1d3e25a6b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9185e958-3706-4369-9fab-373c6de012e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e500d632-9905-4029-a489-6122c3c12763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0feba9d9-1437-404d-832e-2936f820034d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44487dd6-ed64-4313-b45f-773b5d987f41",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e005b21f-1934-4a3a-8e78-fac3fa012153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c885359-6c0e-4980-87d6-65e2499b3139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b459f56-aeb5-4317-b3af-a12eb3738fb8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f14a60e-c468-435a-b05d-ac621db8e050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bb370f-30d0-4b98-8504-aa1b7c3796fe",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38758b2-ed65-4289-a1cb-d53889361f31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc0a5439-eec0-40dc-b528-62d8bd48f4c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12329b16-692f-45b1-8938-7fad109c19ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db35ec2-cc3c-449a-a2bb-24a89b916f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14c733d-c1dd-491f-983d-55595f9d9e77",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737f553e-33d1-4770-83c2-6c50d5949492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d22b45fa-2918-4e8f-b236-20b38a9e0b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca19fe17-a732-454b-a7c7-26f8d5a45003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bc88d7-7b22-434a-918b-58acf8657d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ab2817-5f57-4425-b75e-e5d933902b92",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a19e037-6759-4d51-8d06-e76f9cf1d947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6037c9d-6c74-4a5b-aada-88e373c0caf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37bc087-fff8-45b5-a4ac-4df003ed40d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f37669-fcf9-4316-917b-97f5adda0f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af87a8ef-7676-4259-8150-fa1c7cfad823",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70c32f2-8678-42e6-a8fa-2c514fc2d5e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa6bc51-4b9f-4449-a56d-cf3ceaca855b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659e99e8-891c-45c9-bfe7-272a517713c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fb00d2-9599-4f14-b51e-392866ae8a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2e9672-0acf-455e-9ebd-08e8cbd26b85",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005ee45d-04ac-4c83-b7a4-5bea12081f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbab3493-c8a7-45a1-b115-f9b8a766aeec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55e7223-684c-489e-9496-6bcfaaf47a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86a99c6-cd5a-4e0b-ba98-6fee471f98ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0841a6-fd73-46e3-9f03-eb95579ba459",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84777856-6b7c-4c8f-aaca-1cb1ff17ce02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8db12a30-d3f1-407d-b123-196c47540451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b79cd64-a311-42e2-802b-0d8bf9e08296",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699e2df6-465f-432b-abf4-81ca3fc2d776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb9e0ab-13fe-4e3d-99dd-21b5dc630ac2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c876f7d8-1360-4c6a-a15e-3fa743c8f9e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ad09da-38cf-413b-8076-af5f24e2d3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14590cc6-5647-4a57-ab41-6c5527db3567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e7feb2-3f58-4ec9-bbf1-ca0b77ddb022"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64d7233e-9a1d-47f5-b3d2-f5333abcb27f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "921e73e0-3952-4882-b84e-74cf4276c54a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40f87d2b-ff4e-4780-b431-6d931e3c5d92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e10ba4c-a9bd-4477-a248-dccff6f1f183"
                    }
                  }
                ]
              },
              {
                "id": "4c651bc0-8116-413e-9ebd-a9d2fcc5b3ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d0eb425-e8aa-4e00-b61c-dbaed0558f0f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f107b02f-e58b-4f4b-9360-af3aa6ea95ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "05464efb-1945-45bc-9720-83d867a172e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c54d53-9fc9-40f1-adb0-abe16dcbce6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1849a43f-6265-4179-b90b-e7b9413fa7d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4560d84a-9101-4733-b8fd-a927c4120dd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51ec8d73-a2f2-49eb-8b8a-7ac1cc36c98e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f17195b3-efb1-46fc-acd2-567d065955d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1db7e56f-1c08-4245-8c3e-7453d9f57c93"
                    }
                  }
                ]
              },
              {
                "id": "679ea598-46dd-47ce-91e6-f66e4f00e4c2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "174962ee-9e97-4456-b0e7-71b91b2e6287",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976e5ea4-fd8f-481c-9edd-1e700dc11ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9722e551-3d39-41f9-adef-198a8f07427c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607c2105-ea27-4fa4-811e-9a443de606d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4304efea-7e07-456f-92b1-2acd811c6822"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "956a95fa-ef31-4a55-b679-4b895284764c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bafc1a50-c188-4514-9ef7-a2609ef41d3e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ad17bd6-eb99-4347-b2fd-5d78d95a7415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "75780e1b-625f-4790-b811-831447fe5713"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81daa81b-8664-44b8-9125-318a76f5c8b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af80af30-57a4-494b-9ced-0723dd797cc6"
                    }
                  }
                ]
              },
              {
                "id": "ddf5e896-23f6-41bc-8ea5-1ffd1ec6a56d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc2d3bc7-454e-4b8b-8f75-90df2a0271c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "38dc7236-abfc-41d9-8cb6-4112f0087af4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b652360c-0e95-4778-b404-64f0183edf8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca280bcb-5e7a-4e00-8bcb-c905a5b9cbe8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9e72feb-804e-4bea-8bb9-c30d39274521",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a33858f5-fea1-44d9-9253-2988647e7d21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "467a488c-803a-426e-a21b-743213244175",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2653530e-584d-4ed7-843a-37d9aa0afd26"
            }
          }
        ]
      },
      {
        "id": "6ea9d583-1163-4425-936b-c0c5637cfff1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b8feb153-3e3f-4ff4-b84a-6feebbb63837",
            "name": "Negative Testing",
            "item": [
              {
                "id": "111b8e8a-b6e7-4558-bad2-ea6faf6275c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9c3360b-7b3e-48ca-a777-77cae6d42fff",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62983ab4-664d-4bb9-91bf-78ed9020b173",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ddaf28af-6989-4454-a9ba-f7295cca828d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f19c63-2ae7-444f-af3e-87a9ba076fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfaaf57f-9fc6-4ea3-8f42-878e8fb6413b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e26687b-d7ab-4962-b061-9bb92b78286e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a7ab8d5-60ea-4dd8-96d7-542cc0c5bfc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c6ed05a-220a-43cf-af46-0d2e5e0d08cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a148a0c1-aeb7-476c-a851-4e9d01a0dff2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd7a31a5-2c09-4362-b494-ae73ceecdf69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "48eeb4d0-b070-47a5-a31d-8f0db70f93af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d367772-6dde-42f9-8b0e-19023c197ed8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21e74639-2998-403d-ba07-343eaabb2e94"
            }
          }
        ]
      },
      {
        "id": "1e40e673-e721-47ff-bacf-97d1ce0baf57",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d7307bfa-2c02-4c32-a48f-951f35212561",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31e7af38-64fb-4087-93e3-542f6601978e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee17818d-c20a-48c2-bd75-635e31b7b53e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62af6680-12e6-4360-9191-a3fb8512d9bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeac685b-b4b0-4a29-90e0-5c1cbdaf1c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec12a50-f716-434d-9f94-202d644feed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "120c6738-c705-411f-9329-a906d443ac19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3195f18c-0ab3-477e-9db4-08c450d05592",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2f3f357-c669-4a25-980e-13f16ed2c66c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f53d3a0-8ba7-448d-9478-ec792f42033d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8ec9219-5367-4465-9dcd-a34377ea2b89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56d5f9f0-7f65-4bb0-9f5c-ce4a969936b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ec18c06-bca0-4c89-a899-4c51481a0162"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a35e790-1450-48e2-b542-ff0a39745718",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4630bb38-75c1-4459-b190-5d013305d95a"
            }
          }
        ]
      },
      {
        "id": "aa450a12-623e-4991-9798-baf9ffd733a7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d397c09d-d315-49b5-9b6b-2ad171d8481e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a601079f-a2a8-4fc1-94ab-d86c37304912",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae094c08-7d1b-4794-b52c-4aa255289ca7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a18065-7c2c-43a4-88e3-b230610724b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e0172e7-8830-482c-81b9-1e0631eca196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39004075-5cc2-48ec-98ab-774563eabc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "763d6689-fe22-4167-b24c-d55e8c58da88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1096194d-ef18-4a88-b28d-667554c60c92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fed7423-30b1-4ff9-8817-43723d276b4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f032caf-90d0-4bd6-a9db-0975520e80a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7bb3a6b-ed74-44c7-bd13-2542dc9a3e14"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6002bd31-6297-42bf-a2a3-170471bb26d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9f4e4662-362d-4a4f-9070-1f58e9cc659a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdd40370-8af7-4f3f-9e11-86301e602f9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a8385d9-d728-4fb4-92ce-f14c7be307ef"
            }
          }
        ]
      },
      {
        "id": "c617f064-897d-4da9-aadb-1469fbe2b163",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "203add83-ddc7-4405-b035-b2fd41bcd27d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f5922c5-80cb-443d-8ed3-125f6170650d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1ebc2f51-ced9-438e-a382-efc24bbaa984",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5096f17b-d9ae-4c0b-8e6b-9e4241a62d4d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4c1d41e-820d-4c99-b2d9-aa660b72b4e4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 277.09523809523847,
      "responseMin": 14,
      "responseMax": 6422,
      "responseSd": 965.9771960614078,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717807081911,
      "completed": 1717807160170
    },
    "executions": [
      {
        "id": "64465225-b3d8-4890-ad86-9ebb23b84166",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "52a93b05-1ea7-4dfc-a732-5c0b875f4009",
          "httpRequestId": "3992a2ff-dd5c-4193-b8aa-c36764b22350"
        },
        "item": {
          "id": "64465225-b3d8-4890-ad86-9ebb23b84166",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e4f6ca14-3b05-4182-ab9b-47cec7b10c9d",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "b0cf1f4a-be20-457a-977c-aa9769e35a1b",
        "cursor": {
          "ref": "aef7dbd0-c211-4cfe-a0e8-78c7f998d534",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3d58fcee-a7cb-48d3-bc48-384a11bbb0b3"
        },
        "item": {
          "id": "b0cf1f4a-be20-457a-977c-aa9769e35a1b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "29a77ce8-84ca-448f-a84c-dc87908c8f60",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "9585ac72-a373-4b5d-b374-e1db6c7f5c20",
        "cursor": {
          "ref": "57dfea89-7d69-433e-a591-8fb45de1f9cb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "276a95d8-5c4b-45ac-93e1-5312eae75701"
        },
        "item": {
          "id": "9585ac72-a373-4b5d-b374-e1db6c7f5c20",
          "name": "did_json"
        },
        "response": {
          "id": "16a997aa-9ece-4f1b-8c7b-d7b9f5294728",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be63e79b-3a04-4b4a-876c-072196b6fe17",
        "cursor": {
          "ref": "0074fcc1-09e0-40bf-8e64-f22804455992",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e2e6e6ec-9e36-4b32-a4ba-6f8864b6831a"
        },
        "item": {
          "id": "be63e79b-3a04-4b4a-876c-072196b6fe17",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd38aa04-20c2-4dbe-bf7b-281768996298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2021,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be63e79b-3a04-4b4a-876c-072196b6fe17",
        "cursor": {
          "ref": "0074fcc1-09e0-40bf-8e64-f22804455992",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e2e6e6ec-9e36-4b32-a4ba-6f8864b6831a"
        },
        "item": {
          "id": "be63e79b-3a04-4b4a-876c-072196b6fe17",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd38aa04-20c2-4dbe-bf7b-281768996298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2021,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e24a444-6b57-4bb1-ac48-6025e06309b2",
        "cursor": {
          "ref": "fcb72395-e717-4a0e-ac19-b0ad509d96ac",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5a3e5913-bf3c-48d0-8578-48f9ce30fc87"
        },
        "item": {
          "id": "3e24a444-6b57-4bb1-ac48-6025e06309b2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9aa94bb8-10e3-44b1-8144-bdbd96660f37",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2690,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be9f14d-1126-4675-97e1-e44d996af18f",
        "cursor": {
          "ref": "b490dadd-14c0-43dc-8619-0bf787f45ac7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cf4711e8-41cf-46a4-9faa-9699c703fc5c"
        },
        "item": {
          "id": "3be9f14d-1126-4675-97e1-e44d996af18f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c1f604ba-f1a0-4309-9e91-2501adaa051f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1984,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53aaa14f-977b-496d-9f43-37b082351c7e",
        "cursor": {
          "ref": "4a397d32-8072-41f6-985c-3d0e95e38c50",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "911d9f2b-8e06-418f-bc95-df70f3ce4160"
        },
        "item": {
          "id": "53aaa14f-977b-496d-9f43-37b082351c7e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b20d7cc5-dac0-4011-91b9-d96afc2a6f38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6de9da-1600-49ca-849f-5608c84f2480",
        "cursor": {
          "ref": "b84efb22-3133-44f1-9b02-b48aa5f67fd0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0bb54d5a-ba70-4d5c-bfae-de56f67df9ad"
        },
        "item": {
          "id": "1e6de9da-1600-49ca-849f-5608c84f2480",
          "name": "identifiers"
        },
        "response": {
          "id": "8fa9d286-5666-4f23-b5d8-864f4a22754d",
          "status": "OK",
          "code": 200,
          "responseTime": 2138,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068dc069-acdb-489f-8d01-52d5b7dd9aca",
        "cursor": {
          "ref": "3af910c9-5080-409e-837b-8447cdf2bdb7",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a2394550-759f-42d9-94a1-4b4652810825"
        },
        "item": {
          "id": "068dc069-acdb-489f-8d01-52d5b7dd9aca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f7ea6f3b-a827-44d9-aaba-e2186886925b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8466d9-4ac9-4833-a0cf-73eca57f3973",
        "cursor": {
          "ref": "a1211678-2a86-4b7b-a79b-baf51e53656b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6ed234d2-5aa4-43f5-966e-714c41a7d036"
        },
        "item": {
          "id": "dc8466d9-4ac9-4833-a0cf-73eca57f3973",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "92e7d41b-b522-4876-98b3-f361b4c32b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae08caa-fb65-430f-a76d-fcbdb9534c15",
        "cursor": {
          "ref": "8e8617f0-032c-43e4-bab9-98de82d16d2c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "49382f1c-d946-4843-aa2f-0aedddb1f97e"
        },
        "item": {
          "id": "aae08caa-fb65-430f-a76d-fcbdb9534c15",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "aa3c5488-70ca-436e-a78e-22f711bbdd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7729852e-354b-4830-821d-32dac130bfeb",
        "cursor": {
          "ref": "ab29db1a-220d-4002-958e-1b60514b6bf3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6a265e49-7075-4924-9b63-36b435ba09d4"
        },
        "item": {
          "id": "7729852e-354b-4830-821d-32dac130bfeb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d61006bc-7695-4e0b-acd5-0312c9da2fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfcd718-4494-4ccb-814f-0ba793f9599a",
        "cursor": {
          "ref": "0b1cf5a1-f5af-44f1-8e45-a7ceffb3f6e4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2462ace8-632b-4ce1-8e60-bf0316f1e351"
        },
        "item": {
          "id": "5dfcd718-4494-4ccb-814f-0ba793f9599a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b65f1bec-3206-497e-969c-89e7c329a195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ff0fd2-f9e4-4525-b579-30ecd5ecd44e",
        "cursor": {
          "ref": "8f7866f1-abf7-401f-8ed0-63bdba816b45",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "38b160fe-a2c1-41a3-b867-1a29636190c7"
        },
        "item": {
          "id": "98ff0fd2-f9e4-4525-b579-30ecd5ecd44e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4a283f21-2641-497e-87e2-9edc94fb23b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f066b0-4a55-433b-99f6-bc661de64954",
        "cursor": {
          "ref": "75715205-61a3-4eb1-b701-36dde19a08f7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3d8731a7-9b22-46df-bd93-b09a6688e5ef"
        },
        "item": {
          "id": "60f066b0-4a55-433b-99f6-bc661de64954",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4365de49-1e37-4846-82a8-39931613e087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e743ec-f8d5-4cbe-907a-59b1a413a4c7",
        "cursor": {
          "ref": "4a497536-9a9b-4e4f-a248-31be0bf441f5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "33f4f573-12a8-4fdc-9783-33871739c3bd"
        },
        "item": {
          "id": "78e743ec-f8d5-4cbe-907a-59b1a413a4c7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a9c69c4a-d37f-4077-aad4-cabd532cea8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffc1cc8-1019-4504-a9f6-2cbe1f13bad9",
        "cursor": {
          "ref": "206bd15b-99d9-46b0-9eec-c0340add033f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bba5cdf3-d9f0-444a-9181-24e876656ebd"
        },
        "item": {
          "id": "5ffc1cc8-1019-4504-a9f6-2cbe1f13bad9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dc74d344-62f7-4105-af5a-b246b752fea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b009ed-a3ff-49eb-86ed-2fed582d7f58",
        "cursor": {
          "ref": "06439cdf-0319-4799-90e1-a15e686c35b6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c9c14d6f-bbd2-40a2-b523-9f1182894b93"
        },
        "item": {
          "id": "02b009ed-a3ff-49eb-86ed-2fed582d7f58",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "df552b7f-6f98-459d-8656-9f1e9c63ae55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870ac470-79bf-4327-8333-1f94653936ec",
        "cursor": {
          "ref": "3502f36a-4626-4b00-947f-a475b23c1502",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e2158c65-b92e-4034-a83b-8851f356d034"
        },
        "item": {
          "id": "870ac470-79bf-4327-8333-1f94653936ec",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3446b2c4-f179-452e-a6fb-169aa37f1ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a89f60-97d9-48d7-96a8-d1254fcc4587",
        "cursor": {
          "ref": "4cd62acc-caa0-4f13-8f19-fc505b7a7863",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "32e517a7-f0c1-4f62-8eb9-75e384e80496"
        },
        "item": {
          "id": "d1a89f60-97d9-48d7-96a8-d1254fcc4587",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c33d0bbf-9561-4f20-99e2-2398e90807d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9922f64-1026-462a-b156-249b6ebdb7d3",
        "cursor": {
          "ref": "408b732b-0c0b-4ae8-ac12-c5f4309bf3f1",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a0b2b514-82ce-4dbd-be5a-2d2be4f89273"
        },
        "item": {
          "id": "b9922f64-1026-462a-b156-249b6ebdb7d3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "798c5439-c98c-492a-a629-aa34f8ca1cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e68e9bd-aba6-4654-80fc-a9f90c2d4950",
        "cursor": {
          "ref": "d064e0c1-9daa-480a-a16d-6951bc93e3d8",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9a9ca127-a662-4793-a361-d4114df75822"
        },
        "item": {
          "id": "7e68e9bd-aba6-4654-80fc-a9f90c2d4950",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e6823b93-e7a8-4029-8a90-4dc0ce520f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e2fd8a-d916-40df-bfef-dae6b84b213c",
        "cursor": {
          "ref": "8e3c5831-79cd-47e8-8741-7a25c9c7d69d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "45258e08-9c16-4167-b98a-8364041776ae"
        },
        "item": {
          "id": "b7e2fd8a-d916-40df-bfef-dae6b84b213c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7cf1ccfd-2e1a-41c4-b5dc-c8442987ec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc55c15c-33fb-473b-af4d-8fb8271f664b",
        "cursor": {
          "ref": "d18f470a-18f1-4d7d-93ac-5178c283631f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e490a98c-d010-491d-b92b-18e619629418"
        },
        "item": {
          "id": "fc55c15c-33fb-473b-af4d-8fb8271f664b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3d968723-2c9a-4421-b943-98ac0fd7fc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d57915b-0fe9-4ea9-be37-1a39627d8343",
        "cursor": {
          "ref": "ee0afe75-dc57-4803-960c-c5a0972a6d79",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0a64657e-e782-4bac-aed1-7ff9ecca0bcc"
        },
        "item": {
          "id": "3d57915b-0fe9-4ea9-be37-1a39627d8343",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "404c337f-4765-4d43-91a4-c7a94fc51ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f90e4b-30d0-4d4a-9ab9-1c84d5256b00",
        "cursor": {
          "ref": "e02e5ba7-0f2e-4af1-9f9f-eb9a73a57b58",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f5704eb9-16de-4371-a507-d8e83ae8457b"
        },
        "item": {
          "id": "f4f90e4b-30d0-4d4a-9ab9-1c84d5256b00",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "73a3a527-b379-4849-8ed9-fdb591af0d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1eeac3-7458-4e4a-8c74-ded4d1f815e1",
        "cursor": {
          "ref": "5c05b465-0df3-4f9e-85f7-e8b9e8bba574",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "71195fb1-87c0-44e6-b1b9-685c4161e471"
        },
        "item": {
          "id": "2b1eeac3-7458-4e4a-8c74-ded4d1f815e1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "60aa6bd4-7773-4e36-b433-cb8a29d51ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06f01f2-1bc8-47e0-ab61-e44d361cb9e6",
        "cursor": {
          "ref": "8d5cf015-2314-47dc-98c7-65f56f55fba4",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b2a6940b-668c-4adb-b69e-2e2d30427eb2"
        },
        "item": {
          "id": "b06f01f2-1bc8-47e0-ab61-e44d361cb9e6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3642a274-8415-48e4-aa7a-e4de80b72b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea913597-9663-4110-8b6f-fa0ddc035c63",
        "cursor": {
          "ref": "564320cd-cac2-4c0b-84b7-81679bae7056",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4b539809-9f86-4c63-915d-c194f227211f"
        },
        "item": {
          "id": "ea913597-9663-4110-8b6f-fa0ddc035c63",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fc6fc984-9b6a-4169-b121-ad2c63ef2937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3388888b-ed41-455e-8672-f1208c0fd451",
        "cursor": {
          "ref": "312d2cd1-45c0-480c-9d29-d467aa2eb9db",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b398bc5e-fb81-49a0-8276-cde9087eaf91"
        },
        "item": {
          "id": "3388888b-ed41-455e-8672-f1208c0fd451",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "88c147bd-ed57-435f-8118-6ecaa80b5bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec6c37c-4b11-4dc4-b0cc-58726df8a873",
        "cursor": {
          "ref": "a5f6d752-a56d-48ce-ba09-834f4ac0fd2a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dd987ce3-7f86-4842-96ee-8ea175b81369"
        },
        "item": {
          "id": "4ec6c37c-4b11-4dc4-b0cc-58726df8a873",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4eb96610-ba86-4109-bd75-bf814fc509da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8271b8f4-f700-46f1-b983-f04d35803682",
        "cursor": {
          "ref": "cc4b4b0a-7271-44fa-9a5d-fb3c84447e19",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "50185391-a82e-429e-9f0b-edf086ac48b0"
        },
        "item": {
          "id": "8271b8f4-f700-46f1-b983-f04d35803682",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b9c1b189-ff45-4e1d-ba93-4fff5bc5f293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928d9b52-68dc-4419-94f1-192698d6921f",
        "cursor": {
          "ref": "936c114b-0239-45db-889c-7c6c549ba231",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a4190462-6e83-4388-b205-636b54e3efc9"
        },
        "item": {
          "id": "928d9b52-68dc-4419-94f1-192698d6921f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "907ed931-9ecf-4b2f-851c-94cac1ffd009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e729f33-a0cf-4566-bf8d-3a2c1ae8b8bb",
        "cursor": {
          "ref": "36e1289f-dc54-4644-98be-a4a650b76a5f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a3598971-d502-474d-a3ea-be1ded98eee5"
        },
        "item": {
          "id": "8e729f33-a0cf-4566-bf8d-3a2c1ae8b8bb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6faaee9c-3738-435b-8f45-a8b485b3ae9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7859d0-d434-4e70-8523-11ac055982cc",
        "cursor": {
          "ref": "9a1ffa2e-8a14-43f4-a2bc-7b2a84f4d6da",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6eac8c11-46e8-4340-b505-26de19d09b8e"
        },
        "item": {
          "id": "1a7859d0-d434-4e70-8523-11ac055982cc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "47d6e400-7a76-4603-86c5-a35dfe0a9ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e877603-0fc8-441c-a11f-5687e0460f3b",
        "cursor": {
          "ref": "da68dece-5b37-4fcb-8d0d-25df82e083d9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "702ef03b-421a-40d3-85c6-d39170350aa4"
        },
        "item": {
          "id": "7e877603-0fc8-441c-a11f-5687e0460f3b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "df428504-70b1-439f-b738-ed9c9e9e5274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d5217f-497e-4a9c-9804-69b3f8318402",
        "cursor": {
          "ref": "8e1cd7ed-7726-4986-8781-af09bdc8509d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8798b1ab-e87e-4d76-b16c-af502d2dd349"
        },
        "item": {
          "id": "77d5217f-497e-4a9c-9804-69b3f8318402",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "af6673b9-29ad-46d2-8b97-b44d810a451d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a246ed91-ed2d-4973-9490-502d2a9ec922",
        "cursor": {
          "ref": "0cf9b080-c060-49fa-8876-345528be6357",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "323ef2ba-807c-492b-b8a4-4ab842f04c27"
        },
        "item": {
          "id": "a246ed91-ed2d-4973-9490-502d2a9ec922",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ff954096-a77d-4aa7-90bf-1e8b91c4e0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9c8eb4-01db-4208-b4ab-1097cb8b2419",
        "cursor": {
          "ref": "9b743884-b411-41b6-befa-b99268bab051",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9ee8209d-22be-436e-ae98-28cb13822506"
        },
        "item": {
          "id": "9d9c8eb4-01db-4208-b4ab-1097cb8b2419",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d66b652e-406c-4ba0-9500-fe2369fb4c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b9ca6f-a2f8-4baf-99d7-fb50510a86a6",
        "cursor": {
          "ref": "49a36c7d-996d-4edc-83cc-aba243b32761",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "05896c1d-2bf4-409a-a2d8-c04e36ec96f1"
        },
        "item": {
          "id": "86b9ca6f-a2f8-4baf-99d7-fb50510a86a6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ad47cf4f-2d51-4764-8a8c-1b4361e58565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47b18e8-75ca-462c-8760-2ceeb88371a1",
        "cursor": {
          "ref": "7c6cf2f6-ffad-4030-aa18-ff4398c51fcc",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7b72eb78-6a3d-4240-a2a1-12a59a7105bf"
        },
        "item": {
          "id": "d47b18e8-75ca-462c-8760-2ceeb88371a1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5a32b433-087e-4c83-9421-e36ad953e83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c13e7e0-d756-4c67-a533-751afb78aea8",
        "cursor": {
          "ref": "3b38a286-4315-4ac5-91bd-72b9a5a5cc32",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bd134b88-08e4-4499-a4f6-c3a68be8e75e"
        },
        "item": {
          "id": "2c13e7e0-d756-4c67-a533-751afb78aea8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2a0acf96-4713-408e-84ed-3ca4ae99a426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e2a856-eaf8-4d30-96b2-5ae9c36e66d1",
        "cursor": {
          "ref": "cee77043-ac94-4512-b46d-ec57f9fc47ea",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4fc543aa-059e-4ddf-a842-93f8d33e53ca"
        },
        "item": {
          "id": "e7e2a856-eaf8-4d30-96b2-5ae9c36e66d1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cec1a733-4ae3-44e3-8d3c-5794ab8ca168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55afefc8-155f-49d1-97ca-03b7667deca4",
        "cursor": {
          "ref": "885a1c95-f044-4de1-ac57-263f22a78d40",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d4a8ab7d-c898-4653-8cff-919e5732e39b"
        },
        "item": {
          "id": "55afefc8-155f-49d1-97ca-03b7667deca4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2f8a6b67-bcf5-47d5-bb25-d29838674610",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3c16b6-4000-4976-bb66-c42455881aa8",
        "cursor": {
          "ref": "c9b4e2bd-776e-4980-8322-cd0e7888910d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a3c8b0e9-776d-4d57-ac51-2209a0661f1d"
        },
        "item": {
          "id": "2b3c16b6-4000-4976-bb66-c42455881aa8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "acfa2010-1d11-4ce5-95a8-22252c6d84c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a21ad5-9a6f-4572-a4ae-107863cd72e9",
        "cursor": {
          "ref": "57928856-b6c2-4ce3-9d74-b329274c1ff9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "14ebc487-ab98-4886-bb1b-113d7ef36674"
        },
        "item": {
          "id": "99a21ad5-9a6f-4572-a4ae-107863cd72e9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "618c1571-5c53-4b82-a542-7e1d563c94b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e73bc93-51b5-4a27-992e-25eb5707bcb7",
        "cursor": {
          "ref": "bdee2a9d-53b0-4441-b886-ec294b8f8966",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "63503c80-c789-49b0-9dab-fb8c6a1da8d3"
        },
        "item": {
          "id": "8e73bc93-51b5-4a27-992e-25eb5707bcb7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d8144951-2f6a-4f22-97eb-f206cf44b46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e544cfca-a1ff-4f7c-b1bd-6c0c045f4fc0",
        "cursor": {
          "ref": "d760bea5-b2f0-4f3a-9a15-d413e5524e28",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "13364791-d77d-4c07-9589-24156693ad14"
        },
        "item": {
          "id": "e544cfca-a1ff-4f7c-b1bd-6c0c045f4fc0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9aa6b308-28b7-432a-87b6-95d265271c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bab769a-4a26-43bd-9cde-f8151a47d4fb",
        "cursor": {
          "ref": "94fca7ff-00bc-4cfc-aaf2-e6e58cc75ecc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7ad9c17f-ca3c-4a02-b0ad-571213a4d351"
        },
        "item": {
          "id": "5bab769a-4a26-43bd-9cde-f8151a47d4fb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c4de4fef-2377-43fb-b410-7691eb1f8773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958881da-c6c8-4485-9c9d-1acc5d1ca33f",
        "cursor": {
          "ref": "2774dc6b-f22f-427b-a046-f3992367a6af",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3e1fa179-62bc-4de5-8223-47e87ab17fbe"
        },
        "item": {
          "id": "958881da-c6c8-4485-9c9d-1acc5d1ca33f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dc69f818-ae30-41b8-b747-9742bf3c6e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c5c613-631d-46cb-b749-4c240afad7ae",
        "cursor": {
          "ref": "f22c8505-b7d3-4e1c-812b-6ee1b250870d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b496e84b-f43b-4e07-af90-831ae1831814"
        },
        "item": {
          "id": "e6c5c613-631d-46cb-b749-4c240afad7ae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fd94c824-f8bb-447e-a2ed-2223a9ba01ba",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265a57fc-2d9a-42ff-83e2-935a2f7d0150",
        "cursor": {
          "ref": "354ef28c-87ef-4fb2-b9cc-7eb8352387cc",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d1ec024c-0076-4c4a-8fcd-354028448b47"
        },
        "item": {
          "id": "265a57fc-2d9a-42ff-83e2-935a2f7d0150",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5bc481fd-12eb-4960-827a-dbc56c67f31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bfc26d-f0fa-4939-86d8-7c221c0b01ca",
        "cursor": {
          "ref": "22c352fa-b8c0-4d12-839c-fe26cbd444c7",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b49b0a64-e93f-473e-ba77-0db6e489ec64"
        },
        "item": {
          "id": "22bfc26d-f0fa-4939-86d8-7c221c0b01ca",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "767ec64a-a284-44aa-8dcb-d96e44e2841d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7115b62b-b4fb-4a79-b487-dc373d2d7a77",
        "cursor": {
          "ref": "fcec4999-e838-439d-98bc-155eb2622b9c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "61b80c13-e95a-4102-be4d-65e62444205f"
        },
        "item": {
          "id": "7115b62b-b4fb-4a79-b487-dc373d2d7a77",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3ea27a11-e6c8-4cfd-824b-c2380812aa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fd3589-9b03-485e-9484-7f65eaad73c7",
        "cursor": {
          "ref": "cb62c35e-2082-4d2d-ad57-c59dc68f9e3f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c412ea23-df73-483d-a2f2-8a8a49201a88"
        },
        "item": {
          "id": "23fd3589-9b03-485e-9484-7f65eaad73c7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "54b440e7-16af-4d25-90a5-7d1b8b0d27e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42c843f-aa75-49cf-b3af-1ccca36e27e8",
        "cursor": {
          "ref": "146b59e1-301a-47b6-94d0-e82115508f23",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d6aeaad4-fac2-47a5-8384-692d45a3364d"
        },
        "item": {
          "id": "b42c843f-aa75-49cf-b3af-1ccca36e27e8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "88d9d729-f852-4701-ad37-9e56cc04c35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c31acd-973c-4279-8592-f071fc181345",
        "cursor": {
          "ref": "22a63103-f42c-4592-8f6e-85d50467c73d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1f950509-aa82-4237-9766-d5df20babf30"
        },
        "item": {
          "id": "f4c31acd-973c-4279-8592-f071fc181345",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "38593b70-a913-4ac1-a781-af1c673d6c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b753b953-d055-4eab-80d3-b5215f66f744",
        "cursor": {
          "ref": "20537d74-ab42-442c-a391-b7211d07b57b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dc218c6c-caf5-46ba-9f15-4951c6685fdc"
        },
        "item": {
          "id": "b753b953-d055-4eab-80d3-b5215f66f744",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "513ba182-e6ae-4b6a-9c9d-764bccda7c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5455554b-e2b3-4a72-ad3d-d398ab08a81a",
        "cursor": {
          "ref": "63ca00c8-2a01-4d38-b9ee-562b97229c14",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e8592606-1876-4ccd-8416-ea7df866330f"
        },
        "item": {
          "id": "5455554b-e2b3-4a72-ad3d-d398ab08a81a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a8f21415-add7-4394-a94a-f1016eb419f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6a0859-4ecf-4445-9ac5-35b47667aeb0",
        "cursor": {
          "ref": "ffef4cc6-cf41-4dd6-9813-d891e63c0794",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8c8c6617-e1e0-4130-a586-04b7b3fc2691"
        },
        "item": {
          "id": "6a6a0859-4ecf-4445-9ac5-35b47667aeb0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "40566359-2fdb-40d9-aaac-34f4ab8c5ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735517a9-d49d-44c8-ae35-da776d0c2eac",
        "cursor": {
          "ref": "fd9173e3-e54c-4416-9f25-79c0d241ff8c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5806fe8a-046e-42cd-af55-faac24b51ade"
        },
        "item": {
          "id": "735517a9-d49d-44c8-ae35-da776d0c2eac",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "561164ce-d86c-476e-8ced-63e45230809b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5822867-ac9a-4f0f-83dc-27f780ccd068",
        "cursor": {
          "ref": "afb8661c-cc71-4755-9836-20db824d4393",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "faf33ec9-e788-46ec-bc2d-db2cff44f1ec"
        },
        "item": {
          "id": "f5822867-ac9a-4f0f-83dc-27f780ccd068",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "63e9d787-b19c-4eb5-8a19-64803c01f0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f186a3ba-5427-4e64-8fdf-d778eb512918",
        "cursor": {
          "ref": "83e0e356-3c69-4e18-b718-489b1a2be5fc",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8f70d911-3a78-4ec8-8b77-ce0a7572f4cb"
        },
        "item": {
          "id": "f186a3ba-5427-4e64-8fdf-d778eb512918",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9b687a0b-0994-41ff-8f72-bba790a9b1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43ec79a-0b1c-42bb-a36b-33c6def3be0e",
        "cursor": {
          "ref": "6aa61a90-4f1b-4378-848c-01c8e431d7aa",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f649310d-68fa-4b5a-8fc5-d99d24c105b1"
        },
        "item": {
          "id": "f43ec79a-0b1c-42bb-a36b-33c6def3be0e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6c9e009a-3630-4b31-a170-b5a123ad2a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b553463-a01d-45e9-a062-82db62b279bc",
        "cursor": {
          "ref": "790cda8b-7e1f-4602-95bd-8f644ab939f0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "77367e15-408a-4aec-9897-2bb33b6fe83d"
        },
        "item": {
          "id": "7b553463-a01d-45e9-a062-82db62b279bc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "44b7cdeb-2c17-44d8-908b-c5507765324e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffbf181-0d97-4b64-ba3e-9f0711fdd304",
        "cursor": {
          "ref": "a6c2ebea-4d69-4358-a3ae-363c2a796ba2",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d405eb6b-3edb-4c6d-9fa8-852b744ebcef"
        },
        "item": {
          "id": "5ffbf181-0d97-4b64-ba3e-9f0711fdd304",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d6c850b4-22c1-4e34-b016-c342e819146c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbbeeb4-6bc3-4837-965f-b15f04613b25",
        "cursor": {
          "ref": "aecc7b27-6611-4c1f-aaf8-9c0d731d9386",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "70d49935-1364-4893-8f05-4d8573f11f76"
        },
        "item": {
          "id": "dfbbeeb4-6bc3-4837-965f-b15f04613b25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "923c5786-c002-461a-9dec-d4ba56394f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be7d173-4f2b-487e-a99b-b8ed80ed3b65",
        "cursor": {
          "ref": "75d03fdd-2089-4aa7-8d47-206794442e71",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0cb05c43-cf19-4ba1-a84e-344805e583a7"
        },
        "item": {
          "id": "1be7d173-4f2b-487e-a99b-b8ed80ed3b65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2741362f-9057-4b29-8f3a-c62bf84481e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4cca43-f481-430d-b2b8-94de2b8fdda0",
        "cursor": {
          "ref": "2c3fa0b9-1d1a-47e8-96bb-c6b1d0857d45",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b98069e3-0841-4cca-b815-53d82edaefb7"
        },
        "item": {
          "id": "db4cca43-f481-430d-b2b8-94de2b8fdda0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4996f806-1863-45e8-ad50-ee62f1963b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98280ef6-61f3-4227-86c7-e4927dfdc358",
        "cursor": {
          "ref": "9644e902-5e40-4224-bd23-136334c75160",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "255ab974-a699-47a3-9e43-fb7d5417305c"
        },
        "item": {
          "id": "98280ef6-61f3-4227-86c7-e4927dfdc358",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "37900193-978e-4eb2-a764-983396f132e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c6deaa-0271-462e-a194-320969097b4a",
        "cursor": {
          "ref": "65faaa50-7cea-4cf6-b1ba-edf9e92e033d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b6eb130f-25b4-49a9-aa20-fd2d0b13786f"
        },
        "item": {
          "id": "20c6deaa-0271-462e-a194-320969097b4a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d5fd3ece-fb12-40b8-9778-749569aa7b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d1358d-466f-470f-96ac-38e67e56841d",
        "cursor": {
          "ref": "52d39615-3dde-4411-9108-2e9b9b9d713a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dbb6cc35-7a64-4895-86a0-3dde5612af88"
        },
        "item": {
          "id": "89d1358d-466f-470f-96ac-38e67e56841d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2f1caace-3998-4916-ac42-467d31e6843d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96b490f-dd55-4c09-9e89-c783682783e7",
        "cursor": {
          "ref": "0f4dbdb9-65f5-4891-8438-fc5cc8b04ae4",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5f41c150-974d-4103-a0ff-09a1193da151"
        },
        "item": {
          "id": "e96b490f-dd55-4c09-9e89-c783682783e7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f3df47e2-d22c-43c6-9d9c-f013de8dc123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c528a8e-ce6a-44f6-9dcb-11048b68067c",
        "cursor": {
          "ref": "cd299cfa-4993-4e95-9a5b-a53445ae3dfb",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f841df0c-d080-4fda-8729-a36262b37104"
        },
        "item": {
          "id": "8c528a8e-ce6a-44f6-9dcb-11048b68067c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "33814102-cb2a-4ab6-bd18-44f833bb20c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092eda2b-a361-47f7-af7a-214d3ef84602",
        "cursor": {
          "ref": "0839b7e3-3538-4911-93ca-8eaabc30d9c3",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0241b56c-7d35-41a7-889e-5cf8473087ea"
        },
        "item": {
          "id": "092eda2b-a361-47f7-af7a-214d3ef84602",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "98b8300e-9fbe-4e81-a60c-503172fa209c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717f9e85-2778-4f63-a0f0-8f81a58708da",
        "cursor": {
          "ref": "9ce05f61-68be-40f8-af63-aef764815e78",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "53d9a18f-09e6-42f8-b77e-a39c6c9ddccc"
        },
        "item": {
          "id": "717f9e85-2778-4f63-a0f0-8f81a58708da",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0afc2cf2-b1b3-4818-b125-5b05a567d954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036da076-6b13-4e0f-bad1-13e23b4e4563",
        "cursor": {
          "ref": "05174602-8035-4fea-8ad0-4abf3c8df0ea",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a2a4f1cc-028c-41b8-b8f0-0a8de966ff34"
        },
        "item": {
          "id": "036da076-6b13-4e0f-bad1-13e23b4e4563",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3c2888ab-3fb0-4c60-a283-ac4474afdd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433dd7bd-3cac-42ec-a085-67f8321a3680",
        "cursor": {
          "ref": "e502e383-f7bb-44e1-9b82-ad8e41195cc3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "62bda8ee-0068-4c9d-9206-9ace56aef9c5"
        },
        "item": {
          "id": "433dd7bd-3cac-42ec-a085-67f8321a3680",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1e1b8c96-a592-4a67-a00c-71c3a4e49947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175f4a6e-0d8d-416b-bfd3-21feb1005fa5",
        "cursor": {
          "ref": "d4ea1f37-9aa3-4baf-b7aa-8f5451d862a2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8f9ad466-521e-4223-ace1-5b4630348eef"
        },
        "item": {
          "id": "175f4a6e-0d8d-416b-bfd3-21feb1005fa5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fb0cb288-087d-4a79-b265-d3c9ac618adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaf4d06-1dac-45dd-81c6-b7f35e00c5bb",
        "cursor": {
          "ref": "4fa44347-4ea6-4c1f-b61d-9513e3d45455",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b9843f94-2675-4444-bcec-55cba989d9de"
        },
        "item": {
          "id": "ebaf4d06-1dac-45dd-81c6-b7f35e00c5bb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b928f2c2-7a91-468f-a8e1-817f731c04da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896fe1f6-474e-40da-bfb4-8a488bf660fc",
        "cursor": {
          "ref": "a492cd23-74a5-44ca-8603-cbb9113d94dd",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "63756c77-6038-40c1-a3ff-32464070a15f"
        },
        "item": {
          "id": "896fe1f6-474e-40da-bfb4-8a488bf660fc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cddd38bb-1d23-4ac0-9f28-95b67099d18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff8d0cb-d6cb-497a-9ac1-bc6f34019203",
        "cursor": {
          "ref": "d82006ea-9ae3-4c78-abb1-e80d34b45081",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d499fdc9-b12b-49ff-b841-9f75ff1dc765"
        },
        "item": {
          "id": "7ff8d0cb-d6cb-497a-9ac1-bc6f34019203",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c25336ae-d925-4828-8e70-eb3db5883229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2949898-106e-4448-a05d-4a19caadff1f",
        "cursor": {
          "ref": "b0276537-b5f5-482b-acc4-a5f99bd73ee5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b57b2a25-b4f8-4881-b729-41b35f79d995"
        },
        "item": {
          "id": "e2949898-106e-4448-a05d-4a19caadff1f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "53b87f42-064f-4f5f-b6a3-dc92ea81f26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa16c44c-a5b2-4b18-a969-98952e7aac1d",
        "cursor": {
          "ref": "3ff12d57-fe75-4474-83f3-1020c35f8532",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a0926684-d4a7-4ee7-aab0-6834774391c7"
        },
        "item": {
          "id": "fa16c44c-a5b2-4b18-a969-98952e7aac1d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ac804389-b808-432e-a7e6-124c476e7b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0452c6e4-ba10-4caa-88e0-59a5c4449253",
        "cursor": {
          "ref": "c9b21498-3851-4d3f-b6d5-c25481bff135",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "faae9334-3dc6-45eb-bbc4-04e7b4409e6c"
        },
        "item": {
          "id": "0452c6e4-ba10-4caa-88e0-59a5c4449253",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2cb60eec-9ba8-48b1-8fbe-bbf0fb637114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7466ce-238d-40e1-b9cd-7f9fad9c0c7b",
        "cursor": {
          "ref": "796683e9-e4f8-4ba0-80f4-bb5113df1c8b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "87472dba-f9ba-48d6-8b2e-b78275b83dd1"
        },
        "item": {
          "id": "ea7466ce-238d-40e1-b9cd-7f9fad9c0c7b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5512684a-e9a4-49eb-af63-d7218500ba29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b48933-ba50-49ad-8f78-5cb5963047e9",
        "cursor": {
          "ref": "a1c077af-8b17-4b5b-a06c-460af67e604c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "054e605f-45bc-4f6a-8769-4e967e03c705"
        },
        "item": {
          "id": "42b48933-ba50-49ad-8f78-5cb5963047e9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e99aebf9-bbe0-4a32-9187-b865efc050d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9382c899-bc9f-4663-a039-4b5f87e255f7",
        "cursor": {
          "ref": "98c56692-a3c7-40d8-8e1a-36dfd33e5ffe",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c6fc7b7e-3f5b-475c-a4a9-6961f14d7bc4"
        },
        "item": {
          "id": "9382c899-bc9f-4663-a039-4b5f87e255f7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7429e220-230b-4551-9cc5-5d585ec9eab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcc4377-d063-4003-9f64-6b823182fe0f",
        "cursor": {
          "ref": "fa20f4be-04d9-426f-88bf-e2a8dce51e5d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "619dd71a-16b6-4b95-9da0-0589777f56db"
        },
        "item": {
          "id": "cbcc4377-d063-4003-9f64-6b823182fe0f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "66e51b47-6260-4cc4-a434-e4b40c83f8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7000c8-aaff-4bf7-a10c-bc9d79278b64",
        "cursor": {
          "ref": "de2e22c2-f8ea-4895-a13d-027c577ff29f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a7f6acd8-e3a7-41b2-819e-349112de32e8"
        },
        "item": {
          "id": "7d7000c8-aaff-4bf7-a10c-bc9d79278b64",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0e854182-6e8f-47f4-be58-a901d32bcb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3ea1f4-cc7d-4f01-a6bd-9c138db175b8",
        "cursor": {
          "ref": "2b4c14f2-368b-4fa5-989c-e90a13c94de9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eef5bb0a-f151-45bc-9692-165bc09fa359"
        },
        "item": {
          "id": "3e3ea1f4-cc7d-4f01-a6bd-9c138db175b8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0d884b47-9660-4317-a0de-3df4b35209bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad21b66c-ce14-4e1b-a50e-aed6a55a2342",
        "cursor": {
          "ref": "3d0da7f4-8f96-41f3-8e13-cb8e6d14c15b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "806fe820-31ac-4c70-a405-cd83b3540e8c"
        },
        "item": {
          "id": "ad21b66c-ce14-4e1b-a50e-aed6a55a2342",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "daa7645d-fe5d-492e-afce-d1757d3ad94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0618ff4-55e0-4fb0-8273-08968165ea57",
        "cursor": {
          "ref": "2da2bbba-4349-40ac-bd2d-f52a9347af3e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b72e1419-e22e-4ee5-b7a4-98fd6600dc88"
        },
        "item": {
          "id": "e0618ff4-55e0-4fb0-8273-08968165ea57",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9eab6307-463d-43aa-a6e3-5f559619fd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e0b849-1ffd-4779-8dca-5b4d35fee889",
        "cursor": {
          "ref": "1d02d7e7-02c2-43e3-9b72-bb6db1abc27c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ad5634e7-e339-49d6-be85-1fe125ebd52e"
        },
        "item": {
          "id": "b6e0b849-1ffd-4779-8dca-5b4d35fee889",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a4fa3554-728f-4218-8d85-323222cc9fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650ebfe1-f233-4257-bd7a-7151a221ca36",
        "cursor": {
          "ref": "3ca57fa5-c14f-4d80-8d52-262336da369f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "120b0ec3-3be3-4754-8145-f02c3e2dd9db"
        },
        "item": {
          "id": "650ebfe1-f233-4257-bd7a-7151a221ca36",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c40483bd-ba3e-40ab-ba5c-8bcf47ea80b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f0539a-6fd8-464c-8788-c2877e9062e6",
        "cursor": {
          "ref": "1f638a23-79e3-4569-9cb0-a3b9a3bee8eb",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e2275aaf-4f46-4b79-a890-49431859e31b"
        },
        "item": {
          "id": "e3f0539a-6fd8-464c-8788-c2877e9062e6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "eb4901f8-eef7-4bd9-b633-60563caf8fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b138678-74e6-4560-aa30-535b235bfe41",
        "cursor": {
          "ref": "bed1ac33-916e-48ae-a74c-eea9fe70ab98",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f4211ca4-aa8c-4a8c-b05f-15cecec0a8b4"
        },
        "item": {
          "id": "2b138678-74e6-4560-aa30-535b235bfe41",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f6ab22bc-5bd9-4680-86f9-b78a3d7ff439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefbb087-3395-45a4-b657-1340bafd1eff",
        "cursor": {
          "ref": "165d49a8-6132-4d4c-943f-808bbfe9c7a1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "94827536-fda9-4bd8-b689-4bb6eea71c0f"
        },
        "item": {
          "id": "fefbb087-3395-45a4-b657-1340bafd1eff",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "24c5587d-ce46-4a01-b782-cd31a6f4167a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96da9cbc-e58f-480b-b1bd-d2af8c0fe28a",
        "cursor": {
          "ref": "f659058f-453a-42f5-9b4b-747662c2bca3",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6f29b6ab-316e-4602-9bea-e973a9dbd323"
        },
        "item": {
          "id": "96da9cbc-e58f-480b-b1bd-d2af8c0fe28a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fa7f2eee-667f-46f4-bf18-007f7fbc9c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6d8aca-9d52-4ae3-b9f2-4bdb13f4fd1d",
        "cursor": {
          "ref": "b97579c4-9c20-43a0-a370-0ecda8ced00f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c9ce5a2e-33a4-464a-b4a1-bef630040f4e"
        },
        "item": {
          "id": "6a6d8aca-9d52-4ae3-b9f2-4bdb13f4fd1d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3f23fe73-0731-4a41-bc23-f0b3a66c99dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0980f10c-006e-4a99-aa7b-5c385b266596",
        "cursor": {
          "ref": "9e1dfa33-1dd3-436e-b40c-cb99c43c2ca3",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3895ad08-36d0-47b0-ab29-7de1acaffbdd"
        },
        "item": {
          "id": "0980f10c-006e-4a99-aa7b-5c385b266596",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "91c309a6-211a-46b3-87f6-342890d5cbeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b50a16-578c-40b4-b5d9-f3d84f842132",
        "cursor": {
          "ref": "d8c24b5c-6801-4c71-9f1e-5abd009123df",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ef94cc95-80c8-40a7-916f-b8f359175dd2"
        },
        "item": {
          "id": "30b50a16-578c-40b4-b5d9-f3d84f842132",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7038ef1a-0dc9-43e8-98d1-ed4a91bf2c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0054812d-6a4f-4514-8d99-21875c13a760",
        "cursor": {
          "ref": "223a876a-a5fc-4b44-9b61-3c27d7f25b88",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "13b1845f-a099-4dd7-bf4c-1973ae4da311"
        },
        "item": {
          "id": "0054812d-6a4f-4514-8d99-21875c13a760",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3d489580-22c7-4607-b92b-38a5856094b8",
          "status": "Created",
          "code": 201,
          "responseTime": 6422,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1393917-ff59-4a47-aa70-1b53f331cc0b",
        "cursor": {
          "ref": "283e9a71-30cd-4816-991f-4ca61d35b9e9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f463f776-4a9f-4d2b-9efa-c133bb0cd075"
        },
        "item": {
          "id": "c1393917-ff59-4a47-aa70-1b53f331cc0b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6f071a7c-98bb-4b8d-a35f-f1241e8a6dd2",
          "status": "Created",
          "code": 201,
          "responseTime": 6057,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "921b7e2e-0c3e-45a7-b452-3d6278bc52a5",
        "cursor": {
          "ref": "ef0a5f42-b776-4cba-9204-e39baebeddfe",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3744d054-5fa7-41a1-b845-903caf729052"
        },
        "item": {
          "id": "921b7e2e-0c3e-45a7-b452-3d6278bc52a5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "612a4c29-1a2a-47d4-941f-10ee5d243466",
          "status": "Created",
          "code": 201,
          "responseTime": 6110,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "284cff51-43b0-4348-b290-b86ceca6d42c",
        "cursor": {
          "ref": "986722b6-5d37-47f3-9a22-077db345665f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cbd190ba-644b-481a-b88c-34044c377eea"
        },
        "item": {
          "id": "284cff51-43b0-4348-b290-b86ceca6d42c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "285b3603-befa-4983-be6c-8eadd1aab025",
          "status": "Created",
          "code": 201,
          "responseTime": 5810,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0503aec-3ea1-416f-b119-e9ca47a11189",
        "cursor": {
          "ref": "c1bc35d6-4df0-4686-a880-561c582271d0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a0d4928e-59b8-4e7a-bede-adc504a90cdd"
        },
        "item": {
          "id": "c0503aec-3ea1-416f-b119-e9ca47a11189",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5239e038-e5e4-4f79-ac3a-4e385d40d792",
          "status": "Created",
          "code": 201,
          "responseTime": 5801,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-08T00:38:52Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-08T00:38:52Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0fa35594-450c-4577-9642-3cafec23c3de",
        "cursor": {
          "ref": "5f19fce5-fd30-41c1-8c97-dc90b9fd34eb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "821893ec-b638-40e1-991e-c12bb8b21c10"
        },
        "item": {
          "id": "0fa35594-450c-4577-9642-3cafec23c3de",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c4474c00-1c99-4ebd-8c3b-0ade8739dc8c",
          "status": "Created",
          "code": 201,
          "responseTime": 5638,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23dc6a90-7dbd-4202-acfd-13f70bdd36b8",
        "cursor": {
          "ref": "def9a028-4340-4809-9f69-6f762074250f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b2fe3402-79f9-48e8-938a-c61bb27a89af"
        },
        "item": {
          "id": "23dc6a90-7dbd-4202-acfd-13f70bdd36b8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "efecd2e0-3280-473d-9472-4b22f5c2f240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770c22df-23d0-4081-bc7f-d14025de3e0c",
        "cursor": {
          "ref": "b8351086-f90b-4d86-85f2-d396825a6089",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "45041308-f9c1-4a0e-a7dc-2a2a6d73287b"
        },
        "item": {
          "id": "770c22df-23d0-4081-bc7f-d14025de3e0c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "30e9d731-1a57-46b2-a763-70016daab269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706bbc73-f4bf-49cb-a083-b3d9765be6ff",
        "cursor": {
          "ref": "a3dbec49-ccb8-42e3-8e89-88d4e706d346",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "38c1edf8-516a-484b-ad69-4c03afc38144"
        },
        "item": {
          "id": "706bbc73-f4bf-49cb-a083-b3d9765be6ff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "71e35989-8505-483f-8b7f-dc1c97b255e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c0fb9d-4e90-4971-b277-c30bb995ae24",
        "cursor": {
          "ref": "abe05f9a-ad35-4cc4-af31-9eaab5bda95e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ee398d44-8029-478a-802f-cdd09c57220f"
        },
        "item": {
          "id": "60c0fb9d-4e90-4971-b277-c30bb995ae24",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e7ab3a30-b7cb-4dff-a5bd-a9cfb67e6e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292ca71b-a6d5-44a9-a410-3df7f3644062",
        "cursor": {
          "ref": "c00b72d3-98ec-4479-a7e9-28fb4b1dbcf7",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "df1f41a2-efb0-49e8-b68f-804c6e69b05d"
        },
        "item": {
          "id": "292ca71b-a6d5-44a9-a410-3df7f3644062",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1c89f6e4-2394-4a0e-af7d-61f3f66a2285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f5829b-a00d-428d-a7c0-873f241fa755",
        "cursor": {
          "ref": "ecc55da0-6de3-4762-8d97-e61ebf4ce230",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "30849e74-7fef-44e0-978b-0b15faf6303c"
        },
        "item": {
          "id": "53f5829b-a00d-428d-a7c0-873f241fa755",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c92825cc-00ee-4424-9b9b-5592ab52e93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aca9695-b016-4a05-904c-9c325deda60b",
        "cursor": {
          "ref": "97fbc41b-e85a-4d9c-9a2a-9168ac81df08",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "929e164c-d92a-4f8d-8edf-f30b3839629f"
        },
        "item": {
          "id": "5aca9695-b016-4a05-904c-9c325deda60b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e0838bd2-1877-4444-9c22-be6d13bb9e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23ee570-a1bf-4444-984c-a5e9760e1b09",
        "cursor": {
          "ref": "274506f8-1d48-4e4b-aa91-249b527af86c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c8b7d689-bab9-4bc0-af44-d638e92d79d5"
        },
        "item": {
          "id": "b23ee570-a1bf-4444-984c-a5e9760e1b09",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "96d2c871-d966-489e-92f0-6ef4410889af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f074a7a-606e-4b24-881b-bb2ed1a4769d",
        "cursor": {
          "ref": "ff37c6c6-493a-40db-9247-b5c0bd11e03d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "958a6e18-e5b2-42da-bb8b-d5120b3c5c64"
        },
        "item": {
          "id": "3f074a7a-606e-4b24-881b-bb2ed1a4769d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ce236d6d-9573-4208-9813-d6931ef9fa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f0d21f-178e-4105-9a9d-bea24a836012",
        "cursor": {
          "ref": "1d757aea-7858-4007-bafb-221f3215d45e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3bb7138a-cb67-47e9-8f13-dab1697d2ad7"
        },
        "item": {
          "id": "f0f0d21f-178e-4105-9a9d-bea24a836012",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e81f3234-e09f-443b-b864-6dfedf08237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9133c284-d52f-48db-a006-a64754c374cf",
        "cursor": {
          "ref": "d587c995-7ea9-480f-b649-97dfb56a8812",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "44094cea-b1dd-4f14-bf3a-03f98426e146"
        },
        "item": {
          "id": "9133c284-d52f-48db-a006-a64754c374cf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7922747b-d053-4e5e-ab73-27f495004639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ddbfe0-f1d4-4223-95c4-3395f337ea29",
        "cursor": {
          "ref": "94d1c2fd-9e78-4e22-bd63-aa6ccd827036",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4d0f71f9-1392-4e40-9615-c3fa101af89e"
        },
        "item": {
          "id": "09ddbfe0-f1d4-4223-95c4-3395f337ea29",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "825c4ad4-6487-4c97-92a2-3bcacef77869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532f4d80-156c-424f-96e3-f1507b1624ea",
        "cursor": {
          "ref": "c7b0cb07-3d44-4543-8348-94a809290b88",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4301cbbf-f191-46e2-9666-b64758d83ed5"
        },
        "item": {
          "id": "532f4d80-156c-424f-96e3-f1507b1624ea",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "16e7fb38-2b38-4dad-be27-af85a0f84910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c25d78-b3d1-477e-8769-b9452fffcc45",
        "cursor": {
          "ref": "605476cb-cc6f-4baf-9083-7d0e09ea7915",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "310b9fa4-c922-4e25-92f7-a1adafae391e"
        },
        "item": {
          "id": "c3c25d78-b3d1-477e-8769-b9452fffcc45",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8de4637b-f65d-4a30-a4c7-78e2a254f898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885786da-b83f-4d8a-8a83-d9fae527a641",
        "cursor": {
          "ref": "9864d1a4-4f26-4acb-9d43-480c338ca618",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b5853d11-39aa-48ea-a6b5-992c041b467d"
        },
        "item": {
          "id": "885786da-b83f-4d8a-8a83-d9fae527a641",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "96bf81e2-6507-4bf0-a07b-3dd1606eed80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9d0ad0-3b81-4a57-ad4a-b52b402e675f",
        "cursor": {
          "ref": "deb7fd4b-fd92-4ca2-9f30-f354cf6f051b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "48ed9826-7d60-4312-a73d-646cdd394fee"
        },
        "item": {
          "id": "5e9d0ad0-3b81-4a57-ad4a-b52b402e675f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4f37a022-6b7c-496f-aaa4-44c196ad96d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bda6806-5ae3-4064-9af3-7a247d789e85",
        "cursor": {
          "ref": "59cc65c8-6aac-4db5-b689-89d3150e18ff",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5b41dafd-ea39-4967-ba58-67039b1c9cb5"
        },
        "item": {
          "id": "7bda6806-5ae3-4064-9af3-7a247d789e85",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0d2885bb-7cae-429c-902c-c8aa9c860fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec46a5d-3ae3-42de-b97e-204aaf136d4b",
        "cursor": {
          "ref": "a41bafa0-d856-428c-b968-f171186b71d5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c03ab120-38d7-4949-b85f-6504666ce182"
        },
        "item": {
          "id": "1ec46a5d-3ae3-42de-b97e-204aaf136d4b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1799ebcc-c802-4ec1-bc14-be2a41ff495c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60af1032-d269-4aef-9374-0f0de739332b",
        "cursor": {
          "ref": "015b09ec-c800-464a-af8c-edf35b40423a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0640d05a-ce6d-4142-ad12-2de59f058a62"
        },
        "item": {
          "id": "60af1032-d269-4aef-9374-0f0de739332b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c32f0aa0-2654-4b5a-8c7d-3d9ab23105da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2cd30a-3f81-44f1-b7b0-c8232456301c",
        "cursor": {
          "ref": "48242779-3cf7-41d9-b552-38e6929e3e96",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f0d57238-0276-4243-b6bb-10bd2d4bc823"
        },
        "item": {
          "id": "ff2cd30a-3f81-44f1-b7b0-c8232456301c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "376f6ca1-bb54-4326-aa37-447a6e229697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87b994d-a1b9-4be1-9caa-ac2a1db4e7cc",
        "cursor": {
          "ref": "1d91504a-96a9-4aad-9148-093ee0490117",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "162abd1c-41ab-4176-98af-6229cdfd8d4e"
        },
        "item": {
          "id": "a87b994d-a1b9-4be1-9caa-ac2a1db4e7cc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "40bb9a32-ce0f-4fa3-a295-89af296c0119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1783024d-81e5-4ad4-81d3-d1cd551392cf",
        "cursor": {
          "ref": "e9102b79-31f6-46a4-b450-b5069be4ae09",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f100df1d-67d4-4d11-a888-b5e38381c007"
        },
        "item": {
          "id": "1783024d-81e5-4ad4-81d3-d1cd551392cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "61e4c426-63c0-4f41-8c53-24d081a0903c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f95707-41c3-40ef-9d04-e4009a161de1",
        "cursor": {
          "ref": "580179ea-6e58-4af8-b7c1-23551f7a110c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f2067c3f-1dbf-467f-b412-485604d10af1"
        },
        "item": {
          "id": "90f95707-41c3-40ef-9d04-e4009a161de1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "339dd74d-f933-4e7f-b404-0630406e5fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3d874e-29bd-44cd-b02d-c16c574dbdc2",
        "cursor": {
          "ref": "2e501674-e028-497a-bdda-ab66a960d7a6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c3e47e56-a25b-4ae7-912a-6252eb9caaf8"
        },
        "item": {
          "id": "ab3d874e-29bd-44cd-b02d-c16c574dbdc2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b410a3be-acde-4e67-a336-8e929898c4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf1670d-d29e-4e72-a8ae-617c062cbd83",
        "cursor": {
          "ref": "49dde920-2ca6-4d44-a3c6-b21a1e16d664",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7f11068a-f0d8-412f-9387-110394baf67b"
        },
        "item": {
          "id": "5bf1670d-d29e-4e72-a8ae-617c062cbd83",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a6568baf-594d-4569-b1d5-3d706a2a7748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9011e8d-8289-4ac1-9521-0cbb515a1c0b",
        "cursor": {
          "ref": "3896a7cc-63cf-4570-8a3f-601afdf61960",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9cd13011-f4df-4684-81f0-63d385bfe6a6"
        },
        "item": {
          "id": "e9011e8d-8289-4ac1-9521-0cbb515a1c0b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "aff9478b-a95a-48e0-a9c6-a773429e9f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec11de25-1ae8-430d-a119-0026dba1c34d",
        "cursor": {
          "ref": "3090422f-1416-4bd4-9aa7-093cc9833437",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e0afb9f2-7a13-4499-b727-8ce48f75ee1b"
        },
        "item": {
          "id": "ec11de25-1ae8-430d-a119-0026dba1c34d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8ae42cb8-dfaa-43d2-9790-bb3d78f2d09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0052967f-7e46-4254-af2d-7e1cd12bcdfa",
        "cursor": {
          "ref": "37aa1f80-95d8-4934-b496-d315aa49f5b4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0f30b7cc-9a0f-461c-8167-3c512b843c5d"
        },
        "item": {
          "id": "0052967f-7e46-4254-af2d-7e1cd12bcdfa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "555b57f4-f9d9-4213-9b98-8202e267bcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd88795-cc33-497a-a252-d46f42b0cfa6",
        "cursor": {
          "ref": "5ec63fae-8ccb-43dd-b9be-38edd9f233fc",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b3419688-9fb1-4a18-9c10-ffb5d20724e1"
        },
        "item": {
          "id": "6cd88795-cc33-497a-a252-d46f42b0cfa6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "75e8ddb8-5132-4835-a3c0-db2abdf9f942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c067f27c-70a9-459b-b325-cf59b6e9c876",
        "cursor": {
          "ref": "c33f84c6-d560-460a-9341-4ac5e5af9e83",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "59e92320-d6c6-4ce9-95d8-4620d28064e8"
        },
        "item": {
          "id": "c067f27c-70a9-459b-b325-cf59b6e9c876",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "789c2ded-9d5e-415c-be00-c64b010d17f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3565ca88-ab3f-4fe3-ac6e-fabe2588e3c9",
        "cursor": {
          "ref": "c357bb27-d5d9-45e5-9148-90cbf6e9e77f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4a3360bc-966c-49a3-8241-c798cc5d47e3"
        },
        "item": {
          "id": "3565ca88-ab3f-4fe3-ac6e-fabe2588e3c9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fbf1e4d0-4dea-4e51-8f31-9e02dc64fc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bc2df5-d6c4-4254-91bd-7855fcc1bfcf",
        "cursor": {
          "ref": "b6ba1128-8e29-4fc6-8277-9718700fe0d0",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1476969a-6901-4a6a-99d0-dd44bcd48c08"
        },
        "item": {
          "id": "11bc2df5-d6c4-4254-91bd-7855fcc1bfcf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "40d75128-2387-4d7b-9bba-ada5f842b81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5aef85-de66-4a38-82c5-a41e0967e342",
        "cursor": {
          "ref": "33845c79-94e5-4cf4-9655-54505c7ae179",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3e148899-ba26-4ee3-8765-ae3f845c3ac8"
        },
        "item": {
          "id": "9c5aef85-de66-4a38-82c5-a41e0967e342",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "56e6ef30-fc8f-4745-8009-d806f0564913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa94767-f7e1-4fdc-8a01-b01d15926cf3",
        "cursor": {
          "ref": "da3865ca-e9c1-440f-a266-7c683ef4c6be",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4321b543-9ec9-4db9-a145-cfc2b1a4cb37"
        },
        "item": {
          "id": "4aa94767-f7e1-4fdc-8a01-b01d15926cf3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e12b963b-a0b6-4afa-a2e6-7c3767f5a0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e90bbe3-02f3-4b56-ab1b-56e47b47835c",
        "cursor": {
          "ref": "bc7355cc-d9e8-4c89-b068-2896546c303f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9199ea14-4094-40d3-9553-3647f64f13ab"
        },
        "item": {
          "id": "0e90bbe3-02f3-4b56-ab1b-56e47b47835c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f48e52ac-63d3-4019-b765-dd20774ee0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf541d4b-e050-447e-a5c5-07dd92ce7b4f",
        "cursor": {
          "ref": "ba4bbaac-fe78-4764-b5f8-92f8e0af82af",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "564b721b-6d30-4fb8-b9d5-50ac7a3e6342"
        },
        "item": {
          "id": "bf541d4b-e050-447e-a5c5-07dd92ce7b4f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f7d66637-5736-4b59-8dae-16e453164e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d341cf-8708-48a5-8d7d-7093435a1065",
        "cursor": {
          "ref": "fb0a7f24-52f2-4b04-b14e-465466fffeb9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "76f48378-f2c6-442b-8e80-e622bc7dfac8"
        },
        "item": {
          "id": "d9d341cf-8708-48a5-8d7d-7093435a1065",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ab6fa771-69bf-4691-8d57-095311ac9ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08af88c8-0a7b-4857-acbb-0f6456bb6957",
        "cursor": {
          "ref": "e898d240-13fd-4840-ae28-814977e36197",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "eb0228e0-038b-4168-8387-ab325fd40e78"
        },
        "item": {
          "id": "08af88c8-0a7b-4857-acbb-0f6456bb6957",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a8623acc-cecf-41a5-83e8-d8b82af20aa7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd894f4-5094-444c-be1d-16258179b11d",
        "cursor": {
          "ref": "257e6643-3d21-4dab-808d-cefe8dab3e90",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "847f3b83-e713-4abe-9e5c-f11eadf34905"
        },
        "item": {
          "id": "cfd894f4-5094-444c-be1d-16258179b11d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "03cfa94f-dd4b-48ff-8cf2-d0c77310849b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d73445-b884-4294-a97b-5c22925aa982",
        "cursor": {
          "ref": "b43c11b7-ea5c-4143-a335-5f9e7f12ea5d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6a37e1ac-8a93-49ba-95bf-78e66d734605"
        },
        "item": {
          "id": "53d73445-b884-4294-a97b-5c22925aa982",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d14e3fb9-ea41-4c61-98ed-34aab0ffcc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a1b262-5c16-4d1e-99c7-2e373473e2a6",
        "cursor": {
          "ref": "554ac0d8-4726-4f8a-bfef-06fa116d47ff",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f9295fb2-4e53-4bfd-8a7e-8ceab626135e"
        },
        "item": {
          "id": "05a1b262-5c16-4d1e-99c7-2e373473e2a6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3bfc85d7-fca7-4260-9fae-55c9bc364fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd76c97-e881-473f-b9de-94d5ccc7978c",
        "cursor": {
          "ref": "edeb2904-4e55-4543-a612-c3564b5ea993",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c829e12d-4c2c-4ad4-a989-b2aa20fe9361"
        },
        "item": {
          "id": "fdd76c97-e881-473f-b9de-94d5ccc7978c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1e423c1b-24ba-4c25-b97b-0729e73417ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d71a228-a1c6-4247-907a-cbe3a24e216b",
        "cursor": {
          "ref": "23cd3492-94ef-489e-91e8-71cfa7b0b860",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "55b8f70b-6b96-4891-bb0f-e087c77174fd"
        },
        "item": {
          "id": "5d71a228-a1c6-4247-907a-cbe3a24e216b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "59742935-3655-42da-8751-6c20ec1c4f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459e6dbc-8481-4bfb-bea3-b6b96b04e9c3",
        "cursor": {
          "ref": "87860c71-4975-4947-895a-f255dec63cda",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "70e76fd3-6bda-4f2a-8404-2b4ca1ff3a6d"
        },
        "item": {
          "id": "459e6dbc-8481-4bfb-bea3-b6b96b04e9c3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2fdc7768-7634-4413-a086-56b5c898ef66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e672b1ec-8249-4ef6-bbd6-c5a59f527582",
        "cursor": {
          "ref": "b6d9c445-a350-4d47-af76-f7956a5f1b0d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "45c5d223-8bff-4b92-bb2c-a62140d6926e"
        },
        "item": {
          "id": "e672b1ec-8249-4ef6-bbd6-c5a59f527582",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "47103f26-6599-4bf4-89ba-b1d90135241e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156198a4-b32a-4cbd-a21c-b5f562209821",
        "cursor": {
          "ref": "2ed126e4-dc82-435b-96c3-ec57b7304e3e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8261712d-76f5-4b34-b732-e1ea5631b7ed"
        },
        "item": {
          "id": "156198a4-b32a-4cbd-a21c-b5f562209821",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "723b471e-8a58-4559-a739-96352d080ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0501c9a3-c19b-440c-b01c-e427bcef10c6",
        "cursor": {
          "ref": "e2af01da-c151-4535-a8ee-40d5274ed6c4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0de406d3-0324-4eb9-be29-c7c83f0a764b"
        },
        "item": {
          "id": "0501c9a3-c19b-440c-b01c-e427bcef10c6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6c2ade02-27a5-40b8-8a82-fd962be64dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd63d882-d5ba-41e5-9a99-4bcf994019f9",
        "cursor": {
          "ref": "5c279199-8a82-4d32-b780-1eb037e787e4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3d2b6366-c253-4b97-b229-29e4957c92ac"
        },
        "item": {
          "id": "dd63d882-d5ba-41e5-9a99-4bcf994019f9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bb67eb6d-6fc9-414b-a231-1e254b7a0647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4580ad96-e635-4605-a030-218b56b8ace3",
        "cursor": {
          "ref": "639fe1a1-dbf5-4915-bea5-8f0c5ca45ac3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a452ad0f-339d-4da2-ad42-1909bbe72ef3"
        },
        "item": {
          "id": "4580ad96-e635-4605-a030-218b56b8ace3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "028b4158-942a-4410-8c48-ae851c934bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b05593-82a3-4cb9-8d65-5ebc7e1449fd",
        "cursor": {
          "ref": "ee3ff145-8a64-4f4b-badc-ad3d2fdbb61b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bec0fa84-6f23-4ef4-8841-b1c31d0973ca"
        },
        "item": {
          "id": "d4b05593-82a3-4cb9-8d65-5ebc7e1449fd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e5c68477-c66d-4277-bae9-2efc86f8ad25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3082c6e6-f648-462a-b3f3-26c4f7aff5ed",
        "cursor": {
          "ref": "414f4c61-ad23-4efa-9571-e73462019300",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5d212e7c-387a-40d4-a5d7-d2facf240140"
        },
        "item": {
          "id": "3082c6e6-f648-462a-b3f3-26c4f7aff5ed",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d798f496-8c91-4dce-b54a-fddb0554ec93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6922eb-7fcb-4a83-8db7-c0e4441d3bb3",
        "cursor": {
          "ref": "63f26cfe-dfb8-4af0-9409-3f5209312b87",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "17b7deb2-d337-48a1-ba1a-ae0c94ff9827"
        },
        "item": {
          "id": "ca6922eb-7fcb-4a83-8db7-c0e4441d3bb3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a2d68a3b-a0a4-436a-b089-94e272ad973a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead80482-2eef-4e25-8c8e-68bc068e800c",
        "cursor": {
          "ref": "ba424c1c-7026-4d94-bf66-54cdfed1e13c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9496cadb-bda5-4657-b7ae-e93b9f5d3f01"
        },
        "item": {
          "id": "ead80482-2eef-4e25-8c8e-68bc068e800c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a6ad115d-5a37-48fd-aed3-e0cf17547c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c96e872-5079-41a9-b5d0-84c33e77c3af",
        "cursor": {
          "ref": "3c8827a5-ccb5-49aa-b2cb-065d0454a094",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e6bc0770-ee91-4016-ac93-8f4775423cbb"
        },
        "item": {
          "id": "3c96e872-5079-41a9-b5d0-84c33e77c3af",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b501a32c-0997-4995-a69a-31d137e2c24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2e4e7e-b0f9-4e96-8a8a-9a230397685d",
        "cursor": {
          "ref": "55b44407-d833-4248-8404-df44b5968ad4",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7579ccea-53b6-4f15-87bd-026b960a6ccd"
        },
        "item": {
          "id": "0a2e4e7e-b0f9-4e96-8a8a-9a230397685d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f03e206e-dbb3-4df3-8648-181c711d0c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7a796e-62c9-4a37-8b6a-d2850332358f",
        "cursor": {
          "ref": "610f6272-93d0-4f99-b8b0-7da9a6677a66",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4fcd3768-4f2f-417f-84fa-39a462b71c6d"
        },
        "item": {
          "id": "ed7a796e-62c9-4a37-8b6a-d2850332358f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4a56c14f-cf62-45d2-8297-0a6498a6e439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0241a4-dbf9-42b6-9fde-fdc2f21c8b8e",
        "cursor": {
          "ref": "7596f994-2570-432d-a4d9-86a4cabb5345",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9e958432-cc13-425b-9558-c0646f84afae"
        },
        "item": {
          "id": "ed0241a4-dbf9-42b6-9fde-fdc2f21c8b8e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bceb46c7-651a-4fc9-ae87-893053d97138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67b8913-e81b-474e-a3c8-8f60a10030ce",
        "cursor": {
          "ref": "d86e381a-2f8b-42fb-8f68-02e738678d71",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "277fdce6-a7d3-4b2a-ab1b-3353f6e6989c"
        },
        "item": {
          "id": "a67b8913-e81b-474e-a3c8-8f60a10030ce",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9ea18a84-7dc4-4698-a38c-05e7c5336089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54533aaa-c0f8-46cf-be30-76755242da3a",
        "cursor": {
          "ref": "ae420ef6-b982-4fb4-9710-9c998561e886",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9442015e-4f81-4f0e-8ec8-3f6727cc7c6a"
        },
        "item": {
          "id": "54533aaa-c0f8-46cf-be30-76755242da3a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "72e3f417-6788-41bf-adf4-f04d0355f2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62faba7b-5d47-4292-82a8-596cd4c71d95",
        "cursor": {
          "ref": "25c02675-3a2f-4f3d-83dd-4bb45abd260a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fd77aeff-fb63-49af-b766-bd95532799ee"
        },
        "item": {
          "id": "62faba7b-5d47-4292-82a8-596cd4c71d95",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "95f09693-905a-4a82-a784-42a36ef9b41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c3aa68-0b21-4408-b6e3-8e9ce9be4a00",
        "cursor": {
          "ref": "85010b01-4847-4bc4-ba1d-172cba699e5d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ae2b1471-76be-46dd-812d-405e9ee3e914"
        },
        "item": {
          "id": "19c3aa68-0b21-4408-b6e3-8e9ce9be4a00",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bf889cb2-a1fa-4c63-97b5-6679a338d6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f04406-8ebd-42bf-8f1e-d934dc267510",
        "cursor": {
          "ref": "4277615d-4d30-4d8f-a690-8458a5f7e101",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "64459d7f-a8ca-40c8-9c85-da38b361d3d0"
        },
        "item": {
          "id": "d9f04406-8ebd-42bf-8f1e-d934dc267510",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f5fa66d3-823d-437b-baf1-08a08efc9c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f700e318-6817-489f-9358-9f8b3c72a549",
        "cursor": {
          "ref": "02852c4b-eb83-47e1-b526-3611a0d96dab",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fd4dbad6-d800-4883-88ba-dbeaed99c17f"
        },
        "item": {
          "id": "f700e318-6817-489f-9358-9f8b3c72a549",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "10d725d7-206a-4cc3-b320-c2077160ee92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff26231-f09f-44b7-9188-649bfea8dbbc",
        "cursor": {
          "ref": "4dc143de-eab4-41ab-b5c8-677a9605cafe",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4db5b5ed-34e4-4d5a-ac2c-a61e86462029"
        },
        "item": {
          "id": "3ff26231-f09f-44b7-9188-649bfea8dbbc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c45f7469-52bc-4043-9a18-777f66d77a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2ed7dd-383f-46de-91f9-9396a698308a",
        "cursor": {
          "ref": "7ea1d0e8-a218-4e6c-b545-8618f12b93fd",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "602cec76-9d44-48e2-84bb-cbf9f0ff25b2"
        },
        "item": {
          "id": "da2ed7dd-383f-46de-91f9-9396a698308a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0ff4c8f8-8c4a-472f-b924-01275e4c1e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300b2a56-ef33-4399-9805-36b18a3f1612",
        "cursor": {
          "ref": "97731ab4-5f8e-439a-a4ff-4f419292635f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "924043a7-39cf-4a25-b7a9-c8418db0168b"
        },
        "item": {
          "id": "300b2a56-ef33-4399-9805-36b18a3f1612",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f31ab4a9-26dd-4127-9c37-d15f8cb62685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffe8ec5-7a55-4552-84c9-57d05c9424a7",
        "cursor": {
          "ref": "45184fe8-a82c-44eb-84de-175451a8d914",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dec035d9-54ee-43e7-bf9c-ecd728feb91a"
        },
        "item": {
          "id": "2ffe8ec5-7a55-4552-84c9-57d05c9424a7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c2ccf2fd-aae6-41ac-8692-5d42dd531729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21331061-b51d-4a21-871e-e9bcccc6d4ba",
        "cursor": {
          "ref": "d9c5a059-cf7c-403a-ae15-777676c46d6e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4a68c31b-b6d4-435c-9ed3-eb5239e9701c"
        },
        "item": {
          "id": "21331061-b51d-4a21-871e-e9bcccc6d4ba",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "06277f3a-c3ef-47e7-a223-0fddbd48ed5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecf1e6a-0ad5-4ca7-9864-e5fd13332474",
        "cursor": {
          "ref": "d6468b0e-6072-4730-a88d-02a499cf9fb1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3b380b20-9eae-44c1-a3a6-1b4f3ce2a136"
        },
        "item": {
          "id": "aecf1e6a-0ad5-4ca7-9864-e5fd13332474",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3860dfe8-ae4e-4a80-953d-91db53554ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c426fd-08f0-458b-a477-d74d0400d62b",
        "cursor": {
          "ref": "ce347ef5-9f70-4ab7-8c50-9e71ff1fe9b5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8fa7e114-8d86-47e7-8617-e02e453ba1e5"
        },
        "item": {
          "id": "49c426fd-08f0-458b-a477-d74d0400d62b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6b00bb93-a01f-4490-bf6c-5c074a3737e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d48ba7c-c57c-4939-99bf-27d7569154b7",
        "cursor": {
          "ref": "67b18328-eee9-4a0c-8fa9-fe72958062ac",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "df6009ef-6a40-4db0-8655-7c18b0e5b38b"
        },
        "item": {
          "id": "5d48ba7c-c57c-4939-99bf-27d7569154b7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a7a9cea3-b22a-44ec-96a6-924cdff9b6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188cc09a-98aa-4059-bd7e-f0e30d59f271",
        "cursor": {
          "ref": "40846d63-8770-454f-8fe7-7643fc155bb9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ab8acb7f-98e2-4a7f-8822-3dd245c50155"
        },
        "item": {
          "id": "188cc09a-98aa-4059-bd7e-f0e30d59f271",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5746ad42-be09-4c74-86ba-aff1e3f81a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7c046e-d043-4ec4-9dc9-51e20ceff16b",
        "cursor": {
          "ref": "61716c4b-1244-412a-a2af-2ad621d50f95",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "918ded2d-cba5-4302-984a-0e8d6702f54d"
        },
        "item": {
          "id": "fd7c046e-d043-4ec4-9dc9-51e20ceff16b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1c377692-0e18-496a-9c64-6712194e28ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be49845f-ff8b-4e95-abc5-d917410155bc",
        "cursor": {
          "ref": "b5393bf7-85cb-486f-ad00-9b4ba31691a0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "39bf769b-3b0f-4272-b178-20b26849e44e"
        },
        "item": {
          "id": "be49845f-ff8b-4e95-abc5-d917410155bc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "67ff59ef-275e-435d-bc9c-39ce501fb78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2b2896-d1e4-4309-9d9f-1412c6fba8d0",
        "cursor": {
          "ref": "ff01bf16-ee92-479e-9322-10ca84b362ec",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e0b3fdd4-b089-474e-9ac6-4de57a4631eb"
        },
        "item": {
          "id": "1a2b2896-d1e4-4309-9d9f-1412c6fba8d0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fecf2b6b-a9c3-4837-9afd-568f0bd5244e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c597750-8d34-403d-9fe0-63d636135c5c",
        "cursor": {
          "ref": "3d7f344b-dae7-4162-8962-9337443c655b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4e3ac923-7db9-4626-bc84-f6e997a9620b"
        },
        "item": {
          "id": "4c597750-8d34-403d-9fe0-63d636135c5c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c1bb0e2b-0e9a-4868-ba09-c6d391763954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82bdb01-355e-4617-a2bd-5fbc3d19dadf",
        "cursor": {
          "ref": "2113afe8-4d36-4077-b62e-1ea2766f796e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7daa3bf3-565a-4e5f-80ad-985cf8f73a30"
        },
        "item": {
          "id": "d82bdb01-355e-4617-a2bd-5fbc3d19dadf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "60597bbb-a4a9-4162-ba32-c9a2e5ad8e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6166d480-1b07-46d0-b381-774673b04c8c",
        "cursor": {
          "ref": "582b5114-b77f-4c1c-861b-77a7d8a27791",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "72ffe604-bcaf-442d-bfb9-ea37f83dc29b"
        },
        "item": {
          "id": "6166d480-1b07-46d0-b381-774673b04c8c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "685db326-16ca-4e1d-8ec7-1ec065c6b311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539b21d0-7312-49f6-9240-3fab36b7ea61",
        "cursor": {
          "ref": "a491f7ba-c3c3-46f9-bf0b-f86aef2163e0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "75e736ab-2b3e-42f5-8b9d-9534541334c9"
        },
        "item": {
          "id": "539b21d0-7312-49f6-9240-3fab36b7ea61",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3aed20fd-81f6-4c2c-9552-87d6e30b3624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48daf53a-6a85-4dc0-b086-ba440d0f772e",
        "cursor": {
          "ref": "ca54b855-abb7-4207-be47-72d0f5f7d935",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3f6b041e-7eed-4231-84a3-4f130147579b"
        },
        "item": {
          "id": "48daf53a-6a85-4dc0-b086-ba440d0f772e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ee439e4a-9b9a-4de5-b08a-e4888cf13646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692c80e2-9477-43cb-bfed-7272cc48e531",
        "cursor": {
          "ref": "6ff2161d-c8de-42b3-abf3-676d4643893c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "59882d16-3c6f-403f-9f08-238483297a6e"
        },
        "item": {
          "id": "692c80e2-9477-43cb-bfed-7272cc48e531",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3183c0e9-0546-4a25-801b-cb7b8fc194ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82584b3-8271-480b-a5d5-05721643cb8b",
        "cursor": {
          "ref": "83944c31-bd89-4f80-aaac-1c736285aa45",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a1c50f99-2544-4301-b993-671b3245b9de"
        },
        "item": {
          "id": "c82584b3-8271-480b-a5d5-05721643cb8b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "376d5ab1-7365-4f7b-9eb8-54e81a179e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4b53f5-d327-4d55-9d5a-b73efdd1ed09",
        "cursor": {
          "ref": "29089f30-16a4-49ef-b0ab-dbf16589e786",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "002f6d07-b544-496b-a353-2c57d8177b1c"
        },
        "item": {
          "id": "7a4b53f5-d327-4d55-9d5a-b73efdd1ed09",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "726a5816-999f-4a86-85b3-99eb50958d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d464887b-ff2d-4991-b54d-fab94fe03b5a",
        "cursor": {
          "ref": "1746a750-b7a7-4c8b-9977-26f9bbec5a9e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2769a94a-7af3-4619-8167-5c5eb30b6fce"
        },
        "item": {
          "id": "d464887b-ff2d-4991-b54d-fab94fe03b5a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "18bac025-0336-46e6-bae8-b2b6009b02fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffb1327-a719-4cf5-9381-9d4d31fdb8d4",
        "cursor": {
          "ref": "400ef79f-3a37-4c78-b040-664fba3eadb1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5d530af9-40d4-45e4-a362-9ee68f788576"
        },
        "item": {
          "id": "4ffb1327-a719-4cf5-9381-9d4d31fdb8d4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ae168003-7bc5-40d1-8396-58d9d468e28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f61f0c3-bc25-422e-999d-273f924d349e",
        "cursor": {
          "ref": "b38a40b8-a990-41eb-8031-1afa1392454b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1000bfba-9908-4d33-b96a-3a817dd4b77f"
        },
        "item": {
          "id": "4f61f0c3-bc25-422e-999d-273f924d349e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b6aa29cc-12c1-4d5d-b175-46cfe6e5a287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5003acd9-4b52-4531-a5aa-86487bcdb06f",
        "cursor": {
          "ref": "8976a7a6-7f47-4b24-886a-67bdcf9b1554",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "afc58e15-b963-45a9-a7cc-bdf365cb615e"
        },
        "item": {
          "id": "5003acd9-4b52-4531-a5aa-86487bcdb06f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ebff5630-8f53-4c4c-a2db-cff1966ca64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a692922-b7db-4eed-9f52-f2cfcc0754e2",
        "cursor": {
          "ref": "e3a48e6c-bbeb-457b-940c-98e2d4a0f9d5",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "be2cf50d-a655-4552-946a-09850cc92b5a"
        },
        "item": {
          "id": "5a692922-b7db-4eed-9f52-f2cfcc0754e2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8328008d-bc4c-47ea-8f4f-0416743d57cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3e9c78-608e-4cf8-a453-6274efb174ed",
        "cursor": {
          "ref": "ad3f3dad-4d9e-45a0-bf87-b602f2c66293",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1afa82e2-61da-43e4-aae7-d777c003a0c9"
        },
        "item": {
          "id": "fd3e9c78-608e-4cf8-a453-6274efb174ed",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "77fe338a-0d9d-4715-9997-01e15c82d2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd3ea9c-dd37-46b4-b362-6fcad522b35b",
        "cursor": {
          "ref": "948021df-b2c2-4d22-91f4-97e44a76de3f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9ac5b78b-116a-473c-955b-aac6e9781a96"
        },
        "item": {
          "id": "efd3ea9c-dd37-46b4-b362-6fcad522b35b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "60fd69dc-c40a-4da1-b6ba-23e766ea45c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8d052b-c865-46b3-91f8-9cb69c347a95",
        "cursor": {
          "ref": "cdb45b0e-ea0a-4d3e-a440-4cb034345613",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c482503e-832c-4378-817c-01ac7c851c10"
        },
        "item": {
          "id": "1f8d052b-c865-46b3-91f8-9cb69c347a95",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3c14aac2-9682-4b18-9edd-16e591a076d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e958d2a0-4c94-4b14-a7ee-ad8b87e6fa47",
        "cursor": {
          "ref": "fe330f56-0d67-4ade-b1c1-555b3c3fcb48",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2af4ac7a-b71d-4ec5-95eb-89ff498f0d46"
        },
        "item": {
          "id": "e958d2a0-4c94-4b14-a7ee-ad8b87e6fa47",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dbc8fbe7-a769-44e9-aad8-e02ee370d32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1454b083-32ed-48e4-abc9-e979cc0222ee",
        "cursor": {
          "ref": "f2dbb61f-5bc9-47b4-84ba-c14363b387d1",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "274d036a-2df8-405e-ab9c-82c1ed88c352"
        },
        "item": {
          "id": "1454b083-32ed-48e4-abc9-e979cc0222ee",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9ee64462-c979-4a6d-9317-e59551f1e0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2809af-3ea9-4ad0-a80d-2544d11b8004",
        "cursor": {
          "ref": "df735e2f-c081-4762-a758-7bc04260b71a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c76a44e7-755e-470d-b5ca-b9de0dbc9ee7"
        },
        "item": {
          "id": "9b2809af-3ea9-4ad0-a80d-2544d11b8004",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "39e9bd86-7b81-4e06-935a-4a2d00a837a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c28b110-f568-4838-9812-bfb6e34e94e8",
        "cursor": {
          "ref": "ecca660d-bd6a-4477-b9fa-b30d31873bbd",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b04f5e8d-81ce-49eb-acda-873bb3ac47f1"
        },
        "item": {
          "id": "3c28b110-f568-4838-9812-bfb6e34e94e8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "caa4cc02-3a36-4b87-8f03-eda3ca6c5b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dd5d80-2359-4363-9af8-61f0e6dffcdc",
        "cursor": {
          "ref": "ccbb79d8-942c-4a23-bab9-5a02bda34c61",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ccff087f-b407-488c-8b5f-9f1a392cd4f3"
        },
        "item": {
          "id": "f7dd5d80-2359-4363-9af8-61f0e6dffcdc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "578c09a3-068a-4935-a003-6ecb01ab7506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fbc69b-8b64-453e-a0fc-5c72827e0637",
        "cursor": {
          "ref": "2ca8ce5a-206f-4257-8da1-9dcba9a17283",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e74f2ce6-2198-4ae9-948d-2a682758a975"
        },
        "item": {
          "id": "f6fbc69b-8b64-453e-a0fc-5c72827e0637",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ebf0e463-cccd-485d-9b5d-a5c2711695b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99253ce-1fc7-4f0a-8c74-de2e8dcc6088",
        "cursor": {
          "ref": "35bb3c95-05e0-40e6-8068-e2e79a915a1f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3905a273-0729-449e-8f9f-4a5bcfd3166b"
        },
        "item": {
          "id": "f99253ce-1fc7-4f0a-8c74-de2e8dcc6088",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "93e4ce85-4eb5-4cc3-af5c-04428cf25921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0523ae8-03cf-4494-b0a8-4f60c03ccb92",
        "cursor": {
          "ref": "a63c21aa-f274-45c0-adb6-f17857c6620a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7fc6130b-dd0a-4fe1-9421-d37c41fff9a6"
        },
        "item": {
          "id": "e0523ae8-03cf-4494-b0a8-4f60c03ccb92",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5f13ad77-9a48-45b9-9181-a9e91f4ee11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbda2e1-f2b4-4e9b-95b1-317e5d7165f6",
        "cursor": {
          "ref": "72f85817-9299-420e-83ee-80e5a674b58f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b3fe23fe-e3b0-4b8a-a936-3c6a1f024918"
        },
        "item": {
          "id": "2dbda2e1-f2b4-4e9b-95b1-317e5d7165f6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ae7c23b8-30a0-482e-852f-1f7cd1afa7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00f28d3-1f0c-4aec-87e7-ad6848e3764e",
        "cursor": {
          "ref": "760927f1-1850-4d12-8a83-589f7846d124",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "94906eb9-0c0a-4dc7-92ff-374b45488c4e"
        },
        "item": {
          "id": "d00f28d3-1f0c-4aec-87e7-ad6848e3764e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "186d8c07-a6a0-445e-a052-edf631e15e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f861de97-0f59-430a-b1d5-123ec0c8704f",
        "cursor": {
          "ref": "187d72ca-19a0-43a5-aa7d-b335d66582b3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f0fdafe3-e71c-4c15-97f7-b5b097ac9ee8"
        },
        "item": {
          "id": "f861de97-0f59-430a-b1d5-123ec0c8704f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c9b12c9a-496c-418f-8749-fd64378bcef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2abc38-846c-4965-84fe-0ed53e8606d7",
        "cursor": {
          "ref": "a57fc899-f213-4e3c-8287-d6c2fffe9f63",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "76055bf8-f7e2-41c0-ac28-59fced1262e6"
        },
        "item": {
          "id": "de2abc38-846c-4965-84fe-0ed53e8606d7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "05a4c663-45aa-44b5-beb6-eba1f869e115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697da626-4f58-4b3f-9cde-a2093723bd2f",
        "cursor": {
          "ref": "e5a1be4c-2be8-4d13-a167-be08399e9ffa",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1a3108d1-46ef-4931-ae3f-f63a4a5981a7"
        },
        "item": {
          "id": "697da626-4f58-4b3f-9cde-a2093723bd2f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "49decb28-d19b-473a-9d84-be6ec138ac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53be8dfc-3ece-4e58-99f1-fd3c538ea210",
        "cursor": {
          "ref": "d0de7d99-4a4d-45f0-b8de-28c60ea3ef09",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "907882fe-f8ec-4014-9e95-5a6b883ca1aa"
        },
        "item": {
          "id": "53be8dfc-3ece-4e58-99f1-fd3c538ea210",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f24027ee-f354-4c46-83e0-d6af6a75d141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24386439-1cb1-4b6a-9dda-5998c8c7e98c",
        "cursor": {
          "ref": "37f6559a-ac71-4af2-8208-f6f3e6f483ed",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "36d7df92-bd0b-42cc-8540-f336bc3cf6c0"
        },
        "item": {
          "id": "24386439-1cb1-4b6a-9dda-5998c8c7e98c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "39165b1f-f421-49d4-b648-a144f6b3bffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949c835c-363a-4af7-abd4-01b7b0fd22da",
        "cursor": {
          "ref": "efec97e9-f42e-4f4c-88ff-83e06f0c7efc",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ae926860-9b79-496b-8bb8-4b55553ac427"
        },
        "item": {
          "id": "949c835c-363a-4af7-abd4-01b7b0fd22da",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cefb7862-8697-48fc-a100-34194e4bfc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f2e6db-42d1-452d-87f1-5e7408e016fb",
        "cursor": {
          "ref": "0026844c-1244-4c94-9b01-6e95f0cb868c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a218c0b4-6518-4fcc-af9e-fde5c213be28"
        },
        "item": {
          "id": "72f2e6db-42d1-452d-87f1-5e7408e016fb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3d910b2d-a6b4-4f81-b4ff-9997867418eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983410ed-f3eb-4049-875d-237338b9b15f",
        "cursor": {
          "ref": "c67a1a99-0edc-4a09-b56a-e03104014d81",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "83daba4c-1f8f-4510-8226-0d3a7374f5dc"
        },
        "item": {
          "id": "983410ed-f3eb-4049-875d-237338b9b15f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b58cd1c6-9d58-4c8f-83e5-80377683596c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d335476-a69a-40ca-9842-05ee4e7692ef",
        "cursor": {
          "ref": "96b4a622-03f6-4061-8fbc-2153c48e8597",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "de430637-5dba-4458-ac7c-3f3c2f4246ff"
        },
        "item": {
          "id": "2d335476-a69a-40ca-9842-05ee4e7692ef",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "06dd4e4b-5b6a-4242-a569-1db6d140ffb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26713070-6756-4780-a024-b9296a856f4e",
        "cursor": {
          "ref": "119e1059-84ca-4a7a-9a87-9753eb57aa28",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7869d40e-77d4-4690-8111-64466f4c0c8b"
        },
        "item": {
          "id": "26713070-6756-4780-a024-b9296a856f4e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "edb94293-a4d3-4012-b5f0-66371e2af962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024a5920-55ce-4e74-8be3-f8b6ab060c45",
        "cursor": {
          "ref": "5c7cac24-b645-4a3c-b609-58931fb4252c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f08b9c33-f11a-402f-83ce-70567e6726e8"
        },
        "item": {
          "id": "024a5920-55ce-4e74-8be3-f8b6ab060c45",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7d6a33bb-9013-4f9d-a236-025ea47a0539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c1c530-bacd-4b87-9615-713153bb86e9",
        "cursor": {
          "ref": "56ced81b-b8e1-4a06-b500-fffa05fc3f37",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "82916863-8f0c-4f4b-b30f-dbe1a0309a58"
        },
        "item": {
          "id": "a5c1c530-bacd-4b87-9615-713153bb86e9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1450af56-2b7a-4d3d-93b2-676bcbc6bba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49aa1a7c-fdb5-44e6-ac11-60b0ca654e0e",
        "cursor": {
          "ref": "08192342-13a7-4520-acef-b46be5def979",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fad978f6-d164-46d7-a624-d42eeadaa579"
        },
        "item": {
          "id": "49aa1a7c-fdb5-44e6-ac11-60b0ca654e0e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d69a7bdf-606f-4eab-8aef-897a113096cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c3f476-cd23-4df0-ac72-e4990a25c3d2",
        "cursor": {
          "ref": "5db1b2ee-f445-4f65-a2f4-27d9da0f0c66",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b86cf097-8876-4f54-b1fd-2e00bd0a29ac"
        },
        "item": {
          "id": "39c3f476-cd23-4df0-ac72-e4990a25c3d2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6a32d3cd-cb74-462e-af52-5a760c28a3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72a7ff9-cc68-43e7-b8da-3c804ac019ad",
        "cursor": {
          "ref": "c0b9bd9f-8d8a-49a4-b3d5-584e41ec1353",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b72be1ff-1cde-468e-a65e-710c9d936ad8"
        },
        "item": {
          "id": "e72a7ff9-cc68-43e7-b8da-3c804ac019ad",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b54359f2-de0a-4f1e-82fd-32bc16cd4f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5176d8-c549-473b-9a90-8f4c28773037",
        "cursor": {
          "ref": "33b6ef2f-2e83-419c-a9bd-f386facba06b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fa90ee3d-c8d1-4154-9949-9c52e5beb3c8"
        },
        "item": {
          "id": "ee5176d8-c549-473b-9a90-8f4c28773037",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cb9eb283-63c9-45c6-80d5-affff555502f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd557dfe-ce9b-4f1e-a64f-aa894258ddd6",
        "cursor": {
          "ref": "b1a5fc17-a31c-44ab-bdbb-02a1889877f6",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a47504d3-4b4c-4b25-a355-59993f707d95"
        },
        "item": {
          "id": "dd557dfe-ce9b-4f1e-a64f-aa894258ddd6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "68c379cd-7ff4-479b-b109-b47ecc6151b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b782d4f-ef7a-4fd1-a445-377ba00660fa",
        "cursor": {
          "ref": "4944d71c-021d-4022-bce3-051494535a9d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "287f45c0-f5fb-4ea7-9f89-3895d8dfbd31"
        },
        "item": {
          "id": "6b782d4f-ef7a-4fd1-a445-377ba00660fa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "953d248d-56e4-404c-b6fc-dda58f8a6439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7a0cc3-203a-477e-a540-e660ef927d04",
        "cursor": {
          "ref": "3f7b7150-b434-49c1-8506-034701192308",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ec51833b-ca8b-47cc-a4c9-7e40a4de891d"
        },
        "item": {
          "id": "8a7a0cc3-203a-477e-a540-e660ef927d04",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "693846de-f105-40f4-8d7e-67c69075904b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a273c58-7e7f-4ab7-adaa-8f8e7e64b218",
        "cursor": {
          "ref": "1f351ac9-dc4b-4cb0-aa24-ad4ab08dbc23",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "df09cc89-99ef-449d-811b-c9909e55106c"
        },
        "item": {
          "id": "2a273c58-7e7f-4ab7-adaa-8f8e7e64b218",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c62cc3db-87ac-467f-979e-37861c8047ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d528ed-09a7-4a86-a5cc-5e8acd7ef9a9",
        "cursor": {
          "ref": "b6f258c8-e1eb-477b-a724-8b0f91407fdb",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "afd4cff2-8630-40c5-b86b-001581141118"
        },
        "item": {
          "id": "f9d528ed-09a7-4a86-a5cc-5e8acd7ef9a9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6cfe187a-1156-4c7a-b551-a6ca2831f2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b6da5a-1be9-493a-9288-1a879dabef13",
        "cursor": {
          "ref": "012ed529-1598-407d-967e-fc90348d1aac",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1803ca84-cfdc-47a8-9182-8b0d2aa1721f"
        },
        "item": {
          "id": "92b6da5a-1be9-493a-9288-1a879dabef13",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ba85b3c8-43f2-4b56-b300-0af5b8679232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f801bc0-24dc-44dc-9db0-6a22f3e54851",
        "cursor": {
          "ref": "9bd103ce-9053-4f07-8fe8-ce778ac7100e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dfaf2cee-7b79-4fa2-af12-c8c18b5bbf02"
        },
        "item": {
          "id": "3f801bc0-24dc-44dc-9db0-6a22f3e54851",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5cf695c3-f333-442d-aa74-8e0d0d22df4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acc220a-399c-4f1e-9cb8-9f6fcd3773f6",
        "cursor": {
          "ref": "ef947795-1c05-440d-a1ee-fbf5943f1b88",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5eb4075e-8e20-4650-95d3-d51acd9a0b6f"
        },
        "item": {
          "id": "2acc220a-399c-4f1e-9cb8-9f6fcd3773f6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7d4c48e5-e711-4733-a037-03e25efb7a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fed8392-b1db-4a7a-ba48-8f92062c58ce",
        "cursor": {
          "ref": "9ee24a8e-dd4a-4d23-8771-9030b517dfde",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7062b5c4-4326-48fb-b4a3-984bdd517651"
        },
        "item": {
          "id": "7fed8392-b1db-4a7a-ba48-8f92062c58ce",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "612b26c8-c43d-4e9b-8687-21697a8f0dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695b66bb-7075-4358-ad8c-5bdd46500a61",
        "cursor": {
          "ref": "72e49bb8-816a-45e8-bbe7-92961d096034",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2735024e-0060-4175-9189-3bdb2f13e064"
        },
        "item": {
          "id": "695b66bb-7075-4358-ad8c-5bdd46500a61",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ab4120ce-ee2a-47dc-8529-28222770c0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44487dd6-ed64-4313-b45f-773b5d987f41",
        "cursor": {
          "ref": "b79eee58-1406-447b-ac1e-4416a52374a2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9e0afbf6-e37a-49b6-8054-ca0966d451b1"
        },
        "item": {
          "id": "44487dd6-ed64-4313-b45f-773b5d987f41",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cdf5e473-096e-4105-a687-2b6eb9d35c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bb370f-30d0-4b98-8504-aa1b7c3796fe",
        "cursor": {
          "ref": "605fec99-251a-4424-94d4-c8a9fda63ec2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7223a0d7-4f97-4a46-876c-85ccee098ef3"
        },
        "item": {
          "id": "13bb370f-30d0-4b98-8504-aa1b7c3796fe",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5cd0bcea-5a71-45c1-bb8f-6463828befab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14c733d-c1dd-491f-983d-55595f9d9e77",
        "cursor": {
          "ref": "9c6aafde-7f0f-4d79-99a2-47a10badec7c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e75d9729-e1e7-4acd-930c-6c052c3f0f89"
        },
        "item": {
          "id": "e14c733d-c1dd-491f-983d-55595f9d9e77",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1c02fd4d-9c89-415a-9080-90b12f8eb717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ab2817-5f57-4425-b75e-e5d933902b92",
        "cursor": {
          "ref": "40990553-8e3d-4197-9434-bbe95ab8bce8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f72924b8-b016-474b-9289-f1d02ae49350"
        },
        "item": {
          "id": "c1ab2817-5f57-4425-b75e-e5d933902b92",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9ff0c657-149c-4b9b-8ea4-ad40151392b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af87a8ef-7676-4259-8150-fa1c7cfad823",
        "cursor": {
          "ref": "08dbfe8f-5e8c-4597-b77c-c8e5b444c1e3",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1a159fdc-e3fa-4593-a2a1-ada4b0bf91bc"
        },
        "item": {
          "id": "af87a8ef-7676-4259-8150-fa1c7cfad823",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d70bf0be-25e0-414d-935a-8bcb0bf77f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2e9672-0acf-455e-9ebd-08e8cbd26b85",
        "cursor": {
          "ref": "340a6a23-7819-4343-bfea-a5004a82fe50",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dfee6199-5cb1-48d8-a533-cb47732718f5"
        },
        "item": {
          "id": "4d2e9672-0acf-455e-9ebd-08e8cbd26b85",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bfc27735-fd02-460e-a73b-639210c2d436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0841a6-fd73-46e3-9f03-eb95579ba459",
        "cursor": {
          "ref": "7a0f42f9-e87b-41c1-996a-12dce5b9be8f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "62945d96-bc1e-43ca-b303-310a13598dfd"
        },
        "item": {
          "id": "9b0841a6-fd73-46e3-9f03-eb95579ba459",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e051e972-e7db-424a-8582-56741f14431a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb9e0ab-13fe-4e3d-99dd-21b5dc630ac2",
        "cursor": {
          "ref": "f5c1da00-a1c1-4185-bdb6-3bc57285f703",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e4155589-3e56-4e0b-b49b-723471d59edb"
        },
        "item": {
          "id": "5bb9e0ab-13fe-4e3d-99dd-21b5dc630ac2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ec7cb4c4-ecc8-49d9-87ae-8fa3d3d1daf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0eb425-e8aa-4e00-b61c-dbaed0558f0f",
        "cursor": {
          "ref": "fb627817-9dec-4b92-967c-67b3f3e8539e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "034ff829-b041-490b-a7f3-7d1b504b940b"
        },
        "item": {
          "id": "4d0eb425-e8aa-4e00-b61c-dbaed0558f0f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b1440757-91e6-4103-8bca-992a87d78aa6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174962ee-9e97-4456-b0e7-71b91b2e6287",
        "cursor": {
          "ref": "066b85c4-202a-440f-8edf-e8a5996ad7d9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "40e87e45-2e13-468d-ad04-8cb2112310bc"
        },
        "item": {
          "id": "174962ee-9e97-4456-b0e7-71b91b2e6287",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d7bfc3d3-6353-4ab6-82c8-408fe83c28bf",
          "status": "OK",
          "code": 200,
          "responseTime": 2337,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafc1a50-c188-4514-9ef7-a2609ef41d3e",
        "cursor": {
          "ref": "6d66d634-a02a-4367-aa46-26b7aee244f1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2148478d-9e4b-4d29-99c1-5b349293df53"
        },
        "item": {
          "id": "bafc1a50-c188-4514-9ef7-a2609ef41d3e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bde4865e-16a9-41f1-8239-003960e64f2b",
          "status": "OK",
          "code": 200,
          "responseTime": 2832,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf5e896-23f6-41bc-8ea5-1ffd1ec6a56d",
        "cursor": {
          "ref": "cdabf990-1df7-4c43-9908-f97f174ef3b2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6ffcac03-f702-4e2a-b718-c5be76095f96"
        },
        "item": {
          "id": "ddf5e896-23f6-41bc-8ea5-1ffd1ec6a56d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "25c7d14e-277e-4710-a273-48faaa3b17c9",
          "status": "OK",
          "code": 200,
          "responseTime": 2314,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c3360b-7b3e-48ca-a777-77cae6d42fff",
        "cursor": {
          "ref": "2b702cce-b500-41fb-b389-f9a449f8a093",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e442d36-2818-4dbd-bf1d-172114ce938f"
        },
        "item": {
          "id": "e9c3360b-7b3e-48ca-a777-77cae6d42fff",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "35259166-0988-4694-bc71-eeccee47fcfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c3360b-7b3e-48ca-a777-77cae6d42fff",
        "cursor": {
          "ref": "2b702cce-b500-41fb-b389-f9a449f8a093",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e442d36-2818-4dbd-bf1d-172114ce938f"
        },
        "item": {
          "id": "e9c3360b-7b3e-48ca-a777-77cae6d42fff",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "35259166-0988-4694-bc71-eeccee47fcfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee17818d-c20a-48c2-bd75-635e31b7b53e",
        "cursor": {
          "ref": "240aaeb3-2e27-419d-b051-45100e4f1f23",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f9e2f74b-0a92-4db9-b6e4-bc668a84c445"
        },
        "item": {
          "id": "ee17818d-c20a-48c2-bd75-635e31b7b53e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1fec8391-b224-4b1a-a429-186cd81554bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae094c08-7d1b-4794-b52c-4aa255289ca7",
        "cursor": {
          "ref": "fe553e46-efd3-4a2c-8b37-9ec42558266e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "95a1080a-b084-4279-8e7d-8f159c810264"
        },
        "item": {
          "id": "ae094c08-7d1b-4794-b52c-4aa255289ca7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a74fa7cc-0724-421e-9e5d-2861145f91e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}