{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "274816c8-4bc3-4515-b525-68af2a854623",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c749cebe-8688-43dc-a30e-ca240d727660",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9537c29f-abc5-49e0-9475-0913ba61a48d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cffcf165-c08b-4665-81bf-140587d88801"
                }
              }
            ]
          },
          {
            "id": "44ff3df2-e7b2-4f66-8785-e364de1a9d7f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61877b3a-6b52-44c3-ad1e-72d7f5fbcbab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e0f51347-c3b3-45d5-baa9-e46fc567ef5b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dcaf7b93-77fa-4b53-92d1-5fd7eafb1be8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c2ee228c-d593-422f-b3a6-e1e11e08b0ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42c8464c-248f-48a8-b248-14c364f6a787",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "150edaa6-64ac-4696-a5c7-cd709e24864b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5eac49b-e78b-46bb-8085-879a356ae1c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81b75ab4-c1ab-491d-a45b-e08060807d76",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6dfb91e6-eaa8-4e1a-b97c-cc63bca2cd88"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d050fc4-567a-43d9-bcc2-18d5bb90c3bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d4abf76-8e5b-4e8b-86fb-31e28e89dbad"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "105d3c3e-078b-4d5b-9fd1-0f62af11fa74",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6620c941-60fd-400a-9bc8-6330ed297058"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae442298-d816-46ab-9f3e-ffe7c1f72e40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "896585c8-15c4-4259-a311-399e63b59ac6"
            }
          }
        ]
      },
      {
        "id": "bd5faea4-4815-42e1-9a9c-4c2c508d5ade",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fb58e3cb-860a-4da3-b7d5-43d1864a9399",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ac2c03f-08db-4cee-bcd9-da48a8bb7adc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "022cf25f-2624-4954-ab22-0e0105eb1745",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f547d759-5786-4da5-a705-0ff4714da9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30b8181e-67d8-4790-93cf-ada9bb2277f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9e0631-f9ee-4118-be1c-4398d2bc3cbe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc97d15-ddd2-4d56-b4f0-411de14ee040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6766f66-afac-45b1-8def-6068311fc202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d256dc0-9375-4224-a45b-34f66fa93759",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317da7d6-09f3-4228-ba71-a521d186d796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c1f5256-b4ec-49ed-a456-84efb07b85fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "186d783a-7ecf-401a-9094-dd33b7198a5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f80df6d9-1a1a-4cce-8bbb-b25f2d655be2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6d4d24-983d-466d-9a6c-4605ecf2fe5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e13faaf3-0c16-4e4d-bad2-d314c1e44ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be5eb9a-0b9b-4c84-b486-4bb3f4cd2ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52443c16-9689-43c8-911d-6daa67967817"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6596336b-94ce-43bb-a611-122fa77c1c39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04bf4f88-dc6d-40e3-b72e-3d4d11b37d17",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3937a1f8-0d5d-4353-a4ce-0d594f250d1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7c7cda36-1a76-4121-aa29-4760706614f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "020cf060-8e9b-44da-8f5b-637ebfe539d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2ac3c069-83a9-4aa2-b914-f7e8dde39c36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "006518cd-df31-4973-814e-790b47eb906c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99bbffce-68ee-497b-a837-51d584d48ed3"
            }
          }
        ]
      },
      {
        "id": "779821d9-d908-4474-b84d-1e0d8e97d146",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "463c054b-2e2f-4142-8050-3e7b37fc9bfb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17936683-6497-4a79-b1b4-6b32d152918f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a9768745-cbe3-4f8f-8efb-075184a32faf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a109b1-e6f4-44b8-b861-d32e7b121d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea77c8a2-c4da-41e6-a73d-da879684a6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff951042-d812-44f2-941a-1b836befba32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09845de8-22fd-4618-999d-0f6f128ce5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4142f0b9-4739-4a83-957b-830829e6832b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e70e7be-13e9-4f25-98fa-fd4015718c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680c9d22-eaf9-4d1f-a378-c7f9ebc7e96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fa52a0-61d3-4f2c-b82c-35014c9401a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b05408d-2d1b-44eb-b3e7-ca8e78c978e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a125fc-1c29-4d8d-afd7-4064ae225135",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182b6bc6-df5b-41d7-8316-c81dfa1d37bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e035150b-dc3f-4273-b2d6-2a2d61f44b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377b7ec3-db36-4e4f-82ff-81c9c90d55f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4ca632e-f0b2-4005-9a8d-f808f43f6d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc617fb-c831-48e2-89f8-d27b61f90de3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90d8474-71b1-4d86-b24e-04e420b5e8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f043f31-518a-496b-b686-48b86eeb4b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5b28f4-d50e-49f6-b568-16482d857961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1268ac4-dd0c-4a73-ab88-033851c93000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8b80e0-4009-4ad2-81cd-ef472cae4c92",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9e1992-308a-44ce-abc7-48c352bd9137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b54a30-8407-4aa4-9699-3820d23b6aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e49add-4beb-42a8-bd78-ab32a0792eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bb571b4-197f-4248-926d-29b0ea6dae05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9559e845-1099-4765-b2ce-3c176b310a1d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beb5f0c-9c1b-4fcd-a4ce-00fa7c13e289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61630876-148c-42af-91de-cced0c3f8599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62b004e-c400-4953-a053-5420e1db5579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb52b6de-7e01-45ae-ad93-22bc03f0c822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579d2cb3-9974-48cc-905a-7f2ab3364397",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d393b0c-9aea-4a39-8652-6c635e525d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a40095e-059b-4dfa-9484-5877bda76411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8858ef86-6c61-4bcb-821f-56796ed5890e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60a266cc-e449-4461-84e8-e6547dc5eda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd8f667-89f2-413f-962c-d7988a33c318",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eab826-b5df-4b60-8c31-1f4da52a3b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc220f95-50c8-4124-8918-f3af9d080be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf181d0f-451f-4f70-980a-6a3d3581f417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f912f47b-55c9-4d29-aad3-883ccb8adb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8400c534-d5dc-4528-824e-0b4a1161fcf0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba14e9c7-a3a8-4d60-b2df-fe7558c78da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a54b50-a99c-4316-9697-1e03a5fec92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a6cbae-4725-44e3-a61a-4bd223c65f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64e015e3-2737-4833-ad9e-c08a4c8a0193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab4bff4-2d9b-4583-985d-aa34c8f193c8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b047acb1-0a94-48eb-8a0e-4c304a18f1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3509f9-a970-4f37-9d8e-57ebd2283b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdba6b91-9f85-4a12-bdf4-5caa6d618431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8c0ee68-d100-401c-9a01-ef34960e5635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0b6b47-f4de-42cc-b9a1-e13b0ef40581",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5c53bd-b5f5-417f-9d1c-c3e500bfd403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1eb9ae-639f-45d0-910e-2c60574c7196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8852c56a-f8cd-4382-8bdf-d893c0bfbcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bf828b6-3ee8-4e04-9261-1c60c47f8f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e8b44a-52b7-4790-8c7e-70f3878135bc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0aa1be-7fb1-44f5-9978-0d676f23054a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd257711-5398-443e-89d2-aac4b5feb36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba801d62-918d-4ad3-9b36-4b2e214d46c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b22177d-3cec-4c18-b95f-de404e647b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eba4098-355f-4fd6-8008-bb9d417ec525",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e21982-1ef1-4b87-a87b-ea0a34e96942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7c3aa9-e1a2-4e4b-b3b1-4c9d799ad24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62d79a3-20a7-4d47-8e66-db06d6b02cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d78e40b5-93c0-4896-942c-8aa887530874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b468615-f434-4163-bab3-ebe93bb82c8f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9244d5b2-f1eb-4454-8726-9fccf0acf15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b4e02a-8f54-4249-b626-3ce2b2d522e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6ac9a5-5141-4750-8d2b-8b0c7d6eb901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4ea24eb-37b7-4232-84bb-89f6d675266f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4118ca8-47bc-49b2-8aab-160d32c251ca",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22d4af4-b704-4bde-8dae-ff5568a27b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a25a81-2517-465c-bba2-6f4a44be54e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c817fd-8fdd-4ee9-a2e9-ec1c97483313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65603432-0972-45eb-b0e3-e87ad5dbb75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e4d59d-d066-4ab8-865d-03598f3f7a3f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bc4bd7-179e-4ec0-a20c-8039a3ce7c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633e95d3-6af8-45b3-9c2c-7d698e0cc043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3b6b60-87ae-4989-8f4f-f580e0c344cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5bc1532-782f-4ac8-b1a0-bd0e520937f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bb6762-0e3b-4ae1-a08e-e0372e1657d6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0f53a2-f55f-4237-af0f-f77978518dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b7681b-6d5e-4fab-98b2-614cd63c48f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d0e203-cd00-4202-97a7-971034e93470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03d63a67-19ab-40bc-af60-caaad3d5b01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a81bc68-873a-4503-8f55-305ec59be9c8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957c7e55-5ee0-4e5d-b8e3-fe81259acea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07df2747-0f58-4ea9-815d-4623b1a1d512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3725616d-4989-477a-9add-665ae3869631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c842653-29d2-4e39-85bc-a9fd9c38df27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efde8a6-db94-4dff-8859-c674041aa3ac",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aa11ef-484c-4932-a999-6e2b44536efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bff1e9-d618-4da8-bbc6-c2dca7975082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fccee75-ed62-4d9f-b5fe-37b9fba0c936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86cd09a-44d9-4625-85cf-5b40d181fd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93daaf7-44a7-4c9a-9da3-db2e9b8c428d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d4df63-5e70-4f18-a4e7-50c2a345239b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6092b761-af2d-4ea9-9eef-8eb7c5abcb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffe6a1c-3d11-4f2b-9326-b769509d4bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8eb217d-87f9-4c85-ae1b-6ea03e1f8597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4291624b-2a58-4096-8be0-a0a808e3be67",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a3c59c-c29c-440f-b688-3fee9f86b9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff14458-501a-4a21-99d9-a6a72ea06058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae539bab-a477-4c8a-873d-ee958e57603b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "855c5ae7-492f-4463-bbbd-89ddfa3c3ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe30f14-2eac-4cf8-a967-a415590e1319",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429a7198-17e1-47e4-9bf3-5c07dde83e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1465f50f-527c-4fa1-8b91-32ad55953816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672f4f51-1e93-44d5-a625-5ac875db84f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "077eb088-7d0f-4a24-ab8c-d728f89e8246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81151649-b4e2-4221-98b1-dff505c6cf72",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01903c17-91d9-43bd-adfa-8ba71a6bcf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0565e6-763a-4993-ab4b-25146760b316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682d522d-32cd-4277-8948-8ecd9020eada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc092a6-4c3e-4baf-b8a1-fe72609a9bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6026cecc-2e2d-4e55-ac5c-21c519e21f5e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afd3038-2cb5-46e0-8f5f-3258c299a500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ec6b74-e41e-48f0-ba18-95bc6e0e5881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac7969e-1fb1-485a-bfcd-c04ea2ae7c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6bcf32-c665-4a72-bfbd-980f822470c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddb283b-b899-4f4c-aa96-c03f358a926e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bfe45d-a079-48ad-aba9-bd0a5446e1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816cd085-47a3-4d06-9c62-e53275244086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0855e209-9729-4643-b5ba-e4c2ead86bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a403a520-ecc2-42f9-b7d8-6c49c9753f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449ac78c-6f17-4423-9121-c6346eaa7b5d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0de772-aaec-474e-a629-42f3e13d6ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1a6c65-2d16-4838-ac4e-62cec71b60b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9c8ad5-6937-4c75-97a2-373acacb0767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56485bf4-185d-4864-98a8-4773a17bc7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1c6549-81e3-4d63-90da-80bbfbf45991",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59f557d-83e7-4345-b1db-4a13c27c4245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66d1308-907d-4cac-b8a7-47adafb03cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adce6977-857b-483b-bfef-b4d0ca5fc755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "149b3463-27f4-4c9f-a8de-f4e6ef20374f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e52d85-0171-4c7d-ac5f-e5dbf4d43701",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30d3c19-403f-419b-bb4c-d165085f3a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e00869-dcf9-44ab-9863-9f7de47f602e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31251d45-778c-4300-9ca9-6f9c28504eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf974637-8891-4b48-ba60-b534af8b61e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0772d51f-977b-4e79-a06c-53790c9fbea0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a907b93-d836-4f0e-bbe7-62b0213e9b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f32087-9eaa-4a6c-80e9-2c387406b7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6779a9-ec34-464d-a9be-d3417aceb569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25163364-478a-4ef3-92ba-78a55ffdc7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120cb691-f9ba-4445-af56-ceecd18f64ab",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b359baaa-cebc-47b4-9609-c206147c6677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bee314-fadf-4a60-8256-36e5f1a38bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae587033-b0b6-438a-9468-aa65859e4df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eebbe47b-745d-48e1-b38b-ef5e36f176a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a435f7-89d7-429a-8518-5fe215b7e3fb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b496b7-1e8a-4e79-88b1-1e6ed45b8753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b75693-ce75-4c20-903c-2277f61d7236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026e8a34-eeb9-4290-b5ee-e87d499e6f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "108ac4aa-ab98-4c0b-9445-541a423f8508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8f1a64-0565-46f2-84ef-31fbe12acc10",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f317ef-e3bf-4328-8783-271dd6a90c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b8cff5-b147-4925-966b-57db4b086353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9265182-7da5-4dff-9d22-8fe5de35a76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb38fbec-b09e-4c83-a44b-06ccb66a33ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106445e7-bccf-4446-b116-da6a77ae4436",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e437ab03-4c9c-4b6d-9e54-858716bbdfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243841ab-e1bd-48ec-a009-28a1332e8292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de42851-3ab2-4b68-ac87-bc17ce6dab9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2470d1-0495-42ab-9a92-023103278023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24efaa66-3fdd-4b27-8fd9-e01023ff7f1f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f91edd-8b2b-426f-b603-2c6a4b3a2d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75bcca3-7ede-4cf3-b483-e07e131276c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e999fae-86bc-479a-b30e-e45369673a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc81844-4ae5-4173-9f2e-56859fa3be1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77395f0-163a-407c-8853-596ea52dded4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b39c671-3c76-43ff-a16f-5c1953e1200d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989917de-1245-48c8-a927-c9b7df6ef2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557dbc82-5a2e-43ea-b9da-3873284220f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "417bbc11-b8f2-4807-ab91-d83eec4ffb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2efb12-8fcc-4fea-9d7b-8f87e736b183",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648ec864-1060-43d8-8ea1-abac8eb06bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "611393cd-0aa7-436e-9625-cd3d547045f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57448edd-e0b5-46b5-808a-675d65197212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8ec7f9-4a5d-4874-a9da-7b1ca99c7fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156c93a8-43f8-471d-8b1d-0cf328cedf45",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55d952d-5ff9-42cc-a741-5eecffc81540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183802e6-b5ea-4720-84d3-12af38595d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33de151e-2433-436a-8aa9-cd3629c1f8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87ba6d4e-0556-4d7e-a928-195602f8101f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efac4d6-df5c-47c1-ac79-2b3a9cd124e0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba5a03a-4c03-4159-8673-e0db85d9acfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a01ee1-6356-402c-8595-70efcfdf5754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b345427-3080-4785-8347-c25127b192ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a21097-c640-419b-9e7a-f7fd26e32015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d1a495-412a-45c8-bb9b-159321edbcc3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a13b6f5-5c15-475f-92c6-366dd469981d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4dc0459-e5c2-4caa-a755-d85767082cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7928ccaa-7e54-412f-86f8-930057a89fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3101671d-7d8b-4e2a-a3de-5de43c13167f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7db7afe-4708-470c-84c7-8bf2db737110",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7628e129-b061-40ed-a6cf-d7f8d97dc756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34a2d4a-ca23-4f9e-a683-cbcd88ae3cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e740068-d769-4887-b986-528a1f9c194a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9df766-db18-4426-98d3-df935c05132f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4ce44b-e91b-432a-91be-bd3c996c286f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7fe440-a749-4e65-b0c9-b30191677074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000a3138-d6f5-479d-af58-b1a7f1cf8b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a573a7-100a-4e18-a8d7-03595bc380d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "129612be-56b9-4951-9b69-5d7e7e0c0c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc5db3d-6e05-4e57-b5fd-ef1f06c12408",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657198b5-1456-4f22-96d6-978261085351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71c824d-c5d1-43ea-a63f-1f421115ccd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6195371-cc0a-45db-888a-fa48e2743ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "37907551-1f70-4188-a0f7-288cf6a9f0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35fb690-e8b2-448b-aeef-f6fee6d20b4a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255f0a62-18e0-4487-a1cd-de1cd16673ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a4d7d1-9e2d-479b-a097-6437bc4abdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c89d6a7-273f-4279-b383-ecee232a6390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "423abe80-6d27-42c8-9908-49f07ba8b1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6c3377-0139-4e08-ba43-7d485bdb90ee",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36ea34c-ebc0-4faf-b963-db04c08823c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369e6322-a4a3-4f62-8bec-a3cd420bbdd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542269ce-316f-4d5a-8148-a8aca86f56bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b07714b9-faa5-4e74-b5d3-d324d74262b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872efe31-b9be-4b6f-a486-bf505f182c92",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6673860c-358d-4e9f-9e82-f709b943bad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188ff4bc-1d16-4cfe-8dca-d067b0432821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813e30cc-fa61-4ee1-b5d0-e9dbe17dc927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "452e8ae4-d1c5-44d9-a65d-7de045a8e5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60b4687-9811-45eb-bf0f-0fa67afe3996",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21870226-1a82-4940-9c07-a16607e0211d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08d999d-4a69-4705-ba5c-4e71cc6972d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6c1666-f733-4faf-85f8-ae4ba7c13fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfa9020-e48e-4a0a-85a9-dae3a05bc52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbb2778-9a25-4879-8cfc-1b21e4bb6c4f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813f09f4-39ec-4f66-9ba6-2e437de73be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1795c69e-865e-4706-835b-fb27419f823f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a243fa7-30fc-4590-a44e-b07c452c6876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb9fbe7-5371-4b99-9f49-0a6c2bfa82f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d69fe23-e3d1-4b49-ae19-984cb2722a8d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352e68aa-2b6d-4cd6-8d3a-95b9696b30ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869aef34-7079-4e8c-8fdc-b50252ced021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e376f09-803c-4476-ab25-67be358e3450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07011f18-aa96-442f-8726-68f7c8297aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d456746-f560-4bfb-990b-de5e9fa6418e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873b732c-31f2-4123-a2a1-7e04ba625ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44095ae0-2f4e-4b38-97f3-3fe9e7cd1d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee75dee3-a33a-4acf-84d9-170aa41ca559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "011a25a5-6412-4155-a54e-8d58e4b57d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a4b73f-404e-447e-83db-ba5b1a7321ae",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59202f84-e963-4ce3-bcc3-3f929b924017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4abb5f8-866f-4818-a2e7-617dbe2fc0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85440b16-4784-4d71-9f24-d3c8de3ee72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e18f8ae3-a3ea-4112-9772-c4d83b441baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e076ea-41b7-4a50-9ccc-109dea630619",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b046bd-36eb-4884-a8bb-c29a0874961f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49f3b04-d635-41f9-a12e-cbe19518b917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8fcbc6-0739-4397-9bcb-b4035c74590a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a683c26f-ab2e-4d19-8b3b-bce6a4375fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8b77a6-79d2-444a-a808-022ec9103df6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1032df69-073a-447a-bcb3-2fc1358e0f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d6c880-b4aa-4748-9671-c630ebdc3a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f860cb-d6dc-41a0-83ed-2f91ec61f68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a34523-2512-42fc-9c13-2b866bfca83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b75c80a-0053-4a3b-9223-39dec984afdc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238b5c95-bfaf-4db4-9107-be90e4ec8425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2140d3e-7922-4d6a-8f4c-19c1255c3187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d8845a-2a35-4216-8a48-046b0c4ffa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ad3d52-f641-4d6e-88e1-47f4bf4a73f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b21e4c6-4c82-42b8-bb61-42463ba33f08",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8e5144-809b-4c29-9b19-7ac826ee6f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84763185-1f51-4f0f-947b-a948582a3dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3fbc9b-f0c7-4564-948c-396d08401946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bcb18e2-dabf-4faf-9371-f1916eb99ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eae8ec4-07ce-48b6-9eec-a54b12f1fda9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d996e1f1-5ad5-461d-912f-527767b6e7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d65c4d9-b0cd-4437-89f0-7aa65e284d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb092bb-62a7-4417-984c-d98ca94b674a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4da204-231d-4c0c-9619-176aa1374ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25851d7-a8c7-4070-a0f7-ffc16e0d58e3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46d248e-b2de-48c5-9933-6d79476c01f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae58436-2b51-497d-80a7-77d9a26a6c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84dc8e5-b26a-4f24-ae0c-e352511553e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b674239f-26f7-4897-b424-fa22e2cc9df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192d5295-825a-41e7-9592-720c6470a52c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88926157-5758-4ae7-a940-85dca40ba37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b3f53f-33ac-4cc8-9df3-925199e6a695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bf618b-e7e9-45e9-9db6-358912a7b0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33c20388-0598-4a64-b7a9-154bbd6da61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bf7138-3f1d-48c4-9005-e11891e69f9b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a024bc-8cdb-4dda-9d6e-ea06e5d0fa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b29db2-fe1a-4075-9748-5d42fe6da45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3e5440-6cc5-45ea-bf53-cd0ad4fae653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b412f389-1784-4113-b74f-ee724540c3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32d81b6-7443-476f-b782-f905097eab18",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999075e7-baaa-492c-89e9-d4ddac3f8362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5677e8bc-54e2-44ae-8bca-25fb13df9e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fb48a2-01d8-409b-88dd-d4c261749c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "426a3681-c99d-4b2d-b9ec-2b3cec7f1acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937d1136-d5a7-452d-b82a-a8b4e5f65ea3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3777b52-ff65-486b-a947-f3b1b1728312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a89f8b-762c-4419-82af-6ae087aea9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3347ec4e-418f-4d22-80ee-2cf7639f9fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "19aedfbe-acd1-4453-93c9-3153b1c8829f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee38903-3448-4aee-8d9b-53027aae38d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8e0564-eef1-4fdc-a6ae-3bb51282f08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3523a53a-bbf0-4cd3-b26b-9adcde7968dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb90583-0b04-4716-81a9-5cea57d8c3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c125ae2-4572-45f3-91ed-af369a81fee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb25fea9-3fa5-47c1-9a2b-222bc8d733da",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5d6ba5-4fd2-4532-a4b7-7ae2c01dc0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8dd07b6-d302-4979-ba5e-aafbb4f35c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148d0138-37ea-4715-bb06-8f522bc4b437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace9b6a9-e430-4931-8b93-ffde1e836ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbffce88-1400-4f65-9ad0-337cea6b4454",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0095b9-39a3-442b-b31a-acdd12c8af92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839d0ed5-fe14-4b28-8ace-cf1ae5d37f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ca1983-3208-42b1-8da7-42b8624e6076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0acf17-9610-4121-b670-4bbe0664352b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe8dd30-64b5-453c-b994-455634b9d38e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1545688-f51c-4828-ba10-fdc67b9af0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f673880-13c6-4a2a-a437-98b8c49aa97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fe6c64-dad4-495d-88c5-87ab557b8e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7bd050-1581-4850-9a4a-000738844964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edf652f-8b53-417f-a161-3466f6c2e28b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2016b3-242d-422b-ab3a-265a17d7b6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c490c42b-de10-4fe3-a15d-64547bc2d45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad19e821-026c-42ed-9f67-689aa9716d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b22cc00-9b3a-4a73-a4c1-1a48cfa96cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06691e1-8eb8-4f85-8987-11767e0c0d8c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42618238-d978-40f4-b294-66b5b46e34d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f143b7b-056e-44d9-b364-275c5ca7d148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5cc9aa-a228-4acb-b969-1bfad4261408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28dc86b8-14e7-43c8-acd2-e5c3c2494185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ef22f5-2cba-4588-ad31-44604d5a21b8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63fc999-e91a-4d47-9d21-f201085f421f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ffc593-7ece-41be-8852-1a04f61e7532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cc1e9c-9766-422c-8563-f299c2fff273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee95b717-0dfe-4f0d-a4b6-34f99c432e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597926f1-088a-4762-835e-9eaa356fc1c7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cda7ac-d860-409b-8c26-0c4fe36df790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e99bbd-251f-4f40-b011-f7277027f36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e83a49-6166-4b79-942e-f10a4d9cb10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d31bc08d-1800-4d83-9bbb-36fea92fe227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f483796-a7ea-4758-8bbe-68cf52b0102d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffe0fac-c205-4f64-b5f9-7ad22ca67834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98948d57-afe9-43e0-b547-6f905a92bb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec0e6e-76dd-4651-9770-b47c6f11cb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "001373fb-2684-49b4-99c6-fa2ea9f20fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7077cd02-b25b-47c4-b163-27ec74624fcf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51658eb9-9ae1-4817-8389-946ba2b28e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593b461d-5952-47cf-a48e-edcbba1bc4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8245746-b50e-4c58-8af9-85a153692d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "045c15d0-84de-45b0-9476-f1bae64e87b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd0ece8-9a67-4ae4-b963-90de2ffc576b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae6b03d-ed2c-43b0-b3a4-5901e24f27ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa266ca-aeaf-4e53-bead-a506a9fa8491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60b6638-a3a5-4f0e-a70d-118e3866361c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5225be16-cf11-41b0-aae3-bb880ba70fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4bd683-ce21-4af7-bb82-5805e92675f9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff77ebb-94fd-431a-b5ef-a6bfada8d8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1b73b9-1633-4b0f-9d18-d04d6cf0f823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6953dea-60e4-474b-8901-ee748f6f47ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a80965-a634-475d-994e-278d80a4dd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da93f727-a0bf-42ae-84e2-aa5110daaa55",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4021e9f-90c7-48cb-bc42-86765768be18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319b69e8-bef2-48fb-bea4-8b6609ccbfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c42ed58-ab6e-4a10-922c-a8b91ab8a15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4bcfb4-b447-4e57-90c4-0289cae5ac6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56937163-fa86-493a-b32a-2c0b29c14327",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caba2219-064e-4a96-80f5-24c2e4523ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46548f2-1e69-4d24-ad8b-e4e173c5de2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c83fc2-4a69-4687-bfa6-e11215625ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18cbe75c-70e4-4630-a3ab-745352d249af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce053a3b-dc69-499e-b153-c8522417faaa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb9e1b3-4971-4a10-a923-0e35fc22269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17dbab7-aa12-4556-b164-76098ab2116c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76a2fb6-3166-4afc-a0b3-5236e754fa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b22dbbe-b638-4ee6-bfc6-a5474cee16de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c03d75f-d87a-4479-a7ad-4de3413ed68d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01cb1f3-a173-4dd3-9633-262a3db98c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021b8bf5-2e69-4294-ac3a-429f37c5d35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3de059-d60d-4b66-a0cb-a2bc382de706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d49b14d-5f49-4e03-b625-ea186ca7f51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004020e1-8a8f-4771-895e-57a1060acf58",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b83db84-0ed5-4d7f-8655-ebc9c84f96c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc2ab52-fc91-474d-af89-a19fafef3cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac09bc0-f15a-40e1-afaf-4c09b5086943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8233103-ef0f-4a3f-8ecb-aad607560572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac3f559-fd14-448b-bb5c-2a575f0f90c6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11c00ce-6a8e-41bd-8409-a0bbb4884692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad41f2e3-b364-4d03-a896-06308f44f33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e9492c-69c5-43b1-a70e-72c261640d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "862b83e6-cac6-4ea8-96da-166d3a76f592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a998da-edfd-4513-9cab-05f7491d8ee9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8046b42-1a5c-416b-b592-2807af298812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bde95b4-2a99-4c5c-b9cf-ca0173ebcc1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d105b08-3ba1-4827-b09f-69ff1a5a75d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88d923ed-74de-4557-be57-a3e726ef054a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238b5c7b-1ca5-4f0c-b057-d82cce9e1385",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cef2b9-7134-4b8c-90f3-dd5954f9de12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5643a06-0393-4796-9175-7f484ac8e6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d640c8-1041-474c-b643-a0812fc87b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77561ccb-7ec9-494b-a355-9ce99f62e1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc24b339-8f27-4c42-be4e-689b8ea9c14e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6f3d2e-f3b4-4838-a61d-ed7291f30095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fa0f2f-ea1f-4d31-8907-f45f01a4280b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b05e958-8452-4004-a246-c1df05e09f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b79b96-7eaf-4f8c-822a-09d2fff88e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4576b54d-20db-4328-b77d-a696f4a77aef",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4cbfd5-53de-435e-b22e-325ca98df45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1942553c-3e62-422c-b362-e45e1221c8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dfad32-ad95-440c-a0ed-bfac3c6b0846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f17454be-37c0-4c73-8b69-9abde4c34e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d507a3-d7c3-47b1-9a87-c0e3561d0f18",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60732fa7-be96-40f7-83df-1dba8403cd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71c288d-7941-4afb-b288-9047c87675b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a446b7-f85b-4504-a91e-9b64f83d0879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3b1c36-e232-4749-a651-b312d3eef286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad358c7-c9ca-4250-8f63-b7ab9e864018",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f28145-d028-440a-9376-c580d558d5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5449d1-411f-4cd4-bdc8-b7a0e1970677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecad8f0-7499-4c8c-bf61-56aad1e3579b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5502102c-ca84-43bc-a473-9b97b55cecc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7b6155-03fc-49aa-a75c-d716d86925f7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabeb45c-176c-4b17-b813-31a3edd838b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd4e74b-f270-4e9a-86e8-57a03d8fe9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650b244b-a761-407a-b0fe-d70a09a05a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffeca15-4020-4cc0-b715-42155976e1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c04f45-a787-4260-af33-c3483d3367b8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f63f9a-0d43-4c48-ade5-0c024b078988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5caf2f-2520-4bf6-8dff-c2557b79d08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4447cc-eedd-4f39-b2a5-67c8d08b09d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8b92ef-90f8-4ab0-8d84-06b6b6459c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd863b1-0c62-4667-ad95-d5675d9362c7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b416238-9ab6-494d-853f-55399f4f91b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5ec184-f460-4699-904d-d12c3870bc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abea83d4-aecb-4e6c-a578-6be8895109fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91985a73-2761-4b86-8245-e5cd8976cad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c918ca0-fd29-4c73-8544-4674e90dedee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bc3e3d-5256-4c80-ac12-ea5bc0dd0ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e131181-7d13-4e26-8a8b-d4b19001afe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1686b00-d545-4408-ba48-fc79352ea7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "655829b4-4d0e-4e76-96e5-910fad1670a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530a3424-3579-491f-9c15-99d616128cb3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71aa848f-c178-452a-bd43-14a21ad17380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7b6596-17ca-4f73-a956-7875dae1e129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daca11b8-e1f9-4f0b-9ca1-d37598288f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "424969ab-3110-41c5-bcd6-1a91992d0410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a10103-eb68-462d-88ae-65364500ae46",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13277323-2f8e-488e-811d-ce61e0ab3e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f66bb7-f68c-43a0-8140-69c8c10afe3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09c3f4f-2983-4750-8f20-f1fdc81fe1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6782081-d6f1-4675-8a9d-fbeb991611d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfb64b2-a389-4d2e-be74-c67d945d2814",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd803f9-fcef-4e4c-a1c3-2b2a52429994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a53763-81f2-4a32-a6be-3b21922323fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e967ece-636f-471b-b826-2f2d6dd35614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "26d6f0a2-cab7-4d9d-a076-38797ec8b496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaaed0a-f8e4-49d4-9076-adb8119bb082",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9bb1cc-e197-4fe0-88be-c757e0cc2303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "80656bfc-5491-4832-9820-6f6c6625d40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed7f69d-9ca6-41db-b288-eb1c669c7cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "30648f94-6ad5-4f0a-a60e-b746950cc783"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60b6b294-d512-49a1-8792-26a3a8d77cad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e1c6702-5a36-4de5-b4b9-110589b68774",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605d2052-64f4-42b6-9f26-c14128800932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18aa6d6c-4dcc-4a7c-803f-805664c76e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbade7f2-8db5-43a7-9b75-8076a0744240",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2b5e207-850c-49c0-8135-349787961ae2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "752a0c0e-b110-47ca-ab01-20e6b1ee7858",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef1ea3c7-3843-4b01-bbfd-c712a7d87751"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a61e1be-e5fa-4068-a285-bcf561936ec3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "840fa31e-9828-4c14-b9ad-87350942f74a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db4c8030-e9cc-4f5b-b54a-cb7f0db61be8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e39220fe-c192-4039-92b4-7f57a99e5f8b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "58c6acd1-4c6f-4caa-aa66-62ebaa4f3fba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6361cf1a-72c9-4fea-979f-6942e3cfa1cf"
                }
              }
            ]
          },
          {
            "id": "47b4e63f-c20b-4c9b-bfa0-1426b2963362",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11bc0637-fe55-4d3d-af28-76671efc989d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9f1eab5c-dd2e-4a5f-bb5f-ba6942df7120",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf1a22c-5462-43f8-a8bc-a2986f1f0ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3f8d3fce-380b-4a23-a04c-c07a4edb9a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c49ef0c-417f-44c6-99d7-b250d24199e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8496b11-e6bc-4e55-b6d4-fcaae1005f95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "544e7d94-2f93-416f-b89f-e4744af02c2f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5950100-5ad1-4a32-b301-1753e2446351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18d232c5-4ecf-44bb-98ec-a2a715939100"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00cd7f18-56cc-4ae7-87e4-56521811c95e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ad5930c-7815-48c0-903b-42b4a336711d"
                    }
                  }
                ]
              },
              {
                "id": "15a6f10d-d9c0-4f22-aebd-a39d4e1c96d1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc2d95e4-8685-4786-bead-de8c934fe058",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f44e4db-2302-4fc0-9f80-64d0b41d0a47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72fc13d8-3dfe-4d21-9697-6abef102ecc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa728a04-ef92-4c8b-8d96-77017b409352"
                    }
                  }
                ]
              },
              {
                "id": "2c90267a-7e25-473e-a9b4-cd8ec4a44969",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7912cbca-a431-4752-bfbe-0bea1f48685f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa8a1e22-0421-4d4f-9fc3-a01c45ba8741"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66c9d115-31c0-41b5-9a46-0195df9d1c6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0bdc615-54d0-4281-b00b-12223988df1d"
                    }
                  }
                ]
              },
              {
                "id": "03b81513-146f-4fcc-833a-96dd305fea68",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "168831c9-f899-4cd0-8326-9e810e34b0b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4144ebf1-bdf5-4327-ad6e-48dd0d0e1e3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5fbf710-6bc3-4bc9-99f2-8712c11041b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d51d5707-f25a-4e8d-9bee-a1e20a369f5d"
                    }
                  }
                ]
              },
              {
                "id": "1d9a0f16-00ba-4bb5-89e7-43dcdbdf57c3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbb1c375-2be4-4bed-8d00-e418a33779e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "983be894-b45a-4acb-b145-50766b0c8d36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "266a5793-eed4-4621-b5ae-aede72305b0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cc1cfae1-e349-4a21-a247-ffa642279055"
                    }
                  }
                ]
              },
              {
                "id": "f70ff435-6d19-4607-b382-6b32ccf16848",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb5f8631-2887-4913-b251-79196c18c37a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbb010b0-ec07-42ba-84ac-b5cfd9dbadbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb4748a8-b56d-4b90-b1cf-c9773f430314",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7c49b1e-8a32-45c4-b613-e723e5a4bff2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9aec393a-c55f-4433-b1f7-d4653c9ca6e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eedde9f0-5b88-40de-a2ca-4fecf232570a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "35266d89-4e72-487d-a7a2-4000547b2ce4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d419c217-537b-4edc-8aa2-5823f020e4dd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c060c6bb-907d-4cfb-946f-17c39155d229",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3735b087-2f14-475d-b6ca-1cc58d266830"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dcd05aa-5b5d-454c-990c-f245a5d54dd7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eecb45c5-9310-46d2-91bd-9cd2a93d6763"
            }
          }
        ]
      },
      {
        "id": "c6c32c84-0fd8-4d1a-b481-91b2426ab978",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0671ed9a-d7ca-4612-9c94-fbbd334b66ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b6c02ee-987e-455e-b75d-463d845543ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8cb2c312-24a0-42f9-a6bc-026873da9958",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46360ec-3a64-4aff-b25c-6a21b8e5e7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ddd3e8-426a-45ff-a510-812b743cdb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317d4698-6f51-4c0f-8d07-4ce9f5b6d463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0879d999-ca71-446b-8316-8e01bb13e2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6886c4-e164-42ae-8485-2634505c9b65",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb7e273-59d4-4b8d-828d-43296c3e9d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affb309f-c596-4549-b5ce-e4a06fcc6ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0133e88-7a34-4f80-95fb-152135430a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5ace80-5586-49e3-bb21-c96b01072433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ae2043-a8ed-4062-8b9e-6a95fd15cd73",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cf950b-ef4e-440d-ad75-2b5266443f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c24303-e46e-4d65-ad02-ab63d3183f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9e60d3-138f-49fb-98ca-6a1784f894d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e09dddd-b0d9-4e0e-86ec-86c70508449c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1befd7-690d-454f-9232-15f366dbb977",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1959ad-891e-41ea-98a4-c0d452f5c994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5559920a-83b1-4343-b78f-2a411aab2d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993a66e2-3d52-43a2-b940-464a2b67958a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3626cdcb-4c8a-4d9f-a899-b1f689ec7019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0ef8cb-0599-4b6b-879d-c95a8d7bbfcb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a6bf95-554e-4517-b58e-a955312d915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e2b6bb-efff-42d6-b45e-d4f130ff17c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5781382b-f4e2-4bc1-a252-c44cf4eb9bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f232877-42be-4238-8fa8-3f7ff2c573a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119c692e-f059-4378-b56e-056ce0dbc4f0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de14bad-4b7d-4aef-a69a-fa6f066933be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda001b4-bcf8-4bfb-9e2f-d6345172ef82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9cf00e-9749-4313-80ea-02ca66165c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a24afd0a-877f-4363-bbbf-ce1d409168a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7a5862-c31d-4319-8daa-a6aefcede50a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790b6cc2-4641-4bdb-b871-2e0fcbae22e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d95522-4e26-4efe-a4ff-81dbc36aceb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def76ede-5a41-437e-af83-05359f7d5daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1e1d18-5b01-4929-9bf8-72bed7126ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70151eee-0712-434c-ab26-36f5805fc5db",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f259166e-5424-4b1c-b893-50215c5b64d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed18613-54ad-4a06-ad0c-721f06e3267a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c306fe2-99a5-4625-a662-387d6a6fd8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4da81b-bdbd-498e-8825-8f6a40803b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2a111f-77cd-475c-91f0-ba0671d7348e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5893b61-f45d-407e-9583-28aaeac249bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee6f1ca-79a3-4f04-bf15-4854324cb843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a70cef-2d34-49c3-9f27-267a3d3e3175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "333aac84-fafa-4df2-974a-a95405d6afd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18119cb-ad86-4580-99a1-f089f9e37640",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd71ef4-43b1-4e9d-8801-3d7b1d76c330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4015f4ec-8301-4a89-ac5a-447bedfd95a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e5ff7e-d340-4648-9de8-1ef511bc5921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29800bed-567f-4232-9485-fe885c8f8020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412912f6-77d4-4c65-95e6-d8791a39a203",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87594de0-c028-4bc7-9b59-7200b60a6b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9934e253-2577-4819-8174-1c209e5230a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cd10bd-9650-4e06-a328-62cdd61a1888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ab927d91-5126-4d95-901a-e0992e50940c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6c788a-da0f-419f-b0a3-28ad1b81b3f1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2009335e-b171-429b-9b4f-8ce92d1cf7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0231497c-09f5-456c-9d1f-270a7956959a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55b0fd8-bd6d-4946-b087-5aad83b6f26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed2bbbb-61c8-46ef-9604-a01a5cd6f99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be66c1ee-fc39-4f84-ae2c-31f480b68377",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9487fc4-2bd7-41a3-8e8c-195c8d25f85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dccdceb-1af9-47a4-ac34-c8cda4d67b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591142ab-5130-4755-ba00-961e6f2f008c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "150c3e26-1fd5-4b0a-a192-d4c7689ac3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c91770-4ecc-4c5b-9ba9-8930a6d081a4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b678ee24-f3f7-4f65-8605-9379f206efa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b299db93-03a0-4895-b41f-72d4658c685f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2149f29d-f16f-41a6-a010-624a2dab1f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "141f5f41-64e1-42a7-b62c-c6564bbdbf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93099c0-a8a3-4d29-ab64-6dc03283c1fb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f7f96e-e104-4050-b107-df91b182aa5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fc8162-c5ed-430b-bff8-d421ee4fb7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf26055-5859-4cb9-b671-beb7f452d2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36f9828-3cc9-459b-85df-e33f36782af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396cb835-50d7-4069-9611-5c27f530cdfd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1680b2a1-96f9-4a91-a3b9-6242ca47bf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcfa2ed-d48a-44c3-baa8-25e85437ae7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7247dc38-8224-44ca-9dcb-7875f1575514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e04dba8-b1c8-4f9f-9a13-f88e99d43e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54686766-b9e0-4cce-9f45-413424a1b117",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d361a8d-95c4-4b2f-8f02-94aa6606cc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a2e05f-1a10-444a-a163-cf79d56f1701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69c44e6-f331-4f3e-85cb-fb392d14d7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "079e0fa0-464f-401a-9bfa-3f599c540217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7556c6-3d71-48db-8917-174cb909be63",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e90c841-9820-45de-b92b-30c301879335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed50af2-2fc2-4e9c-8822-5986e6b5a2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc26f87-e351-4f01-88e7-58948bff51c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b12c5fdc-908b-48d0-907a-18b4c5c3de22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8979d0d8-7f44-42c4-953a-7cf652abd597",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d9249d-960b-4e27-9ea7-e83509b3d1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be45639-c48b-4711-a883-8486bc994484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e4ab07-f535-4a97-bb71-0dc1ba76e162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccb2aea-e9ac-451a-a6d8-35274865df16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c347ff9-cf22-43c8-ab16-e8fffc0d6470",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d468824b-a170-43cc-b1b1-cb7c45f9d9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1e746c-c08a-4ef9-b1be-b22fb1fa38ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff926e20-e39d-41d3-9479-a650b70b9131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce38a828-33ef-4285-991d-84e9fe9ceda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c855c2-3469-4c64-aaab-43c3610d9408",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8713f0b-d2dd-44b6-8928-d80b3ad6f5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02b841d-7420-4ffc-90ad-96f1059cc42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20981aa4-90b0-4f3b-9dd9-ef90f407e974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a86031-1dde-496d-9a02-5177ee000251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68cc6e6-83e0-40d9-ba23-992cb29926cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99d8869-e5da-4230-a8c4-d8a657fea325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be9ee20-6bb7-44ae-831e-13691650535c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6348be7e-0ac7-4634-9c71-a664822c0198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee1e1d5-ec91-4fe2-9656-afa7cbd66a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7a518d-f2a4-4a19-adaa-b93833a10cb6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6fb2aa-029d-4871-b52a-36a137ea9559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dd15a9-8480-47cd-97fb-eff200c49ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa8eebb-811c-459b-b40a-5d0f71b2d7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab6f970-c829-4729-8a7a-1cf3207daccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7ed0d9-7c75-481b-b963-e4593f8b5581",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4efbdd-37a0-42a1-9ec9-3f4d910645c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d20f1eb-d9de-48b8-813b-d3eb2e745a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b6452f-5c67-49ff-9cee-a404be955ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe93e5a-ae38-4038-9911-73e4f4b2f94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a52e83-2fae-4693-924d-2bc801de5ef5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3d96d6-8abb-4732-affb-4c88d9cc0285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab8d31e-fbe0-4ff0-b3b7-f2730aff0b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981c8d46-e281-4708-8607-1bdd070913da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c73eb532-3a74-43e7-a7e3-7022b3ca79ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2003131c-6a94-4aac-9b56-721e1b799ff0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02749dff-4cef-412e-983d-d94aa81466c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29cca2ff-e92b-4ac9-a9c6-65d44d124a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0760e9c-a588-4bb1-b094-70541d211d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13b4ce91-adb4-4a73-83cc-02af922ba6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcd491f-b97c-4da4-acd9-b99d9dc4e4a2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d637ef-1531-4196-bc4f-91c027ef89e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f794d18-38ae-4087-87ef-b841538e09a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68410f5e-b8c4-410d-bd5d-2d64bf447fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4354c977-93aa-457f-9784-7795af787505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328c8ead-205a-4188-95f4-49666d8a4dfb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8832e56d-a82a-4ffe-bf51-ba8e3bcdf7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91c615f-5adb-4764-9934-e9308e761e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a61b3f-397a-4fa0-b2a1-40ad9c0d88dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c16eed-5ddf-4117-9b31-1adebbbd08dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9d5437-7a1c-40f8-9b98-60e3e5ece8fe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ca14a3-a885-4f13-a8ea-43bde08beb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f169a19-b19f-4dd7-a2a2-87427a1490ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411edb59-e2dc-4414-a6b7-dac8a728f3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd50dc1-4b2c-48ef-b834-b2c3cac6f1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c967c5-baf4-4fae-9980-ad3500f408d8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e010cab8-5b8b-48a2-8306-601cb0c3ce5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62095b6-2a0e-42f8-b17a-3252696c22ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30099b83-41b0-4ca4-b26a-fea1a810c052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42023011-d909-4788-a99d-207d9e11e30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e131db-ac31-4fa0-805a-9e10dd82aab9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22505124-80a4-43d9-9241-6645b799fc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23136b9-e2a4-458a-a205-2b13c306e1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f1b2b4-5255-4bfc-b7bc-69fb61a1ca44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25c23772-9329-4c7f-ae96-35b6c16632a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35a890f-6670-4ee6-84d9-caa3a9f65862",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a86081e-ef58-42af-983c-7408a1642946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d50bea9-3578-4a78-8755-847a7fcc84dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0e3456-328f-4bd1-9e3b-ddaf3a9243ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ad5088-cd32-49fe-aaef-2f4e00b41635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a711c52a-15e3-4706-9e1b-6e6785a7a2a8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ca1b8a-f8f7-428c-8891-c16ec8f8e59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7ac92b-3469-46e6-82b4-3aebb202bf37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af721877-b29f-4187-85f1-117772bd5da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7cfe78-cbe9-47a5-8022-d8a58e141ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa30bcf-097d-4409-a900-f4d1e0dd13c8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b910a7c8-5f5b-4568-a01c-ca702ceab13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402f4819-4672-4638-a09c-1553da9f044f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4317b0b4-066a-492d-a311-dbd6bdf6b835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc8cad3-84ee-4ede-a045-a18f3023ee08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14977e9c-b246-4ab1-b16f-a38c49d82519",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367bef8f-149e-4cae-a032-e063a846dce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198c9ff5-402a-4cb1-a2f3-4074f6807c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc68e02-3648-4fe0-9132-a8cddaca686b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1106ab7d-44b6-492d-8b0d-cad0540138f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878572fe-d4b1-4c56-9435-a44fb98a7369",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063af9b0-0369-4e65-ad4b-41e8ed272524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e3a431-3d79-4887-9b6b-b4544fe1b5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4fc4a9-9629-4ea6-b179-4706710646b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a25739d-2ce3-4b68-8bf2-1cb5f9c5979d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5fc9fd-09f2-4975-baeb-25db6fb6f1c9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e2a9e4-bbc9-4457-8e86-58a692d7a07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b90788b-bbfc-4b2f-966d-28767ada7e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c74398-423d-4eeb-9b36-85a0a6b54b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "330f440f-d94b-4aa9-9518-e135cfd9fe72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56b1298e-b7f9-4bb2-9780-a9013446b346",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c96a056-31cf-4d99-b37a-7ebda0067d38",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001030da-166d-429d-a117-c0d5d34b251f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f6daa3-0a3d-4604-8760-91213eef991f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d079a1-41b4-4a0f-aafb-7e6e66ab402b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ae0d694-7072-45d0-99fb-21ca70289e1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "584c1507-e938-473a-8415-bf26374e5fa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99518cce-3644-4c7e-ba25-bf627844aa60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "deceb83b-1ba8-4ef9-bb80-6cac18d14f1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52740954-0d89-4505-badf-67fa3fb2ace3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fe5efa3-81ab-49a4-9d54-05c7ffa3a62c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c149ef83-ade0-497c-839b-61eb73c7a370"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3898d5d-707a-4906-9abf-fcb8ea8ce43e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df5dec9a-7a59-4027-b125-52b03c25a631"
            }
          }
        ]
      },
      {
        "id": "6a43fa45-03e8-49da-82c3-f642d5ad1727",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b788a11c-af1a-4050-80f7-6cf562c56569",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f736638-89f3-4886-ba44-0c4c1916335b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ed78044-d192-41dc-89da-488eebc75f5d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841a17c1-a849-4f32-abb2-7e087b0b7777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4882224-c430-4115-b36a-645b2087d12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4872f1-8689-4d70-bd40-46664a5714a1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53995718-da29-4df8-9a16-0437cf70b3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e69496a-b423-47f6-ba1e-fa7aae725378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415bcdcd-3ed1-494c-a684-b59da33a6bb3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8251449-e182-4222-8ed0-7993857dbf35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cf6876-3abc-4773-96a5-5a5d5df6887f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41eae29a-aac9-4034-8aad-bd9a805dbf0f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b792a4da-30d8-45a7-8690-8d4a452ec403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e834ee-cbee-43cc-8526-1388210eba42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbef624a-e230-457b-a242-94230eac7637",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82acc7b1-2489-4662-ada5-c15101554678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eed7f85-c590-4565-a048-4c74b7e2ff88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0213282f-e9d7-4d39-b5cd-2f93ed915c2e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a585b32-16ec-4381-8f24-834f15608da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb25ea30-4388-45fa-88c0-a34e0293cfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e66e53f-7f8a-4aa5-91aa-b1a794b17bae",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b3ad8f-d35b-499b-934a-492a54b60dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c635b1ad-3b73-4b2d-9222-e7e4480e049b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482bf2d4-d5c4-416b-828d-011349a7304f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d8815a-f235-4d74-b249-b51126e310bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d95c02-2bfa-4e6a-9d30-1417442891c3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93640390-d377-4b40-b4de-3d7df3d5dec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa0141a-337c-49c9-95be-757ebc071f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7177feb-8ad5-40f8-ad85-41be5a366330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7a7394-ea8e-4012-9c8c-1353362cf498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07697dd-7e5d-49ab-adfd-347d3164e43d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e91556-a0fa-4258-a5ca-e459a97b7c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1bc6aab-8462-4957-899b-586cef3ca0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e5d51f-a2f5-4689-875f-af20745f758a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a54caa-f248-4d5a-a0b4-67827f49c046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef36c69-fafa-40f4-a16a-d650ebca95ad",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b339054a-6540-4bda-b990-8f2bdce065f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96cc8935-a810-439b-a725-49629fea6d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b258ab-540a-4275-9cf5-c88d2c76faf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92718aa6-6f28-4fbf-8c6a-a7b1387f54fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c4eb15-99b0-4fb4-aed5-ffe420d3026e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee66687-6266-427f-ad36-5e3d8176d3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c207fb08-50e4-435d-8c87-426ab0266f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2baf589-9bfb-4778-b878-7062b67cf5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbde961-a0b8-448a-91dc-18375b913bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3e121c-621f-4ffa-830b-2ed09990e71a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838d6dc2-40d2-4ff9-b582-72f52f8aa84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee346b9f-3379-456c-87fb-4f24e3ebc564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757a450a-b5ed-4180-8223-1797b2c71742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1837cc14-ad0d-4190-aaf9-f85dc0852bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e91ff4a-8e8b-472c-b4df-9d804c7291f8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164880be-d741-4082-a7b6-1c86abbebda9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b10849b-3805-4db4-b9b2-c12261419dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831ff0e1-6c5c-4e7c-9224-25f918f251a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be75175-4f3b-45be-9fa7-b824bded1bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb24639-3702-4725-9819-bd01af4ca8ab",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8b9656-31b9-4023-8e5f-35049c780ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d9e37b4-3b58-4b9f-b4f6-be9b6110594a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4499bcd-8f79-49ad-b162-de37c7ec0d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453aa3a5-0b82-4b52-a5b8-0cb301490b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0d8204-b701-4c2f-af8d-0a9af8ca7bea",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0230ab-d4aa-41c2-a585-04996620a79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7fd175-3890-4485-b560-3f89f45c2377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca2adf3-bb63-4975-91b9-1afa7fe5c756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e379324-bdc4-4a00-9c6a-17edc229a932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59db71e-9f7c-466d-a5f6-f375ad8ee8fe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7400456-92d3-4a38-980e-8250c018a520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2434eba2-4148-4b82-a850-04b92cd6341f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee67af0-8d0f-4c0c-b122-2373616e8bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15881999-3a2d-40d2-9911-c5f1f81b24cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4e4757-c488-41f7-a58c-34bd48027218",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aba7519-5323-414b-8100-f19935775178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc8a571-047a-4d6f-86ea-eb75ba29e451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c6c626-11e7-460d-bf20-69974defe106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4161c5-4f5c-4512-b59c-29c0b214d874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0958a08f-e6a6-4268-8af4-41ae1048cc38",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230fbf56-162a-4b72-aa09-c18e9c2065df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa75b29-9197-40fb-ae9d-19d83ccfc80a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a00c7b-23c6-488b-b66c-2139fb5c3e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9671d476-a732-43e1-b193-83b961e778f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83cb442-d8ab-4742-84a9-3d7c086cb1af",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ba62b6-ae6b-4c4f-b000-e95adda635c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb375c3c-4d22-4477-b447-48835f7acb1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb65960e-756c-4e82-8e69-e864202d37a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1986e4-64a1-40f2-a7a0-8f682c0731e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f3c55b-aa26-453d-82c9-d5e8d455c99e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f9ac5b-e857-4076-ac5e-b237c6290161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5073d63d-91bc-4367-8658-b4104f206a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afbbf29-1e72-41be-a46b-fba0efc3d3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f59d7db-fef8-46a6-a7c1-19562755b9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82b6fb8-d108-48a0-b40c-86cbedba0720",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf1260e-138b-4cfd-8769-ec765fb20b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be0ec30-4aeb-4de1-bdc3-b0f89c44b5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddf66ec-23e2-4d96-b8b3-f1c01a0de784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efda8bcd-d939-404c-9888-5101f8fc4f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b16e69-e52e-4ec5-96fb-214d1c8fffa7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba3ebeb-a3a7-47a7-8247-9fa9d9b520ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f269ecb4-6350-467e-99aa-8640e815c4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551c4e0e-00c7-4f0e-9bd4-a2ae2fea31b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504f5de1-0c56-479f-91da-c74687686979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54772de-2a4c-4a0a-bc42-bd18f26c02ff",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e955c4bb-1c34-468d-b71a-01e19e2b2daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c938c1bc-dc46-45db-a372-8d5827386d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2444f83d-d51b-42df-a29f-79cc85f91a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8283a8f4-144b-4d13-8b2e-911dd7913fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e6ed19-67ca-4909-a4b5-b7667da8c80d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494bc283-543f-4e35-874a-4a03d93e1f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5fa28aa-7717-43e2-9d89-14ab69d8416d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208f637c-aa40-4afb-9f3d-6ca9d4ca05b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9534242-d1c1-4d2b-bab1-37aa945a37e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0d00b6-ef43-4a91-b7e6-5807474680a8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa235260-95d2-4c97-9e88-8bc334c72feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83fad6af-4fb2-4f8b-80e7-6eb9221d2327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d86a19-2281-41e0-b803-1e4e47390361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f764b66-e4a9-40b9-a48d-897b0446fd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd173d0-55b0-415c-b344-7ee77cb155c5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1929b503-9ec3-468e-bee1-90239c468978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed7a6f0d-a2dd-4b3b-be7c-7060f09cdc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a44232-7c0c-45d7-afc4-08b18c196855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dbcab0-7877-4913-846b-4347fee21fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5868099-455b-4716-95c7-786a3dc8f976",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792ce16a-39e6-4876-83e1-c642d80d18f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b54bf0b-7205-4e09-b45b-a2f7459cf6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45950b3-1c97-4133-bed4-5e945b920e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc29a7f0-27a9-4183-9645-fec8c308fca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26a037b-8152-4d0f-819d-fa6423fa49e0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1146dbcc-a514-422b-9f5f-d368ee78e559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcbac64-8bae-4c10-9142-6e7f19382786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31f0b6b-d91f-4769-9491-b737f5543ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958aecef-5657-4ebb-9669-174b10addaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb74347-904f-44bc-855a-f3c7940284a0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173899dd-46c9-411c-9993-ebd7184ddf34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d0dd033-d0d6-4f5d-ba43-e3c118b0dc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617ff036-8685-4354-8796-670baf574c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44dd1df3-cffe-434a-b1e5-3cd28843cd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeccb0c-06a5-432a-b4f3-bd8bb8add7ac",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b369179-de6e-4aae-b379-1a1437893674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca2323c-1ce3-4049-a957-f926b9fc6986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee03a61-a73f-4b9d-aa07-e3408df0ffa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35d6669-9716-442c-83d1-b23f36683872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc341dd-ff53-46b7-950c-380cb76d3516",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2650d145-04d3-4847-bd4c-35c22d5e0a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3744c59-4ff8-41b2-b823-50059799228b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e352c3-b940-49f8-a704-3157cce0640d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fabfe2-85e6-4c0a-8432-8eb18251a9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43e946d-eb8a-43af-9ce5-8ba6c19580be",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc0d614-10c6-47de-97b8-4be8ef51628a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ae92f4d-19f4-4362-b4a4-3964b2d7c608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c0280b-25f5-4867-a3a3-f299a5d8ab1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7ddbd5-286f-4756-be79-4cf2c8f8d4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf2f005-1f63-457c-9337-1c8c058acdcc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9821ed-cb7f-4187-84ef-0d214f4f86f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20b8257d-95a2-4ec8-8a23-3eb822598178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392b7fa1-b0d8-4c21-beae-4a3e544ad393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902ff3b8-f138-4ba4-8342-ec3ee15ff00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ebef97-4aca-440a-b4a8-e9687a81126e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f833240-2d08-41b3-bf5a-5fc6ebedc2c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40bcc016-c9c6-46cc-8ba2-05e3f749ac19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a604ddb-b52f-4442-a91a-12ca973b3e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab4dfc6-a6d0-4b71-87cc-050a3ccaaaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd42e8bb-38f5-49c5-92de-5ea00845ae7e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5379c160-6431-480e-a3ec-136727141cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2e546a-319e-4d80-8f93-fe4511bf065f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fe4ca9-b8e1-4e92-97be-8e8ac44d376c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4532472d-e918-408d-b934-577a6d0c6e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642749fd-b550-495d-94bc-c426e98d5d87",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1b3974-3b9b-42c3-9fb7-63395f63f874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b67b08f-cc93-4ba9-94a8-dd7c05b88d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c848a0a2-acd1-48e0-8e0b-db44a124631a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b9ac05-1ed7-4a06-b911-862a1eea3f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1fcefb-7b73-4103-80f5-fc9d0b856ea9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57075d2d-a04c-43f4-9c19-7e4a4645037d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35ff779-a809-474f-a0fa-5f9e4813383c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e67916-da25-439b-bcfb-42ac8e9dd991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60486575-10df-4f4c-8463-b7c6d1b8bbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a69b8d-2e8d-48e3-b59a-af3e6e9b9c11",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0725e020-2b35-4f6b-958c-1c132d34a28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8c0878-2562-4f2d-88d2-432ac45ab12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dba14e-b163-48d1-822e-eac920cc855a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd6b937-ea54-462a-942d-229853fdbe78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fb5105-72c9-4453-a9aa-588cf6918ca4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd05723-b263-41e2-b77c-18686c7d7331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c947033a-fc76-4567-9410-9a1ab1521384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2fb9d0-41d8-4f1c-b6b7-41c971368c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372e2820-b2ef-4ab7-b61e-11967ad6a2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dfb86f-e593-4dad-85bd-45dcd5a37ce8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6fe0d1-8993-4aba-b3ae-8eda53d8f79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7365a57-60fc-4865-8d80-7d71a55b2687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8ab092-5c98-41c0-8f57-c44ee979a751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9c90b5-39e1-4e25-b2b1-48816b80f4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236b408b-1188-4f73-bdd6-3e6fd85f9970",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfad8314-4dc8-47ce-b0cb-0c61a8277e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08166e3-ba54-4fbb-944c-bb191b95b24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3858e944-bfc1-4657-8183-c6556cebc014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec70d26-7f0f-43aa-a10e-01ad2087c8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a37b5a-4622-4bc8-adf2-584f4c13095f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013d57ea-f44d-4dab-8482-38009908fbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84ae0be-df9f-4089-8f2f-15eea904f3c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc66cfa-99d6-4b02-8a95-11db793930f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d88ae3-f0fa-4c6a-8433-086f851e5151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc112fe-c95c-44e9-8bc3-573b4f0b161f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c7bf3d-2b83-47ba-81db-173f1aff22b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d15584-c178-4154-9239-0a61716125d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a820bf3-ad99-49e4-901a-075b951470f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca4825f-47a1-45c4-ab5a-8b4fe4d6a902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad73262-3846-471c-a137-f4e0d9063915",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd92cff4-f950-4cf6-8b4c-c7040aa3b4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0daba7-56db-4f95-bd2a-72fbbf532e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461eeb71-461e-4003-8830-9a69285c33ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab90c1e-2a8c-471f-abcc-48a88f87b95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da780e34-c716-4ccd-83d1-2515fabfd4bf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3682e433-8c66-40ce-954b-ecf371746c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee776af-a184-4810-ac06-a730ff9a17c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f759b33-d72c-408c-9d26-c53d422aa0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9894eae4-c1f0-44db-bc86-ea2d4bbb10de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e9c0b0-5eb2-49fa-a692-3f2418ca6e79",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88335ec7-cc27-4cf7-b58e-8c2bfa92a7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352f0467-c44a-4c7a-b6a6-655219cd423e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cce5dd-40af-4316-8776-03c992c2147e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19946a6d-4722-4445-aaa2-3ccc9da51616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034c9a66-c14a-40c7-8967-25b400319478",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c38c30-040b-47a5-a18a-cf1454170520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84e0d18-b623-4edd-8ca9-fc23c3b04868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7043beff-1195-425d-8115-ec5544033fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c6e2f1-d817-4f20-9e66-3d2b2a1da617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2773a5-0cba-468c-8016-0fe19bdf9a06",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0587e82-85f2-4da4-bfd5-21c60a9f1ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5eaeea0-4108-4040-8b84-4a1e2c8e7b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22506696-4409-4454-898f-7f6624f5bec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9e8de8-51a4-44ea-87ce-076a90a9cef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35342843-3c77-41b3-a396-63cb2d81f3ca",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e228bc5b-c431-48d2-b14b-3cb9f6112099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be7908c-1775-479c-88cb-0c65e97cd806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9e721a-579c-4280-95c1-b01c43d33e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76263ab6-5039-4b09-928c-7d26d33fa45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc815a66-2777-4ede-9354-69a60b6f2e34",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d7436f-6e02-4119-93dd-e69696940774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc399c44-7281-4f2b-bfb4-8e794d91fded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a50e73-61bc-4935-b26b-e68ed8cb9024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87765aa-2472-47bf-b7f0-9fa6b1cd5e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b243b1e-5d6c-4799-beb8-e7e3d2ecf6c5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67774ac-4565-4696-86a5-0a9b0945d73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ff650b-e552-46c7-bee8-1c4cd680797a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95624d5b-230d-4d80-8fbe-b0416e55484e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d004591f-fed6-45f4-8542-1015c49ec30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7dc076-14cd-489d-a4af-fa7e3841fc8d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95edd65b-9c6f-4b84-a9da-f2d47c463d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ff64a0-778a-4e65-b7ed-654fcbce1f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0133cc1-9854-4052-9e52-27966f4b5345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16994d6f-83eb-491c-97d7-3f5197dbeb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe7c7e0-cc46-4bf0-9bd8-d17daef4feed",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124ad7ed-2a67-4162-a142-b06cc31150c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca78020f-a97e-4544-9523-cb5a783f0a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bb2a21-b48a-41a8-8e5a-3bb329022d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b6a72d-2fb6-4c29-ad01-d1e4f1b20c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ae99f6-54be-41b5-aa59-4c7b5a510ca7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe679e18-49d0-4fe4-b5f5-880f3cae5908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39158de-8bc4-424f-87d2-26dcc07caac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "856bb47e-db13-49c3-9b31-ee554000cff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46a3cec-3795-4dd8-b688-2b164038ec15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a471c49-40ac-406a-a90f-a7580fdc16bc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea872cd6-af3e-44e4-a519-c7fe09823226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add2be82-9f07-4a7c-bc51-7f3ee8b54f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc622bb-d962-450b-82b8-c3e52a914974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae396a9-8fc8-495b-960c-d245a22b19a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca09399-55fb-4333-be33-dfc6884ac838",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8ae551-8d15-4578-b75a-641153163e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e34267-7ab4-4c8d-8804-b6096784d4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be86575-54e5-46dd-8c36-207dd91d4a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cbb26a-844b-4502-b876-11cc1e829449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd09d92-a4dc-4781-bcc6-85c677cc4f97",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1740e319-a314-4980-b57f-01caef38b5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a2a144-1652-4bbc-aad2-9091ee875754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424c0f7e-d5f3-4e87-affa-8e06eb2b732f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e249004b-0cef-42da-9c4f-07455e06829f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a58e13a-4bd5-4241-9d91-cf8cdc8aa3c0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa7846e-c0b2-4344-8146-2938764e01bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c771837-91e9-48fa-8e7f-18e70c4d2e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd220aa-a863-48b3-9b53-44d4d77e6920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60133ede-57da-4fe7-80c2-37d604c52db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a504262-366d-44bf-9c80-b7c3dde10728",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40452ca9-cb15-4cde-afa1-044c71be2401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3770fc89-e61c-4f60-9584-ae7343181659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbfe601-ade1-4148-9e02-5823c3670b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd053af-9b8d-4076-87d6-4113093a51d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af7ccf3-c7ea-4430-b795-99bcd1d4dd36",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033cf1e0-a493-4dcc-bde8-62aae6cc311e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395df614-6b93-4e60-ad7e-92e925f9b45a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d7548e-4434-48c1-bd33-d172a15b9d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45381116-6a52-45e5-af78-1c68a2a89aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da6050d-d4a0-4264-9a3e-f5f124c80bc9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a24805-f77b-4b61-a0f5-e4ab8f0bf81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41895bbf-c04f-4bef-a1eb-2185bca8f5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7887dedd-ec5d-4c1d-a62e-38eeb3347e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4299fc7d-ff8c-405d-a4f3-34e77da34d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e3bb6c-1e40-46dd-b007-c43317d039ef",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89894c62-6abb-476a-ac20-051776bbecde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c5442a-5ba8-4082-9e5d-0af1dd75ad8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607c39d7-c2e3-4517-9c2d-2b9a690f2ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ece60a7-bb24-4059-aff0-88b8a8651274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fc20ff-9b55-4ad5-995a-77bc87168eb9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22d5c65-657b-4bbf-a873-6d747fdf0ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2e48a6-3df8-4b59-b1e2-adaec2add64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124fa23b-68b4-4bfb-808d-7224bdf851d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fa89df-a076-4610-b068-00153facf822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41d8097-618a-417f-8960-c930292d3fa1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31e0657-e16e-460b-812d-98c60c08e737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dda0be5b-4f62-4ca0-9699-f44f5025eaa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885408fc-bdf4-4d1e-9d6f-faeb972093f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bd4b5e-b1d7-40e7-a37a-939cccb66796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00117052-969f-47d0-b19e-4e3e8ea56248",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f021a3a-1df5-45a3-a35f-f6616fa76351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44006475-9c57-47ea-80fd-ceadda6c064c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac9e476-6d89-4f34-aed8-28c694a6443c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5940b184-9e0b-4164-9ea2-5fa7b91048dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc19366-417e-47ee-b9ad-5bcea9f5189c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4162baa-919f-4ec0-b401-23eae8c44755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8505981-ccf0-40e4-9ed1-75cc3902e989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa78b85-2cf0-4d9a-aca8-fed0660a3aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90411043-0697-4a02-b53b-44141019f9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1abd5b5-a299-4753-a0a2-a686863014aa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b3dddd-7222-4e72-9e03-b95afbb4c2ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c20852d6-9613-4666-baec-bdaad5ddc92a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238eacea-a925-46c8-a3e4-c65b718d6d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f7c9cf-f224-4d3b-8605-51b0e73533bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba98095c-d31d-4e2f-977d-dca3121a23a5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8fffdf-e4ef-406d-a93b-9153c1f6ba3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66530e41-506f-469e-8e7f-baef98486308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f6b564-9a28-414c-877e-d54e80a847f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4917eb8-e2c3-4c7e-bc88-d85975c0881b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021066be-6907-4b93-892d-13673c1f426f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6c1a66-d41c-43d3-9c93-69e88cff7f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a560beff-a630-40b6-bf00-2db5fd72460a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ec4911-f01a-4666-92f6-451935189030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c050c3a0-e35f-4f43-8c3e-29e428ea1f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467741f2-8871-447b-b408-896e6573e031",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50855df3-0dea-44e3-96cd-b8fe280668ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef7b27eb-07f6-49b5-aaa0-4639e376fac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb02915b-6012-4f39-bc4b-501be5273720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deaa28bc-0824-4ceb-a677-db42a686a283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777936be-5882-462d-a9bd-3d8b8c292815",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fafc1a3-588d-4db2-afda-ab009a552d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5a2b7b-3c15-49da-9813-b96cbed701b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1e2887-23b8-40f2-a054-c7b61373906e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b65df52-845a-4067-9d35-0a241263cac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b30484-3b02-42aa-9f33-e9f1b27a1d43",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c75f9c-2171-44b8-b180-a33dd5221b6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3874088d-4027-40e4-96d4-f7a5fa34c52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1424a118-7ad0-4e3a-ad5a-d85a01bb0a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47add15-b845-4c39-ac16-9369b4a7df02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34b08e6-c3ae-40e8-9e68-57e6f51058c2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9bbe84-5cc5-4ee7-80d2-ca57281d5d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "741c8022-2cd8-4681-9eb4-dba88574275b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42944ba1-998a-47a9-acd2-50d14816b747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d30f345-5f74-4dd4-92ff-2b9eaccf2171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687a1d6e-39ec-492d-a8fb-2f1228289fce",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5316c14-c65f-4460-a06b-407c6d396a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ac77fa-85d5-47f2-b291-23c961711f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e9b682-eca6-4c20-b6de-d27d7a3a5427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9dc7a8e-d09c-4850-8152-b3b55b77e2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f18b8d8-7713-4cfe-b77c-a1d09a4d4e89",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41674974-1cdd-408b-9463-32ca9ebf754e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d983e6c-8769-45ec-8adf-ae8d27494c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f08c10-95e1-4396-9823-4227e9fcac0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce10724-55e3-4d05-983d-eefa97f09961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a92105d-0492-405a-92ea-20c522417099",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8cf3bb-8e00-40e3-809f-69f2d63c4222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec0d8f6-21f1-4014-8e8d-38c3cf624bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c45a836-07ab-468b-930b-80a447cce05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524048fa-f5fc-4ccd-9a61-b66e2c1bd024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30abc8e0-cd16-41e9-abe0-4a986c79224f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769af3fa-60a6-400d-8c29-26555e1db750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5659a69-a749-455e-93e2-9f1da5bae51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1b1f22-5c60-4f3d-aff2-de65139fe611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cff5123-9f7c-42e1-8820-7a464be385c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3769c71-1937-4ac1-b552-4829f7375d78",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c9123d-4bf5-4d53-a5d3-9faf07fa35d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b28cc5-b518-4e8b-b9de-a693c2e24507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8382cbe-c816-4542-b68b-5713844b52f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a2e2e6-4a1a-4027-ae4a-2ec236d8c430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492949f4-043f-4435-948c-62482df08b6b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cf0cfe-fe08-411e-86ac-7cf7c01a36a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b6d3c3-6ac7-421c-8bdc-82b408f75111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d02ef1-535c-4a91-8028-1ff1a0d0caa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbeee010-9706-48cb-9b56-d960718270f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998715a8-5b15-44d0-b2f8-6a824e6373b8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4687c13f-5a49-47b7-b949-8a9c7d8f02c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b43ff53c-9a1c-48bc-9946-62a9f4221797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8192b84b-c6f5-4399-b3f2-31367f1488cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5e78ec-c23f-4e17-849a-84ab1d6eb031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84861cd2-13ae-4b9e-816e-7c0b3a9967ff",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde1d739-20fb-48a6-8a8b-9e46cf07a83e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7dae52-c583-4955-9305-27cb386404ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2684326-49ae-47bc-a57f-45828815f502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3c26f8-46ae-4d6f-9670-849766534ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c551c0a9-4ac9-486f-af81-5ce0cf40e1e3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b00f0ee-e379-4b08-9ccf-840a4f15f4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a805ff-67dd-4fe1-bb26-b2bcdc0b4d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68895067-310f-48dd-8fe7-bdef95a5f871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e9bb6d-a3ac-4322-9610-c90891a5c897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3611e10-2eae-426f-9f9a-32d75b938657",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b148ccb-0c48-4772-81a0-f9b370915125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f10f299-9461-433a-b388-89dd4cd323c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29b14d2-f944-4103-96c1-f3c5d8d34200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f013f35-621a-4b3e-b2a6-21957fdc44e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71a1a7e-66b9-431f-9ed6-c897b3c1dece",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac988364-79a0-41b5-93ee-56e0c6154570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cddff30d-70c4-4a15-85bb-18aaefe7861a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c584db84-e3d9-4560-92eb-cf21216e6fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229d0ea1-fd8a-44ff-8822-37daab8054a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06b06f7-9622-4c92-8ef5-11a8213d3db3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcf30c4-c050-4dc8-b159-ee1440595353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e931ac-ccfa-48c7-ba58-b5cc85febf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ace635-167c-4413-8d8b-9a0628333602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82c6c8e-5cf1-452b-abb8-33a0dcff0ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a4895e-94fd-414d-882b-25b13c10a110",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6683d013-e53e-4070-b7a6-4903143c6c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a50d661-73ad-49f7-a700-db8bde3b3599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a326ee-cb4a-4e8c-8e53-ef962fd9c0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7150d905-d624-4924-9c6d-41affa81b928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fa93c3-6e2a-4caf-b0bc-a7a738cb1ba2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05188ff4-03e2-43b8-83ca-6514dff6a109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fb5896-25d7-4b17-8286-981239576c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebb9564-1eac-4ad6-98db-26ebb5a08874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36fc97f-e57f-4e91-beac-02abb48a330e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651dfc38-3758-4227-bc1c-ada5a337475e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb6cda7-4838-47db-abfc-68958d7db1e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601f76cf-0c77-4c95-ad3a-16d0ff711ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf98de14-c67f-49bc-8188-99270b90c7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02204836-44dc-4942-8d4c-0e7925dd32d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeb04df-bdd4-4519-a859-a4a362de90cf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47260348-4eb1-4d4b-8af7-d9da775bfe7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be10bc67-f239-4dd7-9bb7-5b6130c414af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810c7d99-0473-4e1a-9030-05eb7b682298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4822a592-bf93-461c-88bd-f419c5225684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af987427-8b6c-427b-9574-b98c72aa35bd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37f5d66-64a8-4dbc-a421-116a3f514a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98f06ef9-e728-41f5-82ea-3ae751890f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f507ab56-ea77-4245-bc01-cfa68b064cc1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda7e24c-d1a6-46bf-ab17-4102177054c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ade86b-bfcb-4f28-b47e-ff4837177cbf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e783e6-c01e-410d-85a3-cf1808f37fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959f237a-2c15-4aef-a30f-7e4d7f3e7830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4ac979-33c0-4ba1-b295-10fdb102d200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea55b29-8ab9-4383-80b6-c1bf399f129a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2d2622-b5cc-4750-91f3-d659ac407415",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f589ad-ed8f-4736-8538-1e3d864c6813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e123ac1b-1bcf-4610-b874-b9edae9755f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53af564b-ac9a-4754-9d94-7f20af70edd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4f7417-5b3d-4558-877d-fa594cd01054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635b2e14-ecbc-475d-bd11-cab2ead4aac2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1782e54d-dae0-4a25-b6fa-0f05ce7de217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f98bd0e-6449-4769-ab54-b6ac80b27793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f523e8f-a5bc-432b-ba1d-00aa7dfd2304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e63c91f-ba38-4d87-9939-a0aa5934bbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78879f39-8a8b-4593-b30b-fe09e58ebf70",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ded2762-a0dc-4d6f-bc4f-6505100dc7df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e02f455-f6bb-44c3-9c8e-49ad78a7bdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e93e67-78d7-46ba-8ae7-32e1308b0a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5a726b-52ca-41a2-a995-4935cd43151d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb3a4ff-0d69-4c8c-9dae-aa0ab5cf12e1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc5b1c8-b67b-4a33-9848-039a71177633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21d40036-ef4f-444f-9770-b9cdcf55b3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bf2d25-9d0b-438f-a885-5b6e320c6247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd028d51-1291-4c3d-bec5-6fdac9b0e65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d770ad5-b25f-4cad-a35f-fb600005196c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d062039-cb47-4263-8a7b-2a420d530e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aeb041f-be6e-4db7-8fb1-e4ac04d5c434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d0eb89-d07a-4df6-bfbf-b67fe3a21fe6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faca7bf2-1106-485c-93d0-627255c7e9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15fc16d-d208-4411-b88f-fb91e49f814c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf01046-d98d-48ac-a3f7-106b0c696edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1322aa-294f-4de3-a7db-e9c5a499b986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea42fcb8-e4a2-4db6-85fc-9caf2ec0118e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da321473-6624-4c01-b572-1641252971b3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82e4edc1-701b-432b-8720-029c9a868463",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83902502-626a-401f-adc1-6952af05d9ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bd36e42-249b-4c63-b506-62175282190e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e453459-dfaf-4931-a2f6-613984e4bd9d"
                    }
                  }
                ]
              },
              {
                "id": "83159fa0-4fa2-4de7-9198-6511cc8057d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f969df2e-abeb-402f-9e3e-c83d84e74c25",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4925643f-a506-4be8-9ce9-5a65bf26a4cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "09a48fa2-d6a4-48a2-905b-bd5f69677278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c051fe7-adc0-45ff-ad3b-127c7dbfd383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a8b96b4-d0f8-4ab0-9588-92ba27275aa9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7733e15c-6e2c-4c12-a646-fbf99d48e59c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fd9810c-0f5c-4509-84fe-347111460023"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d563ef00-dd1a-42ce-870b-7f8bcc515712",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c143fe8-0f53-45e0-aaa2-7f3e277f72cd"
                    }
                  }
                ]
              },
              {
                "id": "6b394c93-20c2-443a-a5ac-36fedaa92089",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c2b4116c-1b51-4f21-9612-94b9e4b66051",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407c1c7b-e145-419b-8255-a25063455d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b929cb64-a40f-4719-866c-1e6acf6f2fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27448342-2d95-4ea4-acaa-582886b47464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e5450c-0143-49fb-986e-136a7c822b30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9621755b-ba96-420e-aeba-a71b7b784ee5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0606f887-e50c-4069-ae61-ad71dd6799b4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19310f90-5365-48ac-a641-72691c75fc60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4fb3dc5c-6a29-44f6-9f32-d98467d4e074"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f68d7ab-defe-42ba-b6ec-7eb538784ac1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18cccdb3-c458-4366-ad09-1113503a5866"
                    }
                  }
                ]
              },
              {
                "id": "e7821bf9-f6c8-46a2-bb3d-93ee77efa82f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4cb74f5-ea3b-4f4e-82dc-4426277c38cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8fc411e6-acea-4e3f-aadb-ecc33fbb2254"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03382c4f-e5e8-48b2-ad50-e9d76b2c49c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64b5f8e9-52a9-4710-8a3d-43adc8f5e11d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28b6be22-5f8a-4344-8483-7980f14ae281",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "81922c3b-6a51-452b-8eb5-11139fb5fd8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1e2e5a0-2d48-42d0-aa75-b01b5a5b591c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ec0d531-36b6-42d1-baf8-08fc193316d3"
            }
          }
        ]
      },
      {
        "id": "b9b08c47-e85a-428c-827b-2c9f162fb20a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c87e2d44-36ba-4bfd-942d-026c08cab289",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44dbb587-1bf5-4a42-9c29-b9f40991aa72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15a16f88-4d1b-43de-b56a-52ca509a51d6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81712aed-4a62-402f-ad3a-0d08a06003a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7259e80e-828c-4c7b-a9c3-fc921a8c2bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcffb597-ea7f-477f-b2be-beae4c42dd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2f71cc7-b43b-4820-a87e-3f47f8d3b467"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5cf503b-ce77-4ac0-b345-03736a492c27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd02151d-a45a-4959-a4f3-032a20ffde30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60aac474-a7ea-4a04-a3f8-d0116d7d20de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "968a4da9-fd74-4cd3-a096-b1adcd1b5f71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2342ef3c-f0c8-4f31-8de6-9b296ac76a63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "28cd5e2b-2028-47e2-8bbe-d1e16fc14ae5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbf3bbff-55ab-4bc6-8c4b-ef933b517ab1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8937aaf1-e6e0-48c4-bfa2-6ccdd151fa19"
            }
          }
        ]
      },
      {
        "id": "41f9727a-ad7f-465e-b108-c650b376834a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8191dd9a-9af1-45b3-afa1-969658847c71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a371c13f-589f-4408-8b47-98e19929f5d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9da351a-ca5c-4ead-85ba-45f3efcf14a6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c17b084-375d-4ab5-b98f-912328c0489d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b983153-b072-4fe9-ae62-67d07e9297d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4922043e-4d15-4f0c-9619-b23fe66c13c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "514df3db-a79e-4c4d-ad6a-5a9edc97c5e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b6117f2-4501-45a3-a8fa-c603ed8f6a65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fb08de0-a731-4b81-9d8d-b15495ebbae1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15da2360-0237-4605-826c-dc726e6f42ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6f0f417-5762-46e9-8180-af16ac6491b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2143750-b9d5-492d-a161-886c1bfea8de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "abf313b5-6403-49b3-84a8-2c2ddb230f25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68273049-6007-4bc3-becd-8e0999282d16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fe74830-521f-4bbd-a699-89efd5e45451"
            }
          }
        ]
      },
      {
        "id": "8290b39f-a981-4557-a892-63f58b61d215",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4d50dcd6-d13d-45a3-b0fe-e846a0273b16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5613d584-411e-4678-aa0a-d72e88caede7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "144ebe85-69df-4405-9c6d-2850e0aa8fd5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf310f8-fd21-4783-8b7b-475eed7e60a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb6b0e01-ff6d-4405-b71b-3a6d01dc48e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f88797-621a-4ba6-bc4d-34b8acad2e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e899389e-286c-4c80-a0a2-c0e1c037ce4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a0db0d3-733e-4526-ac1f-3584463d710c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e49dfb5c-129e-4eaf-9abb-32b78e72ed03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec2260e3-3c4e-4b92-a965-c5260e38f5f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b9f5bab-1d46-491f-a5fb-a57e88f208cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b741b610-af9a-4844-b7ba-b7f8087b0614",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f0e880fa-d23e-48ac-a2d8-603e545669d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a6f1f88-8deb-47cb-af7f-20648588d823",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a285e833-831a-475c-aec3-341602f5e5cf"
            }
          }
        ]
      },
      {
        "id": "27c83767-1bf0-403f-b6b5-029811672a37",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac4a7ef0-d3f3-4aa7-b84a-6310a1fffbd2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "731c8fee-e67a-4fb6-b36e-13ee60a5f413",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bb0455b5-f230-4a70-a37e-3a7ae3a3efc8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02bb0cc0-d9bc-4422-804d-7f3182a751b4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f66ee55a-7973-4386-9e16-3741bb82b755",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 27.00793650793651,
      "responseMin": 7,
      "responseMax": 325,
      "responseSd": 27.16995189944567,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719967120591,
      "completed": 1719967135256
    },
    "executions": [
      {
        "id": "c749cebe-8688-43dc-a30e-ca240d727660",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5b6adef1-5891-4cb6-bf0b-185c63f2ede7",
          "httpRequestId": "2cd34ab2-93bb-4c94-a602-b1b520aeec2d"
        },
        "item": {
          "id": "c749cebe-8688-43dc-a30e-ca240d727660",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9328029f-6ff9-466f-8980-760c1c517c8f",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "44ff3df2-e7b2-4f66-8785-e364de1a9d7f",
        "cursor": {
          "ref": "dc7bbe93-9739-41df-9b93-7be4f7cbe5d5",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9312c26f-94f7-4d49-a018-2c653337bf3e"
        },
        "item": {
          "id": "44ff3df2-e7b2-4f66-8785-e364de1a9d7f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e6e4c5d9-5b28-401b-a41b-3682ee72991d",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "42c8464c-248f-48a8-b248-14c364f6a787",
        "cursor": {
          "ref": "d73d285b-8c9c-4851-955b-a7f856e05c35",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aa8b7dba-808b-40f1-a4c5-2c0543a04ac1"
        },
        "item": {
          "id": "42c8464c-248f-48a8-b248-14c364f6a787",
          "name": "did_json"
        },
        "response": {
          "id": "8a4a889c-4ca3-4840-8be8-56fc2c763998",
          "status": "OK",
          "code": 200,
          "responseTime": 202,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022cf25f-2624-4954-ab22-0e0105eb1745",
        "cursor": {
          "ref": "6f494b1f-311f-4195-a3db-36265c5131fe",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fde61aef-4bc5-40ce-936b-a5b6b3ec27b5"
        },
        "item": {
          "id": "022cf25f-2624-4954-ab22-0e0105eb1745",
          "name": "did:invalid"
        },
        "response": {
          "id": "a0106468-f095-4bbb-9533-c8297c96a18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022cf25f-2624-4954-ab22-0e0105eb1745",
        "cursor": {
          "ref": "6f494b1f-311f-4195-a3db-36265c5131fe",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fde61aef-4bc5-40ce-936b-a5b6b3ec27b5"
        },
        "item": {
          "id": "022cf25f-2624-4954-ab22-0e0105eb1745",
          "name": "did:invalid"
        },
        "response": {
          "id": "a0106468-f095-4bbb-9533-c8297c96a18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9e0631-f9ee-4118-be1c-4398d2bc3cbe",
        "cursor": {
          "ref": "d3a1826b-cdd4-461f-b828-e5881f5343b3",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c7bebc8e-5f43-4efc-8d69-f7eeafe9eef9"
        },
        "item": {
          "id": "5e9e0631-f9ee-4118-be1c-4398d2bc3cbe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "af06b6a4-b93b-4740-aaf6-56ea56f632dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 139,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d256dc0-9375-4224-a45b-34f66fa93759",
        "cursor": {
          "ref": "eb99b1e0-54ac-45ed-bec3-04338534303f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "50ca9390-c52c-40f7-a1ba-dc3ff90bd3be"
        },
        "item": {
          "id": "6d256dc0-9375-4224-a45b-34f66fa93759",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f20e7215-8634-4920-8ead-96fe5c43b45e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80df6d9-1a1a-4cce-8bbb-b25f2d655be2",
        "cursor": {
          "ref": "08743ba5-f53f-40cd-b100-a67e9221a990",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0c8bac2a-1752-40ae-a7a4-063739094f51"
        },
        "item": {
          "id": "f80df6d9-1a1a-4cce-8bbb-b25f2d655be2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "264268a1-9adc-4b2a-a260-c300137c36ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bf4f88-dc6d-40e3-b72e-3d4d11b37d17",
        "cursor": {
          "ref": "0c57b85d-dbda-4394-bdb2-e52836e06e80",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "be1614c2-a6ae-42eb-a7f9-33f58db22917"
        },
        "item": {
          "id": "04bf4f88-dc6d-40e3-b72e-3d4d11b37d17",
          "name": "identifiers"
        },
        "response": {
          "id": "0b2368b7-5afa-4a13-af4b-2d23ab8af209",
          "status": "OK",
          "code": 200,
          "responseTime": 243,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9768745-cbe3-4f8f-8efb-075184a32faf",
        "cursor": {
          "ref": "0a7ae714-2435-457e-a930-8ccfe56c7696",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a2e38c5c-7b40-4451-8b8f-be869e864dbb"
        },
        "item": {
          "id": "a9768745-cbe3-4f8f-8efb-075184a32faf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f09708f0-8834-4217-84d8-6ccd05aa9c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4142f0b9-4739-4a83-957b-830829e6832b",
        "cursor": {
          "ref": "9e472246-c363-4a30-9611-ba063efe28f9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8a50d652-c9a1-4a71-8274-679be0dc0461"
        },
        "item": {
          "id": "4142f0b9-4739-4a83-957b-830829e6832b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "90da7836-f162-4b34-99d8-02562e625088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a125fc-1c29-4d8d-afd7-4064ae225135",
        "cursor": {
          "ref": "1f14d302-61ab-46bb-922d-a8ed245469fb",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9dd3559b-3223-42ca-bd0e-2d9c3fef52ec"
        },
        "item": {
          "id": "b7a125fc-1c29-4d8d-afd7-4064ae225135",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8732d34c-3e67-4279-b5fa-e9374964be7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc617fb-c831-48e2-89f8-d27b61f90de3",
        "cursor": {
          "ref": "6b1a0f91-595a-49d4-8490-278745d96c75",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "09e91912-59cc-4488-8538-852d8ca303ec"
        },
        "item": {
          "id": "1dc617fb-c831-48e2-89f8-d27b61f90de3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2b32cf99-0e35-44fb-a486-d5a9bd8b7dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8b80e0-4009-4ad2-81cd-ef472cae4c92",
        "cursor": {
          "ref": "f790236c-ef51-46f9-afe0-852b9e7d5ecc",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8bb23d7e-0378-45e2-b6ea-1f1cd1c4073f"
        },
        "item": {
          "id": "1e8b80e0-4009-4ad2-81cd-ef472cae4c92",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "77d9698d-fe71-4c5a-920f-06fb5650ccdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9559e845-1099-4765-b2ce-3c176b310a1d",
        "cursor": {
          "ref": "41e1b86b-1f7d-4d68-970f-a73a697dd992",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "83305d13-4f62-4fbf-b4c6-496c7ca3eefa"
        },
        "item": {
          "id": "9559e845-1099-4765-b2ce-3c176b310a1d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "51600d1b-600b-4212-80b6-bd536d9f106c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579d2cb3-9974-48cc-905a-7f2ab3364397",
        "cursor": {
          "ref": "3c68b97a-b90d-40d3-8caa-72234e5ca76c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c91bc7c3-6031-4958-9b69-f22e438a54b7"
        },
        "item": {
          "id": "579d2cb3-9974-48cc-905a-7f2ab3364397",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1e5d9fb7-f67f-444d-9300-15c5629130c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd8f667-89f2-413f-962c-d7988a33c318",
        "cursor": {
          "ref": "510ef4b5-53b2-4eea-abd7-57c7b4631a5d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2bad51c1-2fd3-4fa2-8151-3fa5562cb69a"
        },
        "item": {
          "id": "8dd8f667-89f2-413f-962c-d7988a33c318",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2fc0fe3d-f2aa-4832-b6ff-888a5c0dffe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8400c534-d5dc-4528-824e-0b4a1161fcf0",
        "cursor": {
          "ref": "b9d9eddc-e63e-457b-ab8f-48be493a6326",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "afd783ec-9f56-49e4-ab3b-00791a81abf7"
        },
        "item": {
          "id": "8400c534-d5dc-4528-824e-0b4a1161fcf0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b1adcd3b-43e3-4dc5-8566-b6bda955798f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab4bff4-2d9b-4583-985d-aa34c8f193c8",
        "cursor": {
          "ref": "8ce8c972-2915-46f5-9fe8-ce45579b3424",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8ecacc12-582c-4807-a0be-c97f411accea"
        },
        "item": {
          "id": "0ab4bff4-2d9b-4583-985d-aa34c8f193c8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ecbf2e2d-5c71-4ca6-8dd3-c41de7c226f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0b6b47-f4de-42cc-b9a1-e13b0ef40581",
        "cursor": {
          "ref": "63e4c6b0-90a8-4d3b-95b2-f42a941a7205",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fc473662-9e15-401e-a76e-1fff55a6c0ea"
        },
        "item": {
          "id": "bb0b6b47-f4de-42cc-b9a1-e13b0ef40581",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "01cddf7a-f77a-434f-9c57-dafe3567363f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e8b44a-52b7-4790-8c7e-70f3878135bc",
        "cursor": {
          "ref": "be9ea389-b7f2-485d-b1fd-aaf37e81b400",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0307ff3a-803a-46fb-b945-70af233a17fe"
        },
        "item": {
          "id": "f0e8b44a-52b7-4790-8c7e-70f3878135bc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a280e315-7d9f-483f-8d0c-13e07f35959a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eba4098-355f-4fd6-8008-bb9d417ec525",
        "cursor": {
          "ref": "413de66d-3447-406e-a2cd-2dbdda048ed6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e24ac42b-2eb1-46df-b39f-dc99349b9f7a"
        },
        "item": {
          "id": "8eba4098-355f-4fd6-8008-bb9d417ec525",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5ffe9f1c-c8cb-4ec7-8801-b6044d881158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b468615-f434-4163-bab3-ebe93bb82c8f",
        "cursor": {
          "ref": "6e4c9ccd-e4e4-4ec1-92c6-da7f579e9b77",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c6f692b1-29a9-45c5-b303-148a84cef7e1"
        },
        "item": {
          "id": "9b468615-f434-4163-bab3-ebe93bb82c8f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "43da8ceb-0b0c-4210-8310-685873c055cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4118ca8-47bc-49b2-8aab-160d32c251ca",
        "cursor": {
          "ref": "50aff659-b462-4d93-b9a8-c006a4d39699",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5c67a8be-b1d5-447a-b3f9-cd96b473ef4a"
        },
        "item": {
          "id": "e4118ca8-47bc-49b2-8aab-160d32c251ca",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "61cb6575-e787-4921-af87-350cb740598d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e4d59d-d066-4ab8-865d-03598f3f7a3f",
        "cursor": {
          "ref": "43a145f5-bdfa-4458-bfd0-8c61eff29388",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3865071e-7692-499c-a37e-b24f63156248"
        },
        "item": {
          "id": "25e4d59d-d066-4ab8-865d-03598f3f7a3f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "31fb9e67-1934-486b-9a26-14af4305e49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bb6762-0e3b-4ae1-a08e-e0372e1657d6",
        "cursor": {
          "ref": "91716092-dde5-4808-a53c-7a5f71c252b5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b2928afa-2456-453d-b30b-bdb5228c14eb"
        },
        "item": {
          "id": "a6bb6762-0e3b-4ae1-a08e-e0372e1657d6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eee81168-7f49-4016-8dd4-8b0eadecfffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a81bc68-873a-4503-8f55-305ec59be9c8",
        "cursor": {
          "ref": "38fda275-9ce6-4d39-9bbc-7f8ebd00cf77",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "37a50ecf-d9f3-467f-a47a-a21e865b989d"
        },
        "item": {
          "id": "6a81bc68-873a-4503-8f55-305ec59be9c8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "096ac57f-0f86-4166-add1-b2dfb733a0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efde8a6-db94-4dff-8859-c674041aa3ac",
        "cursor": {
          "ref": "8ab6c6e3-1e9b-4c35-9ba1-ea18b6416490",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1014988f-fd9b-4213-93d5-ee1cd551a999"
        },
        "item": {
          "id": "8efde8a6-db94-4dff-8859-c674041aa3ac",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e1a22cee-9b39-4166-9f28-39ba3b765ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93daaf7-44a7-4c9a-9da3-db2e9b8c428d",
        "cursor": {
          "ref": "e583586c-35fc-4e0c-8480-18f00cca2f84",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "720caf44-d3ad-4865-a624-020aabf2184e"
        },
        "item": {
          "id": "c93daaf7-44a7-4c9a-9da3-db2e9b8c428d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a7bec84f-3a1b-482d-a4d0-324969efa077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4291624b-2a58-4096-8be0-a0a808e3be67",
        "cursor": {
          "ref": "8e2243db-b658-4293-b744-564ebcdc08e8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fe56aa2c-f5ff-4768-bb56-b08b6d18c029"
        },
        "item": {
          "id": "4291624b-2a58-4096-8be0-a0a808e3be67",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "690ae9cf-a06f-434d-a46b-17df71d42d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe30f14-2eac-4cf8-a967-a415590e1319",
        "cursor": {
          "ref": "b028a9f5-764d-47cc-96a3-885facbd6951",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1a5f89bf-562d-4e26-85f5-20fea26c6e47"
        },
        "item": {
          "id": "cfe30f14-2eac-4cf8-a967-a415590e1319",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8185f116-b33c-4dc6-a0b9-2bb2afbe3627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81151649-b4e2-4221-98b1-dff505c6cf72",
        "cursor": {
          "ref": "46a60089-77cb-4598-a43c-1c2be9acc22b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "de9da495-abb5-4b79-b914-fc0ac87e9c6f"
        },
        "item": {
          "id": "81151649-b4e2-4221-98b1-dff505c6cf72",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "52e0c457-1f4b-4eb3-81f6-ab6ece9fa64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6026cecc-2e2d-4e55-ac5c-21c519e21f5e",
        "cursor": {
          "ref": "c670ac7e-3d81-46cb-b4b8-94710c9b1941",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6d8737a1-3de4-408f-bf23-564887d6edcf"
        },
        "item": {
          "id": "6026cecc-2e2d-4e55-ac5c-21c519e21f5e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7b06f8d9-1006-4187-8529-bb3c3355f221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddb283b-b899-4f4c-aa96-c03f358a926e",
        "cursor": {
          "ref": "19a592ba-47cd-479f-8a61-02dd41e51db3",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e2e9f4f1-bdf1-41e4-b9bf-3b626f1dbe05"
        },
        "item": {
          "id": "0ddb283b-b899-4f4c-aa96-c03f358a926e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0571855c-7522-410c-84fb-ebda78a7e7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449ac78c-6f17-4423-9121-c6346eaa7b5d",
        "cursor": {
          "ref": "a3a65628-788f-4c17-b27c-6ae229589fe8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "df6f887c-1250-4110-801a-2c270683ee2c"
        },
        "item": {
          "id": "449ac78c-6f17-4423-9121-c6346eaa7b5d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b33a0472-c468-4153-a2e2-38f309a9da82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1c6549-81e3-4d63-90da-80bbfbf45991",
        "cursor": {
          "ref": "ff0b2536-7d29-4d3b-b61a-98a695de3145",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "213e5008-92b1-4d69-9139-23e868134e09"
        },
        "item": {
          "id": "fd1c6549-81e3-4d63-90da-80bbfbf45991",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0322a9f9-47a3-49d4-8abd-08a4a6dc0429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e52d85-0171-4c7d-ac5f-e5dbf4d43701",
        "cursor": {
          "ref": "f4aca078-98e7-4a4f-926b-95b1dd6e5bc0",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "01ba2664-82b6-4a95-aeb4-2a9c0737408c"
        },
        "item": {
          "id": "77e52d85-0171-4c7d-ac5f-e5dbf4d43701",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "334bf9dc-4c3f-491c-a14c-9dcf87eda447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0772d51f-977b-4e79-a06c-53790c9fbea0",
        "cursor": {
          "ref": "9a5fda0e-be6c-4229-bb89-06eaf2e5e839",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6d915c86-2b38-43d1-ba09-7a6a55f51a1f"
        },
        "item": {
          "id": "0772d51f-977b-4e79-a06c-53790c9fbea0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0de982be-11f0-44c4-8958-2c9668bdc860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120cb691-f9ba-4445-af56-ceecd18f64ab",
        "cursor": {
          "ref": "8510cfa7-0c1d-49ff-8138-ac99ec8467c8",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e4931768-29d7-436b-a3d5-9cbb2e455bde"
        },
        "item": {
          "id": "120cb691-f9ba-4445-af56-ceecd18f64ab",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ed808745-4efa-480d-a0b0-74aa3ebcc6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a435f7-89d7-429a-8518-5fe215b7e3fb",
        "cursor": {
          "ref": "7aab6a5e-33dc-4b3c-b62a-d3b689d9cc7e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f6bcf90a-dd78-4d49-8b2f-ef6214f4b8b3"
        },
        "item": {
          "id": "08a435f7-89d7-429a-8518-5fe215b7e3fb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "27b34b21-0b0b-4811-a0b3-6fbe6ab5aa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8f1a64-0565-46f2-84ef-31fbe12acc10",
        "cursor": {
          "ref": "16fa0908-a3a8-477a-a822-63f85eb7f61d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7753a0ee-8ec2-4ebd-ac66-8126d7382041"
        },
        "item": {
          "id": "db8f1a64-0565-46f2-84ef-31fbe12acc10",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "da2e4859-a475-453b-af00-987c04188788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106445e7-bccf-4446-b116-da6a77ae4436",
        "cursor": {
          "ref": "1cb5398c-4b49-42d6-adc8-c20a7a6a866f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dbc88d00-bf4b-44bf-9b71-e7298bb774a5"
        },
        "item": {
          "id": "106445e7-bccf-4446-b116-da6a77ae4436",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d84a9b9b-2835-4263-827e-247a5c7f2fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24efaa66-3fdd-4b27-8fd9-e01023ff7f1f",
        "cursor": {
          "ref": "d6eb9976-cefe-45e0-8dd0-cf855fb88ca6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d421dc0d-bb50-4ec0-ad63-a86fcaa166d5"
        },
        "item": {
          "id": "24efaa66-3fdd-4b27-8fd9-e01023ff7f1f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a1f7d896-6745-4deb-8621-a6d8c01a5a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77395f0-163a-407c-8853-596ea52dded4",
        "cursor": {
          "ref": "5283f904-f6c9-41f2-b080-7533434b5bb9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f4badba8-b0ff-495e-b30e-c1cc24bdf9d6"
        },
        "item": {
          "id": "a77395f0-163a-407c-8853-596ea52dded4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6947116f-0762-4667-a6b7-f4cddaad9789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2efb12-8fcc-4fea-9d7b-8f87e736b183",
        "cursor": {
          "ref": "583e74fb-57fe-477e-8b3a-f22cb8a5158d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2399d8ca-df96-4cec-b85f-f112e09b996b"
        },
        "item": {
          "id": "3f2efb12-8fcc-4fea-9d7b-8f87e736b183",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2cb9e730-1bff-453f-b25a-8dfd4a3672a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156c93a8-43f8-471d-8b1d-0cf328cedf45",
        "cursor": {
          "ref": "3e4d33e1-527d-478e-bd83-6257035d0eab",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "43236783-eecc-495e-b923-b61613b9f9fa"
        },
        "item": {
          "id": "156c93a8-43f8-471d-8b1d-0cf328cedf45",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "da4c44b7-2e13-44d9-8047-ffa1d21b068e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efac4d6-df5c-47c1-ac79-2b3a9cd124e0",
        "cursor": {
          "ref": "b3544026-e41f-4680-b820-32f97c54e4f1",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "33855c85-401a-4656-936c-abcf578be683"
        },
        "item": {
          "id": "5efac4d6-df5c-47c1-ac79-2b3a9cd124e0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "53cd867f-abb8-4539-8f3b-18b8aa413a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d1a495-412a-45c8-bb9b-159321edbcc3",
        "cursor": {
          "ref": "cbcf99c1-486f-45fa-8611-d3a446dbf2c4",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b8df91e8-c3a6-4839-8f7c-b08737cbe9ee"
        },
        "item": {
          "id": "26d1a495-412a-45c8-bb9b-159321edbcc3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b4aeeebc-6a24-42ff-bfd8-f3d443bcd1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7db7afe-4708-470c-84c7-8bf2db737110",
        "cursor": {
          "ref": "2fbbaaae-fe58-4367-ac51-621abdc052ee",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "404c7c3b-9c71-4a6e-824b-e9fcd369e980"
        },
        "item": {
          "id": "d7db7afe-4708-470c-84c7-8bf2db737110",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "680fdbf5-3dcc-4717-88f1-66acfaed0c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4ce44b-e91b-432a-91be-bd3c996c286f",
        "cursor": {
          "ref": "cc96fb58-8ce7-48a5-b3c3-67e57515c1f0",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "80fb7b63-1e78-45d6-be78-369d59271e1e"
        },
        "item": {
          "id": "0e4ce44b-e91b-432a-91be-bd3c996c286f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a7efd951-5f32-4011-ab14-a2d76f649c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc5db3d-6e05-4e57-b5fd-ef1f06c12408",
        "cursor": {
          "ref": "7ffadeec-cb59-4ae2-804a-9cf8d32f595c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "94bff441-a95e-43ac-84d4-080fd78f6d62"
        },
        "item": {
          "id": "7bc5db3d-6e05-4e57-b5fd-ef1f06c12408",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "92dddc72-2d8f-4257-a9a9-fc4c55f160a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35fb690-e8b2-448b-aeef-f6fee6d20b4a",
        "cursor": {
          "ref": "232d04b0-4289-4560-a421-6bff695921b3",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "91cd2a8b-7bc5-4590-bddb-3465446afb7e"
        },
        "item": {
          "id": "c35fb690-e8b2-448b-aeef-f6fee6d20b4a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "db692d85-d3bf-4dcf-9135-5950d3d2edae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6c3377-0139-4e08-ba43-7d485bdb90ee",
        "cursor": {
          "ref": "80202919-9c87-4d93-98ec-e2c7090f110e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "72df792f-5575-4058-891f-d65b2b454080"
        },
        "item": {
          "id": "5b6c3377-0139-4e08-ba43-7d485bdb90ee",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c4316084-b112-494c-b509-937278e26e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872efe31-b9be-4b6f-a486-bf505f182c92",
        "cursor": {
          "ref": "04fae0b5-49b6-4ba5-b44a-80273a959b03",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3e1ae1ef-8919-40ea-889f-e02fd668ba8e"
        },
        "item": {
          "id": "872efe31-b9be-4b6f-a486-bf505f182c92",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "98ff5ad4-4ca3-42dc-a142-f122ff6f54e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60b4687-9811-45eb-bf0f-0fa67afe3996",
        "cursor": {
          "ref": "2bcc4042-6e73-4529-9d33-d09083590aea",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "85fa016c-31c7-4773-8c3a-2bed6bd16e2c"
        },
        "item": {
          "id": "d60b4687-9811-45eb-bf0f-0fa67afe3996",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9e0a8330-a893-45a2-9ab0-81ca997a2cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbb2778-9a25-4879-8cfc-1b21e4bb6c4f",
        "cursor": {
          "ref": "687487ba-fc93-4c0b-9cdb-3b07a54013d5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "529c071e-9b50-4c4b-883c-24af37ae1f6b"
        },
        "item": {
          "id": "2fbb2778-9a25-4879-8cfc-1b21e4bb6c4f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c3c02c08-1611-417a-9a4e-4a42a374b06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d69fe23-e3d1-4b49-ae19-984cb2722a8d",
        "cursor": {
          "ref": "e69cb619-8b81-40d4-9713-ab767aba6d43",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "043da19a-ad9d-424b-aeb8-87ed4e05a56b"
        },
        "item": {
          "id": "1d69fe23-e3d1-4b49-ae19-984cb2722a8d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4ae8afdf-3518-4870-85e9-72a6e4f977d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d456746-f560-4bfb-990b-de5e9fa6418e",
        "cursor": {
          "ref": "e8c3a995-5e27-4b3c-8a97-18866c41ac10",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "36240949-00a4-465f-ae0b-3a50659c88fa"
        },
        "item": {
          "id": "3d456746-f560-4bfb-990b-de5e9fa6418e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "48c2fc2c-e6da-4421-8bbc-de288103ec11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a4b73f-404e-447e-83db-ba5b1a7321ae",
        "cursor": {
          "ref": "678d2905-f71b-49b2-964c-559fde289b1b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "06063f40-c6f0-48c9-b269-85e8610faf35"
        },
        "item": {
          "id": "c0a4b73f-404e-447e-83db-ba5b1a7321ae",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "15e54286-0732-409a-9ac9-b9940f817205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e076ea-41b7-4a50-9ccc-109dea630619",
        "cursor": {
          "ref": "f0efda0a-ba5f-4926-8a52-dc375828d84c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a05d3744-6e58-42a0-a695-fced06f4af13"
        },
        "item": {
          "id": "60e076ea-41b7-4a50-9ccc-109dea630619",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1b6b840e-28e5-4a68-80ed-e3f6d795ef2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8b77a6-79d2-444a-a808-022ec9103df6",
        "cursor": {
          "ref": "5606ac13-8be6-4c42-bb6f-e2bfd9ba1d11",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a135832f-22f8-45a8-9609-45216dbfd422"
        },
        "item": {
          "id": "da8b77a6-79d2-444a-a808-022ec9103df6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5c4bb744-636d-4a8e-bd68-068977120d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b75c80a-0053-4a3b-9223-39dec984afdc",
        "cursor": {
          "ref": "084e06d1-f3a4-468e-b987-0460b8ca6905",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1509d5c3-d0f8-4d09-a454-3e46021551f8"
        },
        "item": {
          "id": "8b75c80a-0053-4a3b-9223-39dec984afdc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "36b00302-753b-43c8-bc82-8c82f3891eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b21e4c6-4c82-42b8-bb61-42463ba33f08",
        "cursor": {
          "ref": "168f1a65-da7c-4e40-9f02-cc5640f05103",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b038d3e4-d4d1-4cf8-9bb9-bbaab8c0c80d"
        },
        "item": {
          "id": "1b21e4c6-4c82-42b8-bb61-42463ba33f08",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d42915aa-7ab8-4cb2-99c8-3783506efc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eae8ec4-07ce-48b6-9eec-a54b12f1fda9",
        "cursor": {
          "ref": "67a2d630-6b65-43b1-ab75-38d5b80f480e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a6eaa1b0-fe52-4cf1-9c96-7f2b1e9c0578"
        },
        "item": {
          "id": "7eae8ec4-07ce-48b6-9eec-a54b12f1fda9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0aee69bc-414a-4b89-9c08-dfd91a537ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25851d7-a8c7-4070-a0f7-ffc16e0d58e3",
        "cursor": {
          "ref": "b8e517e0-d333-42f9-954e-383c300b72b4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c3db521f-8377-4a4d-ae50-e85f2632c3d1"
        },
        "item": {
          "id": "d25851d7-a8c7-4070-a0f7-ffc16e0d58e3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e0fbae4e-9f86-423f-85b1-a8216559f824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192d5295-825a-41e7-9592-720c6470a52c",
        "cursor": {
          "ref": "a4cacf28-83cd-49f9-affa-51f3b7b0e5b4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a00a5261-9597-426b-be0e-7c066d7baa4f"
        },
        "item": {
          "id": "192d5295-825a-41e7-9592-720c6470a52c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "960a627d-a29f-4399-ab25-263391b5c1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bf7138-3f1d-48c4-9005-e11891e69f9b",
        "cursor": {
          "ref": "ee53667b-126d-4701-bfd8-2430537a4e35",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7203cdfc-f85e-495a-8f51-de9e5be7c4e1"
        },
        "item": {
          "id": "a0bf7138-3f1d-48c4-9005-e11891e69f9b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f3f2f547-58da-4e52-8cd3-d5336b34cdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32d81b6-7443-476f-b782-f905097eab18",
        "cursor": {
          "ref": "df8b329b-a481-4368-bb16-1fe404b5802d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5bfdf744-3358-470b-a13a-d14238946761"
        },
        "item": {
          "id": "d32d81b6-7443-476f-b782-f905097eab18",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8268f917-402e-40a7-ab25-f8546799cbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937d1136-d5a7-452d-b82a-a8b4e5f65ea3",
        "cursor": {
          "ref": "cb6a1bf9-2b20-472f-b138-d7d2f3893945",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e6f8d8ef-589c-42ad-8610-0a1eeca9b533"
        },
        "item": {
          "id": "937d1136-d5a7-452d-b82a-a8b4e5f65ea3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c704ed5c-69cf-40d1-bfee-05706e5e9271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee38903-3448-4aee-8d9b-53027aae38d7",
        "cursor": {
          "ref": "41011820-907d-4853-8253-6047f72da02d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "788755c2-7464-4ddc-92a0-ce773b4904b0"
        },
        "item": {
          "id": "7ee38903-3448-4aee-8d9b-53027aae38d7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d119395e-b678-4dad-886e-1bd4639b5667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb25fea9-3fa5-47c1-9a2b-222bc8d733da",
        "cursor": {
          "ref": "c2bb67aa-f2f1-4f4c-84d3-bf610790f209",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a17b2bf6-906d-49d5-88cc-fd3402cfab47"
        },
        "item": {
          "id": "fb25fea9-3fa5-47c1-9a2b-222bc8d733da",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5240cda7-1a61-4dd3-9f40-41ac0846004d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbffce88-1400-4f65-9ad0-337cea6b4454",
        "cursor": {
          "ref": "281fb747-1fdb-45f1-bfe9-859d52b410a5",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9685b2ed-0b56-42f2-af88-9aef2b4af8b4"
        },
        "item": {
          "id": "fbffce88-1400-4f65-9ad0-337cea6b4454",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8d8cb2fa-7475-4a7f-ae20-22f080456098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe8dd30-64b5-453c-b994-455634b9d38e",
        "cursor": {
          "ref": "fc691274-944b-4fef-861a-850b3e90736a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d4ad2740-71a8-49b4-a7e8-e58d678369e5"
        },
        "item": {
          "id": "fbe8dd30-64b5-453c-b994-455634b9d38e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bc3e8703-5aea-4801-ba5e-26440a682120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edf652f-8b53-417f-a161-3466f6c2e28b",
        "cursor": {
          "ref": "7d062f64-2959-4594-aec2-fd87924e2f3c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "15981b2e-3537-4575-8fc9-fd7929fee751"
        },
        "item": {
          "id": "2edf652f-8b53-417f-a161-3466f6c2e28b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1094a4d1-cd97-486b-8b31-19c04aeeb50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06691e1-8eb8-4f85-8987-11767e0c0d8c",
        "cursor": {
          "ref": "1d2c1f32-19d1-4681-8fa4-26ec3fdd9bf3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fae03349-5cf4-4045-a57c-6de72d3e6db7"
        },
        "item": {
          "id": "a06691e1-8eb8-4f85-8987-11767e0c0d8c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "080b0b64-09bc-49e8-b03c-a8c22cda796b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ef22f5-2cba-4588-ad31-44604d5a21b8",
        "cursor": {
          "ref": "f2c81386-950f-4190-9c6b-3ede0415e4fd",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "42fcdf47-b915-4b4d-b553-2a1568efe2e9"
        },
        "item": {
          "id": "73ef22f5-2cba-4588-ad31-44604d5a21b8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e51ff41b-db70-44c4-b4f0-881a7e490b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597926f1-088a-4762-835e-9eaa356fc1c7",
        "cursor": {
          "ref": "c0770d5b-9b82-4077-a518-17e8ba08f82a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8dd3c82f-92d9-4ffa-8fb2-ebc4b6487421"
        },
        "item": {
          "id": "597926f1-088a-4762-835e-9eaa356fc1c7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d5eddf51-d7e5-4451-91a7-12266a30c552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f483796-a7ea-4758-8bbe-68cf52b0102d",
        "cursor": {
          "ref": "7dbf057d-d2ab-4538-a222-4f1c2f1fb9dc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "af182f38-0062-4f1a-955b-da89460e846e"
        },
        "item": {
          "id": "9f483796-a7ea-4758-8bbe-68cf52b0102d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e54d79a1-f87a-4593-8285-376b8d41b10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7077cd02-b25b-47c4-b163-27ec74624fcf",
        "cursor": {
          "ref": "99ab3561-6030-480b-b095-cb815d289ad0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0a4023d7-8510-4dd8-9144-6ae0b5ffd769"
        },
        "item": {
          "id": "7077cd02-b25b-47c4-b163-27ec74624fcf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "308a6361-8c38-4777-891b-bed20ecd2a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd0ece8-9a67-4ae4-b963-90de2ffc576b",
        "cursor": {
          "ref": "27a1656c-3134-4904-b00c-c224db6500ba",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b5e95a81-89c4-4fcc-85e4-7aa0b4f24daf"
        },
        "item": {
          "id": "dfd0ece8-9a67-4ae4-b963-90de2ffc576b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ceef4fe8-68e9-4311-9403-5ed7cedf52b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4bd683-ce21-4af7-bb82-5805e92675f9",
        "cursor": {
          "ref": "24257402-97d3-40de-b847-145117a95775",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5087eb5a-b1a2-4aae-b227-9f964ad0fd1f"
        },
        "item": {
          "id": "5a4bd683-ce21-4af7-bb82-5805e92675f9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9c1a4e30-7b07-4941-963b-23d8b620017d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da93f727-a0bf-42ae-84e2-aa5110daaa55",
        "cursor": {
          "ref": "a0c70162-b96d-43c0-80a3-9c778e6b5c8b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e9943a0d-c3cf-4751-b66e-4426cb67ecb2"
        },
        "item": {
          "id": "da93f727-a0bf-42ae-84e2-aa5110daaa55",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3d18bc7a-a7b2-4f21-b291-74548e7c8040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56937163-fa86-493a-b32a-2c0b29c14327",
        "cursor": {
          "ref": "471e94eb-8501-4e25-9375-345e4dd97c8d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3fbb8086-8f0f-4a82-8e33-7983f89ba17e"
        },
        "item": {
          "id": "56937163-fa86-493a-b32a-2c0b29c14327",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c641ad77-1d4a-447e-bb59-1355d83da70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce053a3b-dc69-499e-b153-c8522417faaa",
        "cursor": {
          "ref": "65590b35-6bee-4d79-b103-0616a0b7d1bb",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c1ba1267-ec5b-4398-8d25-f66c337f8463"
        },
        "item": {
          "id": "ce053a3b-dc69-499e-b153-c8522417faaa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "63b63a4b-cc99-4fdb-b3d5-8a84a8a730da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c03d75f-d87a-4479-a7ad-4de3413ed68d",
        "cursor": {
          "ref": "111a8ef8-d365-4e0c-9263-971e7bf4bf3e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "68ac8360-0aee-4aea-98f4-ad6a8268724b"
        },
        "item": {
          "id": "1c03d75f-d87a-4479-a7ad-4de3413ed68d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "03b91866-df27-4622-a696-f9b30702d0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004020e1-8a8f-4771-895e-57a1060acf58",
        "cursor": {
          "ref": "dba27c4c-7d9e-4306-b872-fb5ba89ff41d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7877bba5-baaf-4368-837a-d45d6174c8d3"
        },
        "item": {
          "id": "004020e1-8a8f-4771-895e-57a1060acf58",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "35a60855-e21a-41f3-b7ce-642ee5884192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac3f559-fd14-448b-bb5c-2a575f0f90c6",
        "cursor": {
          "ref": "4efd9c70-ec50-4819-8709-bd8e4a31220a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "00952a50-bbf1-460a-bd12-33d3bd33833e"
        },
        "item": {
          "id": "fac3f559-fd14-448b-bb5c-2a575f0f90c6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c2d2f244-e215-4f16-b680-fecead980fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a998da-edfd-4513-9cab-05f7491d8ee9",
        "cursor": {
          "ref": "2908cef8-d2eb-40c2-bc0b-deb2dc5a7780",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "40b53320-052c-4f43-8b39-3d864fdd636b"
        },
        "item": {
          "id": "01a998da-edfd-4513-9cab-05f7491d8ee9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6a4d93c3-7ee3-40f2-9027-86d0dbc618dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238b5c7b-1ca5-4f0c-b057-d82cce9e1385",
        "cursor": {
          "ref": "7c71698c-75ce-4068-836f-2f57cfe17f5d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6edea697-bddb-479c-9f2f-ebd50fb01c43"
        },
        "item": {
          "id": "238b5c7b-1ca5-4f0c-b057-d82cce9e1385",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8b623380-27a0-4baf-be0b-f67bfaf40fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc24b339-8f27-4c42-be4e-689b8ea9c14e",
        "cursor": {
          "ref": "2bfbd566-c487-4e58-bc03-722638e1e46e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2de79199-8802-4ed7-b268-18c23c25235e"
        },
        "item": {
          "id": "dc24b339-8f27-4c42-be4e-689b8ea9c14e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3c670eb8-57fd-4283-9662-7e51f4005522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4576b54d-20db-4328-b77d-a696f4a77aef",
        "cursor": {
          "ref": "f73e8bf8-a4a7-4a32-9693-5965b90fa445",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b75ce19b-5a22-4dbd-8c3e-bc629f7c6419"
        },
        "item": {
          "id": "4576b54d-20db-4328-b77d-a696f4a77aef",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b88afec5-ca31-48c3-9ca8-2e38c9421311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d507a3-d7c3-47b1-9a87-c0e3561d0f18",
        "cursor": {
          "ref": "1d7fd11d-1134-4642-8681-a9619e51e60b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "992d9271-4451-455d-a9a3-9e2f6a75cedd"
        },
        "item": {
          "id": "97d507a3-d7c3-47b1-9a87-c0e3561d0f18",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5fe36bd7-f1fd-4483-b2c0-09bbb8dc6e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad358c7-c9ca-4250-8f63-b7ab9e864018",
        "cursor": {
          "ref": "12b5d71c-097d-4b81-bcee-0acbde91bc71",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "78a781c2-f93f-47f6-a158-14ea4adb491e"
        },
        "item": {
          "id": "9ad358c7-c9ca-4250-8f63-b7ab9e864018",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "61ff6404-be1e-4013-b162-a72a63d82ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7b6155-03fc-49aa-a75c-d716d86925f7",
        "cursor": {
          "ref": "525a8b0c-7ac3-4fe0-bc8b-6b381e333c92",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e8d18b06-cc8c-4288-9c35-6512b58db3a7"
        },
        "item": {
          "id": "0e7b6155-03fc-49aa-a75c-d716d86925f7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0405fc89-eece-45e3-b0ad-3fa5a32660e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c04f45-a787-4260-af33-c3483d3367b8",
        "cursor": {
          "ref": "cd874e72-a1cd-4baa-9f93-d751288c8add",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8352f522-5cfc-4f8d-87ed-b3a9cae5559a"
        },
        "item": {
          "id": "37c04f45-a787-4260-af33-c3483d3367b8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a3db1bf0-dd44-4a34-8678-e1a42bf03d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd863b1-0c62-4667-ad95-d5675d9362c7",
        "cursor": {
          "ref": "04e0cfce-1f99-4575-8d01-82a5941ab046",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1b815ab2-1942-4d4f-9bc1-389c98937c90"
        },
        "item": {
          "id": "bbd863b1-0c62-4667-ad95-d5675d9362c7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3af1da8e-6926-41b9-a4d9-e8011dc03a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c918ca0-fd29-4c73-8544-4674e90dedee",
        "cursor": {
          "ref": "b46717f9-9ff7-43de-a9df-16233bf66358",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cc2aae40-b763-4b7c-a6e5-cc6830c6ed1b"
        },
        "item": {
          "id": "4c918ca0-fd29-4c73-8544-4674e90dedee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c9d096a7-0b8c-4f54-b096-1386aefeb1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530a3424-3579-491f-9c15-99d616128cb3",
        "cursor": {
          "ref": "23a34013-e55b-4bfa-8c47-fadb9f7b9bac",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fab46660-3576-44e9-a914-c0382cb5be98"
        },
        "item": {
          "id": "530a3424-3579-491f-9c15-99d616128cb3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "421cb5d0-da07-4b10-8bae-3fe4460d7294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a10103-eb68-462d-88ae-65364500ae46",
        "cursor": {
          "ref": "06c41f64-bdc0-4019-9f6a-56f60540954d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "82c83b76-64f1-4f2d-b35b-379817b3b55c"
        },
        "item": {
          "id": "03a10103-eb68-462d-88ae-65364500ae46",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "42c3a78d-3dca-4a05-b383-6bbc5d86a0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfb64b2-a389-4d2e-be74-c67d945d2814",
        "cursor": {
          "ref": "dc5e770d-e7d0-402a-8e06-849bf833c285",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "728a379b-0dab-4844-a5b3-885915a4ae3f"
        },
        "item": {
          "id": "ebfb64b2-a389-4d2e-be74-c67d945d2814",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cd0e0706-e6ee-449a-a3a4-9ee6fa613156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaaed0a-f8e4-49d4-9076-adb8119bb082",
        "cursor": {
          "ref": "91672a1e-a7fb-42d2-8fa4-59003d8eb96f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "15905794-cf50-48dd-9d27-786806152c75"
        },
        "item": {
          "id": "7eaaed0a-f8e4-49d4-9076-adb8119bb082",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8a77dc2b-425a-41ce-abde-a8e6deac6361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1c6702-5a36-4de5-b4b9-110589b68774",
        "cursor": {
          "ref": "e79a10ba-bf99-40d6-a5eb-747a488a97cf",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3d01d527-b607-42f7-b8a2-f4861d707b76"
        },
        "item": {
          "id": "0e1c6702-5a36-4de5-b4b9-110589b68774",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4faf8afe-ccac-4aa8-b9ce-bbde7f588fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1eab5c-dd2e-4a5f-bb5f-ba6942df7120",
        "cursor": {
          "ref": "4b49c1a4-51c4-4107-a0ed-c99965880103",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5055cf0c-6c22-4830-92d9-50108006374a"
        },
        "item": {
          "id": "9f1eab5c-dd2e-4a5f-bb5f-ba6942df7120",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "eee3dfcd-73b7-478a-ace1-854cd24eb810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "544e7d94-2f93-416f-b89f-e4744af02c2f",
        "cursor": {
          "ref": "aa79d56d-bbc4-40c6-9d85-aa7fe655f0bd",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "287830a3-62b8-4a1e-84d3-52ada0f53c7e"
        },
        "item": {
          "id": "544e7d94-2f93-416f-b89f-e4744af02c2f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "84173d52-55cb-4f2f-bf0f-8eba854d47df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "15a6f10d-d9c0-4f22-aebd-a39d4e1c96d1",
        "cursor": {
          "ref": "9f6f0e9c-97f0-4eae-8dc6-d47128623ac6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "44018f48-1945-4e2f-9108-93da3ce7c23c"
        },
        "item": {
          "id": "15a6f10d-d9c0-4f22-aebd-a39d4e1c96d1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "de7bc4b6-4e21-441b-8e0f-1275c9e3d32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2c90267a-7e25-473e-a9b4-cd8ec4a44969",
        "cursor": {
          "ref": "a079ba5e-1472-43c0-9535-c36b08293b44",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "47e8efc4-9c34-4a79-ba6e-2c6ef3d197ee"
        },
        "item": {
          "id": "2c90267a-7e25-473e-a9b4-cd8ec4a44969",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e4c954e5-16ef-415f-b5be-3f2b1f05231f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "03b81513-146f-4fcc-833a-96dd305fea68",
        "cursor": {
          "ref": "57f9d4e9-2a2b-4186-85fe-812ae7dfffd8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fe4de58a-0ba8-4c31-aa43-8770c9af9651"
        },
        "item": {
          "id": "03b81513-146f-4fcc-833a-96dd305fea68",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6d8e048c-d104-4a47-b181-1d632f158cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1d9a0f16-00ba-4bb5-89e7-43dcdbdf57c3",
        "cursor": {
          "ref": "5a484a0b-a84a-43a0-9ee9-b873cf1ddd29",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "29c1f5e7-d86e-4044-89b3-ae1f62d05a26"
        },
        "item": {
          "id": "1d9a0f16-00ba-4bb5-89e7-43dcdbdf57c3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "74c9d1a9-ece1-4f3d-a41b-b89d387ba17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f70ff435-6d19-4607-b382-6b32ccf16848",
        "cursor": {
          "ref": "80bbf6d2-5a75-45bd-9cec-499b3079ac6c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "de2b3b21-51dc-4047-b744-764014dc2114"
        },
        "item": {
          "id": "f70ff435-6d19-4607-b382-6b32ccf16848",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "88b3fb09-aeb1-4e0c-894d-2dad7721274d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8cb2c312-24a0-42f9-a6bc-026873da9958",
        "cursor": {
          "ref": "917d23a5-c224-4ca9-a2ad-25237d72c537",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ec2e6f23-33b0-446c-a8fb-f84647c81468"
        },
        "item": {
          "id": "8cb2c312-24a0-42f9-a6bc-026873da9958",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3c6d7d35-0728-4d6e-abb8-8305d76a5046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6886c4-e164-42ae-8485-2634505c9b65",
        "cursor": {
          "ref": "76dd68a6-7701-411d-bb10-62d06ff41363",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dcbbb11a-7680-4687-98cc-5b940067a5a2"
        },
        "item": {
          "id": "9d6886c4-e164-42ae-8485-2634505c9b65",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "972fd516-567a-4f7a-b68f-06a9aebaf80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ae2043-a8ed-4062-8b9e-6a95fd15cd73",
        "cursor": {
          "ref": "54da5e30-f617-41fd-906a-e6d45c85d393",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ebc0acf7-6b1e-4207-b214-bb5a922b66b7"
        },
        "item": {
          "id": "22ae2043-a8ed-4062-8b9e-6a95fd15cd73",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5e8271b3-6d48-41ea-a58b-ce8ea9b63557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1befd7-690d-454f-9232-15f366dbb977",
        "cursor": {
          "ref": "fd16f1ad-f01b-4540-a133-f79c04d6b628",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2142134f-6bc4-4ff3-b98e-d7548a1eabe8"
        },
        "item": {
          "id": "6c1befd7-690d-454f-9232-15f366dbb977",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "53da1bed-35d6-4510-9931-052438b65a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0ef8cb-0599-4b6b-879d-c95a8d7bbfcb",
        "cursor": {
          "ref": "e7770711-93a3-4a38-a105-4596cf62a021",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "13ed6529-26a4-49f7-ae89-22596a5207e1"
        },
        "item": {
          "id": "ef0ef8cb-0599-4b6b-879d-c95a8d7bbfcb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "59421158-a824-4a70-bc7e-36170ca3b236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119c692e-f059-4378-b56e-056ce0dbc4f0",
        "cursor": {
          "ref": "cc32ea19-749d-4c80-8448-d3595963390f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "324eba98-c947-47b9-b207-c21e342c626b"
        },
        "item": {
          "id": "119c692e-f059-4378-b56e-056ce0dbc4f0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "be13bb02-2dbe-47c3-817f-cf86dcf90a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7a5862-c31d-4319-8daa-a6aefcede50a",
        "cursor": {
          "ref": "9fe00ccd-8c3a-4cae-856e-bb991ba91991",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cb6f30cd-aa91-41ae-97a7-c9b945e5babb"
        },
        "item": {
          "id": "0c7a5862-c31d-4319-8daa-a6aefcede50a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f994ba0e-da7d-4d63-837d-65d818b6ae90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70151eee-0712-434c-ab26-36f5805fc5db",
        "cursor": {
          "ref": "45c9fe2d-b5a4-4554-b2fb-43166103fba3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e45f2edb-9f3b-4eff-90ac-3063c00fb734"
        },
        "item": {
          "id": "70151eee-0712-434c-ab26-36f5805fc5db",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1c5a169d-d709-48e2-bf84-ce510930d16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2a111f-77cd-475c-91f0-ba0671d7348e",
        "cursor": {
          "ref": "25c40331-2542-4677-acf1-fe1c21ecb617",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2b3f75a4-381b-4053-a3f6-f5c5e789b4ed"
        },
        "item": {
          "id": "7a2a111f-77cd-475c-91f0-ba0671d7348e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e1fba9d4-7719-49e5-8011-ee7bc5b7609c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18119cb-ad86-4580-99a1-f089f9e37640",
        "cursor": {
          "ref": "8013b0b8-9517-4f27-a936-debe7851b760",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f270ba09-6ff5-4677-a30d-7476420c61a6"
        },
        "item": {
          "id": "d18119cb-ad86-4580-99a1-f089f9e37640",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "330e4c89-a173-4447-8b56-6589fca9111e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412912f6-77d4-4c65-95e6-d8791a39a203",
        "cursor": {
          "ref": "43df5de3-f1eb-458e-b511-af0227ce86e4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a24f8821-46df-4105-833a-66c319db671c"
        },
        "item": {
          "id": "412912f6-77d4-4c65-95e6-d8791a39a203",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "37285a6d-69a7-4584-ac15-a82a95a03f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6c788a-da0f-419f-b0a3-28ad1b81b3f1",
        "cursor": {
          "ref": "e56ed450-2fdb-4efa-a923-8311ac2024d7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6b3d66ac-eacd-49e8-a487-f905d3fa2974"
        },
        "item": {
          "id": "7e6c788a-da0f-419f-b0a3-28ad1b81b3f1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0f52e1a4-71f3-4ba8-9df2-049095025cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be66c1ee-fc39-4f84-ae2c-31f480b68377",
        "cursor": {
          "ref": "0d93b03a-3173-4b2f-81b2-16e1b30288c1",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7b115965-f4d0-4083-acec-54a364a15cae"
        },
        "item": {
          "id": "be66c1ee-fc39-4f84-ae2c-31f480b68377",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "59f0d791-1ebf-443f-8cc7-7a34c28915f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c91770-4ecc-4c5b-9ba9-8930a6d081a4",
        "cursor": {
          "ref": "0dcfaba8-73ae-4bc9-911d-4e23409e42e1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4def0451-1564-466a-a3b2-3a8ad7c040d5"
        },
        "item": {
          "id": "c0c91770-4ecc-4c5b-9ba9-8930a6d081a4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d007ee9e-1410-48c7-99fd-ea078e3c4c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93099c0-a8a3-4d29-ab64-6dc03283c1fb",
        "cursor": {
          "ref": "50b1eff8-c3b2-408e-b098-9d930dde3b54",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1c12d4f2-5c49-4f2d-a685-2d9d92cf9ba4"
        },
        "item": {
          "id": "b93099c0-a8a3-4d29-ab64-6dc03283c1fb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7216f09c-5a54-48e0-9b3a-3106b4149f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396cb835-50d7-4069-9611-5c27f530cdfd",
        "cursor": {
          "ref": "1a770a0e-99bf-4afe-a6a2-e3fb3b4da144",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bf6dd1ed-6766-488b-b4a4-8707cf1887a6"
        },
        "item": {
          "id": "396cb835-50d7-4069-9611-5c27f530cdfd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c2fa557b-dd54-4cfb-80de-607e6d6ed8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54686766-b9e0-4cce-9f45-413424a1b117",
        "cursor": {
          "ref": "2067b303-0b76-4ced-b0be-f25f2ae96ac1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "28800664-bf17-42bc-8012-5d467a805a87"
        },
        "item": {
          "id": "54686766-b9e0-4cce-9f45-413424a1b117",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fbf850e3-b560-4dc4-af7f-b86454a799b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7556c6-3d71-48db-8917-174cb909be63",
        "cursor": {
          "ref": "8c504936-10d5-48e7-abfe-6898a283d6cf",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e6c27b1e-3107-4bb0-9c83-7ea457b36413"
        },
        "item": {
          "id": "8a7556c6-3d71-48db-8917-174cb909be63",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "606d17ae-6450-4db6-a1fc-e2f8596e9d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8979d0d8-7f44-42c4-953a-7cf652abd597",
        "cursor": {
          "ref": "ac61a1c5-7392-4e26-b5a8-295e87ec8325",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4167b591-a762-4f39-b746-1121d7486490"
        },
        "item": {
          "id": "8979d0d8-7f44-42c4-953a-7cf652abd597",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9c93151e-705a-41c4-882a-ad3c036f6368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c347ff9-cf22-43c8-ab16-e8fffc0d6470",
        "cursor": {
          "ref": "996ae9dc-925e-4196-98a4-5d0b5e3046a9",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bf486fca-8803-48f6-be9a-87b6a9368750"
        },
        "item": {
          "id": "2c347ff9-cf22-43c8-ab16-e8fffc0d6470",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "21b0c02d-82e0-4b7f-aafa-1d721155eaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c855c2-3469-4c64-aaab-43c3610d9408",
        "cursor": {
          "ref": "c50102ee-9dab-4489-85e0-04afe982475e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b58cb364-c9ef-4fda-8762-c954784dd0a5"
        },
        "item": {
          "id": "a7c855c2-3469-4c64-aaab-43c3610d9408",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4e9fa869-d591-465c-938b-76c9dcd5792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68cc6e6-83e0-40d9-ba23-992cb29926cf",
        "cursor": {
          "ref": "47c9c4e2-01f1-4c3c-8028-3495f203f166",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "05259cbc-b8d9-426e-800b-8f8263435f11"
        },
        "item": {
          "id": "c68cc6e6-83e0-40d9-ba23-992cb29926cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "467ff689-4e61-424c-8e11-0ddaea1b0c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7a518d-f2a4-4a19-adaa-b93833a10cb6",
        "cursor": {
          "ref": "c7c07deb-ba5e-4815-9098-a7fff8a0acb4",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "32ea43f8-2524-4fe2-8491-de95eba6c05a"
        },
        "item": {
          "id": "7b7a518d-f2a4-4a19-adaa-b93833a10cb6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0236083b-44ad-4a9e-88b9-0b7e8e1f7ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7ed0d9-7c75-481b-b963-e4593f8b5581",
        "cursor": {
          "ref": "c1d19bad-b41d-4bd9-ab44-e4f226a8c137",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4ffbf8ad-7843-4c52-99f2-e304c4627124"
        },
        "item": {
          "id": "bd7ed0d9-7c75-481b-b963-e4593f8b5581",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5027fb9a-97ab-4131-8dec-8791827df5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a52e83-2fae-4693-924d-2bc801de5ef5",
        "cursor": {
          "ref": "df02dfa7-962a-473a-9078-eb7029bcbfeb",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b9c6c72c-772e-428f-93bd-a216f76ea08d"
        },
        "item": {
          "id": "94a52e83-2fae-4693-924d-2bc801de5ef5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "82f53a41-fb4d-4991-a8fd-ff1f337db710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2003131c-6a94-4aac-9b56-721e1b799ff0",
        "cursor": {
          "ref": "2dc02858-4ea6-41e2-832a-42deb5dd69f3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f873b3a8-1c2e-4fe6-9da1-4c81c62fd6fe"
        },
        "item": {
          "id": "2003131c-6a94-4aac-9b56-721e1b799ff0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2fa90d9a-eadd-46c7-98eb-4d1dc429d926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcd491f-b97c-4da4-acd9-b99d9dc4e4a2",
        "cursor": {
          "ref": "8f83a863-19cc-49ab-b8cf-99e7864f5495",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "45b5a4d9-e04d-4c30-8896-2cf092ce18e6"
        },
        "item": {
          "id": "fbcd491f-b97c-4da4-acd9-b99d9dc4e4a2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f333ce70-ddbf-443d-ad0d-735497514835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328c8ead-205a-4188-95f4-49666d8a4dfb",
        "cursor": {
          "ref": "8b0bfda2-d4d5-4727-8401-2a2de324dd73",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0f60d4cf-3fa2-4d8e-99ef-490c9e31f329"
        },
        "item": {
          "id": "328c8ead-205a-4188-95f4-49666d8a4dfb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "371779ba-8ad8-480c-8d4e-08da97243861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9d5437-7a1c-40f8-9b98-60e3e5ece8fe",
        "cursor": {
          "ref": "cea9634c-3a9e-4326-b63c-21d0de04aa86",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d721b8b9-84e6-4e4d-aa05-45a33ffaaa2a"
        },
        "item": {
          "id": "0b9d5437-7a1c-40f8-9b98-60e3e5ece8fe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "252c34c0-a148-4ce1-8d6f-a503d11f5480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c967c5-baf4-4fae-9980-ad3500f408d8",
        "cursor": {
          "ref": "495fa977-bbcd-479e-acf9-5d0decef1a1a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "55b50bd7-c534-45bb-ab99-2e778d5d77b9"
        },
        "item": {
          "id": "04c967c5-baf4-4fae-9980-ad3500f408d8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7bfa86d5-ac20-41ea-8bf2-9c3e1ab02230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e131db-ac31-4fa0-805a-9e10dd82aab9",
        "cursor": {
          "ref": "bcc89025-bd08-4d9b-9146-1c7d58443873",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "16c331e1-e2c3-4f7f-a50b-85cf735ce3bd"
        },
        "item": {
          "id": "68e131db-ac31-4fa0-805a-9e10dd82aab9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "96e98001-0650-46ac-80ef-a89000fc5e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35a890f-6670-4ee6-84d9-caa3a9f65862",
        "cursor": {
          "ref": "84c88bbd-54da-4e73-92a6-bcf2e441f582",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "89474f1a-6999-4586-a172-1ee8a47e89ad"
        },
        "item": {
          "id": "e35a890f-6670-4ee6-84d9-caa3a9f65862",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4c4f2600-31fd-40f7-87ca-3e09ffafbff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a711c52a-15e3-4706-9e1b-6e6785a7a2a8",
        "cursor": {
          "ref": "53a9ff2a-c41a-4da1-b3a3-e06e1a8eab72",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "27542196-5bf7-4cdf-95e3-7e7b6cc30d40"
        },
        "item": {
          "id": "a711c52a-15e3-4706-9e1b-6e6785a7a2a8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3af9bbe2-9fac-42fb-9ece-686b892a50c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa30bcf-097d-4409-a900-f4d1e0dd13c8",
        "cursor": {
          "ref": "ff00a233-a162-4b7e-889e-fce73174764a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7ce3e395-4769-47cf-8523-0750fdbeb1ff"
        },
        "item": {
          "id": "baa30bcf-097d-4409-a900-f4d1e0dd13c8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ffa1c8bc-5678-4bb7-9f3a-6fa6208a382b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14977e9c-b246-4ab1-b16f-a38c49d82519",
        "cursor": {
          "ref": "c13553eb-6b41-451e-9bcf-b8acf56f9b9f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "db358a7c-04ce-4fbd-a36f-4688b0ad7c31"
        },
        "item": {
          "id": "14977e9c-b246-4ab1-b16f-a38c49d82519",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9977b3ba-65cb-4708-80fd-36a04f7ce702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878572fe-d4b1-4c56-9435-a44fb98a7369",
        "cursor": {
          "ref": "506569af-a160-4e55-a95c-929e3098a422",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "52519ae4-6851-4c31-8129-2f759a7f1b53"
        },
        "item": {
          "id": "878572fe-d4b1-4c56-9435-a44fb98a7369",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e265c2fa-3b6e-4679-97ab-947e6477319d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5fc9fd-09f2-4975-baeb-25db6fb6f1c9",
        "cursor": {
          "ref": "17ce737e-5d94-4e04-8d25-ffb2ad2bc6af",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b30cf055-dbf6-4f16-a9aa-2541f655e483"
        },
        "item": {
          "id": "3b5fc9fd-09f2-4975-baeb-25db6fb6f1c9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9f2a35ce-e46f-4483-9c1e-c7b3bc90dccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c96a056-31cf-4d99-b37a-7ebda0067d38",
        "cursor": {
          "ref": "470899d6-b213-44e2-906f-ada133fb1ff7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "041c5728-9475-40be-ba88-6b64184beeb1"
        },
        "item": {
          "id": "5c96a056-31cf-4d99-b37a-7ebda0067d38",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a97954a2-d1db-4e11-b411-2fe2947d69cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed78044-d192-41dc-89da-488eebc75f5d",
        "cursor": {
          "ref": "2336751a-396f-41ec-bb73-33cf15656286",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "124818c3-e09c-4891-a615-97314ff854b9"
        },
        "item": {
          "id": "2ed78044-d192-41dc-89da-488eebc75f5d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "62a31786-0cde-41e1-86f6-68332f13fc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4872f1-8689-4d70-bd40-46664a5714a1",
        "cursor": {
          "ref": "eb844a11-da49-4dbe-9936-dbdc3cc3e353",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "33c3e2f1-56cc-4383-ab62-a7688fd634ef"
        },
        "item": {
          "id": "2d4872f1-8689-4d70-bd40-46664a5714a1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "51441618-4ae6-40b0-9682-45cbe960b567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415bcdcd-3ed1-494c-a684-b59da33a6bb3",
        "cursor": {
          "ref": "c972d3d3-0071-47ea-be4b-d6dcfc8ded07",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "81886609-1cc6-4f30-85f1-46489b3b1684"
        },
        "item": {
          "id": "415bcdcd-3ed1-494c-a684-b59da33a6bb3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "88af4085-460a-40ac-ab40-502c3b67d384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41eae29a-aac9-4034-8aad-bd9a805dbf0f",
        "cursor": {
          "ref": "982dcf94-301c-4c73-b2ac-b7a60ca55e11",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "486022e5-c2e9-4fd3-98c6-0eda6b43920e"
        },
        "item": {
          "id": "41eae29a-aac9-4034-8aad-bd9a805dbf0f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "97157c3f-5f97-43e8-af5a-0f9d301e4bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbef624a-e230-457b-a242-94230eac7637",
        "cursor": {
          "ref": "d02f273b-8e85-4f47-9212-b58c7eadfdf1",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "abcecc04-5a27-41d6-a839-bc3e193e2e49"
        },
        "item": {
          "id": "bbef624a-e230-457b-a242-94230eac7637",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "db5a2428-67d1-49fa-b09e-21cc4ba78b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0213282f-e9d7-4d39-b5cd-2f93ed915c2e",
        "cursor": {
          "ref": "5e3ef28d-6e74-46b4-8b10-10d1f300b972",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fecdbdb6-32da-4e48-bf1c-e4f3394c7370"
        },
        "item": {
          "id": "0213282f-e9d7-4d39-b5cd-2f93ed915c2e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3dcbdb36-c788-4e1a-bdca-09d97e50648e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e66e53f-7f8a-4aa5-91aa-b1a794b17bae",
        "cursor": {
          "ref": "1fdafd3a-9a09-4a14-834e-82a14339663b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c6cdfd1a-4857-46f7-8f82-c531f1d9d5d8"
        },
        "item": {
          "id": "0e66e53f-7f8a-4aa5-91aa-b1a794b17bae",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9e9e32d9-8e5a-4f89-9022-a3c44152938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d95c02-2bfa-4e6a-9d30-1417442891c3",
        "cursor": {
          "ref": "549b22ef-74c1-4c2d-9c30-55380c257b24",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fc1e0b39-dbad-46aa-ae5f-29beb50b3279"
        },
        "item": {
          "id": "d3d95c02-2bfa-4e6a-9d30-1417442891c3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "698064c8-5235-4266-aa7a-777b1e9ec350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07697dd-7e5d-49ab-adfd-347d3164e43d",
        "cursor": {
          "ref": "f3705a74-29d5-4d08-afb0-70d53ef9ff05",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a4158a4f-2878-484e-b8a7-2f68a758a24d"
        },
        "item": {
          "id": "d07697dd-7e5d-49ab-adfd-347d3164e43d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ec5f44da-198a-4a89-8d5f-ba77c942bc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef36c69-fafa-40f4-a16a-d650ebca95ad",
        "cursor": {
          "ref": "668aafc8-3621-455d-9b5d-9ee79d3ba0af",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4b8d28c9-a5bf-4552-b0cd-0789b22bf892"
        },
        "item": {
          "id": "eef36c69-fafa-40f4-a16a-d650ebca95ad",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "202f82a8-3881-41fc-9743-9255de9b06dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c4eb15-99b0-4fb4-aed5-ffe420d3026e",
        "cursor": {
          "ref": "b688f883-60ea-4ae4-94aa-720ab2a81165",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b07c484a-27a8-46ee-aeb2-24f4ecf49eaa"
        },
        "item": {
          "id": "92c4eb15-99b0-4fb4-aed5-ffe420d3026e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4d06cc5d-b9f3-45d5-a8a3-f3227a11c46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3e121c-621f-4ffa-830b-2ed09990e71a",
        "cursor": {
          "ref": "0f263966-1439-4d9c-859c-8100b07d480d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cba395d5-0e2b-4db9-88e7-b6d594cc9f38"
        },
        "item": {
          "id": "7c3e121c-621f-4ffa-830b-2ed09990e71a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "376021e3-7ba3-41bd-96ae-5c804837624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e91ff4a-8e8b-472c-b4df-9d804c7291f8",
        "cursor": {
          "ref": "98615649-2ae5-48c1-aecc-133d1445f6b6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1a42866e-2f87-4913-8d16-1a3558bea5fb"
        },
        "item": {
          "id": "4e91ff4a-8e8b-472c-b4df-9d804c7291f8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9cc0d861-1e42-462e-91bb-2c4c7ffbf732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb24639-3702-4725-9819-bd01af4ca8ab",
        "cursor": {
          "ref": "1aaffcae-5bc5-486c-9b29-956fc7ed8c86",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b9b670ad-1b09-47e4-864c-3a6afb903e32"
        },
        "item": {
          "id": "efb24639-3702-4725-9819-bd01af4ca8ab",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "43e6fafe-6fac-4fe4-8a0f-93d9b3bb02f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0d8204-b701-4c2f-af8d-0a9af8ca7bea",
        "cursor": {
          "ref": "dcc15a01-7f00-42b8-8f21-1819c1584239",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7348e81a-6f0d-457e-bc3d-f83b7a30389b"
        },
        "item": {
          "id": "8b0d8204-b701-4c2f-af8d-0a9af8ca7bea",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ac01fd50-df9a-4fb0-9168-27043c1e7394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59db71e-9f7c-466d-a5f6-f375ad8ee8fe",
        "cursor": {
          "ref": "81636924-851d-476f-b13f-0c4123bc66cf",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "09d9391e-fcc3-41c6-8b25-3126f52b1daf"
        },
        "item": {
          "id": "b59db71e-9f7c-466d-a5f6-f375ad8ee8fe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5bd7ac6f-58a4-485b-a0f3-98e4d129cd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4e4757-c488-41f7-a58c-34bd48027218",
        "cursor": {
          "ref": "5ca3c68e-3309-4446-892b-5b4fa905869d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "74a82443-7c49-4035-a026-3623c0d6dada"
        },
        "item": {
          "id": "3a4e4757-c488-41f7-a58c-34bd48027218",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a9284f9f-a702-46c5-b9d6-c2fb2f9e0c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0958a08f-e6a6-4268-8af4-41ae1048cc38",
        "cursor": {
          "ref": "84ab25ba-e997-4cc4-a3f2-ad31a7a2c356",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b93bd5e0-eeab-47a4-ae76-6d6a8254c5d2"
        },
        "item": {
          "id": "0958a08f-e6a6-4268-8af4-41ae1048cc38",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f408b5d2-45fa-44f3-924d-67da5a95f018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83cb442-d8ab-4742-84a9-3d7c086cb1af",
        "cursor": {
          "ref": "29b51d15-0f7e-4f7b-8065-2023544b8d22",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "80650aed-eeaf-4ddd-a8db-cbe70aecd7fe"
        },
        "item": {
          "id": "c83cb442-d8ab-4742-84a9-3d7c086cb1af",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6c3741b0-ab7d-4c0e-a4c7-415e6beb4f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f3c55b-aa26-453d-82c9-d5e8d455c99e",
        "cursor": {
          "ref": "6dd2a099-922f-45b4-b271-ae25b7547d8a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "40de6093-b340-4c3a-bfc8-d5f646b2ccdd"
        },
        "item": {
          "id": "a1f3c55b-aa26-453d-82c9-d5e8d455c99e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "02be4a76-1c41-44e5-81f5-db4c773ed066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82b6fb8-d108-48a0-b40c-86cbedba0720",
        "cursor": {
          "ref": "9961e162-f615-4cc5-98c6-596d73402a24",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8a310293-1d69-4070-9764-77cf32dfdbd1"
        },
        "item": {
          "id": "e82b6fb8-d108-48a0-b40c-86cbedba0720",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a42b4d8b-d631-4d6a-9af2-fc289e42b057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b16e69-e52e-4ec5-96fb-214d1c8fffa7",
        "cursor": {
          "ref": "a3afde78-a31e-41fc-b80c-40e8d0179fb6",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "52f99530-17ed-49ea-9d24-16745002307c"
        },
        "item": {
          "id": "f7b16e69-e52e-4ec5-96fb-214d1c8fffa7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d14fea6b-eb76-45dd-9a3d-19ada3183fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54772de-2a4c-4a0a-bc42-bd18f26c02ff",
        "cursor": {
          "ref": "3e037b65-7ac6-443a-8be1-10efa614972a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3a20b0bd-e82f-48af-8b61-8a4d6d29ff72"
        },
        "item": {
          "id": "a54772de-2a4c-4a0a-bc42-bd18f26c02ff",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "47932ad8-6851-4f41-9087-8f2d6cf7d1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e6ed19-67ca-4909-a4b5-b7667da8c80d",
        "cursor": {
          "ref": "01488bbd-f441-4a8b-9823-fecc6842439d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f65afa23-8b43-4b76-bed4-ea4753443a33"
        },
        "item": {
          "id": "a5e6ed19-67ca-4909-a4b5-b7667da8c80d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0d73ba3a-cf57-46a5-b95f-a942e3d653ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0d00b6-ef43-4a91-b7e6-5807474680a8",
        "cursor": {
          "ref": "bc2f42d9-bdda-4873-b4c1-fc56d4edb1db",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "deeb231e-7d08-4965-942d-d600b1e26f22"
        },
        "item": {
          "id": "ad0d00b6-ef43-4a91-b7e6-5807474680a8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9b5634f8-7c1c-4e21-911d-91612ef506a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd173d0-55b0-415c-b344-7ee77cb155c5",
        "cursor": {
          "ref": "c708e23d-76b8-41ce-9732-afb488206012",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "93fa4ae3-9845-4ceb-8374-4fa6dc8f3726"
        },
        "item": {
          "id": "fbd173d0-55b0-415c-b344-7ee77cb155c5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "600c5778-4fe1-4bf7-bb04-18c89dac95bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5868099-455b-4716-95c7-786a3dc8f976",
        "cursor": {
          "ref": "5704c90d-d711-4e59-85d2-008487c6df8d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7d0e5390-bab8-4a8e-a6bb-8e9fcc098d71"
        },
        "item": {
          "id": "c5868099-455b-4716-95c7-786a3dc8f976",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "edb0f0f6-8cdc-407d-b993-e02a83337c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26a037b-8152-4d0f-819d-fa6423fa49e0",
        "cursor": {
          "ref": "325e5d07-18cb-461e-9eb7-2d1e914a79fb",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "689f718f-5ad7-46bb-95fe-cf9504417e6f"
        },
        "item": {
          "id": "a26a037b-8152-4d0f-819d-fa6423fa49e0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9b0db136-59d5-451f-9f3b-a9c3ef158fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb74347-904f-44bc-855a-f3c7940284a0",
        "cursor": {
          "ref": "3589e8be-5c93-4502-a42e-e4bb70811907",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "28b438ed-d475-43b5-97a7-702289d7912c"
        },
        "item": {
          "id": "edb74347-904f-44bc-855a-f3c7940284a0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "efb9003f-fbe7-483e-80c4-a726589baaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeccb0c-06a5-432a-b4f3-bd8bb8add7ac",
        "cursor": {
          "ref": "24a6b258-e56b-489f-85a5-e01b57fa999e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "890b2371-84d4-42ad-bf31-51f78e9e1f74"
        },
        "item": {
          "id": "4aeccb0c-06a5-432a-b4f3-bd8bb8add7ac",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1fed8ea4-7022-4a13-82e8-7207e62c62fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc341dd-ff53-46b7-950c-380cb76d3516",
        "cursor": {
          "ref": "cf657b3c-fbc1-4a15-a0d4-6b4c16ae4207",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4fdac8bb-23df-4e73-9c18-c1df8cd9a191"
        },
        "item": {
          "id": "1cc341dd-ff53-46b7-950c-380cb76d3516",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e5e64254-8a93-434d-8486-542747accef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43e946d-eb8a-43af-9ce5-8ba6c19580be",
        "cursor": {
          "ref": "be8a81fc-341f-4857-a2ef-1489ea1ec21b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "206210fb-5f06-410b-aa2f-6bfc338c66b0"
        },
        "item": {
          "id": "b43e946d-eb8a-43af-9ce5-8ba6c19580be",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2643718d-68ab-42ba-b0f3-3e2cd30bcd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf2f005-1f63-457c-9337-1c8c058acdcc",
        "cursor": {
          "ref": "91c76e11-37ed-4389-b679-2c5935fafa20",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5566cabc-c5c6-4d09-92fe-c447c98909bb"
        },
        "item": {
          "id": "bbf2f005-1f63-457c-9337-1c8c058acdcc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a06fd81a-b63a-40bc-8c4c-fc5439b59c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ebef97-4aca-440a-b4a8-e9687a81126e",
        "cursor": {
          "ref": "62993d9c-38c2-48d0-855e-08329f1d2354",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6224b719-f5ba-41be-8c16-9bd988c61aac"
        },
        "item": {
          "id": "c7ebef97-4aca-440a-b4a8-e9687a81126e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4985a400-bcfd-46e6-9c2d-e9ce695d2165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd42e8bb-38f5-49c5-92de-5ea00845ae7e",
        "cursor": {
          "ref": "6f5732a1-3c39-47ab-a5fe-fde978d39927",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "936c71d7-929b-4bde-a781-d28fb6126d28"
        },
        "item": {
          "id": "bd42e8bb-38f5-49c5-92de-5ea00845ae7e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "361a6317-aa8b-4327-8c02-8a7c108e43c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642749fd-b550-495d-94bc-c426e98d5d87",
        "cursor": {
          "ref": "047f9715-2044-4fc4-b019-affa5f17fd9a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8766688b-49b7-463e-8f34-caed0192b439"
        },
        "item": {
          "id": "642749fd-b550-495d-94bc-c426e98d5d87",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "174b21dc-e5c7-477a-be1a-985c098b202e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1fcefb-7b73-4103-80f5-fc9d0b856ea9",
        "cursor": {
          "ref": "1db585ac-738f-4ea3-b87c-c5241a07f475",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cfd0df02-378c-408c-b793-a4dc2a1b26f1"
        },
        "item": {
          "id": "ec1fcefb-7b73-4103-80f5-fc9d0b856ea9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "544b3cf3-6c68-42f2-80d6-c427ed28cdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a69b8d-2e8d-48e3-b59a-af3e6e9b9c11",
        "cursor": {
          "ref": "d144d8d7-bfeb-4e7c-a90e-09455a2059f3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e367e973-fbcc-434d-8d17-0dac89e558ee"
        },
        "item": {
          "id": "23a69b8d-2e8d-48e3-b59a-af3e6e9b9c11",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cc2744a6-ede4-44bd-9759-d23f3d749fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fb5105-72c9-4453-a9aa-588cf6918ca4",
        "cursor": {
          "ref": "faa6293f-85d7-47f0-8c33-4b212098f996",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "14a36df7-57c7-408c-a985-22ad899b8f58"
        },
        "item": {
          "id": "a4fb5105-72c9-4453-a9aa-588cf6918ca4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c5515ba9-82d4-4359-8a1e-ab776261c621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dfb86f-e593-4dad-85bd-45dcd5a37ce8",
        "cursor": {
          "ref": "8aa96e4d-0eda-43d1-bb28-94ebdcbe3f68",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7866d3d8-d1e0-4dd8-aed6-4e9f1ef6ad21"
        },
        "item": {
          "id": "a2dfb86f-e593-4dad-85bd-45dcd5a37ce8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "208e15e3-bc16-4f85-92fa-2533585dc0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236b408b-1188-4f73-bdd6-3e6fd85f9970",
        "cursor": {
          "ref": "0378c308-49e6-4939-8d4a-97be0dba3ce5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f5092e4d-7ef6-4bde-9e80-dab898f2167b"
        },
        "item": {
          "id": "236b408b-1188-4f73-bdd6-3e6fd85f9970",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d3312afc-1b91-48d2-9a88-fa884694e66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a37b5a-4622-4bc8-adf2-584f4c13095f",
        "cursor": {
          "ref": "30127415-a643-4113-a7d3-32b63ba10891",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ae629032-134d-4ea2-a141-281d7aca6d40"
        },
        "item": {
          "id": "a3a37b5a-4622-4bc8-adf2-584f4c13095f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b9c5d1e6-ae43-4578-837d-1040ae24396d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc112fe-c95c-44e9-8bc3-573b4f0b161f",
        "cursor": {
          "ref": "e1ba818e-15fd-4655-971e-186fd14ec2c5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6fa247ae-21c2-4774-b3ab-93de18008950"
        },
        "item": {
          "id": "7cc112fe-c95c-44e9-8bc3-573b4f0b161f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bd44df04-cbbd-49fb-b887-55c86296bc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad73262-3846-471c-a137-f4e0d9063915",
        "cursor": {
          "ref": "1b074a18-8e0c-414c-a117-d150bc480fe4",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "aad6c595-1c28-4303-9dd5-5adab15f685f"
        },
        "item": {
          "id": "8ad73262-3846-471c-a137-f4e0d9063915",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a19e35a2-3d2c-431b-bcf5-c62c83eac175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da780e34-c716-4ccd-83d1-2515fabfd4bf",
        "cursor": {
          "ref": "bd9a854e-78a2-474d-9ecc-368944bdaf56",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0925f46c-7d08-4402-a317-cfd36e67583e"
        },
        "item": {
          "id": "da780e34-c716-4ccd-83d1-2515fabfd4bf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "982fe293-19b6-4161-a186-cf43072568a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e9c0b0-5eb2-49fa-a692-3f2418ca6e79",
        "cursor": {
          "ref": "c24f364c-8632-402b-8cd2-252b2c742928",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "05547547-5d35-4e29-bd70-534fde1edb0a"
        },
        "item": {
          "id": "26e9c0b0-5eb2-49fa-a692-3f2418ca6e79",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "08a49895-3575-41a6-a168-d1912891c9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034c9a66-c14a-40c7-8967-25b400319478",
        "cursor": {
          "ref": "07079633-8644-4a88-a6ea-c29ba96b4e10",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "da11c617-ba41-4c2d-b23b-d4f1fd2cf13a"
        },
        "item": {
          "id": "034c9a66-c14a-40c7-8967-25b400319478",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a413f320-62e3-4818-adc7-8f167dfbae20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2773a5-0cba-468c-8016-0fe19bdf9a06",
        "cursor": {
          "ref": "5dc50a2b-63f1-45ae-bd5a-64c7a673fd82",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d9c61625-3cba-4a20-87d7-0012101559f7"
        },
        "item": {
          "id": "bc2773a5-0cba-468c-8016-0fe19bdf9a06",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "235df78c-8c81-4bc0-8595-3e358419f8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35342843-3c77-41b3-a396-63cb2d81f3ca",
        "cursor": {
          "ref": "16aade7e-84d5-4149-bc71-e5c737c37605",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c7088040-c361-4fa4-afad-d588fedd7269"
        },
        "item": {
          "id": "35342843-3c77-41b3-a396-63cb2d81f3ca",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7d891e99-d213-4389-85d3-4d088c96c4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc815a66-2777-4ede-9354-69a60b6f2e34",
        "cursor": {
          "ref": "c6ee653e-446f-4854-95de-340d25eb0e62",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "279eee01-bf0f-4230-8568-894966280119"
        },
        "item": {
          "id": "cc815a66-2777-4ede-9354-69a60b6f2e34",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9ebe1646-1bde-45fa-b967-bd4976ed8bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b243b1e-5d6c-4799-beb8-e7e3d2ecf6c5",
        "cursor": {
          "ref": "5af01cdb-1868-40c1-8a46-95303a058d74",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3ce69e7b-003b-4ca4-a506-9184d8f2207c"
        },
        "item": {
          "id": "1b243b1e-5d6c-4799-beb8-e7e3d2ecf6c5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b1b7dbc5-fed5-48cd-8a46-571e6a31f1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7dc076-14cd-489d-a4af-fa7e3841fc8d",
        "cursor": {
          "ref": "f014669d-3a12-4d1d-a8db-c3522956b73e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "df1f91f1-751c-406a-a0a1-213bef4f74a5"
        },
        "item": {
          "id": "5c7dc076-14cd-489d-a4af-fa7e3841fc8d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "11dfbc4f-cbef-4b77-be7b-df0042406843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe7c7e0-cc46-4bf0-9bd8-d17daef4feed",
        "cursor": {
          "ref": "4f2c875b-4e1f-4c01-9a17-857fc018f416",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "20c06c50-d9b6-4d9d-8643-be837f5d8b9b"
        },
        "item": {
          "id": "4fe7c7e0-cc46-4bf0-9bd8-d17daef4feed",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ea1c79a6-2e3f-4593-94fc-dab24148a6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ae99f6-54be-41b5-aa59-4c7b5a510ca7",
        "cursor": {
          "ref": "ec52b8b8-1bf8-4f0d-b906-7bf72c33b20e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1231c4ee-2565-4dac-9392-c62c32a5fdb5"
        },
        "item": {
          "id": "30ae99f6-54be-41b5-aa59-4c7b5a510ca7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5f6d5a73-cdcf-415b-8482-5494fcbb5b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a471c49-40ac-406a-a90f-a7580fdc16bc",
        "cursor": {
          "ref": "fe97d32b-337b-40af-ad3f-cc9a638c360e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "72bc17ec-5473-4ab3-b191-16b58f41e63e"
        },
        "item": {
          "id": "2a471c49-40ac-406a-a90f-a7580fdc16bc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5d43cb82-5980-417e-9cab-8fc905e61721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca09399-55fb-4333-be33-dfc6884ac838",
        "cursor": {
          "ref": "1f35ee48-62d0-448c-aa17-ab54fa7eff00",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "61471d76-c1da-458e-9561-b904e1b5606f"
        },
        "item": {
          "id": "dca09399-55fb-4333-be33-dfc6884ac838",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e91f58a5-b61e-4be4-bd57-110f85fb36f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd09d92-a4dc-4781-bcc6-85c677cc4f97",
        "cursor": {
          "ref": "986d7723-fb2c-4f14-9310-b9805b12339c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cb7f9b66-c327-42f8-ad2b-4fec5f023980"
        },
        "item": {
          "id": "edd09d92-a4dc-4781-bcc6-85c677cc4f97",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ee77aa06-b9fd-43ab-be42-249db838782f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a58e13a-4bd5-4241-9d91-cf8cdc8aa3c0",
        "cursor": {
          "ref": "427c3777-3786-44c7-9202-97cb39257a96",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6b43d0e5-5f4f-4ae5-b872-4aa39754f525"
        },
        "item": {
          "id": "1a58e13a-4bd5-4241-9d91-cf8cdc8aa3c0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6cf65081-4870-4414-9ad3-68c3ebd69d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a504262-366d-44bf-9c80-b7c3dde10728",
        "cursor": {
          "ref": "0391c960-8500-4203-bab7-9ccbd6df57b0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dfe4f38e-c2ac-4c81-8c15-4bf1333a70ff"
        },
        "item": {
          "id": "4a504262-366d-44bf-9c80-b7c3dde10728",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a1fa1d99-25c7-43e0-afc5-28f314f83d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af7ccf3-c7ea-4430-b795-99bcd1d4dd36",
        "cursor": {
          "ref": "61543bfd-47fb-4d3c-9169-87ebb4015c7b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bf468ea3-2d4a-49df-a29a-d340ede932b3"
        },
        "item": {
          "id": "7af7ccf3-c7ea-4430-b795-99bcd1d4dd36",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2f481194-631a-47cb-a2cb-0906a44364a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da6050d-d4a0-4264-9a3e-f5f124c80bc9",
        "cursor": {
          "ref": "04bc231c-90a1-4e99-8f81-bfd4b315ceef",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b0047f46-5719-4595-bc34-2fd0e1b05aa0"
        },
        "item": {
          "id": "9da6050d-d4a0-4264-9a3e-f5f124c80bc9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8dc8d701-c338-45d1-ab87-898624c64e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e3bb6c-1e40-46dd-b007-c43317d039ef",
        "cursor": {
          "ref": "e9f1e6c6-cab3-4545-921c-2a85fa6d65bf",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b06f24cd-c6e0-4f17-b293-60b4a5c29110"
        },
        "item": {
          "id": "47e3bb6c-1e40-46dd-b007-c43317d039ef",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2894c501-2bd9-4b38-96c7-69acf0a1b5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fc20ff-9b55-4ad5-995a-77bc87168eb9",
        "cursor": {
          "ref": "ce2fea68-d6c0-4517-a90d-7cbb36106bb8",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5539a306-f0b5-4e06-8547-1bd6f71847a5"
        },
        "item": {
          "id": "75fc20ff-9b55-4ad5-995a-77bc87168eb9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c1b54b38-c436-4f90-9a17-57462c0fd63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41d8097-618a-417f-8960-c930292d3fa1",
        "cursor": {
          "ref": "0e3b49d9-d404-4a38-8180-72e7ad7e3ce6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3360cc37-d8c2-4fcc-9198-43a1749b3b5d"
        },
        "item": {
          "id": "d41d8097-618a-417f-8960-c930292d3fa1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "27b887be-c7d7-4b55-947c-04d425f7d498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00117052-969f-47d0-b19e-4e3e8ea56248",
        "cursor": {
          "ref": "eb30090a-70e4-4640-9158-1fe4a80ed6af",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "712de08f-1c47-4631-ad04-10702a7a27c9"
        },
        "item": {
          "id": "00117052-969f-47d0-b19e-4e3e8ea56248",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "094852c5-4ff0-4f66-aed2-98e5d825649f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc19366-417e-47ee-b9ad-5bcea9f5189c",
        "cursor": {
          "ref": "2326f685-26ec-487f-9271-27347e62157b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "57cfd1b4-6a35-4ee9-b1df-c2cfdefee5a4"
        },
        "item": {
          "id": "2fc19366-417e-47ee-b9ad-5bcea9f5189c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "27f90e77-091f-4009-a5c5-f0dd346465c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1abd5b5-a299-4753-a0a2-a686863014aa",
        "cursor": {
          "ref": "43860dc2-3692-4686-a926-f774c87e3bd1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a2216012-02a4-4146-9881-da68fd1c5cc5"
        },
        "item": {
          "id": "a1abd5b5-a299-4753-a0a2-a686863014aa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fd60d6a9-d125-4132-87d2-0f1c4ab55fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba98095c-d31d-4e2f-977d-dca3121a23a5",
        "cursor": {
          "ref": "794c7c68-6e37-4d3d-9b73-ce2cc815a25e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b26c2908-383a-450f-a628-bdb5ddd0e21f"
        },
        "item": {
          "id": "ba98095c-d31d-4e2f-977d-dca3121a23a5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "753d719d-1703-418e-80d3-69d65d12a9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021066be-6907-4b93-892d-13673c1f426f",
        "cursor": {
          "ref": "f967dcc0-4f88-49b6-9c98-c1694b7f4121",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "87fed5c8-276d-4d30-84f5-34ca00b730ce"
        },
        "item": {
          "id": "021066be-6907-4b93-892d-13673c1f426f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5291a423-74ea-4486-a2da-a27a2a32bad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467741f2-8871-447b-b408-896e6573e031",
        "cursor": {
          "ref": "06eeec22-1bbc-42f4-b7ce-40477490739e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "acd0af9f-c74b-4ce8-985f-b0239fbfac8b"
        },
        "item": {
          "id": "467741f2-8871-447b-b408-896e6573e031",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b02d3fb7-bc2c-43f1-ba52-a8ea98448ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777936be-5882-462d-a9bd-3d8b8c292815",
        "cursor": {
          "ref": "03cdeeaa-f5b8-4dd6-92e1-da549a2578c1",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "370a362a-6683-4013-b9b7-6c4e6748a9df"
        },
        "item": {
          "id": "777936be-5882-462d-a9bd-3d8b8c292815",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b9cb69d7-01a0-4ad3-8dcb-23c3255d1ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b30484-3b02-42aa-9f33-e9f1b27a1d43",
        "cursor": {
          "ref": "4fd456db-6f3d-4ba6-8342-d23a5a49a6bc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8979e08a-ca1a-4d27-bd25-9ebe31f4ec4a"
        },
        "item": {
          "id": "f7b30484-3b02-42aa-9f33-e9f1b27a1d43",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fbf5149f-f0ca-4b70-a97d-fe3c1b6fd6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34b08e6-c3ae-40e8-9e68-57e6f51058c2",
        "cursor": {
          "ref": "c09e4e40-35b3-41d0-8279-038f45bd5c8f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1621bae2-6806-4a45-8dcd-60dc21a8ba55"
        },
        "item": {
          "id": "a34b08e6-c3ae-40e8-9e68-57e6f51058c2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ba8c5f34-6ec4-4a41-9fd0-a194e0049633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687a1d6e-39ec-492d-a8fb-2f1228289fce",
        "cursor": {
          "ref": "4d66fce8-ff0e-4919-847a-1cf03a677477",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "11b686c9-b114-4116-b0b9-ec8a5994db40"
        },
        "item": {
          "id": "687a1d6e-39ec-492d-a8fb-2f1228289fce",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "164b3c58-1582-4499-be8a-2cb1eea82986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f18b8d8-7713-4cfe-b77c-a1d09a4d4e89",
        "cursor": {
          "ref": "2fb71ea7-418e-4e1d-94c8-f25ed376a54f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4c63176f-2f29-4b9c-830a-2afbafe91217"
        },
        "item": {
          "id": "6f18b8d8-7713-4cfe-b77c-a1d09a4d4e89",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "586025da-7a1a-4ff8-bd8c-8603bcb8af8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a92105d-0492-405a-92ea-20c522417099",
        "cursor": {
          "ref": "3888acc2-e0a2-4091-9c0a-6f03eb789891",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "df884d67-ba0c-4430-884b-f5efd444f07e"
        },
        "item": {
          "id": "8a92105d-0492-405a-92ea-20c522417099",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a7d601ae-2245-4953-8bae-b495e57bcd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30abc8e0-cd16-41e9-abe0-4a986c79224f",
        "cursor": {
          "ref": "e34a8640-7680-4aae-ab2d-98f9b4654f24",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "55fa3ac9-8ebd-4f6f-9109-215e16bff2ca"
        },
        "item": {
          "id": "30abc8e0-cd16-41e9-abe0-4a986c79224f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f01ce47f-8e8a-475c-afd7-114795729b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3769c71-1937-4ac1-b552-4829f7375d78",
        "cursor": {
          "ref": "ab52d12e-dc79-434b-8e92-4b7df9142c30",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "73c209a6-893e-4003-b36d-ae5e43806df8"
        },
        "item": {
          "id": "b3769c71-1937-4ac1-b552-4829f7375d78",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b506c181-79d0-4423-9b7c-9ceabac67696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492949f4-043f-4435-948c-62482df08b6b",
        "cursor": {
          "ref": "ef27ef0b-565d-47fb-94dd-96eea74dc4bd",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d47c2d01-1010-4d89-9005-13112cb00ba0"
        },
        "item": {
          "id": "492949f4-043f-4435-948c-62482df08b6b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "694edb40-c06c-4376-8dd3-0d766a3421f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998715a8-5b15-44d0-b2f8-6a824e6373b8",
        "cursor": {
          "ref": "18753a92-5ad6-4e30-b2ce-01e17311bfa2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9c624c0c-4817-44e4-8f40-261e64d9ec90"
        },
        "item": {
          "id": "998715a8-5b15-44d0-b2f8-6a824e6373b8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0843beaf-589e-4c32-8c5f-74a8f299eac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84861cd2-13ae-4b9e-816e-7c0b3a9967ff",
        "cursor": {
          "ref": "27c920a8-a723-42c8-8990-c0aaa865b89c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eaa5c6f8-a542-435b-b654-9aabebd571cf"
        },
        "item": {
          "id": "84861cd2-13ae-4b9e-816e-7c0b3a9967ff",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "29fa6eb7-99c0-412f-b7df-bf35fbb1ea45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c551c0a9-4ac9-486f-af81-5ce0cf40e1e3",
        "cursor": {
          "ref": "f6b62214-7871-4bbd-a348-b8d574167a2d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3c34efdf-f294-4118-a070-3647b1d6feff"
        },
        "item": {
          "id": "c551c0a9-4ac9-486f-af81-5ce0cf40e1e3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3d6c2bf2-fb68-4846-b1bc-403b51658438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3611e10-2eae-426f-9f9a-32d75b938657",
        "cursor": {
          "ref": "186fe872-2eb4-4cd7-ad4a-56156756d67a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "124068f4-af37-4989-9a0c-9f543fdb6d41"
        },
        "item": {
          "id": "e3611e10-2eae-426f-9f9a-32d75b938657",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3c1ca16d-0d8e-47b8-963a-21ee7131272f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71a1a7e-66b9-431f-9ed6-c897b3c1dece",
        "cursor": {
          "ref": "08a8d60c-52f6-4228-9d82-92f73450b3e7",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "83352aa4-fc38-4b12-a9a5-45f6ade10946"
        },
        "item": {
          "id": "a71a1a7e-66b9-431f-9ed6-c897b3c1dece",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4bc895a3-5334-408b-95c3-e12a35360aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06b06f7-9622-4c92-8ef5-11a8213d3db3",
        "cursor": {
          "ref": "8856777b-ebd8-4d9c-8996-2eb09f9cba2c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0de1c60e-cb57-4139-b8c2-a2ad01d5db65"
        },
        "item": {
          "id": "c06b06f7-9622-4c92-8ef5-11a8213d3db3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cbca1d91-123f-4682-b938-2df7d5b1120c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a4895e-94fd-414d-882b-25b13c10a110",
        "cursor": {
          "ref": "2fd3f65d-96fc-4719-9d5e-fbd5f29cfcd8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c80948b8-0f4b-45f2-8553-17ecbd47c1a6"
        },
        "item": {
          "id": "21a4895e-94fd-414d-882b-25b13c10a110",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d398b2f0-672b-4da5-b55e-3a0e46921798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fa93c3-6e2a-4caf-b0bc-a7a738cb1ba2",
        "cursor": {
          "ref": "a8354858-94c7-45ef-9f0d-bfcd4305d1cb",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "28378dfb-68b5-424b-9808-2221de7ceaff"
        },
        "item": {
          "id": "a8fa93c3-6e2a-4caf-b0bc-a7a738cb1ba2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bdb7473d-af7c-48d8-82bd-88c2accb9d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651dfc38-3758-4227-bc1c-ada5a337475e",
        "cursor": {
          "ref": "67bc0b53-5145-4a1e-9b8d-e10488dda062",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "86eaeaa0-f785-47e2-8f42-add9f59bc0be"
        },
        "item": {
          "id": "651dfc38-3758-4227-bc1c-ada5a337475e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "91a289b9-5949-465d-bdd8-2c25cd7a69c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeb04df-bdd4-4519-a859-a4a362de90cf",
        "cursor": {
          "ref": "137897be-3a50-466a-9ffe-eef9edbc08b7",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f7657617-f6ba-42a3-8c34-a728d2e03f2d"
        },
        "item": {
          "id": "1aeb04df-bdd4-4519-a859-a4a362de90cf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "69c37e98-c9b8-4ab2-9c91-645d8db8fcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af987427-8b6c-427b-9574-b98c72aa35bd",
        "cursor": {
          "ref": "52f0a0a1-de13-4c7c-8b4b-fa81a9a77b35",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "080aeadb-1a6d-4ec4-aec1-28fdea634ecf"
        },
        "item": {
          "id": "af987427-8b6c-427b-9574-b98c72aa35bd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7348d73f-0ed1-404e-99ab-3d86ff91736f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ade86b-bfcb-4f28-b47e-ff4837177cbf",
        "cursor": {
          "ref": "59976dd5-23fa-47fc-bc65-93ebbaea62b0",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c92f8dd6-2ff1-4280-ad9d-cb8c7dd36b5b"
        },
        "item": {
          "id": "d4ade86b-bfcb-4f28-b47e-ff4837177cbf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ebbdb812-91e0-496b-9b64-93bc755f6f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2d2622-b5cc-4750-91f3-d659ac407415",
        "cursor": {
          "ref": "bd8c771c-f7b9-47cc-88b3-4fdb1b90c65b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "dda1dfd1-dbd0-4b36-8f17-130ab4ca54af"
        },
        "item": {
          "id": "3a2d2622-b5cc-4750-91f3-d659ac407415",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "92a2b4d1-26cf-4444-b9fb-01518cfa7938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635b2e14-ecbc-475d-bd11-cab2ead4aac2",
        "cursor": {
          "ref": "0f54f7c4-fcc8-4f5a-83a3-82d871632600",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "669da0d5-8c60-4eb4-a3d3-6844065640d0"
        },
        "item": {
          "id": "635b2e14-ecbc-475d-bd11-cab2ead4aac2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d6a64614-ac66-49f1-89a8-084b6af5857b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78879f39-8a8b-4593-b30b-fe09e58ebf70",
        "cursor": {
          "ref": "7f957ba8-9cac-4f9b-8546-1e2b21a4a7b9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "337109cf-8e00-4324-8d06-df17792787bf"
        },
        "item": {
          "id": "78879f39-8a8b-4593-b30b-fe09e58ebf70",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "55f583f7-e157-49a0-aaeb-9274b2d5ded3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb3a4ff-0d69-4c8c-9dae-aa0ab5cf12e1",
        "cursor": {
          "ref": "3e0dfa48-c0c5-4d6a-bf7e-06d1738f20a8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9c1b09a3-876b-40b1-a7a9-24e1e07c0e44"
        },
        "item": {
          "id": "fcb3a4ff-0d69-4c8c-9dae-aa0ab5cf12e1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "54eee510-11be-4701-9959-33a2580115e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d770ad5-b25f-4cad-a35f-fb600005196c",
        "cursor": {
          "ref": "960ad2fe-85a3-424c-bd53-80d1f06dd919",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c6e1db6c-afbb-40e9-8808-18809c6bccbd"
        },
        "item": {
          "id": "4d770ad5-b25f-4cad-a35f-fb600005196c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b0f7ce19-8de9-45fb-b400-836af39886d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15fc16d-d208-4411-b88f-fb91e49f814c",
        "cursor": {
          "ref": "b537bb21-5b7b-4322-9ad4-d8d985ed8dc4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0cd94bc5-60b9-44d5-bb7b-3a86a03b73db"
        },
        "item": {
          "id": "e15fc16d-d208-4411-b88f-fb91e49f814c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0325dbd1-50e6-4504-90c3-34adee12b09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f969df2e-abeb-402f-9e3e-c83d84e74c25",
        "cursor": {
          "ref": "ac661d82-6dba-44ed-82f1-5914271a105c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "95c5b74c-a76d-427f-a287-4dccb6ecc20d"
        },
        "item": {
          "id": "f969df2e-abeb-402f-9e3e-c83d84e74c25",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "de26d87b-ccd4-4015-8980-b3e139c76eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b4116c-1b51-4f21-9612-94b9e4b66051",
        "cursor": {
          "ref": "077322b5-cda7-4cdf-8e54-d2a3d667a1b0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fa218767-5f78-4a47-b95b-f67a99fc8cf3"
        },
        "item": {
          "id": "c2b4116c-1b51-4f21-9612-94b9e4b66051",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f80eaf95-9086-477e-b635-b92cecc9198c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "0606f887-e50c-4069-ae61-ad71dd6799b4",
        "cursor": {
          "ref": "9f513331-af04-443a-8772-63832701a6b8",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "681f2235-a5e1-41de-8947-9be3c80331a2"
        },
        "item": {
          "id": "0606f887-e50c-4069-ae61-ad71dd6799b4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f9f3782a-f73e-4897-8bbf-2c83e24151f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "e7821bf9-f6c8-46a2-bb3d-93ee77efa82f",
        "cursor": {
          "ref": "f7c140da-40db-445a-b1fb-7cc710af8ae3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6d7f1261-1378-4408-bedd-10b810ac0be6"
        },
        "item": {
          "id": "e7821bf9-f6c8-46a2-bb3d-93ee77efa82f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f70c1203-190f-45d1-ad46-dba9f0f64368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "15a16f88-4d1b-43de-b56a-52ca509a51d6",
        "cursor": {
          "ref": "80bea2ae-3389-4e37-877f-32a6eed93c25",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ee51690a-d02f-44bc-8bff-7c30f6b4e434"
        },
        "item": {
          "id": "15a16f88-4d1b-43de-b56a-52ca509a51d6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd1f97d2-96ec-463b-8756-bff80eaca05e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a16f88-4d1b-43de-b56a-52ca509a51d6",
        "cursor": {
          "ref": "80bea2ae-3389-4e37-877f-32a6eed93c25",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ee51690a-d02f-44bc-8bff-7c30f6b4e434"
        },
        "item": {
          "id": "15a16f88-4d1b-43de-b56a-52ca509a51d6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd1f97d2-96ec-463b-8756-bff80eaca05e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9da351a-ca5c-4ead-85ba-45f3efcf14a6",
        "cursor": {
          "ref": "d45cbf36-a4a3-43ce-b918-5ee54f61fa61",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "75e7f332-9ecb-447e-8d53-6ce11f6b379b"
        },
        "item": {
          "id": "e9da351a-ca5c-4ead-85ba-45f3efcf14a6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "13f99eb6-ace0-4907-a027-109b68e05363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144ebe85-69df-4405-9c6d-2850e0aa8fd5",
        "cursor": {
          "ref": "48c1e636-417f-452b-86a9-c1830e3ec61f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a4461dfe-dfaf-4ad6-b27b-6c3d103fdae8"
        },
        "item": {
          "id": "144ebe85-69df-4405-9c6d-2850e0aa8fd5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6d3e7d42-c0d5-482d-9426-b4eb48e047da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}