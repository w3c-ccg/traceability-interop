{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3d2426ba-bf8a-473a-baf0-065d7610a571",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8c94cc0e-9321-4f67-9a06-54e3838aec62",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ebc0d05b-4923-47cf-b173-7915543d5d46",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5b003cd8-08bf-4c65-80f9-2f00ed3d2ff1"
                }
              }
            ]
          },
          {
            "id": "e10cbea1-d503-4f88-84bf-a03c9d5eb23e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07a1426c-b238-43a6-98d2-60663ec4f606",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bfac3b06-c073-4c5c-9cb3-f666e29243ff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4989592d-b46b-4ccc-8500-b96d5674828a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "18c7c8fb-e309-4c01-a234-09fdfc258b4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc9bf688-813f-4605-a27b-3ed549a4e4d9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c29b6e4-3244-4c56-b244-11d54830b99f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68873562-6dcc-4e78-8822-a90069a9e6b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b12be306-2e3c-4580-82f5-d2d53f6fccca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a76c7e0d-9470-4b9d-8ca4-a29608ec023d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83eed0c3-c1ac-4d89-89f8-a0ee50d24191",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b785ac10-6c78-47a7-8f0e-3d23788145d9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b125837-752b-48fd-927c-d83a9de762ed",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c7dc7574-cfef-4914-b8f8-a72df05bb70e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "912c667c-f2f1-4754-9dc7-c79bd78544ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28c58e0a-87e7-4880-88f0-2d89f69e97a0"
            }
          }
        ]
      },
      {
        "id": "8953917c-edb8-45f5-ba45-a86297fbd2ba",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9540e1b1-be97-475f-9c3e-ae40312cce00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5410c23-9ed3-4abd-8ae3-424c728426b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e146ffce-7896-445d-bece-c0f598194b9e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0970cd3-e8ff-4917-9f98-ab7cfb083c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbbc0834-4792-4f54-bebb-5d704e8f76c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bd3bd5-a710-46b8-a391-cee553663514",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab52af17-ba8b-4a7c-ba4a-6dee8e652ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9623c885-c334-4d67-9695-a48f892afd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21bf4ed-0af1-434f-9cac-025f44d21a9c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084fa38d-5234-4d2d-bd02-31d81d2394df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73ec209d-eeb8-47a8-90f9-adaa3cdbd5c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9eaac1c2-f308-4e35-a43d-cb74dcbb8cd2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37ad1266-6767-4e4c-9196-85835556eac1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5c56cb-30b8-433e-8242-6dfe3bbe6450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b218ae3a-b819-4ade-961f-0a2ebcf604d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3871ee8b-fb9f-4a2c-9ce8-1882f83e1f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56546b22-87db-4a2a-84e2-b8fbb97392d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "236aa1c9-9cf2-4d66-a74c-203a03c4cf1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d76cb4f-1cad-4b35-aa8d-403038022de8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60e06eeb-f9c8-4e82-9e28-404720de206a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "288fa00e-6f7f-48be-8d76-0f4b0823afaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "162e1b91-a311-42d1-8a4c-12ff2c302ee1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6fe762d8-4766-4599-939d-d4c10d0bcc8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7abd3429-5b58-4e4a-8147-4f8eeb46c94a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae64a24c-46fe-4614-a754-449ee92b2e5c"
            }
          }
        ]
      },
      {
        "id": "bb1f3602-c3b8-4b8f-9194-43aca93163a6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2b97d8aa-ff08-4f0c-b78e-031d3cf9d01a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e74e6b02-a396-4d21-ab77-a784f1187e0b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fa647f9e-4033-4471-8ae6-cf3477310a6c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41de44c-2860-42d0-a4af-13e6fd7ebf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ac454f-efd2-404f-8b4d-8fbfabba4fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b661a3f2-85ec-40b2-9045-2a1556a79779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b301ee6e-df4c-49ee-91d6-256738aa20aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53e70b9-1ebb-431e-ba98-48c59059889a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83356b79-2e9b-4e39-8a93-8b17bd1ef3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a53ddb-dae0-435a-88f7-8be68f3821e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff17bf8-c61d-4610-9241-9694d4b20078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29cd7d0b-9fcd-41dd-934a-e78d1dfca2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b346f57-7e3a-4748-8d24-c5ec58a0ae78",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0a0d45-e73d-465e-bb7e-6f04c0ebc792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a22416-b621-4e4e-8a1e-45eca9985d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5b1226-0890-4f96-92e5-a129866d7034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0892d4f-19da-4f39-953e-9e3270741bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21c28ff-518a-4c76-aeb3-ae685b5187d3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd263840-e9e4-474d-ba4d-cd4650f432c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d55e82-9676-446e-9079-cc061068f77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa11102-92cc-41ae-afb5-fe9911145d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0b241df-4820-4d7c-a2ba-cacf82d59d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808dcc26-dd23-4d0d-a7db-b825564fa678",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6766a556-bda1-490f-87fe-ea70ff75103c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce312fa-8904-4224-a519-be02db63cf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1b2bbd-c308-43bc-9857-eb150e7c0013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddddd3bf-56fa-4fdb-9074-b0f4f96e4353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f366a62-b778-4e1d-9000-ba25af32b829",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b2541a-6f37-44c7-b0fa-f1ad5453774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d12e985-ae0b-46b9-8eb0-444a44fdd81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61fe355-4de5-4552-8759-3e2412b64c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1aa71e9-256c-4e8d-b369-c2b9d69c48c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b48bb0-959a-4fa0-af2b-1cfa9e17f190",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29904e0b-77b7-4ef1-b11c-f27170ff6377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3d8ae0-a26a-43e1-a7b4-2a9e41c57ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79556dbe-3a08-49e1-923f-b46b2ec5529a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1c67d38-0ae3-4462-bdff-34470108de23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b70e9e-3450-4219-903d-e1d63e0fcecd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec46efa0-7c62-4df7-b52b-09ec1bbc8ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19ec21e-53a4-4f9e-8e11-a250fc946655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ed3d07-8190-47b5-9b0e-4b7773af1b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abc775c8-4cc3-4576-8460-d66338897a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486dd8f7-1a7e-4dce-88b7-1aa75d707cc6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea4d304-af5e-40f9-8dd3-c83772cefc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c27928f-6781-4d9c-9639-63242a6da4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca21c147-ec53-4840-aa52-2c342c0a874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a748d33-f45d-4a5f-bf22-afd2c28938e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb320b3-9610-4252-a2f9-75c38c282116",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f875abd9-8a6a-4193-80f2-e58f30183ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e146d0f0-d34c-4f82-b23c-12c2bb5245c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54b1725-4d6f-4930-9906-9b888adc8a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b5b325a-7786-41e9-8f52-a151d80185b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986d8d7b-aa16-457a-82e9-f6c8fcc4a6a9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91b986d-2b99-4c4e-b5dd-65777913df42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508a31c0-994c-493e-8132-3c957fd8235a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25aba221-d552-4480-a04a-5385ce447229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b49c99a-279a-4177-b9e4-8facf522266b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177a14b4-8d6f-468e-b227-7faaa55d1cdd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67130b7-58fd-44b2-9bad-b8126078004f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38705f29-06e4-4cd6-b7c7-b82da94e10a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaf79c3-e1bc-4ee0-a281-7a854b53b33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4db7d1c-055c-4b1e-bd4f-a59c8ad82cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397f6c7b-27e7-468a-96fe-c81a3d552ba1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa36ff54-9028-40af-bc6d-e213ce8d30b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a646e2-4dab-4ad8-a975-510487a0a357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5516b48d-fffe-4d8e-a3b3-8b639fbd909b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c2093f3-c830-45c5-b520-56916644a928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6221289-818e-4a3a-b01c-bec5450d86ed",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6293130-ad49-480a-988d-302fdad82217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ec3ecb-45da-4811-9a5f-efc64f6c5d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aabe7a8-e75c-493c-bcf0-c31d4eaed5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e317290f-8c32-4a50-a571-b9d4188c0568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b859bd3-f82d-4f41-8a59-855c9728a9a2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9817a9f-1c34-4580-a070-aac36bf7adb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667cc3df-0e1f-43e6-a3f2-ca5c30f31b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe655d51-0ab9-4ce3-ae0c-fd19c31cf4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "058b86a8-6cf7-45f1-a34f-94a92741bf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe0a55d-5dba-4aee-acf5-5b49b61f580c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821904d0-9ca1-4596-9609-66becedb1da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e33ca1-62d1-42b7-9a3f-ba4c353309da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1b4bb9-6e74-4ce0-aec9-f4726704aa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e15d15b-1748-4d93-8821-44327c5284ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4211ec-c1df-4bcc-9709-ee756fef8600",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2e057b-85ed-4ed2-9c9b-119a58cf57a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d02143-f220-46fb-a2e6-6a3e974865e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8e2ed5-3124-444b-bd92-dae231bf404c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cdd5de4-3f95-49bf-921b-7b0690f4e96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2565a52f-1e63-4047-a196-9ee6202a4a0b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c982bf8b-3160-4f4f-8da2-663d9c7e24c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d06b83e-470d-4134-8951-e1c6d35a604c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8362e4a5-a001-4e0b-b867-9b3b867f4511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "266236a2-f4f7-48c7-ada8-3e2999eb6eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5487db7e-0d70-457d-a7e4-8715046f2d17",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c0979d-480a-4c30-9b63-faeb42090f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9469cc-a6c4-4dec-a348-d66ab6d27daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4958b955-173c-4a56-8154-f294c8d29ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da1c4503-c487-4155-9f6e-77f28f7560cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0df7cd-92c0-445c-9dee-b58464418061",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8b8626-72d5-4909-bb3d-5c0db6735470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216f746c-81a4-4047-a4a6-5b1ad435f4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4062213f-41a6-4064-b666-885cbac7b85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7801fc6-9445-47ac-96eb-8070a944d73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccef06e-ec0f-42a9-9e2f-243f43e23c6c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7f76d0-272e-4a4b-92d3-2a1eb43f7613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3131ad68-79b8-45a6-a9a1-703b040e7625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1eaee8-e57a-4e07-82c5-c317b4c58f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c28b5eec-c0d4-42fa-a4eb-5b22ada769c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe498ce-8590-4e9f-ae07-93e0520a8ce3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f223ccc-3427-472d-8737-be410601baa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0cbb07-db02-42a5-a0cf-1e992c24bac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7964988c-ef60-4dee-8b05-6cf3e16c840f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f14d441d-6321-4bef-9cba-08dd5cc40f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf89457f-4090-4540-a792-6036c3d715bb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b8a379-6a24-4f55-9e35-b96f3f9f31ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2c5ef3-590e-4fd1-a347-a1981b8cd4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2c0572-5e6c-478a-89e4-342faaf65bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12d2256a-dcde-4248-acaf-4f5fc787936f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f920f-7345-42da-a1a6-71fcbd3167d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a4d3f7-1a9b-4a53-8e2e-fe41d3ee315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44615cb0-2e2f-4113-8121-d196bad3babd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64efa3fa-a67a-430f-8c19-89ca7fbea134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de15f73-2541-4056-a0b3-ee09e2f8e75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156f8860-5074-413f-84c0-311153152824",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d804c1-7d9f-4dea-bd72-2bc1f3f1384f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fcedf0-f43d-4c9e-9ded-21cd0b505676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825c550e-06e7-4ba7-9c4e-071c3cd0a1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f17790e-4abe-44aa-92cd-ab4daef28d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f6076d-399d-4e42-9ef8-8c6ebf6e929c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86540d0-3d89-40d8-a7a7-c852efcb2323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f11953-438b-47c6-9c9e-47acc0b468e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5716fd5-51a8-4bdc-8073-b77d5ebe55c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25fe3df-5b02-45d5-968b-7e1590f933fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2771df1-86a2-4c2e-8ebd-b66dec8800bf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151f3c5b-d5cd-40b3-b6b1-4743a75e99f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbbdab3-caa8-4f9d-a936-681ad7a8b5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad22094-9168-42c2-8fab-115918281edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a8edb1-fe57-4de1-8ace-e4dfad910ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2bd04e-37ca-4781-8f9f-83441e1d6686",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88020685-a177-49a1-94ba-8a0be09d09a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6efdac8-0319-4dc4-a56c-f68ed77eff80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36723ad-40f6-4b8a-bdfa-43b19898e5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "888f98f0-0eb4-43d0-980d-8062a1484df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5527811-0270-46ce-b33c-7fd34a4cd069",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851a572c-74ba-4b4a-9809-171d9921bfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed4155d-8d31-439b-9be8-f3cf5058c993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c50722-a832-40c2-bcc5-83951f21a490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81bf568-54c3-4a48-82d3-725e64d214f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd172c11-832f-4a22-8b08-3ff43c09941d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9066771f-2d53-4254-b38b-4e9ddcffcb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85336b87-67d6-43c7-9eb0-65a41e59a483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217e6e33-e79f-470e-ab79-70f6c3a6f51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b22e07eb-82d9-4864-994a-d21809b1c129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5420a21b-522e-40fc-848e-3c1753976154",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093ab0fa-854c-44c0-a7f9-e6bdba6b25fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc9aa6f-8700-438c-bd4f-904013241b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c0faf3-e141-4056-b3c8-aeb016f731ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c441939d-66f2-44bc-9d94-342d6cb86c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad542f6-6536-4fac-a896-9857aba8d437",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459d6b4f-0056-4b4a-9811-e40031298438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee42759-cbe5-45c7-9296-7d7ca19a4e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105e15ee-42a6-42fa-a3ee-11c44a28c89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a170bb10-a5c4-47f7-8bb5-de28aef284fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b913c20-4274-4480-866c-fb7d5223ee73",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0424900d-6993-4b5b-b243-6aac888e6dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f9db31-c90a-4c44-8edc-d0bf2c9e6af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73ab860-87ec-49a3-8968-c007f3333d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6702f19c-df67-43af-95e1-b3b56bfb8013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111d95ba-b31c-4349-b2ce-49f95d68c616",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6889a8-f65e-4521-813a-8b6239db230b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bffa4f-e0b3-492e-b5a4-416f773d8117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee2f1cf-c3c2-46fe-beab-91869ef3bc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "842dbc02-b358-4218-8ffc-9a6981679484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da75ca6-8c94-4106-9b6b-afb14efbbe52",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886fe980-06fd-46a4-8c5d-dcc55efff3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb55735-c2ca-4455-bc51-04a0748548d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5810dc-ecb6-4399-9639-a01f44c24943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "df8c379b-8021-4679-9ec4-cc4c8adbb99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ba9364-a5f8-440d-a2e3-b420143163a1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36d47c5-2d20-45db-9d16-dc89c9688ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5429321b-7aac-458d-a6e9-d0adb19b805b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f891e69d-a775-470b-bf0d-689bf6d75923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22aa81b4-3b9f-4553-a505-47ba0f516781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e4c085-b573-434c-8bc6-1a206510dc8d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2ad404-c246-49d9-a255-f728f234d414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efed3b0b-131e-4b00-852f-15c13ed67c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723c4f2f-cffb-477a-9c6b-0989abff9932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b784386-248c-41db-85e8-ace6148a8c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108eb6ae-d5f4-4477-89a4-1eff75890d1a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d56538c-c5de-4c2a-ab98-f85d2cc20ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a923d50b-871a-4078-89b3-f96ad54ccd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc74db9-c202-46b0-ad4a-66b57b1351b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "828cd303-97d6-4231-8491-b9d7c0cfaaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b88bc1e-074a-4d4c-92bd-f86483e42e09",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338c20ae-161f-4912-bc8b-40bec7d2b1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defb8bdf-33a3-4393-b218-97bc42f2144b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34d0b5e-631b-41e8-8955-523859487a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "44c2b8a6-c66e-400e-9356-75a895b545d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20724c6a-2c42-4c40-88bd-c1b474947f3e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d104fbf-547b-4728-ace8-e826b84f2731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95328d8-ba42-4810-837c-f0fd00fed9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beae6d8b-ac8a-4d32-954a-85751867f8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "073575f2-dbbf-4bbd-b16c-e2e828947fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fee341-10c9-4711-a2c9-62109411618f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961e0bec-a0d8-4df9-9dd5-58e9a09167e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814d00d3-baa0-45c9-82b0-ed6a268de0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02e6cf8-ba3a-45d0-a62b-91bd41a16efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b64389f-e866-4f6f-a114-20bdec53021e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3ded5a-e985-407c-a2eb-8e7e52f3bddd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffa8e00-a9e2-40d9-a72e-43e0957ae0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fda75e3-6c74-4eba-b710-52cd61bf7fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce89d53-5925-4efa-96a5-e6854256da12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8127e848-8954-41d0-9d8c-decc1e32f140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371a3a6c-d38f-4229-ba27-df2e5cd3abc0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46d49af-bc1c-44dc-99ca-b50bb05a760c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847fce40-3f41-4cd8-9ebe-08de182ec223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36840b8-1ed4-47b1-81a4-4f979bb86711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9a1e4b-1703-427c-b61f-5d1cf6ae5a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6f8f25-68ad-44a8-bcc6-f702bc30eccc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0b591a-20de-44a4-af5f-50cba5464db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8cc307-7017-44fa-aee6-0c203b6cfcf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999e8b94-18b5-4b81-99cd-a12f29702960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc1d579-6c69-4897-bb71-b27165d7db64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0448bd-ff27-4d6c-af3a-acffd2697cb1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890fc751-1ce1-4389-b1cf-d509f65736fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ee17ec-1447-484c-b5c1-6fc0538e8558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35466da-a23d-4d87-aaf7-2ed54b4e1b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b965e0-4fb7-4782-a7e5-1253830bf2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecd37c2-fa45-4ef3-84c1-cef8c10577e4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604529b5-6dc3-4c58-8239-cda6f73a5317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de92e27-eca6-4dd9-93a1-0ddbbca2e87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3983e4de-e25e-49c0-875d-9223d6dcb18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "190e65d3-c406-4f11-8adb-bf7d59dc872e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8ca403-e47a-4ec1-813f-35af0b2b5189",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebfe35d-cdf9-4c5a-8e9e-3b6c87840b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a653e80-12aa-4de5-bf64-2f45bd52fdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2e996d-c730-4096-90d9-07646507f9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaac14a5-f52c-4fd2-bcf8-b9c1f315b886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b10e669-f37c-4193-a384-893731382726",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ab9e80-76e1-4ce4-8bed-49e9e44b4833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f6e306-3e0b-4ecd-acb6-a346b95e1a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2479fb-5566-4ea1-ae95-3826fbd35b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acad10b2-9df2-49c2-80e5-063dd223eed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656b000d-eaf0-4395-b4f3-ec0d082e7104",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb74318e-4850-4620-8a5a-7339c91bd800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d394548-2e93-4dc3-8fdd-856ff0bf20af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23c9c89-ab62-4b78-a11b-bd5d6b241760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "433fc53f-c4c8-4275-af37-5140b840bd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9be43f9-d7f9-441f-a162-78e4270fbeef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc47ca33-10af-4f60-9156-103892bc003a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45331f2-23dd-4bf4-aa9d-699fb64921ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfd016e-d542-48c7-b99a-a32cc683f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e73422b5-0a0e-4205-92f1-b2126b85422c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83066458-8896-4424-a0c7-d3f3bbfb02fe",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420c3b6d-e305-4cb7-b742-1cc0564d5b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce388a8-8816-466f-bd85-0008ee65bb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a35e609-fcd5-4bdc-be0f-356091b40384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5085e0-df98-411c-a76a-9693383aeda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706c0c2c-5a70-4cd0-8a42-c716b83d2ad2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1436ea6c-4353-4970-a980-26f664905a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21005165-f1a4-4d78-bb49-32bf7ad89a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd68387-ded5-4a64-9f00-38ec381037dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be36d6b-3138-4487-aeda-b92a98ff4577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6584322c-48c2-43a6-9a82-8a18170c6e9b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818e1a3d-a317-4877-8db1-910d700160b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0affede2-22cc-47c4-8359-8577d28d5c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d931b5-8085-467a-bc67-c091fbd1b38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e0c66c-abb6-48d7-bd42-77397d42cdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fbf80a-fd86-4da9-9581-0caba38d8c75",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526bae22-5b4b-40c0-b28c-6897c16e93f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f61199-c836-4991-8460-67c3b1c0065f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e655431-25a4-483b-86ba-ea330b0fadd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2e4260-a6b6-4f8a-a525-948d6ce28c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b73fc68-1a85-4514-8f61-1648a0689a55",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428e0dc7-1b7b-41d7-9127-b29783624482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5c59f8-9678-4b6d-b7f9-37ec4274118f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892f6c7d-860a-417b-bcab-51b6376cb815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b5e8ab-5c1f-441f-8cfc-c50ae6649a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd54ca7d-8952-4043-bd54-44dafd451a45",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923ced87-baf6-487a-95a8-aac67bf6e72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42e0754-461a-41f0-9207-b3a2c47e5e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d02d62-42f0-4819-9052-2edbaf579d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1ffbe490-678c-471f-a9c5-07f78f694d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c25df0-45bd-4511-9edc-b3499a19a721",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc68043-0792-420c-a8fd-6246bd3c7112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d01f12-cfdf-4fec-a00e-2e50cdde7f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42699db-5406-4ade-bb6c-d60fcedbd8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7ea63f-08c5-4eaa-8e92-77f3463fb116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20d45a4-1713-4f54-98c5-ed82da22c2bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d241d774-435e-4d01-ad43-49e14ce79749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541956b3-5b68-458b-821c-cd0f9c3286e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e00f3a8-653b-45b0-bdca-fa4b4ac6bce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "34224c5d-8197-486f-afc1-d36d78894100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aafb7bc-d67b-4a05-8853-85a11cd3b1f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918578eb-7fb3-4582-8d62-51fcfadbd3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f12502-8ab9-4220-b866-b8be22719295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efabe8f-d1d4-40b8-b4a0-0cc61d02f18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59bc61c4-1b19-4b35-b261-34190c9b01e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfbb3dd-8bf9-4f0b-ad11-957dbb1003de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6366dea8-ae9b-4c2a-8b5f-602d80dc0259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a796dd-ba41-4893-ab46-0e46a31eb112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3ddaa1-d972-4b1a-a5ac-f256ea5dcdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fef1020-e386-4ef1-80d1-960ff2232bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c285174-806d-4ec3-9ee6-5fc3eb8e2886",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e19f86-10e8-4a8f-a820-f750eb4998a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23785bbc-3c89-4834-ac7a-f0e1651a18e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b36ec6-ad33-446f-bfa9-b51e5e38c89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e921359-dfc4-4260-b31b-4be16a6e9347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f4fbc9-00b0-4ff6-afa5-17d6a023c365",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a34442-16c1-4ca6-9769-21c5430b2dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40ce010-ff76-4b38-9a9e-ea74e95aeb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc6b9e4-7141-4ebf-b695-40df2660deba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "57aa726d-dd71-482c-9704-d3d120c96058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629f0fcc-6e64-42cf-abee-3e4053c4ffdb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2b5940-9c91-47ff-8464-abdf2eca39a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ca7414-e270-4b58-98c7-1afb15696610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cfc848-f98c-4dc7-a6ab-df5c9e9dd010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea63291-204e-4b99-a457-e2dae4003770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec09ea-dec8-4b81-adb4-441dbc1394a2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9d8dc1-940e-477a-90f9-8a1ab871345c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd713fc6-6198-4362-94ab-14f51daa4e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673066d8-1a54-4d9a-a870-3b86da74552b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2778e4-745f-4a23-ba92-683a84248f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce02df2d-c283-4277-b358-f26768c3922c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f59ff5-d06a-4ac7-bf4f-727e34300522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c043928e-0ca3-4fbd-a0c7-c49c4260f00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a97102d-03dc-41fd-b9b8-16ad7e95089a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c47fc4-6f99-41f1-a2d0-b7bfa51bd850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7f426a-c1d3-4e59-a94a-5991e5518dbb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13104d54-a115-4e86-8d1a-68d9a983ccd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbf8f57-a70e-422f-ac47-d6ddc9d9859f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d767405-2a4c-46a1-b32c-d7034e53ea36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf7a041-37dd-474c-8e58-11b40bfd1a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51cd8b2-2fba-401a-adf1-60915484586a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08952ee4-4620-47b8-b650-6bee2d11153d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ca7ff5-4fc3-4157-baea-8321572ddddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1417846-322c-495e-8000-bba1e69c6fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc8b6e9-109d-40e7-aba1-2e589b3bcaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34eecbb1-97a5-4329-8299-de522866d1ed",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9cf5b0-a9f2-4c00-9098-b3f15fd62fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7782e124-aeb7-448c-bdde-0bbfb60a18f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b149c7e7-6dad-4781-8fc9-46812038a495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f0a9f6-f12c-49eb-8049-0623a0b80544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70cfe72-7e0a-47f9-9814-333ebb6a8859",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512fb61d-a955-43da-9e4b-a1855d1a016d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c82a536-86af-4c58-86da-845f3b1f69b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3edf4e9-8609-4b70-8491-7706604d6bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d02085d-7998-4550-9a7a-e5c2d6b79ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0303d6de-baca-4537-9e19-b776c8c88df9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2e97be-0c82-4f8c-a20b-44a2687c4804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66590ce-e358-456b-bcc8-b789da802a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505f33bd-d19f-43d4-ac6e-56e0d475bea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11fbeebb-6048-46c8-8091-5d46c3514dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3f1d39-0004-4c8d-aeb2-52b3e7c04e3d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790f9766-2e8f-4de1-9de6-4023312ba106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699215dd-2918-423e-80e3-1403b715551d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890fa018-87de-4cbe-a4f9-2df4e17402ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "883b3de8-44ed-4a6b-8f0e-d7af4857a1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbe9f0c-223b-42df-97e0-ec3376fe71e0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873f4d5f-c53f-4f34-91ef-96352bef47e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3104b3f8-a35f-4bfb-ac25-3b522a65fb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5533f31f-e40f-4bd7-8a59-fe212b7e3aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91c7c2f0-7a0a-493c-a9b6-d8ff93a13a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6337db84-2224-42eb-b856-854c9572a9ec",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a9a0b1-062e-4035-822b-66200ac264b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e049c6b6-2f77-487f-9080-3b939d96afa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543d6b92-8b65-41a9-98bd-2cac72615d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "049ba61d-257c-43cc-a3f6-19f1d82e61db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333346e2-125a-4a8a-b44f-4c91805b66ae",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e364759-346a-4b76-bc2f-eaea0bb05e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631e0e0e-5edb-4ec1-8ddf-41d1d42ebfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42977a1e-0259-4533-840b-f012d0f7e68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3517d0e8-8994-4c5f-b6f7-7cd8cabb1f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94548e34-e493-4ae6-82e0-c922c30a6c7e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5ddedf-c942-4cb0-bc7f-0c0ccc3f4da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3db02d-f251-48f2-a6ad-820cdd64c770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7fb4b3-696c-4be6-a6c7-58ed29702038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e72f45-18a5-46d7-af7e-3f0fefc7ddff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465db337-0b32-4aaf-bd44-8e2e19e6271e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14aa0e73-33ea-4c2a-8f64-223244666dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334d2c73-efef-43e3-80c7-5fed38780aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d859b3-c536-4a4a-85bd-f2b55559924b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7043c0f7-e1c3-4f0b-95b6-27332d211c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d340ee8f-3019-4233-8484-7362df95949d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e6a686-1696-4706-a425-dbb2071c38c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8722324b-51a3-4665-a15d-b20e3d35d9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdf65fa-ecc7-4491-aaa5-3bffadc94ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a47c5c26-ec8e-4373-ba12-9809e3829c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39dd617-6e41-4d61-a092-57d779c2f304",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bad19f7-1655-487a-afda-b4176bac91a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3867d0-da31-4b39-b905-900670b41e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9263aff-b99c-4b98-b94c-695a146b5ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2559d977-fab4-4694-97e0-6c5a7987caa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c591e75d-040f-4b1d-9132-048fb71e1545",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7aa09c-d0e2-4186-96f7-1d5b3d697014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e668247d-36a5-49bc-a473-0f5d9bee493e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b86ecde-8aef-43e1-934b-bba02c840bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb188dce-031a-43fd-bebc-cfcc0f6b7259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bdffe7-4ba4-4b6b-b26f-ab6e65a15358",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41439b7d-6a7a-4c83-8f66-aeb38f58d327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3adacf-421d-4edf-9636-d4cd8d3dcccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0069fb4-94d8-4784-b0be-72c5ba351f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05c88867-4618-46be-b174-9150db1ebc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e14dd52-8bc5-4331-b1cf-6425af957ca3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3049ac-f97f-408c-96eb-b5e91df526af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6be9e63-9e52-413a-87d3-9b33429e07ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292b307d-7b50-448d-a0fb-66aa1df6f876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa41492d-bea0-48da-9693-8092b1b8bf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63884ff7-92fe-4cf1-81d7-f28536c9ce4e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01ed1af-b31c-4c7a-b8c5-623bd517be60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46014578-7db8-49c9-a4bd-df6df4fbd512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b64010-ed8a-4b07-a1ae-2eb50c0477c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a71d7979-3a85-4c31-931f-9ed5a5f31d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e98689-8c3a-49d0-8e44-a9c1affd07e5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538ffcf5-a6e1-4a60-af87-2132d9465517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb1240a-5fb6-4976-b0bf-d4d20a899de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21360275-7287-441c-adef-ed8474a699dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96714774-2b15-426a-9ff3-8a401ba02e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ede28c5-3c2b-4c72-af2d-8089ff5c87ee",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f5f97b-d71f-4baf-906a-6b0b887846b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dce040e-e127-444f-a285-51fbdcc0a8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546abaef-420c-4e22-94c4-2dee755ae602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21dccdb5-fb47-49cf-85eb-145e27f4f470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa51d910-8172-4d2b-af88-68cb7351d858",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddba639-5da4-4755-9fe7-1adb075fd8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcad2aa7-f4ed-4673-9172-22b4e1a32230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27f1d0c-e8d9-41e6-b86f-a6439b441347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87426265-9e24-4b00-8e7e-8686598b3f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fcfdff-03e5-4d31-8bea-e70ad5ba1155",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944e0e27-2824-44d0-859c-e03767766e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a50b7f-fd89-4bbc-b7e1-b26278e4ecf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f4a984-be6d-4f05-8dbb-44d5dcca6057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35159d4c-c0c7-4bc4-b9d2-a3ec87f77aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b8e98f-59bc-479b-b726-997eb54ab692",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d2d494-0311-41d8-8789-cbfa02e4c425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c667b0e7-9f02-4128-95a4-3982fa383f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbfafac-456a-437a-b688-b8a57a009412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d610ccda-43fb-4828-bfd2-dfab13258fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53054390-da8f-4144-a2ee-c3cf1cd2fada",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a40a74-1f8c-4d27-8ea8-408910390092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8028829-e3e5-4c0f-b038-1b72292ec811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e45002d-9b6b-4868-9136-e79e7351e6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a97cfa3e-4771-4019-9d56-3728fbc59195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92de7290-8224-4e17-a1e0-6ad75ece46d7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca210811-bba8-450b-8c9d-a4b1a777833f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f190e5-7ea0-46fa-a55c-d6999acd9f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7de89ec-80bb-40a0-bd3e-b85cd4d52340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a483ecdb-deeb-4131-8a27-f0e193c867fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d862a8-cdb0-4ca5-9a8a-c9ec1a0bb500",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bbbc5a-eae6-4638-8521-8e2b68125a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfaa5f2-33f4-4352-ac81-ce97f1f94ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323b0e86-b319-4fd8-8300-5fa2b641d3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed32019-4609-459c-8875-b8201f566c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4201874a-4d57-4040-b6fd-be5d03f4e36b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b903166-bb38-48b1-9733-38e166fd4516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75ef9de-cb48-483f-9160-6efea4fc3300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac45b9c-a33a-461e-87a4-d7e50be7ee6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a34523fe-a77d-4188-9970-b4d822ce4c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc5ba93-99d1-45a2-9eaf-c11a63a63337",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6253ba1-0119-46e2-8413-ea69422fc067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d07d9aa2-89b6-4bb8-b993-8a771081436b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba7bcff-4ea8-4c55-ad6e-e24884fa8633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a21b7ada-c6d4-477e-8f1e-b50880228f59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9abe6746-b0e9-40e4-888b-adea1f6d62b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bca82f37-4447-4c8e-ba30-3b8d2e37c846",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82541f16-ec74-46ec-b803-415b363bb204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a9f27c7-0d69-4e59-94d8-b9b6b37b609c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3261f2-dc1d-4dc2-856f-a123ebf2bf62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02ce8297-9149-4bd0-b304-a29c56f0bd77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51b42472-ce57-47a3-9cc8-b5d713973c29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7680b946-08e3-42cf-b8b0-925cf2a0a243"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd38ba78-6d1c-43f0-8e28-b3de71e1a39f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48e496ff-939a-4621-a262-5accd481a440"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12937588-350d-4706-aeef-26cd86e121fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc7de982-5dbc-46a3-b2c2-63aef447d914"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d463047-8ab0-4697-84fe-e1a6c8196111",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d9c24fd-1d71-49b1-9b29-83ad2a0d84f7"
                }
              }
            ]
          },
          {
            "id": "8a6af3c9-0733-49a7-9be8-8c7947bfb11f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "342d17a9-1066-450e-acb7-b13c522ed086",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6e6bae77-94b7-4e1d-ad55-32bd0313be61",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2278b3c-406c-4307-b2db-b26c1c502ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2cbc5e5c-b707-4fe3-b24f-63cf1044092d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0179ffdb-0e98-4d8f-bac3-b5adc421b51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc97f9d-50bb-4275-a1a9-568d12b95c00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0442687-025c-492e-a5e6-369973ba3c8e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3778e145-9ffd-471e-a29c-4547602c9ab8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73aa1bb2-8805-4f41-a6e1-216e2da28f61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5715457-902a-4de5-a32c-f3eaf05ab5f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d7a4f24-803b-4d28-a8ce-3b36ccee4857"
                    }
                  }
                ]
              },
              {
                "id": "989859b8-b34c-4ba6-875d-e9160bacec36",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d4a2433-ae31-4bf3-9061-9f3350b10cef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "567a47f5-b7a9-4de8-bc1b-b72bfcc809bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0ec7a1f-f771-4e31-a186-df6569be7960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25d4a84c-017d-4de4-b27d-43054aca9597"
                    }
                  }
                ]
              },
              {
                "id": "b05d31b8-8fc4-4b8b-a18c-36baa8037cca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d30ea736-eae7-46d6-976c-44e24baa1604",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76793d8e-5dd3-4b02-9ff4-e475a7b2721b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1469b105-2820-40d9-88c2-bd1434e32ee8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "afbdd853-2961-4515-bcf8-9855a2765e69"
                    }
                  }
                ]
              },
              {
                "id": "d677c19f-e2d0-4ab0-8761-9ca166792416",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "859129f2-7241-40d6-9e66-df0545e0ef62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "090de82a-1abd-4214-97cd-e798ea792d9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e38ec4c7-90fa-4356-ade1-6acbc7df20c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c1a0c792-6f78-44ea-b135-daa09d67b96d"
                    }
                  }
                ]
              },
              {
                "id": "5d328cff-d7c9-4f3e-87b5-fa4aad297c75",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63231ba2-e440-4020-a1b1-934b2b476bb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "501b3b06-b050-4719-8c9a-b905d19bf40a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0481a8fe-4125-4e51-b62c-d90fb0b4be7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b8312f61-32fa-4460-9ea3-d2f5d93d3f4d"
                    }
                  }
                ]
              },
              {
                "id": "4fa83837-a556-4055-acb5-1afefa939587",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af298241-c90c-4669-bb00-fc1ac4554cbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fca31aa3-95c5-4937-9523-0c9de20f8109"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14f639aa-82b6-49cb-9dd5-2a6355cfe7ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d35d7805-06cc-415d-837d-c3663f48886f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a01acfb-16c3-4cc9-93ae-524c102266c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d36e21bc-7fc5-4a9f-a3f1-4cfb56707f26"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "be75f1d2-6f5a-4e77-993e-2977a6a8b562",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "554e1d69-e8b6-48e1-ade1-a7269be01f84"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebb36818-28c7-4b17-b876-1f272d79fae4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8431498d-3546-4232-908e-ba4f0d353e1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1825f3a0-63b7-45f4-8df5-bb3e021c08ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40f69ca3-c704-4e90-b53b-3514c6b753fb"
            }
          }
        ]
      },
      {
        "id": "0ecdfb2c-368a-43cb-91e5-f7e934e025db",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "60d2ca1e-7469-4d5f-8672-f8f2ee54c1ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd5cc186-9205-4fa6-b033-e1e2485d565a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a9bd191-a8e5-4bbd-a6ed-0be8d5968c9c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e721408e-8ffe-4f6e-8a8d-d4c740be2a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1749968-819b-421d-bb32-43df6b3b741b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14df716-5b18-4944-bf02-3e812fbaad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7194dd3e-4c99-4da4-8206-e4bd62ddba13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7196b1f-31f6-4fc1-9f04-55fc830dd829",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcb9eed-bd21-40b7-bb0e-67e036ca3a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61e80ab-c475-4195-82b2-bf59bfeedbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a86b08-d5ef-4586-aec7-b96cccbaf446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3067f7ee-105b-4a97-bc65-04528e9da578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9147c32b-a3e1-4ed9-b81d-09a33f5edde1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e64faf9-c678-43d9-ac38-369e66f0cf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45724e3-a038-43b3-b7c3-a8996c4ca806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163e4500-550a-48bb-b711-bbc17443fc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00e97bf9-b8bd-4e07-a55b-7afe58f5aff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3beff71c-0e87-4a30-9366-8f5d4cece200",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427fd210-cd1c-459c-83a6-6f875f7dc02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19b2260-0115-4f21-94e0-3ba1581dae4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d85af5-646b-4fb3-837e-978d251c0635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e9a6f3-0179-4e91-9e7a-3091e1c1ddeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce799a0-5cf5-4038-807b-27571c272f42",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02577945-43c6-41c1-890c-2ed76b3ae0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc14020-fc32-4658-8ce2-c8de7349de21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5e5be6-13ba-4455-b2b1-aa4a7e5f1a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21f519a0-e82e-4a44-b623-58f817001eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad71b49-2bfb-4754-b8c1-84c84fbfec10",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b25011-9f3f-4c6b-a048-fdd739661baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784a8469-d3f3-46fd-998e-868e87d985c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6362ec4-0942-4b02-b18a-62e1fb198216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0992a708-e221-4747-99ab-347447ee7d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e27230-a24f-4a58-a6d3-3ad406f75b24",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16256ba5-e02b-49b3-a781-234208a38c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11617e0-5c25-447f-86f6-a0856ebd8151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9786d120-f490-4493-ac93-f63032122a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbefb87-0d07-4358-b513-5abe885689ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2643dbb9-a7e7-4fdf-a200-cfac601ce291",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa82b6b3-bdd1-4902-ae14-1cc173c61986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bb53d9-73a9-4e7b-99ae-3b6a7c335be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eba50ee-59ce-4736-a583-1dc99020be2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7181ce19-9600-4cd9-b6ac-c38f62709a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280ab098-7d25-43a0-9219-bfd00e6aa9f4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a53403-03c4-4c57-a241-3e561912a390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a960dec5-7f7e-4552-9a11-c5c69fe01dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ea9ae1-1a5d-4f00-bd1f-72970ea2de4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "693f98b5-09d1-418f-9049-62159acc2d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e2b3f9-e0b9-4122-a48a-8c07a8f38131",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a93faf9-7095-4e62-bb58-bea7dafd1aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3046dd36-1b7a-4454-99a0-f716469b74db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b3e5ed-b3d7-4b48-9c33-24728acd532c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b76debc-d806-4dab-b302-a67f9d43b445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65098d5-5fa7-4f71-a529-3648b4bfa18e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114b1744-b14c-4790-86b3-68fb3cc2f95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253e9471-b583-46de-b9d8-f9da9d0b9f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b52ca2-46d0-4b18-9f17-dbd849743078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa6c8ec-1144-4a18-946a-dcefcf32ce97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4feb7f3-1490-4d8d-805f-b53e6dbababf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8332fa24-2c22-4183-9756-09c5dc7ce49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3a5731-f4a9-4f5f-b0f5-1b62da9d477c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a282d9-0c2e-4a69-a59d-bd687c9fda9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3994e9f0-6390-474c-9040-d304048e5018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47b7670-e30d-4114-8607-4bdb9f24b6d7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c9cf45-d82d-445d-b2e2-ae748a3befab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b455809-7cdd-4ff1-9d51-bb7b42811686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f63e1c2-73eb-48b4-b0be-49cb8c9e97d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "714039d9-0a97-4522-ab0e-392b37f9226a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8143b9a-b3e0-4ddf-9d4c-08cc76dd2e0c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dc3d30-c7e3-4860-baa6-63e0b2cf6279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612b10d8-8cc7-4003-96f4-7afcff50e5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78add601-6b14-474b-937a-bbdebe4d4d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "35b3e9ab-f644-4f92-8eb5-98a0e8ff50be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6685b1-6892-45e4-acaa-071305f6d97a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a743e1db-1eb7-4078-b4ce-ff22bd4007ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c8b464-f0b5-49a9-83c1-c2c9dd605631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59e88e1-02a9-4104-93e2-81a5d53007d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "daba16c8-e7a6-4706-a4b1-aaae578b44f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb050076-f21b-474c-919a-8ae62a68ce10",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4cdd97-9112-40d8-b327-4feb134d1421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2afb614-1f9d-4c12-a8e4-a8271a92ecd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221d7b46-2e5c-4a28-a193-41cbb17d0b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5904eb96-3df2-4d1e-82e6-5518e1886312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1542f38-b59e-4821-ac7c-357560709c3c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be3bd37-171e-47a0-bb71-b01aea82d8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af71df34-3a71-49fa-bd9d-d61d7a0b11e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74454b79-bddc-479c-9c7c-b669731880ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3cdf26-347e-4933-9553-0155f54550ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cab6e21-c7c9-4e48-8b63-d8d6fac7a3c2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b940548-d78f-47a8-8bc5-796e74f0302f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77695a4-6733-4071-81bd-f82298e6279b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ced31c-3ee3-4ef9-b93b-a83db9b7678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "776800a1-be6f-4478-82bc-8d38e9e4bf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15fa5a8-5941-4974-8bea-24ce5956a272",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3e6083-d610-486e-82db-76a7654c77d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51dec0d-d5c9-44e3-99ec-c7aee4221b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0859f4b-6398-433f-b708-39f257b4c847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2dc5a2-f120-4ff9-882c-b4a4b5e434a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5768775b-f09b-4f7c-85f9-43223b7837ac",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa32eca-222b-44b4-ab92-c52254e4d5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fb2ee2-410e-4d8f-bd69-5c8af4cae348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d249ff-fe48-4a44-9d47-56594974a3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9273365f-2370-4403-bc3b-7c51b65d187e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc3b032-ff9d-49ee-8e2d-bc181f338705",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f2a723-fe66-4bfa-8d27-6aa9a2b8e950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a5c1ba-f43f-483c-a60f-efe21ced3386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6445bd05-3773-4a1e-bf66-aef6316b938d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7284726-b955-454b-b5b4-a45c98e9f6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa7b24d-9487-4946-8fdd-4b3de8b1d94f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90827446-8e64-4eca-8720-4639015f811c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dde97de-c6db-4195-836c-52e8f7dda658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31c1e80-645e-4557-aeaa-cd233a4158d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "187b1c63-88d3-4294-b6b2-7ed2ca44c762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610c5f89-292f-4624-9b31-4e1777f5a14d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48229c64-7cc0-4072-9024-e4382d0d4d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedcba14-ab43-4333-b204-b932f54a2b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f0c220-623e-4bda-a039-088af9ad1622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e06e0ecd-7a57-4db7-95cf-485b944340e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8527517-d9b6-42bf-a40b-06e18ac026cb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c6f160-5e86-4f19-ab4a-0aeb97ac4f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b2be2c-a472-48cf-91d8-21d532f68f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca81f60-3df1-4751-bd51-e680e76e52eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "154ab1bd-ebcb-4c6e-8602-6e3b25ba5880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df728d58-1046-477e-bc97-4b61b6c3944d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03b9b79-7406-4bac-9645-9c3dbaf24a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61217162-50e5-476f-b738-fed9b0b062c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab1e1f2-83fa-463a-b62f-29caea02283d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6803755a-930d-47c2-bef4-59ad818ec85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f73df3-aaa2-4c33-87a8-b88498413de8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733d80b2-7180-4779-9d40-c7ebf701ec18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e5b25d-f62b-4515-9924-555bcdb22b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700d973e-2c98-44e5-bc1e-50f0c3646a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c818d02-9759-4a01-a490-7ce209a37a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2263a8cd-f7c0-425c-86dc-ec4702071561",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a08fff-cab6-47b0-a25e-8d00eb85aac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c159498-d941-4b0a-8252-9c86ae88f11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f6197e-9d76-4ab3-bad8-ac23f3b5b74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94c5d1f-b850-4ec9-9108-8bac075158f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6183d3-989e-45b5-8b1e-a9fedc450045",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14c75b2-c44c-485d-aabc-72ca6c2b018e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6932a7ae-b3d4-41f7-94da-a374f361861a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a183c7-b978-4dab-82f8-d32cf7fee1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e869376e-c88e-480e-a84c-b9d370e6153a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d935abeb-a3e2-412b-abcf-352c08c5a756",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed5cf3f-03f6-48fd-9ee9-f2c8b803c089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367c5fec-d056-4579-8898-e85046e9d318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179a642f-4247-43f4-bb92-935d373259dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc444c42-219d-42aa-8b34-5eac4e22a839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914c26fc-0477-4de4-8ae2-7cc824ae85cc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf942307-d7e6-4068-88e1-8be317234815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5261e5-b02e-44fa-86b8-d997b21b57f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdbb3f4-7115-4b5a-b308-44e8211b0a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1283983c-8eb2-4f5d-89b4-32dda50b5cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbea25a-e01a-4adc-a7a4-5e903aa80a55",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8245018e-2314-4f1f-995e-0a5f9b993b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2dfdc7-2b41-4126-8afd-4c74b8901bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319447f9-39d8-4c81-aef7-911c3a638d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6f1c15-91b7-4ab2-b4b7-c0e3432894e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b156e1-960a-4b06-a412-3c4be209b50b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b62f55c-51da-47f1-b85e-1602b8de9b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37c1e7a-186a-4095-aa6a-11afb0a3b6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e37da94-d73a-48a7-b703-bd1ef63aa284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe7502e-66bf-49ec-967d-5c44058cb4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0347d812-40fd-4c3e-90df-846c43b327ae",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6729f006-905a-43a9-b8e2-517a2a5562d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf246556-79ca-42b7-a201-8b7bc19c0205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4b1126-9e16-4210-95f0-2ee4072a135e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9b8dd9-357a-46e4-89a2-9de650d126b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7889ee-5bce-4962-8f70-cc5d6199c56c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504f7da4-7480-44fa-8a89-62612e738236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5924df8-2976-4e9f-8d44-a621c0f89d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc13155-4364-4f89-8b86-3a09d358ce56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f82c9f-0be7-4eb0-9373-4f32788fd887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219c8fa9-b45a-4199-9183-6db34825cacb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bac90e-1b1f-49cb-a1f0-54c509d29785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8d2c33-dd43-4e8a-9dea-71a725ed0707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d876909-6b4c-4b71-a2e7-ee8e07b9ea24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d185c42-75df-4f84-8d68-4ebb6efe2ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddb9396-25ad-40f0-8cba-688b2128580e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd7bcb6-edd0-49fd-bd1e-bb4c50977d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d47f02-9d8d-43ab-950b-dff281f99724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845cfeed-f8bf-4853-964f-6a93bec1176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6161a509-e361-40d1-b6c9-9e473d768758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1b7e4a-d28a-4323-94ac-55080da8c214",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1b9ee4-0970-4f96-accb-955eac0d091f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6c4f19-4e31-4079-9c3c-ff2b6f52ead6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f225923-9fff-443f-94ff-00f3678c347b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "176f4b13-361f-4ad0-b5f7-16b484405ced"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a8c832c2-12de-425b-b7db-7ecb5b7f527d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eaa3cc30-0d13-4239-9dbc-04e42d32cf07",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d593ecfe-681d-4e17-91ff-4adcd4b603dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fa271f56-ecfd-4cf6-af34-d4faeda8bee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb79f6d-3c4a-4030-acb7-047c0e558a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2d663e1-706f-4f6d-bfe0-301ca76b55a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "612980e6-2d87-4c95-92af-95c951cece38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0219a9e0-1d8b-462c-8df3-2dadfb31a1ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5188ce6-1cd1-46da-aa3d-daeacf09842c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60e1a182-6b39-48fc-9efc-6c5547f25965"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "668e9cbb-d738-4e86-b3ea-15e7554d78dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e4561bf7-9b5d-4301-9881-745a234d9459"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2d8d828-df7f-495d-b972-797909dc28fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f10f1c52-ec7b-482f-9e70-03edcbaf8b4c"
            }
          }
        ]
      },
      {
        "id": "955dc04d-463b-42dd-8b0c-81ef2773f296",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1798dc40-2e33-484b-95b2-64bd6147fff3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4d2b09a-d027-49b9-ab80-80504d06a0be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "383b670e-0d5a-4117-a846-08a7b5d216d0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2d90b0-f4e2-42a2-9f31-e07904003cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e13a55c-0936-4563-8f23-621e4ae5f625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3daf326-7b0c-4d14-9c14-6487e1f7710e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19e2d60-f03e-4ed9-935b-c3fdc52c10e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24ccafa-563b-4a42-9871-df6fa0e2a805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0791ceb8-7714-4612-887b-7d1d0a95569f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d407b8-0064-4476-8c1c-e30e4391d720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2ab6dd-9006-4075-8c7f-e8eaee10feb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17415be6-7d39-48d1-8527-a69f4143e524",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a2ae67-ab19-42ea-bb53-3a1106e3db6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c903594-add0-4b6d-b933-8c4a9fd665b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737f09f0-438e-4f98-bb14-103b29ff2b12",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78481cf1-5843-45e9-a3d3-9f2a952eb605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8270ad04-0fc8-44ea-beb0-135f9d7a10bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa30bb1-c89e-4708-afcc-595225f35d2b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c908614b-3b18-49e7-8b6c-091d5d4d87c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fe3af5-aebe-4581-baf9-5527c6e012a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf5e66c-21f3-473b-aa56-7a53c9966fe8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0d377b-e9bd-4dd0-8581-f36dd6575e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d845e71d-2609-45d1-9d86-549c68b10e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1631524-be0c-47c5-af24-1d5b44ff3391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77ec476-3a85-48e2-86b6-b0362c83d3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cffe56c-0ac6-413f-828c-3169657e8cd7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e42111-cb97-4bae-aebe-4dad3b647b8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b810ca7f-e1b5-44fd-b5d9-0e34088d15a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5b7d37-bb71-40ce-b064-5baeeb3235c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243d4eaa-26ce-4d08-b7be-99268b654f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa85790a-50fc-41a3-9346-c360a6325325",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7710e83f-d5de-40d2-b26e-11e527561fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e65cb8-22fb-479a-bb02-7c2b4c87eb0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f724294-af44-474a-99b3-603ba2f03656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52d9a73-3c43-4b6b-b09c-af25a46d9b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40f2a96-ba0d-4d19-8e71-1a4f5ed13a75",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b327adf3-8c8e-4bc6-a92f-477928b10b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "744df26d-6260-4d3d-a689-f8328237fa5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae8077d-1497-4298-8675-2fc5494550c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d62297-ce5c-433f-86df-bd6fdf61edf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef33b05-2c02-4427-ad95-3e66ba9bc37c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88bce56-2be4-4a30-8401-08f9f3dc8b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9b1e92-87e0-459b-a0cc-4a8926659265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8805b5-7b97-4ed9-b368-1d994ed0c917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4e9556-3133-4c39-ac63-4a861aad331a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151d9588-7a23-413e-a593-41bf3fdb0d08",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8616c7a0-9e1d-4733-b628-443b6c8978f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22647088-e5fe-4562-9885-b8a112ee4c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0686ba-87b5-4492-af75-57fd772102ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa6df00-7be6-45d3-8e0a-85a842a102d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae9c133-1f53-42d8-80da-f4e33bb1e404",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419af712-3631-4150-825e-50c1da83c313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac749c90-f641-44ac-8501-37822f834be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d165f16-c9a4-4445-813a-3cae92cef30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c81d44b-3004-42be-9303-0dba5a8d4011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49225ba-9362-47a5-bcf2-a9e79f66f4be",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb7f47b-3ea5-4aec-9e92-1bf5ffecaf7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42463ce-7a09-4291-97cf-0ef6ba11a2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65776251-074d-4612-93f6-2337743cb801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd288a65-deba-4ed4-88bc-de0a6f7d20ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf6a4ff-5912-49cc-82e5-6bedd85dadfa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c701b6-38ff-4045-8eac-eeb396cb3b46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1682f30c-fe5d-42ff-a6df-d770d5214e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608665f4-c19c-4387-bd54-9156909efb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfe9569-473a-4f1e-a210-d92c0892d8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd51d35-0594-4253-bbd4-09589e4764cb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3ae4ef-acf9-4817-a411-6bd5e9ca848d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a77e11-8fa1-47c5-841b-75a3ee52dfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1100bf01-74b2-4fad-8b63-1ec5fe577030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57c5132-975c-4da9-a9fa-e3b103354ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6720f451-8c1e-4bb8-a914-8fb97a33a919",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0933289-1b7d-4448-a233-27e204f0ad8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40e6e64-69da-4d9c-b73f-04a157e62752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6557d5ae-91e3-4dd2-8c08-fbd9b8d5e9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903f5347-bc94-4c0f-b7af-f0dd1121efa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217b6cd8-5fd6-46dc-8506-5334e68c9a69",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91298ba1-3386-47e1-9987-cbb7da3b4ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec18c54-fa92-45b5-ae73-413bd5f963cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea07132a-b22e-46c4-beb6-f58bcbcd4b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3facea74-f713-4786-976f-1d381956a5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f273c1-6bb1-420b-b990-c8b4e90e0c9a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279f3a15-89a2-4dbe-97f7-c13735ecb97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47d5593-b78a-4ccb-844c-551390d98efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef6ba1e-abac-4706-ab93-02c0ecdc6976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516b8d80-158e-486f-9b7c-31e9f19cdbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce1703d-a3a8-4510-b796-b518246245b7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fdabaa-125e-45e8-9049-6f067b99e95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf009f0-2a6d-4d07-a467-ca265ae619e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe78987-cb57-4913-8b4d-a1a8aef485e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79222ef7-ae42-4337-80e3-edac4c9e1f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff5572f-c9ce-499c-9e60-d67289fbb2ba",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ccead6-e36e-42ac-8e3d-1541fba651cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fbce72-640e-4a60-b683-7f4d56867127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f6a0fd-82c3-456d-9263-07ebc664a7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6c3ac0-ce2a-4c5d-95c4-ecb9e8e2a5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071e41b6-5aab-4bec-bbae-61e6a7f7b0fb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7168ce7-468d-4ef3-ab84-2edc2b47a09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39126b0e-eb86-4032-842d-fe1bee16265a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43701714-7599-4a4e-8731-0cb01ce3a133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070f23a2-a29c-4982-a71a-6389a3b7276e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f66c8a4-9199-43c1-8145-38da3da5ad6f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6748443f-e201-4aff-b68e-2378d0a4c9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d97d642-6835-4de7-a75d-906b307ec7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2473f264-47e8-4870-b678-e7b8582f594b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812b3404-3a97-4c4f-b743-6f773026b762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e045591c-27b2-4200-aaf5-ca1ea39c17c7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafe92d1-2d66-4808-86fe-d8612d7975b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2559e681-8028-4c44-a20b-c47420175be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ae849f-243c-4d88-af13-f8046950ccc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272a23d2-f383-4bb2-b7b2-7195cd228246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa361ba-b1ce-43d1-8b37-e2facbc53af6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53458a07-5e41-49bd-872f-089464b3b253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb26d5c-e614-4523-a667-1e41ddf61549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61148fbe-eb80-4e29-a97b-9c599a804a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23640c31-7c0c-4dd1-812b-df235074a42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d4624d-c566-44c1-b826-d42a51e09b60",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e7e9f1-ad06-4f5f-bc95-ad5e236b1026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f79bb1a9-40fa-4b8a-9424-2865a1fe3c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6008083a-a89b-409c-97ba-a9ca0af2a5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4b6762-7110-4726-9f86-dc6c75e07a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9895f69d-200f-4d77-a401-d4655d6a4ff5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be425690-0707-4ca7-92ef-2788715a63ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b48f453-bc1f-405a-90c2-747b78ef9d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2214ba43-324c-4e1d-ae3d-7050f56b98ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63e93fd-a869-429e-a421-db6e2aee450d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59fb6b9-1230-46da-9c1d-f97f92790cce",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eba884-4727-49fe-ad48-82892a2c5c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57da3363-07e5-4d24-bd66-609310ef593b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35aa9d00-6051-41fc-8282-2b8c2fae426f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40672b4-f879-475f-92a1-0a9c6d71b2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef216b37-4210-4ce4-925e-9068f4c81dbc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871fe519-6da3-4d5f-aa2b-ec4e87fbe33c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c4c91d-a91a-446b-b1ed-daf79cd4c554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b313e7d9-7498-4e18-9f36-34431278bfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c5cfde-5e3d-4eac-a39d-449241c68785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b157dced-c2ac-4413-9c0b-661fe1585f99",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10aa22cf-3769-4142-aa54-77bb1ec12a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1147d27b-ef92-4ff1-976e-c55de9694549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53731f52-7166-4f3b-be28-bb0813a6e83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2df547-5dd4-41e5-9b6f-190e612b3751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d9d0ee-126e-4158-aeee-b91be0436744",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1b0f6b-6e0b-4ba4-9498-6daa0bcc5049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe314f7-768d-448d-9146-d7a2aacc1a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8100d93f-6880-4643-96fd-7597156f8f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5959f361-7974-47db-8785-bd998c256a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cd7b61-ee54-4b1b-a510-f137e7c955a9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cb9f68-de3a-4270-9110-863b9cbea6c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a9c0419-0e32-4b1c-bc90-467a98a77447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c313aa96-db48-44d0-83f4-942ccbd64820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a02a4e-cd49-4f24-b166-d871b0dca3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547a7727-e55c-423a-a98f-2e715655a429",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc69e41b-5000-49ae-8b1c-9b8ab3d494f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b735e5-5205-4a62-963a-2948d11f12e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7778abd4-ea29-4e15-ba19-f0d14dd54ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2422e5-7d1c-4fc2-8df6-55fe615dacbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46f041c-a8a0-4271-9b47-f14ef2c05d19",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2022e9-20c1-4532-97d7-92b650e19853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52ba7725-30a6-4636-a538-ea6b5825c0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48811a2-0d9d-4b4d-897b-a16f0edc590f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf6fc37-7574-4213-b73f-13d45feea68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d26340-eaad-4c10-8b4e-bbbaa1474550",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2d7a66-5540-460e-9ecd-4ed9715d8d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7b2d59-2622-4f90-bc13-7583e3cbd457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f48059-e464-46aa-9d8f-a779efeb8559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe53e8a-7d4d-4dd1-b6a0-117e282886e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78144f08-6aeb-42ef-a4e7-285474b7fcb6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9768de34-cc21-4805-bfaa-1a9b45a0c43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06a6c05-1c81-48c4-993a-01610721d951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b44dad-73e7-43ed-9a17-dd3df495018c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c878734b-9564-4e41-a09c-d3a2832ec433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2570e9e8-e44a-49ec-8a29-1529271fcfa8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b978efe0-57a2-4821-bc00-3ab32f7b9a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f173a70-5f35-477d-b0f6-42eac93cdd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f66b7e-3b2d-4a12-8394-e04c23629739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba74142-04b0-4920-872a-cd6c90458b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a843766-86f0-4f08-8ef5-87b4221e4184",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de288d8b-2c61-41e4-916b-1834902680b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57814ad8-846f-4d51-84c1-df9cc54e5da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114aa71f-6683-4483-9160-67ecca7ef7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcb864b-1773-4a05-ad04-44c8a8e7bdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840227a3-ea75-4bb4-92dd-001a018c90c5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5fa6de-17c0-4f30-8595-0362cf6a8c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be163b9-6275-4bde-8f67-3431282c3ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f53dbc8-16da-4ea9-8ea4-e6ad3444a9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb94802-3da7-4a34-a016-78bb0cc388c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f74b3c7-a7f5-441d-b67a-fabec9671d70",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cb7a73-99f5-4614-a283-8658e7365165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8def98-4bd9-4f07-b796-c9afdc45057c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4596d7e-55ae-4722-bf80-fe17f8ad504e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0699ef17-38a8-4921-a38b-2c266b25df8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3f7e2f-ed14-47b9-8cf7-2a11c2dc94ab",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d3a0a7-2e5e-4ea7-94af-0d5a2ce246aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878fbe22-3f7a-471c-af1a-2698bcd1c5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f07767c-c758-4a4f-b843-8e3855fda0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543192cd-042a-43bb-a36f-cfe5ed6511a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30095a5-eb7e-467c-b975-fd1107f199d6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7335ef38-a704-431c-843e-b62752b8b5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7785cbd1-eb69-469e-9020-a1b0fda2421a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c69a87-0e3f-4fdd-aed7-f71099a99f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d0089e-c069-42e2-95b5-5c69cba40ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2381e5b2-3f66-4546-862e-1e19099fe88f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c128f0-7197-4ae3-a333-730812665371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2c52f8-dba8-4a06-b023-8b5b42ffe785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebb847e-8af2-4930-a503-b5ac8bd28170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d488c0-399e-43cc-9ffc-65c9cf61f904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d504b2a9-2bc8-404b-bbdf-53e37daa1b47",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abdb266-4802-4d6c-8d5f-4d899e742c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898726bd-fb15-4920-b4b0-9d72f47f4bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3038175a-b9af-456f-8376-d30273fcb698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f72b1bd-3aaa-46e1-9b97-87d2d85d299a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2055365d-6313-4206-b938-89e9b5f1a800",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1224484-ebe0-4eb2-a351-32da3ab24e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45630c68-9701-4781-973f-ff091127ae68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebbd3cb-a49d-4112-b3b0-fd91a7296793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe04ea6-aa18-4dc3-a98f-d78d7a51d42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d93b9a-97b1-4a3c-ae48-473022892102",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb31d5d9-9843-4be7-9ba6-16373b459d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b301d1c-373a-455e-b1db-6184bfa21c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6a9bc9-4e5c-4fd4-8a55-a327d4b04b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26796df-0381-4c77-bdea-976deaf7dbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392078c7-e5cd-4703-ad4b-7561c5ec8175",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d9e7df-c436-4fdd-874c-58e499412323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2c8791-80f5-48db-870e-a2b5b9942d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e70d991-d9f3-40e1-93ff-8cd5d2241f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d4208d-782e-4902-b2fb-9a157343c201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f820949c-7637-47de-af85-0445c9708a11",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c65c19-d75b-4fcb-9215-78ff6776a668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78647d5e-8ca6-4b96-b6ba-6029713f9648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ca5720-38d4-4d89-92ae-e2265279f40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1330b81-f2c6-40af-8f45-19927560a65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790f26d8-4d94-4a4d-8e45-a6ed5a4078e6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b481538-a353-4977-a78a-d39a9f16c3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88185330-34c9-4124-81b7-32637af3c01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1641e3b2-713e-4026-9423-7dc354e1ca5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61715b1a-ab8b-4087-bbb1-376a171e1b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a117d7-c5fe-4bbb-8618-d95968c4a4bd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d291435e-1294-4c72-8005-8f82468a761c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5f4bed-0cb5-486e-bf70-59a0857ca684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a9cc84-f9c6-445c-a16d-8da53bf24442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19316f48-6f29-482d-b26f-97884155c05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfb039e-c6f4-45d6-9713-86f0fcc7d75b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289aa08d-e9f4-40ce-a065-26b5d1a33d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40cf16a-b81c-4615-aab9-14a37a24c0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fde5c20-ca7a-4fc9-981d-8b38590c0bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee28a8b5-ca8f-49e4-b22c-26ef0c43f826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec53446-b16a-4fee-ac24-bf0a2cbda747",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3949a7ca-a306-49c0-87a2-6acc0ff7f329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955d8e5c-d9ed-4b89-9787-aa381d211ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04055211-0df6-4950-ae25-5183bf57f531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d296c979-040c-4566-8136-e8fa872b6dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10389c3-2d2f-4b7a-a240-c1285184334b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5fd652-fd5e-4824-9af2-3b7be1aebf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42805bd2-b284-4cad-8612-9581f51ff8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1471a5a-b5e8-4187-8c33-772a62e00487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc028a6f-49ac-4ac6-8ab7-302616bf9dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737f7be3-28ce-4717-b3c6-ba37637667a7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2271c7ca-a382-471f-a2d0-04bd6622d204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e642a2c-25ac-48fb-bc30-1c8ab1e4f4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6f7137-5c40-4548-a588-731c3cc3622a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3618b317-fb9d-433e-a64f-19eb95ef8fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f602711-5eeb-4d41-8895-bd14bcdd02dc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc9ff95-986a-42eb-8bfd-0550d9c20280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b4909f-5e33-438d-87bd-4864024e95b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeed590c-fc1c-4181-b24e-b98c66fa154e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73a2294-be8c-4249-b144-6d2988ab0787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f18453-acbe-4a2b-be12-540ffd3cc0dc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7151986a-0a25-4cc2-a7d8-b1fd4fd8f5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4513d3e5-276f-48eb-b2ba-0677ccf712a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84645d99-fadd-4919-bbaf-ce06b7177013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d989ab-807e-430d-9153-fbfcdfefc446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da88392-8b6b-4699-85c4-7158dab2efc3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a3d108-0ba2-4d86-9e15-09727e625634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a279163-baac-4f00-b2ba-59c42d4d42fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c428fd-76a6-40a3-80c5-8e127ebf7e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51873d25-7f28-4220-844d-f86073c831cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c567439b-4cbd-4fa7-83db-3dd2c6135c50",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f9ac75-d0fd-4000-b906-e7904c5f68a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35037c1f-2337-4d9d-9655-5f45e705263c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66698c8-fc8c-4d1e-9e5e-241eb45b731d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8baf4eb4-f881-4fff-9eca-86ffa19fa037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eae526c-f5a8-4c14-9929-528421ad4bfc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901f80e1-e656-4c7b-8d92-86f38931337e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130115ae-a79c-4f9d-acb2-18cd7f50f6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce710163-9aad-4bba-afdd-6f039165a8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0264b50e-db51-476f-964b-0bf77606e0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55454a63-8117-4cb4-b817-52d53244db1c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9a4210-43fa-4153-9711-fe4272437f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245999f4-b2f3-48c8-994b-5dec32725ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6e4e60-df8b-4c36-8b66-b821db482b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0efcb2-1d96-4e1b-8889-9ac9a91f4896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd94e48a-ad05-4a5a-bf2b-4985b217d3be",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f473c028-3bd0-478b-8647-2e16f7cc6a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382f1379-4bdf-4b5d-8a5b-1c3eec734d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc70639-138a-4d23-8979-78a56d57195b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c44150e-8ab2-45ae-b0c0-94cbd29af6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b21d79c-7a75-4151-aa57-079a4f31fefa",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9610c299-0096-4e13-99a5-6b5f2ef5d566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e02b12-387e-4c41-b5b9-f2342d8bd5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1784052a-400e-41f5-835d-702c015fd7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf428845-4cd0-4322-9c3a-aee84f505977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b488063a-4925-411a-be36-5e6fcdfc1b13",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c47b69b-c382-452a-88b8-05a3d333a2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fa3124-142d-4384-994d-003ede7eb712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b016d946-7544-4928-8b40-e457143ceed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d54dde-7fb9-42c8-8ed3-51e22609ee24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f878cff8-dbed-4be0-9088-e737b7663335",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86587a1f-4072-4993-9320-4c79eca91044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2867269-3c2f-4f63-a1bc-83f08b27e2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f25efa3-96d2-4ec2-be65-b63ffcdc3155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac68b3f-ee0d-495b-9292-756a0c8c5ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab5969a-7ff0-4085-a483-cfef420d473d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dc00c7-32d4-4b08-91bd-598e42084b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783cc2b9-1bd8-47f6-8ed0-207e7001ad95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c912db1c-bf88-4b35-b127-55680e192921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeead061-dcb7-46b1-93a2-f38165b37cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8701d9-ba92-44c6-9570-caf84fbd65df",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4eebe8-cb91-46f0-899d-82e9756c8ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bd9365-9dbc-4bf9-90fb-cfd7530910b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664858e6-e6a8-4e5a-8b4f-8c10e9a429b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a068c7-5e54-405d-b5bd-9ec1f2ff0559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96258979-a611-4b55-b572-1e074bd019fa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4b771b-97e9-4440-adb9-f4005aa769ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c56bf0d-0352-4f86-b13d-be1fc2a014c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d895c8-8cca-417b-ad14-948f004a9caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74273de-583c-4791-b125-cb808a634d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07907c2b-f046-47c8-9199-249957faa9b9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1a34f7-288d-48a4-b375-b72c7d765bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312ef128-5c3f-4df8-a576-4910aa853a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22cf288-7ad8-48b2-9f37-fa2baf3a47e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2936d4-28fc-4e77-a091-ac892ae0af7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d721cae9-bec5-4856-95be-2b39e67b62d2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bdf797-87bd-48fd-a09e-279dfa281a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e865e4c6-bc67-4218-9bca-e958d0815cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468e3674-3c3a-4d77-bc23-07bdd36f3369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c10da2f-9ace-4e6d-b585-99c85d26aa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43995180-9c9c-4f4a-b08b-348636718fc0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b16280-2f1c-4621-b896-9fb7efdbe177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ad74a7-67f6-4cd7-b7ed-7a4a1ed73732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc6c8c1-779d-4b80-90c4-625cfc0729c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b46366-9bda-4e16-a354-4a8ebbcb3c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5e304b-c454-41ea-82f0-4dddf9b19f2b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fde4b10-8319-4573-8c53-64f783540a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd8e3afe-d488-4e64-a64c-98dbc01aa558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1a33d3-9688-4e9d-b645-3aae4e69c8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b29a347-adc0-4ce8-84eb-eecea697567f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bfbbb0-107a-4355-83b6-5d89222f0481",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c17a22-ce0a-48b6-9b8e-db4c318b7e80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d92d8f1-77df-4ca6-b334-738f30eb9955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6dea6c-87aa-4463-a59b-d5ac2dcaf384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d90868-7056-400e-abdb-86297726f386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c335cd2d-6480-462f-bff1-61007ab67aef",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d364f191-3aa7-4f43-a055-cb558f180998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d672f179-dfa2-4d69-9879-550f51aa2eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc20245-300b-489e-aca6-e93e2fb474de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1359a1f-28e6-4b89-aab3-f2d30657d85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d765b4f5-6cff-4ee9-9f93-61e7a7406dcc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8256ac2-82c7-4041-a127-db0b302aebde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f393c74-a8c6-4161-b033-f93e4c9c92c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2a7d69-d505-4e7e-8cc5-939fb6cd9d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438c6a04-8543-4ca3-b8c0-3877a9fb449c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d499ca8b-7739-47fd-9b22-f54da2abf15b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe02818-bc4c-4e6a-9208-d87ba4a6551e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56555c7a-d455-4b67-a04e-d97dcb28458b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8c8bed-5576-403d-bb86-0c0a276a95c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8251e4aa-bf54-4b30-8237-6de0992a0fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fdd8c9-25cd-4900-a499-563dac453a31",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa67eef4-87e7-4c6d-be6e-92c971e65f9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47db91a-c70c-46b7-8c0a-96c0efc8a425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a00b59a-3fb1-4ff1-88b3-6b8332a4c70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eee725e-79c9-4ef9-a1d1-f40235a1bc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12eded2-46f2-4fb4-9bfd-657065f98e4e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fd37b8-95ec-4a23-b9a1-f26e97ff8761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcc1dcb2-052a-4fe3-8b5c-83bc82dff72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fa9dd6-bbdd-41ea-8ecd-4708556b0bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6a81e7-10dc-4f96-b22e-fca467491fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29a3ce8-142b-4608-8fff-82c83072acf4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4405209f-636c-4c46-a49b-2dac4c22e631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a38d4c-21f8-4626-aa7a-07ad80aa13d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da10f004-40bc-449f-91c5-3cf12305e96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e585b25-caac-4fc3-b139-48833c77418b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6373ac-8147-4923-b6c2-b7108bde7a32",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a239390-7e1b-453b-bf65-67df7a4c963f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7fdafea-82e8-426d-8d26-c6ea71e46232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63c0e59-5521-4815-a269-e203c39c8d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49ce74a-bcef-4301-ba2a-de18f4f70946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5798bf-90c0-44b1-a371-f01faff97966",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf38c8c1-5e90-49a6-a030-1e70176aceea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074532b9-a0ab-4866-bdf3-78c71a49f278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf62afd-0bda-4c4d-adda-e4c0be7ea6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431a8f57-7434-47ba-99ba-7e5f0c7efff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb33dc3-3dcc-4d55-93a4-22407a5a2af8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16c4c04-835d-4c82-82d0-763ae42476fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4302227b-ef1c-4ce6-a50d-7aa1c501f8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf725bed-97d8-4f8a-a512-9686777fd80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a357395a-02cc-4540-9ac3-b845ea0c4c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260be5e7-98cd-4f46-a92f-3a6f4fe7665c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0435832b-18df-4c37-8b0b-cf6e27f5defa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f7ae318-6c14-4069-bd38-7a533f3adce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363da21e-1eeb-4dd2-8c83-d2a616b31666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd24a93f-a8d5-4663-a381-3a744fc994d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da59c47-b769-40f8-ab12-8a5ff4568f4d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66077d50-b48b-4dbb-81e1-a15085783830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d61b2116-4d2a-4661-9b6b-e6e22d985cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41c247e-fb94-444d-818b-de79319d06f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94cc1f5-eac1-48b7-a52d-6387dafea8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f221d15b-21ca-42f1-813e-e37bcaf9c104",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a6c7aa-c50e-4ae3-9d1b-490fa6c137c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfb1ee3-82e7-4e6d-bfde-1f6eb6113e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541df721-c43d-447b-a33c-c5cd03e4f9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5d7bc5-6f77-46c2-9195-d9ff75f4e596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67590203-4cf0-49e4-adf7-d8f69b687375",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05d3bc5-706f-4858-9a2d-08efd9220798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad81aa8-fe2f-42f0-bcc0-6565c128e36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb574fc6-e6a4-440f-a07f-a2a8e5adee27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8827429e-944b-4a9b-94a4-983c81ec4348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635f35d4-cf70-427e-a36c-216531f1b09f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babdf93f-14cc-4da3-b685-f1e17c29d21f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82830b74-8753-44e2-92f1-f90453e2e83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be59521-6309-459a-b446-9c3799ad2a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace83fbe-711f-4c08-ab66-104de3a2aa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9267dc-d6a0-4b92-ae2b-6c153e491008",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a235127-3416-4b49-87cf-70bfe9b64e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f225f7d-cbae-4b97-abef-aa2361085c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455804d6-6156-4660-af47-a0f078318bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e605b2-522d-4e46-8cbc-f205bb224d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6cb4b4-1c62-4096-865b-65f861900638",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a491162-96e2-4331-b4c4-0ad9456034ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c7f9b8-9b33-47fb-b337-16010a5132c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a52180-f3ab-4b55-9f0e-614380f21566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00de3e75-60de-47eb-81e6-94663626de0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d30208-3704-4e7d-aa9d-e3ed05bc72a0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2059967f-aff1-4102-bb76-b51882a4325b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872ae2f7-5ecc-4698-89d4-77ee4bec32be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33a6d01-495b-4fcd-9974-787ffa686061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcff3a3-2334-4b82-8b11-da97b1939e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85107963-5cef-4918-a936-e26c664df921",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda06fd5-39ce-4967-8598-2299d629ec92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df18f09-25e3-47bc-9a79-4a3f919cfa0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fefd70-1f58-4c9b-a5e4-207334773cd9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c23457-4846-4da2-8e73-9aa6a8d3eb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e836132-f0ba-49f1-aa37-2f85209e497c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c9a747-85db-441a-847d-0b5e21c2166d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aee8188-f976-4b54-bceb-7d464e02b74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd291be5-4275-454d-a825-77b71209b9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d16c51b-2910-4d02-afe5-6876c14e885c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f508339e-a344-4fc8-9d71-6f44f36e9198",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f92178-256b-410f-86bf-251772a86d61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7b24e3-1196-40e3-8577-ea8a216b3741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55ef26f-c048-405d-95d7-5ca4deb4d468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970b5382-1339-4500-926d-9b543829bb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1f2a2a-0cb3-4086-8529-9e7bb9c270aa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45559c55-fc68-4b47-b9ed-ee1e0311af20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c660ca4e-b7b2-4ee8-abbc-25d1658192b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a96122-fb9a-463b-b48d-9e5c763979ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0669596e-ca38-4a9a-93b9-fa26358440bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25191236-3769-4134-9e67-6a58e573b686",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd785b6b-cedd-42c4-b99b-3520b6d703f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f4856f-20e4-4015-a07a-6265d0025de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c33c622-9171-4035-b548-e254ebb32feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11dc5ae-35cd-47c3-94e6-9545f03cce8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f7c4d0-2a14-4e5a-b61e-a8cada1471c5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c122c4-a58e-4c02-b1cb-cba3af984655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b067c2b0-bbf5-40df-87e7-e23514e48795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd159d65-a9d9-4b4e-988b-94b92680903c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e85be2-5879-4b16-8713-bc95366ada3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ead142-308f-46c8-b217-d88df621d906",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63d1fa5-cccd-4a71-9453-66621f479324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66794bf4-e3eb-4f65-81e0-2bc18d072985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967b4114-582b-4904-ac7e-5063527ae7d8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a93f97f-88be-443c-9955-0a1594c5c2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db155180-6660-4037-a1d0-c46954c02087",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8bb084-7a9d-461e-baa8-b0b403ad3f43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc1f8bb-b6b0-48b1-af4e-56592c1d9fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd751304-310e-4236-8f8e-24501fc5429b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61545be3-1138-4277-b169-d5c3aaa6c52f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52a05d31-2174-4192-9e87-4a518196b3b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e7632a3-db75-4595-b7e9-dc5664ab88aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abd37a8d-8d71-4121-a7c9-6a812a17b832",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0640266e-7fcc-4be8-a947-8bf88f7806e3"
                    }
                  }
                ]
              },
              {
                "id": "4c0b8de0-56bb-41f7-93b0-e20f2d959e55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aad980e3-122a-428a-aa59-a23fd8c696a1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08dd46f-83b5-46bd-8ba5-ed561e0f820b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "825d5817-8151-4c5d-a230-e4432635923d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ce7036-332c-4cfe-bbcc-29767652cfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1777835f-2283-440e-aa37-71f64b7e439b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80d36c71-f416-4ff5-a608-8fea7ae73f26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1694e6e4-ad36-4a93-a423-9d731776d332"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3643b15-693d-4096-b224-47d097f1c805",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66694091-2e8c-4802-9b40-4d6bc289e56f"
                    }
                  }
                ]
              },
              {
                "id": "73323e07-cf56-424e-8bac-8f639a655e89",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dc61805c-c9a4-4762-b410-b17c53f108a8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfea33e-716f-41e1-ad7a-ab39bace64f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c0ea6ca3-f22e-4960-913f-3d8c85c7dbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30920ff-b31b-48c7-873e-a4250dc33d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efdcdbf-71be-40fc-8c2b-89abddd4059c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c6c700e2-0dc2-4f38-bac2-94f9f6cd8a9c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f4305ac-6bdd-428d-916f-6befc58f1d42",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8493e9a4-19d3-42b3-9954-25683646c58f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "07fac2e2-b20c-49f2-9c1d-05e63dc77cea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "412934a8-202f-4482-ad62-2a3e60f923b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f3dbe07-8aad-4ba7-9bc9-1c077c7e51b0"
                    }
                  }
                ]
              },
              {
                "id": "c4293ce0-483a-416a-b4f8-451403b55b52",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc12a315-50e2-4ba3-99a1-fccc0f607eb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd8c48f2-76dc-4b9c-bf9d-71750e40b267"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca9f7eb7-1d5b-4746-a87c-3df94f47a522",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e594356a-6537-4d55-9c98-a4459a95f574"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d983be9-84bf-4a09-8c44-27f92125f8f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9fd09375-737f-4c8b-825e-cfed7eb065fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44b8e2d3-bdd2-4233-9c00-84c479c59724",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f97eff4-16f3-403e-82d8-a61ab3593378"
            }
          }
        ]
      },
      {
        "id": "8ff33d48-069d-44ab-88ec-093e8c64bcb4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dffa2ef1-8d94-47e8-b320-d47f31652209",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bcf25d1-c2be-44bd-ad5d-c4297c32030b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a315ff1-dd42-4dfa-8362-028c1568ed81",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8acf7b-c5a8-4a21-b272-9dee4ce9d714",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3d3ca2dc-bdbb-4d1c-b4fc-aa809d6f633d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250a968b-8aa2-46d4-a201-99ff2674e94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "deb841fd-90c6-4b21-bf35-a7adc9da0f23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24269507-5e55-4c65-a364-b511086f086b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a49a065-84ad-4515-9566-dc5510cc0d69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "812e9747-e6ab-4464-9bcf-e58ad6076375",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df88e89b-d939-48ee-9903-c9767bdd18e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c43bbb4-9741-43e7-a0d1-1cf56f5bb30d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "536e08f2-5ed4-4662-a310-80bcfe6605aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a7d4133-e21c-4339-9deb-3f71f0c872e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e86f7a1-3ae1-46b8-adec-52687bc85345"
            }
          }
        ]
      },
      {
        "id": "0994f36f-2263-4388-bd91-5a4dddfe38e3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "59525581-e946-4a5e-b06c-65d152f215af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e977d81e-da73-45b8-af81-e5f0acb46b7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2b7aeec-bca7-4b09-9892-3f43710ad346",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b8f311-c2fe-4c7e-917e-128ca72302c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fae4191-2cd3-4c33-822e-a254e983515c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8ae1df-f0c8-43e6-9b4b-15012d66a17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7c40139-097a-4d4d-ad23-7811b2f9c8df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cb5caba-4a6d-4a03-bc53-026d501e582e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95dd8c23-0e62-4aaf-9ab9-99ca4fdff631"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52fe4ab3-0cd0-4072-a600-4c67041ecb2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "317e5bd3-3662-407a-a3e3-2a5f1464be3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c3f6066-78b3-4473-a057-fcb7f99aafca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a0e7492e-c18e-4995-aff6-6a3ccab49c2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3f956f2-7c80-4af1-8e9d-92491ceb565e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20b8e7c3-e45c-45a5-896d-bbdc0c8d4131"
            }
          }
        ]
      },
      {
        "id": "d07cd24b-760f-48fd-b23f-623f65564fe9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "52d49185-c917-4ec2-b9d2-3ae87209436e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c166114f-853f-45e6-a181-d77a3a4c1d37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e27f1bf3-5ef3-4875-a3be-b185a18c1e54",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29ec0f8-9d1d-43fb-a410-c6b12e168941",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c78579c-b6f8-4bc8-bb6d-ddd544e8d562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73d6e33-153e-474d-863a-1ed560cb5f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e680e7a-01d1-473c-979c-ceb8838873b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd8934dc-cd82-4317-bf41-30a286726062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71b7ddd5-f595-44ee-b2f4-6f5c68deb179"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a36aabd4-0857-496c-9364-953348afa758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34cb932d-2385-43b6-a647-d6995d43c5c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c177cc8-b6c6-40fc-bff0-b81f1e0b793d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bbf2e3d7-cdeb-4336-82d7-86c4209df6bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f37bf2e-7447-4bca-8a8f-7acc8c3433b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d65387cc-5ee7-4903-a985-d57a658c3dcd"
            }
          }
        ]
      },
      {
        "id": "fb8f0ba1-cf02-4150-a65e-c5eed74dc10f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a27ad276-96e6-417a-aa81-d482adb13bf7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b567d8a0-f370-4577-ab54-22a13c87c792",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "297d26b0-084e-49ee-a3f9-4f267c7f1db5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a48f72b-5ae0-4be1-b466-eb5276c5d1b5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a884f225-6faa-494d-9e9e-a060e3de8445",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 75.56746031746037,
      "responseMin": 6,
      "responseMax": 608,
      "responseSd": 41.60547188021554,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727571056079,
      "completed": 1727571083638
    },
    "executions": [
      {
        "id": "8c94cc0e-9321-4f67-9a06-54e3838aec62",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "55e402d8-0ef6-4595-afd1-0df37a3ef711",
          "httpRequestId": "8206bf98-e648-45cc-a48a-517bfc268d0a"
        },
        "item": {
          "id": "8c94cc0e-9321-4f67-9a06-54e3838aec62",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9d3db41f-4ad3-404f-b4bb-011ebb6d5ce8",
          "status": "OK",
          "code": 200,
          "responseTime": 168,
          "responseSize": 0
        }
      },
      {
        "id": "e10cbea1-d503-4f88-84bf-a03c9d5eb23e",
        "cursor": {
          "ref": "3509249d-c72a-4ba6-9bc1-0d4881994580",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "802a77a7-1f62-4cef-8f7b-6b9ee5405452"
        },
        "item": {
          "id": "e10cbea1-d503-4f88-84bf-a03c9d5eb23e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5a301b27-1d7f-4583-a65e-44f8a7f6f7cd",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "cc9bf688-813f-4605-a27b-3ed549a4e4d9",
        "cursor": {
          "ref": "54109b28-d50c-4924-8acd-2e1f3cadad2b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e1090601-35b7-49a6-8ab5-9372bc337f54"
        },
        "item": {
          "id": "cc9bf688-813f-4605-a27b-3ed549a4e4d9",
          "name": "did_json"
        },
        "response": {
          "id": "5c6e5e6f-e60c-4a43-af14-55a96c1a55b7",
          "status": "OK",
          "code": 200,
          "responseTime": 367,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e146ffce-7896-445d-bece-c0f598194b9e",
        "cursor": {
          "ref": "11305995-6670-42d2-9b75-b3b249ee4a2d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "785536cc-3cb4-4c60-8afc-65eb08e55b1e"
        },
        "item": {
          "id": "e146ffce-7896-445d-bece-c0f598194b9e",
          "name": "did:invalid"
        },
        "response": {
          "id": "8bc34a8b-f185-4a88-8cc2-5f36369a6f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e146ffce-7896-445d-bece-c0f598194b9e",
        "cursor": {
          "ref": "11305995-6670-42d2-9b75-b3b249ee4a2d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "785536cc-3cb4-4c60-8afc-65eb08e55b1e"
        },
        "item": {
          "id": "e146ffce-7896-445d-bece-c0f598194b9e",
          "name": "did:invalid"
        },
        "response": {
          "id": "8bc34a8b-f185-4a88-8cc2-5f36369a6f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bd3bd5-a710-46b8-a391-cee553663514",
        "cursor": {
          "ref": "c165dad3-6f54-43d1-bd5b-38c8bec07cb1",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a42b4ed1-f8a5-4127-a399-aaac9138afef"
        },
        "item": {
          "id": "56bd3bd5-a710-46b8-a391-cee553663514",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "344abfde-2ed9-4267-9161-919b70134540",
          "status": "Not Found",
          "code": 404,
          "responseTime": 146,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21bf4ed-0af1-434f-9cac-025f44d21a9c",
        "cursor": {
          "ref": "71fb682c-ff34-4267-8584-eca9ca32b717",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d929360b-0c96-45fc-8f96-e4ac47787134"
        },
        "item": {
          "id": "a21bf4ed-0af1-434f-9cac-025f44d21a9c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4b77d1e0-ba22-4791-90af-b4b0058a0afb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ad1266-6767-4e4c-9196-85835556eac1",
        "cursor": {
          "ref": "10f35e92-84e3-4adc-ae5e-02782f053c41",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4e1e2a49-4269-4b35-b0ec-0eb093cabd38"
        },
        "item": {
          "id": "37ad1266-6767-4e4c-9196-85835556eac1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "79e07c62-50ae-42b1-92fc-617b7cbceccb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d76cb4f-1cad-4b35-aa8d-403038022de8",
        "cursor": {
          "ref": "aa57867d-01b1-419c-9faa-cc28564fcb87",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c9694808-2368-4f6d-830d-7513074e25eb"
        },
        "item": {
          "id": "8d76cb4f-1cad-4b35-aa8d-403038022de8",
          "name": "identifiers"
        },
        "response": {
          "id": "e4122694-8607-4b5a-bdc6-b35391f956f2",
          "status": "OK",
          "code": 200,
          "responseTime": 285,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa647f9e-4033-4471-8ae6-cf3477310a6c",
        "cursor": {
          "ref": "45210bf0-2d58-484e-9e8a-d55a55d0be22",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "63e6e5e3-2dc4-40c9-9cb4-525f94593667"
        },
        "item": {
          "id": "fa647f9e-4033-4471-8ae6-cf3477310a6c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c591fde-78cd-4988-a302-988d260de137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53e70b9-1ebb-431e-ba98-48c59059889a",
        "cursor": {
          "ref": "3025260e-ffb9-44e4-a253-05606dbf2ba2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "25f105b4-39ec-4be5-b7c3-3f4b863c0629"
        },
        "item": {
          "id": "c53e70b9-1ebb-431e-ba98-48c59059889a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "53640617-1ce0-4cc0-bd42-3c6287b0a022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b346f57-7e3a-4748-8d24-c5ec58a0ae78",
        "cursor": {
          "ref": "257f796d-be87-4238-8721-a093bf9ad428",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c6cb6639-093a-43da-8dda-65bcf80ffe45"
        },
        "item": {
          "id": "5b346f57-7e3a-4748-8d24-c5ec58a0ae78",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2a12a3c7-05d2-41cb-a362-c98dfe364db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21c28ff-518a-4c76-aeb3-ae685b5187d3",
        "cursor": {
          "ref": "9f6908df-b3fe-448d-a6c6-013de636d259",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "42abbc81-fc44-400e-933a-f3e9a6bfc2f6"
        },
        "item": {
          "id": "d21c28ff-518a-4c76-aeb3-ae685b5187d3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "68442f67-b030-4ac9-bc65-eb89ed2e5be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808dcc26-dd23-4d0d-a7db-b825564fa678",
        "cursor": {
          "ref": "3d0177a7-bcaa-4d71-9d7d-87c99d8fc2ce",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "10935109-39e0-4e9c-9652-1d551ee11926"
        },
        "item": {
          "id": "808dcc26-dd23-4d0d-a7db-b825564fa678",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5f0df8e7-2d2c-4f33-bb0a-0e0895d09ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f366a62-b778-4e1d-9000-ba25af32b829",
        "cursor": {
          "ref": "fee86abe-3435-41aa-ab11-dc65b2cbcefc",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7d2f3c34-0676-4552-a023-7b9f87af586e"
        },
        "item": {
          "id": "8f366a62-b778-4e1d-9000-ba25af32b829",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "67571703-a72a-47ec-88cb-decf83483905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b48bb0-959a-4fa0-af2b-1cfa9e17f190",
        "cursor": {
          "ref": "6b324c76-07a8-4170-900b-02b2f72515cb",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "40ec8468-daaf-4fc1-a058-cd559367c425"
        },
        "item": {
          "id": "44b48bb0-959a-4fa0-af2b-1cfa9e17f190",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1c5a230f-d987-41fc-b9f4-81bed2f856f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b70e9e-3450-4219-903d-e1d63e0fcecd",
        "cursor": {
          "ref": "f14a6748-4b6b-4f0c-8eb1-e5990f4ce999",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4ecda67e-a009-4d62-9de2-ebcbab4c3d3d"
        },
        "item": {
          "id": "35b70e9e-3450-4219-903d-e1d63e0fcecd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8efad90f-9e20-4059-9129-e0172728b8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486dd8f7-1a7e-4dce-88b7-1aa75d707cc6",
        "cursor": {
          "ref": "f286e602-f03b-4256-9c0e-d2db8482d74a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "13d6a9d6-5f68-440f-91d2-b4f07b650d53"
        },
        "item": {
          "id": "486dd8f7-1a7e-4dce-88b7-1aa75d707cc6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "db2cb3a3-890c-4095-ba3b-bb6b971d9e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb320b3-9610-4252-a2f9-75c38c282116",
        "cursor": {
          "ref": "efc246ad-499d-49de-b58c-142b6a29c787",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "618c3707-ca5d-4e33-961a-b50045124fb8"
        },
        "item": {
          "id": "beb320b3-9610-4252-a2f9-75c38c282116",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d85731b6-64a2-42aa-823b-34030b8f07fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986d8d7b-aa16-457a-82e9-f6c8fcc4a6a9",
        "cursor": {
          "ref": "aa4708a3-4267-4085-aab5-e1939ea07127",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f8eb04e6-fee1-4631-8e26-254d8d2b567c"
        },
        "item": {
          "id": "986d8d7b-aa16-457a-82e9-f6c8fcc4a6a9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c50b5b76-f1e2-48b9-8849-0f8f53424f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177a14b4-8d6f-468e-b227-7faaa55d1cdd",
        "cursor": {
          "ref": "e5df6377-e773-4d9c-a332-68e0e47e57f3",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "271eae7c-c498-411d-918c-ede9d529f5e7"
        },
        "item": {
          "id": "177a14b4-8d6f-468e-b227-7faaa55d1cdd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1488930d-8667-43e3-aed9-2d031122fe15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397f6c7b-27e7-468a-96fe-c81a3d552ba1",
        "cursor": {
          "ref": "dc0fe3ea-db74-4d62-829c-f4972b318838",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2dda9be6-b71c-4d11-8ec6-a0132dfdb5e2"
        },
        "item": {
          "id": "397f6c7b-27e7-468a-96fe-c81a3d552ba1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d9282263-61ea-475e-8e94-4821e85f57b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6221289-818e-4a3a-b01c-bec5450d86ed",
        "cursor": {
          "ref": "bf9cf6f1-071d-4ab7-a95f-212b389f8cb1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "89d95343-44a3-4c5b-bf11-7a355b862c8c"
        },
        "item": {
          "id": "d6221289-818e-4a3a-b01c-bec5450d86ed",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "299d0ec9-7de1-4ef6-8c33-da3c91d91284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b859bd3-f82d-4f41-8a59-855c9728a9a2",
        "cursor": {
          "ref": "b724edb3-896b-4b88-b077-b8e69168eff0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "44ad95f8-b07d-42a6-b72e-cc65c5f1f0a2"
        },
        "item": {
          "id": "3b859bd3-f82d-4f41-8a59-855c9728a9a2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "53d51a92-6ec7-4b4d-85a1-62a35ee52b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe0a55d-5dba-4aee-acf5-5b49b61f580c",
        "cursor": {
          "ref": "c9f6598f-0905-48b8-a4ab-528bad4c98ba",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9b8f8f91-d4fd-457d-8475-0e34d54bb603"
        },
        "item": {
          "id": "ebe0a55d-5dba-4aee-acf5-5b49b61f580c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c68c2c50-5123-44d9-b5db-7857999a78d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4211ec-c1df-4bcc-9709-ee756fef8600",
        "cursor": {
          "ref": "30513077-33bc-44c3-82fc-5b04909d5ea4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "10e79678-68dd-4ef9-a635-cf4c17574eff"
        },
        "item": {
          "id": "fb4211ec-c1df-4bcc-9709-ee756fef8600",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "264532ad-a5db-4d8a-ba15-515ff6ae28b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2565a52f-1e63-4047-a196-9ee6202a4a0b",
        "cursor": {
          "ref": "40f80c00-9f9f-4bd2-b25f-a1ccd332ba8a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "13173120-2a1f-4f56-94c9-5362aadd3c69"
        },
        "item": {
          "id": "2565a52f-1e63-4047-a196-9ee6202a4a0b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1ed04c30-f4b1-494c-b9ce-d28a7a8b42c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5487db7e-0d70-457d-a7e4-8715046f2d17",
        "cursor": {
          "ref": "409c1099-93ad-449e-905f-b6b1e9f646f6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0a5520a5-a5de-4462-8609-3403e9eb637b"
        },
        "item": {
          "id": "5487db7e-0d70-457d-a7e4-8715046f2d17",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9b0bc193-591a-4c07-886b-324842c11c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0df7cd-92c0-445c-9dee-b58464418061",
        "cursor": {
          "ref": "c62e7bab-e549-4e70-b678-268c51f0eefe",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9198d196-bc2e-4c35-84d3-0b9bb92c71a1"
        },
        "item": {
          "id": "1c0df7cd-92c0-445c-9dee-b58464418061",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1db6965b-22f5-42e8-b075-45ad38d1fda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccef06e-ec0f-42a9-9e2f-243f43e23c6c",
        "cursor": {
          "ref": "66efa9b2-8322-4b09-af63-52713877f223",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0defef65-6f0e-41ee-9e5c-a80025217955"
        },
        "item": {
          "id": "3ccef06e-ec0f-42a9-9e2f-243f43e23c6c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "74cb283e-1660-441e-a5e9-6ae89c89d3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe498ce-8590-4e9f-ae07-93e0520a8ce3",
        "cursor": {
          "ref": "57d8fa5a-7864-4f88-b71b-dd2451aabe14",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d2c04219-bdfb-4764-afac-1a35afbb39b1"
        },
        "item": {
          "id": "9fe498ce-8590-4e9f-ae07-93e0520a8ce3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cf90b1aa-7e83-4c2c-be9c-cbfe1d51bdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf89457f-4090-4540-a792-6036c3d715bb",
        "cursor": {
          "ref": "bbef19a2-fc0f-433e-b714-0c73faf180d1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "64d1f042-1ea9-46dd-a077-671f9788bb50"
        },
        "item": {
          "id": "cf89457f-4090-4540-a792-6036c3d715bb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a931c350-74b6-4431-ba6e-be5dbe82c527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f920f-7345-42da-a1a6-71fcbd3167d6",
        "cursor": {
          "ref": "44e2a4e3-32a5-4083-885e-f37a6e97493b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8e716a5e-9369-49ae-bff3-96f635951f71"
        },
        "item": {
          "id": "eb5f920f-7345-42da-a1a6-71fcbd3167d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3f01a58b-97f3-4cdd-b676-5e13581f28fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156f8860-5074-413f-84c0-311153152824",
        "cursor": {
          "ref": "0ce3bb6c-9c61-410b-95f5-2e65adc9030f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6fca924a-97ae-476c-8cb7-3f04556ce359"
        },
        "item": {
          "id": "156f8860-5074-413f-84c0-311153152824",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "43552676-b9c7-4860-9743-3884ec13a544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f6076d-399d-4e42-9ef8-8c6ebf6e929c",
        "cursor": {
          "ref": "68365e1f-b110-450b-aedb-c9e07b461a14",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "25db60dc-20cc-48d7-bf2f-cb7b6fa9ab56"
        },
        "item": {
          "id": "90f6076d-399d-4e42-9ef8-8c6ebf6e929c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fd03fb2c-0c1c-4f4b-8989-d17294e55036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2771df1-86a2-4c2e-8ebd-b66dec8800bf",
        "cursor": {
          "ref": "776d3f1f-e549-495d-a3f0-5ac98665ef5a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6afded3c-2ef2-4015-b633-9625b8eede90"
        },
        "item": {
          "id": "e2771df1-86a2-4c2e-8ebd-b66dec8800bf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "55c37dda-3ce4-4800-ad7f-ce8fb77dca51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2bd04e-37ca-4781-8f9f-83441e1d6686",
        "cursor": {
          "ref": "edd1c6ed-e4bd-4b6e-b2fc-0446a465bf1b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "40b87cbb-7758-4b3a-9e1b-92fb11a6400c"
        },
        "item": {
          "id": "7d2bd04e-37ca-4781-8f9f-83441e1d6686",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7a4ff935-4335-4190-8830-5790260def9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5527811-0270-46ce-b33c-7fd34a4cd069",
        "cursor": {
          "ref": "f18da052-80ee-4ed3-8ffd-1ba36a29edff",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6b3b9be3-f133-4b78-960d-d16bfc7a21fb"
        },
        "item": {
          "id": "c5527811-0270-46ce-b33c-7fd34a4cd069",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f18d235e-6437-459e-9996-44c0eade9e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd172c11-832f-4a22-8b08-3ff43c09941d",
        "cursor": {
          "ref": "b5d05885-3780-4bda-92da-03b8ed3cbdf7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "282b4cd0-99c7-478d-bd51-2f3f2111a60a"
        },
        "item": {
          "id": "cd172c11-832f-4a22-8b08-3ff43c09941d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9562a3be-7b16-48ec-ac2a-ad848025eb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5420a21b-522e-40fc-848e-3c1753976154",
        "cursor": {
          "ref": "23c2f54d-7400-4769-93e7-4f1780708d80",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "91809009-5d46-4475-b445-3e3c2b0d3a46"
        },
        "item": {
          "id": "5420a21b-522e-40fc-848e-3c1753976154",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9cf4dc6a-a191-4151-ad64-c81db1cafd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad542f6-6536-4fac-a896-9857aba8d437",
        "cursor": {
          "ref": "5905cb04-8911-49a4-9b44-9d93ddb56f6e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c60b3e98-9449-441d-8926-add1ab152cae"
        },
        "item": {
          "id": "1ad542f6-6536-4fac-a896-9857aba8d437",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c4116a53-85e9-4681-accb-5e4fcd29e730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b913c20-4274-4480-866c-fb7d5223ee73",
        "cursor": {
          "ref": "4fb9c6ac-bfb0-4aea-a6e7-b0b56a5e0344",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "26359fed-b4e8-492a-8ba4-e2f5822b080a"
        },
        "item": {
          "id": "2b913c20-4274-4480-866c-fb7d5223ee73",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "16250038-12be-4584-ba27-21b60ccf6544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111d95ba-b31c-4349-b2ce-49f95d68c616",
        "cursor": {
          "ref": "6cf17653-1eeb-43f5-9a94-feea3c308d73",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "74bfb51b-4a29-48f2-9541-70368f6c725d"
        },
        "item": {
          "id": "111d95ba-b31c-4349-b2ce-49f95d68c616",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7c8852ee-40ca-4561-a6b7-8f92235b57b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da75ca6-8c94-4106-9b6b-afb14efbbe52",
        "cursor": {
          "ref": "a941f7e0-4372-4526-b6c2-2753d85998ca",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9f90bfe1-8c0e-4d5b-8a09-03e4f19a23a2"
        },
        "item": {
          "id": "1da75ca6-8c94-4106-9b6b-afb14efbbe52",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ecf302d0-f3ed-4358-b9b3-6f1894c68963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ba9364-a5f8-440d-a2e3-b420143163a1",
        "cursor": {
          "ref": "6a5128cd-85db-43a6-abfc-f72c30a368eb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f4609c7c-1a05-419c-bf25-0071782c6a32"
        },
        "item": {
          "id": "a0ba9364-a5f8-440d-a2e3-b420143163a1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "adceefa9-6c76-4896-9a04-f320b1564192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e4c085-b573-434c-8bc6-1a206510dc8d",
        "cursor": {
          "ref": "0b3562e4-a2d0-49ec-8d18-09aa68f0f781",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fac4041c-31a5-4d9a-a8b1-361c7cb95708"
        },
        "item": {
          "id": "c5e4c085-b573-434c-8bc6-1a206510dc8d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3f941852-bfca-4967-b560-36f519e5cff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108eb6ae-d5f4-4477-89a4-1eff75890d1a",
        "cursor": {
          "ref": "ed86da0f-c788-461c-80ab-84c28c56c9a2",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "45728803-0a6d-4e99-b077-8324a8d0887f"
        },
        "item": {
          "id": "108eb6ae-d5f4-4477-89a4-1eff75890d1a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8d9e30a6-89c4-4a4f-8178-f9b0ae2740c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b88bc1e-074a-4d4c-92bd-f86483e42e09",
        "cursor": {
          "ref": "d8a6f0b1-1a44-4eca-a7fd-264969dc7860",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "90bfffc3-b1ca-4a75-86e1-76202d6ada28"
        },
        "item": {
          "id": "5b88bc1e-074a-4d4c-92bd-f86483e42e09",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "107c9059-3fee-405d-932e-ad583e164b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20724c6a-2c42-4c40-88bd-c1b474947f3e",
        "cursor": {
          "ref": "b1ab29d4-5d05-4fd3-b693-cd74466db15f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "973dfb35-4fba-4d1f-9119-038a8a472446"
        },
        "item": {
          "id": "20724c6a-2c42-4c40-88bd-c1b474947f3e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ffdd2781-784d-4a47-bc9e-95f8a2dcefbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fee341-10c9-4711-a2c9-62109411618f",
        "cursor": {
          "ref": "b2c3f1cd-90dd-4590-b32c-30564e05b713",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "79d92874-2a82-4612-ab23-9778b44936b0"
        },
        "item": {
          "id": "e5fee341-10c9-4711-a2c9-62109411618f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f30e6e8e-c799-46b7-a6f5-d95aceadb456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3ded5a-e985-407c-a2eb-8e7e52f3bddd",
        "cursor": {
          "ref": "2afee8d9-6afe-4566-ac15-2af7bac9e60c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "02998fca-01df-4345-b4fa-6a35b6421755"
        },
        "item": {
          "id": "5d3ded5a-e985-407c-a2eb-8e7e52f3bddd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6072d3e2-b594-48ad-bb0c-c2f97ecc02fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371a3a6c-d38f-4229-ba27-df2e5cd3abc0",
        "cursor": {
          "ref": "c80021a4-9dbe-426b-99aa-bf80604d5f90",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "950be466-0e51-4af9-818c-3bba80b6ab23"
        },
        "item": {
          "id": "371a3a6c-d38f-4229-ba27-df2e5cd3abc0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9e4d706f-98d0-46ef-9235-149da4893afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6f8f25-68ad-44a8-bcc6-f702bc30eccc",
        "cursor": {
          "ref": "63ac7079-6f6f-479c-ab51-18ff314ddf47",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b543c7e6-11ab-4660-9ad6-6870c40eabde"
        },
        "item": {
          "id": "bd6f8f25-68ad-44a8-bcc6-f702bc30eccc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d509ee08-cd0f-47d0-a7ee-6479f3213984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0448bd-ff27-4d6c-af3a-acffd2697cb1",
        "cursor": {
          "ref": "24542974-64f5-4780-bef2-49e1d2e67972",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2ae1afe1-05f2-4d89-a8d8-ec7f07ab4849"
        },
        "item": {
          "id": "0b0448bd-ff27-4d6c-af3a-acffd2697cb1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "42f8dcdf-dae6-4324-ad29-16fa26803bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecd37c2-fa45-4ef3-84c1-cef8c10577e4",
        "cursor": {
          "ref": "57b708ca-6ce0-4d82-9c4e-8f69de497628",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b17a793-b5ab-42dd-8c59-f256cd5f53fc"
        },
        "item": {
          "id": "eecd37c2-fa45-4ef3-84c1-cef8c10577e4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "12629849-5c09-45f8-a815-3c1d71744695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8ca403-e47a-4ec1-813f-35af0b2b5189",
        "cursor": {
          "ref": "282d22b2-c422-4cf2-8116-242c9997d52c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3154926b-c8e9-44fa-abf2-02a33545c28a"
        },
        "item": {
          "id": "dd8ca403-e47a-4ec1-813f-35af0b2b5189",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "19abce90-abcf-4ddd-af24-c9a58e6f7978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b10e669-f37c-4193-a384-893731382726",
        "cursor": {
          "ref": "20883492-b8eb-418b-9e30-fc065dea8df9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "399d34f4-4294-4c91-aabd-06020d2f6dc8"
        },
        "item": {
          "id": "9b10e669-f37c-4193-a384-893731382726",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d7a5b17f-51e3-4903-9b06-cebf20a34518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656b000d-eaf0-4395-b4f3-ec0d082e7104",
        "cursor": {
          "ref": "1ed0f77a-819a-4f02-9096-7ce38e1186ef",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "32baff1b-f2ce-46a7-9793-850cdd059e5c"
        },
        "item": {
          "id": "656b000d-eaf0-4395-b4f3-ec0d082e7104",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ac28dcb2-4a34-44bf-a230-308e110cfc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9be43f9-d7f9-441f-a162-78e4270fbeef",
        "cursor": {
          "ref": "e8d115c6-a105-46c0-a795-63e4d4f5665f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "feeee8f5-1727-44b0-9d9e-4f08b5f79a5c"
        },
        "item": {
          "id": "d9be43f9-d7f9-441f-a162-78e4270fbeef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8ff4f59c-be39-4cc2-8daf-4b4e8438862a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83066458-8896-4424-a0c7-d3f3bbfb02fe",
        "cursor": {
          "ref": "ef4dd33a-cb2d-49cc-8757-0d3a18b313e8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1bf52ddc-87a1-4071-96ba-79810acd551c"
        },
        "item": {
          "id": "83066458-8896-4424-a0c7-d3f3bbfb02fe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d75cb538-5527-452a-8b2c-da80990c5645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706c0c2c-5a70-4cd0-8a42-c716b83d2ad2",
        "cursor": {
          "ref": "c614013e-5cf6-4289-804d-d83aada939f2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b792f916-7aec-464d-83fc-4863fa504ecc"
        },
        "item": {
          "id": "706c0c2c-5a70-4cd0-8a42-c716b83d2ad2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ba1427b4-7b27-4743-a6e4-9ed0e9e18adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6584322c-48c2-43a6-9a82-8a18170c6e9b",
        "cursor": {
          "ref": "e1bb1865-042d-4683-a896-33ec005f50f6",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "09f05e89-0954-4701-9833-bc7a454b1e07"
        },
        "item": {
          "id": "6584322c-48c2-43a6-9a82-8a18170c6e9b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "df8ed5cb-8e00-4486-9012-04c5e02dc50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fbf80a-fd86-4da9-9581-0caba38d8c75",
        "cursor": {
          "ref": "ecda2f8f-713b-4234-ab45-c821062a36f6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f5d6a0ce-cfd0-4d30-97d6-6428e75156a1"
        },
        "item": {
          "id": "31fbf80a-fd86-4da9-9581-0caba38d8c75",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b5be9c06-c3b8-4d70-8093-165dff95848c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b73fc68-1a85-4514-8f61-1648a0689a55",
        "cursor": {
          "ref": "044dd4cc-9d56-4e6f-9dbd-61bab6200387",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2859040f-e4aa-4cf4-88dd-6e0516179f56"
        },
        "item": {
          "id": "0b73fc68-1a85-4514-8f61-1648a0689a55",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c2b9b8fd-a410-41a6-b3c9-e2474124a792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd54ca7d-8952-4043-bd54-44dafd451a45",
        "cursor": {
          "ref": "7a17e017-fd73-41b1-af0f-11b15fb2d02f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "99048ad8-8f22-4ca3-9fbe-eca2f279affb"
        },
        "item": {
          "id": "cd54ca7d-8952-4043-bd54-44dafd451a45",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d3acead2-2232-4846-81cf-f64df468eade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c25df0-45bd-4511-9edc-b3499a19a721",
        "cursor": {
          "ref": "3eaabc6a-76b9-4ddd-b426-1f444709ab94",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1f5affeb-84ec-4953-80ae-6263785786fe"
        },
        "item": {
          "id": "06c25df0-45bd-4511-9edc-b3499a19a721",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "25153f73-ca5d-4ccb-910d-71cc5938f151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20d45a4-1713-4f54-98c5-ed82da22c2bd",
        "cursor": {
          "ref": "838388a8-d40e-4b1a-8546-3b0c067240a9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5d7dbc52-d00a-4735-9381-8d2f39e1c326"
        },
        "item": {
          "id": "e20d45a4-1713-4f54-98c5-ed82da22c2bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "652710e8-70da-418d-a444-b2b92fceecdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aafb7bc-d67b-4a05-8853-85a11cd3b1f3",
        "cursor": {
          "ref": "bdc7a93a-517d-435f-aa60-352f1c01427d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "306a5d3c-3541-4caf-a203-37aaa1438535"
        },
        "item": {
          "id": "7aafb7bc-d67b-4a05-8853-85a11cd3b1f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e826cdaf-c970-466e-b14e-9b0dd1bfce3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfbb3dd-8bf9-4f0b-ad11-957dbb1003de",
        "cursor": {
          "ref": "d3221cd8-86c6-4ebf-bda5-373a81c299fa",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "61936170-0d39-47f6-a04e-3d8d0d4ccafd"
        },
        "item": {
          "id": "fbfbb3dd-8bf9-4f0b-ad11-957dbb1003de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c826a7d9-5a16-4f0b-b263-af19dc9d9bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c285174-806d-4ec3-9ee6-5fc3eb8e2886",
        "cursor": {
          "ref": "a66bcb24-5b5d-4720-bd69-a84ed999a835",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d43db3f4-4839-43d1-b0b0-e558a38d2845"
        },
        "item": {
          "id": "0c285174-806d-4ec3-9ee6-5fc3eb8e2886",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "578091c1-8eef-43e9-939a-e116fc6bdabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f4fbc9-00b0-4ff6-afa5-17d6a023c365",
        "cursor": {
          "ref": "235afa3f-6200-4ed2-a156-ac62713dab4a",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "47efd5d4-9a6b-4dd0-a799-ffeda647466f"
        },
        "item": {
          "id": "f2f4fbc9-00b0-4ff6-afa5-17d6a023c365",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e3a9f1c4-5dfa-4e6c-8f75-6671b7d29719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629f0fcc-6e64-42cf-abee-3e4053c4ffdb",
        "cursor": {
          "ref": "fb6d2920-c046-4223-92bd-fcffa946eb02",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5bcd9f14-eb03-4e47-bfe8-8ac61eddc5ca"
        },
        "item": {
          "id": "629f0fcc-6e64-42cf-abee-3e4053c4ffdb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2d49129f-f607-48c4-b679-51bea4f5b37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec09ea-dec8-4b81-adb4-441dbc1394a2",
        "cursor": {
          "ref": "049d248c-c2d9-4c91-adc2-982d510703d2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3ea4be00-a712-4d9f-9e91-211e245e596d"
        },
        "item": {
          "id": "62ec09ea-dec8-4b81-adb4-441dbc1394a2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0776f3bd-6283-4cc9-8d42-72cd233327a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce02df2d-c283-4277-b358-f26768c3922c",
        "cursor": {
          "ref": "57414536-1382-4c7e-9858-4bff6ee374e2",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d9c473a8-0029-4a2a-bb72-b8754d204046"
        },
        "item": {
          "id": "ce02df2d-c283-4277-b358-f26768c3922c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "560e59f0-c9dc-4b3a-b873-225bb47d1eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7f426a-c1d3-4e59-a94a-5991e5518dbb",
        "cursor": {
          "ref": "8923a795-590b-44d8-a1fe-2c6d1954048f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b021bc27-1345-47a0-b436-5efd6c975046"
        },
        "item": {
          "id": "9a7f426a-c1d3-4e59-a94a-5991e5518dbb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0dcbff16-999c-4fdf-915c-eb9838383942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51cd8b2-2fba-401a-adf1-60915484586a",
        "cursor": {
          "ref": "e81795c0-35c1-482c-a860-306aad27f072",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "23348372-3df6-4008-ae3e-d372c69747d4"
        },
        "item": {
          "id": "d51cd8b2-2fba-401a-adf1-60915484586a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7a63960a-8fdf-4f1c-8937-ff8b119aaafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34eecbb1-97a5-4329-8299-de522866d1ed",
        "cursor": {
          "ref": "4ec43cad-9d18-4efc-8ea0-9a81052d7652",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bec5c24b-37f9-4f02-9cb2-680f9d1382a9"
        },
        "item": {
          "id": "34eecbb1-97a5-4329-8299-de522866d1ed",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "de901759-2edf-43d5-9c13-d3b8b646fa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70cfe72-7e0a-47f9-9814-333ebb6a8859",
        "cursor": {
          "ref": "b003bc2a-6da3-407a-95d1-99e1a937ffb2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4ec35a55-b63b-4101-a8ab-31299bf8cde3"
        },
        "item": {
          "id": "f70cfe72-7e0a-47f9-9814-333ebb6a8859",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bbb1b5a1-b1de-41e7-a406-d1c95f74d10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0303d6de-baca-4537-9e19-b776c8c88df9",
        "cursor": {
          "ref": "0c4f69bf-e848-44d3-8169-8b0bcd2afe56",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b1f4d2ed-e353-45d5-a67a-9a79a974630c"
        },
        "item": {
          "id": "0303d6de-baca-4537-9e19-b776c8c88df9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "13d92947-588b-4280-b1b3-e5f73cac746d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3f1d39-0004-4c8d-aeb2-52b3e7c04e3d",
        "cursor": {
          "ref": "61792b48-7adb-4edf-a814-2ea4874a8d30",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "adbef379-b731-49d0-9990-a5c6bf4f38d3"
        },
        "item": {
          "id": "0c3f1d39-0004-4c8d-aeb2-52b3e7c04e3d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a5d19799-02db-4e0f-8abe-cc074188ab33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbe9f0c-223b-42df-97e0-ec3376fe71e0",
        "cursor": {
          "ref": "6d35858f-4ac8-4cfa-8871-f78757b80302",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "613c3637-c177-4e19-9ece-d8f362187f1a"
        },
        "item": {
          "id": "ccbe9f0c-223b-42df-97e0-ec3376fe71e0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "16f628c7-964c-48f6-b131-0b6add3ebdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6337db84-2224-42eb-b856-854c9572a9ec",
        "cursor": {
          "ref": "205f62b7-222b-4f50-bc7a-8e1af5a72315",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "895da157-c995-4416-bad8-6999c6d89588"
        },
        "item": {
          "id": "6337db84-2224-42eb-b856-854c9572a9ec",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "42b6587c-491d-404b-88f7-dd60b449c34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333346e2-125a-4a8a-b44f-4c91805b66ae",
        "cursor": {
          "ref": "6e906a8f-c7e4-43a9-a1b2-72091da8aa55",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6e7e9d27-34bf-49e8-8b5a-d303064128e5"
        },
        "item": {
          "id": "333346e2-125a-4a8a-b44f-4c91805b66ae",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "207ed6b9-aaff-45bc-9fd2-7ee1c87d6581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94548e34-e493-4ae6-82e0-c922c30a6c7e",
        "cursor": {
          "ref": "5e51de7a-d645-44a2-979e-73104ab843fe",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "07c2a096-1d55-4cfa-aa21-2e575a4c1d03"
        },
        "item": {
          "id": "94548e34-e493-4ae6-82e0-c922c30a6c7e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "94b1b007-b1ec-4c91-98fa-e42f87461498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465db337-0b32-4aaf-bd44-8e2e19e6271e",
        "cursor": {
          "ref": "e2918459-8e71-4864-8ad9-e9cf919ae777",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6c5c3751-64b9-495c-948a-d182fe6b221c"
        },
        "item": {
          "id": "465db337-0b32-4aaf-bd44-8e2e19e6271e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fefc7f38-6dfa-4f41-b7d6-591d2af74256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d340ee8f-3019-4233-8484-7362df95949d",
        "cursor": {
          "ref": "3a2047e9-4661-43e8-9b6b-a77f01858504",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a5898172-6d2a-4b9d-b42c-b3cad940b3e8"
        },
        "item": {
          "id": "d340ee8f-3019-4233-8484-7362df95949d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "261c8f5f-2f9b-4ecd-97b5-eb16d3c75f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39dd617-6e41-4d61-a092-57d779c2f304",
        "cursor": {
          "ref": "a147edbb-399b-4e1b-865a-2b0b44c88137",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "da661be6-048d-4c65-b2b2-23623bea994a"
        },
        "item": {
          "id": "e39dd617-6e41-4d61-a092-57d779c2f304",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0eec4a83-94b0-4b3b-b59d-c2aed416312d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c591e75d-040f-4b1d-9132-048fb71e1545",
        "cursor": {
          "ref": "2e6d7fc7-a8ca-419e-9d5f-cc7947d6f873",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fc29c024-5c11-4771-89f3-cf923c949bc7"
        },
        "item": {
          "id": "c591e75d-040f-4b1d-9132-048fb71e1545",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a694955c-2347-4f68-854e-a9919b45ec38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bdffe7-4ba4-4b6b-b26f-ab6e65a15358",
        "cursor": {
          "ref": "6ebbf770-470b-4c86-8963-df7073129505",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "054ca8db-fd1f-4344-bcbd-bb3c5912c9d4"
        },
        "item": {
          "id": "d5bdffe7-4ba4-4b6b-b26f-ab6e65a15358",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "503da1cc-fc3f-4cfc-ac55-472fbd60f1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e14dd52-8bc5-4331-b1cf-6425af957ca3",
        "cursor": {
          "ref": "39d08f0f-dd75-4345-b239-67a2e6f649cd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9571ca41-1f1e-4658-8264-66e1604e643b"
        },
        "item": {
          "id": "2e14dd52-8bc5-4331-b1cf-6425af957ca3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8728cd21-ccae-4bb5-a075-56a3fe7def67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63884ff7-92fe-4cf1-81d7-f28536c9ce4e",
        "cursor": {
          "ref": "9596d310-0388-4410-8978-052f5571c403",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "faacaaa7-1dcd-40d7-a6d9-8e7dc593e8b0"
        },
        "item": {
          "id": "63884ff7-92fe-4cf1-81d7-f28536c9ce4e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "33251881-8b35-4d5c-bb83-e47ea3041136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e98689-8c3a-49d0-8e44-a9c1affd07e5",
        "cursor": {
          "ref": "b7cd487c-1cf8-49f6-a0dd-d0d14a01116c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "50c7aae7-3363-4c30-86c8-c81bd8eaa039"
        },
        "item": {
          "id": "95e98689-8c3a-49d0-8e44-a9c1affd07e5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8cbce054-8cc9-4472-b962-aeeb51e6c7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ede28c5-3c2b-4c72-af2d-8089ff5c87ee",
        "cursor": {
          "ref": "78055f9f-f8b3-4516-9ec7-645b65d120da",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "18738314-e7a2-4510-a2b4-9707dfd063fa"
        },
        "item": {
          "id": "5ede28c5-3c2b-4c72-af2d-8089ff5c87ee",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d5aeecf6-89d0-4906-b96f-63333ae5c0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa51d910-8172-4d2b-af88-68cb7351d858",
        "cursor": {
          "ref": "6dad5ddf-d3ca-4c9a-bb89-14c0751c8c99",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e49f44f5-6ba9-4b25-b166-32203bf6ae45"
        },
        "item": {
          "id": "fa51d910-8172-4d2b-af88-68cb7351d858",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "60f75eb8-f816-40a1-86be-f99b477801d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fcfdff-03e5-4d31-8bea-e70ad5ba1155",
        "cursor": {
          "ref": "db047d30-4411-4d3a-853a-ec6ab6123ac9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2b9eeb47-eb32-4330-88ba-54afb1bc7e55"
        },
        "item": {
          "id": "86fcfdff-03e5-4d31-8bea-e70ad5ba1155",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cbc05b7d-bd49-433d-9df0-3f57b543eff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b8e98f-59bc-479b-b726-997eb54ab692",
        "cursor": {
          "ref": "d9109093-c6dc-473f-8225-3f4839b8ceb0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3c2768ef-afe1-4f9d-995a-3002fcf0248f"
        },
        "item": {
          "id": "18b8e98f-59bc-479b-b726-997eb54ab692",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c302e0b5-73bb-4979-879a-3ae9f08105a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53054390-da8f-4144-a2ee-c3cf1cd2fada",
        "cursor": {
          "ref": "07c19494-202e-4cfc-955f-d00d84172fb7",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b7b4428e-c7f1-4df4-a0be-367510edb09b"
        },
        "item": {
          "id": "53054390-da8f-4144-a2ee-c3cf1cd2fada",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a1c76b15-dfc7-463b-a586-ec129475e095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92de7290-8224-4e17-a1e0-6ad75ece46d7",
        "cursor": {
          "ref": "067b85fa-7b08-4bfd-8528-0f5fe997e1a4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ca2279b1-f68c-4d1f-a5e7-04550d5e8379"
        },
        "item": {
          "id": "92de7290-8224-4e17-a1e0-6ad75ece46d7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "462287c5-bde5-4338-b544-96947e12db36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d862a8-cdb0-4ca5-9a8a-c9ec1a0bb500",
        "cursor": {
          "ref": "1c019a10-7db8-4ec6-83be-0b92d054b545",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5edff4a1-8c1c-405c-903c-2f4a09ebcfc7"
        },
        "item": {
          "id": "b6d862a8-cdb0-4ca5-9a8a-c9ec1a0bb500",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ad02507f-6fba-4c07-83d2-cb1cf8b6c4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4201874a-4d57-4040-b6fd-be5d03f4e36b",
        "cursor": {
          "ref": "cda67dfa-143b-41a3-8ad8-ce18258c29e3",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fe4e01c0-07dd-41a5-9f1b-783ad490e762"
        },
        "item": {
          "id": "4201874a-4d57-4040-b6fd-be5d03f4e36b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9cb75b3b-9e50-4d28-a22a-c5a0281cf742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc5ba93-99d1-45a2-9eaf-c11a63a63337",
        "cursor": {
          "ref": "1a7cce16-b29a-4ac7-8f5a-c3990de80780",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d73ba671-4409-4657-916e-02f417489eeb"
        },
        "item": {
          "id": "abc5ba93-99d1-45a2-9eaf-c11a63a63337",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "92f7089d-fd05-4d47-80f5-9e4253f11a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca82f37-4447-4c8e-ba30-3b8d2e37c846",
        "cursor": {
          "ref": "cde077e8-a200-4381-a09d-3638cd50d289",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e4ed92a8-c353-47ff-b5a3-a715c8c18ec5"
        },
        "item": {
          "id": "bca82f37-4447-4c8e-ba30-3b8d2e37c846",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dfa49160-2551-4a09-a995-f53a53c45c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6bae77-94b7-4e1d-ad55-32bd0313be61",
        "cursor": {
          "ref": "e38ace78-1f4e-4552-b999-55cd3efce328",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ac952ee2-ba11-495a-933c-343978732508"
        },
        "item": {
          "id": "6e6bae77-94b7-4e1d-ad55-32bd0313be61",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2937933f-6beb-47eb-a1bd-3e219395a597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d0442687-025c-492e-a5e6-369973ba3c8e",
        "cursor": {
          "ref": "6d3cfd78-4911-42d1-90cd-32954e81ec22",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "99461245-e39b-4348-9274-b5aa0a6aa13b"
        },
        "item": {
          "id": "d0442687-025c-492e-a5e6-369973ba3c8e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7aef6a95-3260-4b9c-88f3-d981c98ee6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "989859b8-b34c-4ba6-875d-e9160bacec36",
        "cursor": {
          "ref": "88acaf84-a472-4b65-b7cb-2e2032c9271d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4aadf10e-26f0-463f-b11b-120164c92640"
        },
        "item": {
          "id": "989859b8-b34c-4ba6-875d-e9160bacec36",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "aca4cd63-8d9b-4d4e-83e1-dbf751f4d133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b05d31b8-8fc4-4b8b-a18c-36baa8037cca",
        "cursor": {
          "ref": "cb959c7b-3cf9-4c59-bc60-351ac4331ff3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4689a172-61bd-4fae-b75c-cfbe3a910ded"
        },
        "item": {
          "id": "b05d31b8-8fc4-4b8b-a18c-36baa8037cca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "132bbdc5-fdd2-4153-a3fa-b6de83bcbb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d677c19f-e2d0-4ab0-8761-9ca166792416",
        "cursor": {
          "ref": "285c2a5c-a17c-465c-8a31-64f7c63fe2ac",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e28e6246-923b-4755-a599-afe31dc17194"
        },
        "item": {
          "id": "d677c19f-e2d0-4ab0-8761-9ca166792416",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "722305de-925c-4d74-a357-d32bdeb0b1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "5d328cff-d7c9-4f3e-87b5-fa4aad297c75",
        "cursor": {
          "ref": "051311fa-19c7-4ca5-b9c9-9f5b4418b87c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0800b5ae-f3df-45c1-9a40-7270c1f39719"
        },
        "item": {
          "id": "5d328cff-d7c9-4f3e-87b5-fa4aad297c75",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5b582bb6-8a53-497e-b1b2-d42b4b178826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4fa83837-a556-4055-acb5-1afefa939587",
        "cursor": {
          "ref": "677fee53-a9a7-45f5-bbca-a4c6fe2fce48",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "474b3f9a-d06e-4737-9956-d36791b0ce42"
        },
        "item": {
          "id": "4fa83837-a556-4055-acb5-1afefa939587",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "97ffb71c-d80a-45a6-8f9e-d11a8d894af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6a9bd191-a8e5-4bbd-a6ed-0be8d5968c9c",
        "cursor": {
          "ref": "ac42d4ef-19ea-4f10-bfc3-9df6567f392c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e5022caf-fd1f-4b2a-b28c-8be1edf53540"
        },
        "item": {
          "id": "6a9bd191-a8e5-4bbd-a6ed-0be8d5968c9c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dd59cef8-f841-4852-a648-44ee53629e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7196b1f-31f6-4fc1-9f04-55fc830dd829",
        "cursor": {
          "ref": "a1ac13e0-2181-4abd-bbbd-e2a88b076f78",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9c22f243-d128-4e26-9898-83a9599a6125"
        },
        "item": {
          "id": "a7196b1f-31f6-4fc1-9f04-55fc830dd829",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cc717a9a-f8e3-40ee-aaa1-e481b9d49f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9147c32b-a3e1-4ed9-b81d-09a33f5edde1",
        "cursor": {
          "ref": "f3451b5c-3ef0-4d40-9c3f-a984ff92f580",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7a1e4770-390a-43d5-ac56-992582740a02"
        },
        "item": {
          "id": "9147c32b-a3e1-4ed9-b81d-09a33f5edde1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f82a2b38-f80c-4454-8779-3986acf8c634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3beff71c-0e87-4a30-9366-8f5d4cece200",
        "cursor": {
          "ref": "731b757a-d04d-4e63-962d-2a435317dfa5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1ec30a15-689f-470d-8da7-57d4dd84bb87"
        },
        "item": {
          "id": "3beff71c-0e87-4a30-9366-8f5d4cece200",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "686fe086-0178-4002-beb3-30de3434f459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce799a0-5cf5-4038-807b-27571c272f42",
        "cursor": {
          "ref": "ebad8a2d-0a67-4de5-8214-b5c38fca4385",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aa04fb20-7ff4-4494-bc1b-dee00d2b773e"
        },
        "item": {
          "id": "dce799a0-5cf5-4038-807b-27571c272f42",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ee05f2c0-e7ca-469b-b11b-7245422e414f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad71b49-2bfb-4754-b8c1-84c84fbfec10",
        "cursor": {
          "ref": "6c7136d1-9caf-45dd-a2dc-cd97e0c3479f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4127c54c-8d61-45c0-8909-3e1ed2ed2d78"
        },
        "item": {
          "id": "9ad71b49-2bfb-4754-b8c1-84c84fbfec10",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8efb9b8e-6eac-47a2-abe9-24a937d0f811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e27230-a24f-4a58-a6d3-3ad406f75b24",
        "cursor": {
          "ref": "7dfa3539-8b72-4f4b-8961-0d6ab6f8692c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e390440e-fac3-4bbd-ad22-d14fddf8cb5b"
        },
        "item": {
          "id": "a4e27230-a24f-4a58-a6d3-3ad406f75b24",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "543eb14b-5c80-4008-8e1b-97347f45b497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2643dbb9-a7e7-4fdf-a200-cfac601ce291",
        "cursor": {
          "ref": "459e8983-32dd-418e-ad6f-c9b4131f5c55",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "159e6beb-8120-466b-9891-963f20923d09"
        },
        "item": {
          "id": "2643dbb9-a7e7-4fdf-a200-cfac601ce291",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6214dbd5-f170-47ec-b87f-5d7307b14103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280ab098-7d25-43a0-9219-bfd00e6aa9f4",
        "cursor": {
          "ref": "8c535352-63a5-4c17-8354-d601c4a6487d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "56cb3c3e-8b02-4919-bbdc-fa90f483e0a5"
        },
        "item": {
          "id": "280ab098-7d25-43a0-9219-bfd00e6aa9f4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7acfb50f-a3f8-4232-8d80-b4f6051c2e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e2b3f9-e0b9-4122-a48a-8c07a8f38131",
        "cursor": {
          "ref": "3f76507c-2435-44db-87f6-eb1c24d702c5",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4711b064-7735-4b71-8d1f-63826a5d0763"
        },
        "item": {
          "id": "15e2b3f9-e0b9-4122-a48a-8c07a8f38131",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f39db78c-0887-493b-9fa6-8597e3e0ec29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65098d5-5fa7-4f71-a529-3648b4bfa18e",
        "cursor": {
          "ref": "eb35f692-0342-41e9-a79b-e5f63fcbbe38",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e3e34ff3-adf8-44ed-82a0-f340b65bf9db"
        },
        "item": {
          "id": "c65098d5-5fa7-4f71-a529-3648b4bfa18e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3e940e14-fb4b-4cb7-a626-c28772056eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4feb7f3-1490-4d8d-805f-b53e6dbababf",
        "cursor": {
          "ref": "6e9d0dd5-1312-4abe-bb88-418b0fc0281d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a90e2704-4c93-4a7c-9e55-10562bbd327c"
        },
        "item": {
          "id": "b4feb7f3-1490-4d8d-805f-b53e6dbababf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1349d2f3-df24-404e-aeaf-23ab2bffa709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47b7670-e30d-4114-8607-4bdb9f24b6d7",
        "cursor": {
          "ref": "f8ccb2d3-f2f9-4e27-b46d-77b3621788dc",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1fc6f69e-4e23-4095-827d-440cf461a6f9"
        },
        "item": {
          "id": "a47b7670-e30d-4114-8607-4bdb9f24b6d7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4ac1d738-f81d-4603-a1a1-1804f81096f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8143b9a-b3e0-4ddf-9d4c-08cc76dd2e0c",
        "cursor": {
          "ref": "4b8e5e9c-f3d8-481b-989a-630a22827c49",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "112f05ff-0e98-4984-8415-d0fdb82a11b3"
        },
        "item": {
          "id": "e8143b9a-b3e0-4ddf-9d4c-08cc76dd2e0c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6abd88f6-caca-4de0-bb5b-102faf90eb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6685b1-6892-45e4-acaa-071305f6d97a",
        "cursor": {
          "ref": "8cdb6d49-a017-4909-a398-1319185f6034",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c70152e6-eb0e-492b-867e-e1fc6fe4966e"
        },
        "item": {
          "id": "9d6685b1-6892-45e4-acaa-071305f6d97a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cc13cde9-115f-4c00-bcb1-647fd461ece0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb050076-f21b-474c-919a-8ae62a68ce10",
        "cursor": {
          "ref": "b7a14133-c6e6-441d-a6ee-95e5aa83b792",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "921cec54-734a-4065-adbc-d51ed0f5978a"
        },
        "item": {
          "id": "cb050076-f21b-474c-919a-8ae62a68ce10",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a5637458-5f88-4ca1-a363-39c3655f0c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1542f38-b59e-4821-ac7c-357560709c3c",
        "cursor": {
          "ref": "b8bd08e8-240d-4e87-8c6f-53de295d27da",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "98f4803d-fc65-44ff-81a5-04be00185c28"
        },
        "item": {
          "id": "f1542f38-b59e-4821-ac7c-357560709c3c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a8c95b65-8aaa-453b-8fe9-06c6a024a2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cab6e21-c7c9-4e48-8b63-d8d6fac7a3c2",
        "cursor": {
          "ref": "c257068f-0f66-4a5f-8536-e124f5042ef9",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9fecdc0b-584e-4009-8885-52d3ebb7c147"
        },
        "item": {
          "id": "5cab6e21-c7c9-4e48-8b63-d8d6fac7a3c2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0274db5d-3227-4cfa-bce3-671aa866535e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15fa5a8-5941-4974-8bea-24ce5956a272",
        "cursor": {
          "ref": "f1a097ab-04ae-4f9c-b5d7-381b5cf2644a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bfd823df-715b-44c8-8c55-9750d5e5d0d1"
        },
        "item": {
          "id": "e15fa5a8-5941-4974-8bea-24ce5956a272",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "61f5c642-06ca-4bc5-8bc7-9425a6957e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5768775b-f09b-4f7c-85f9-43223b7837ac",
        "cursor": {
          "ref": "bb07c5f4-7c58-42c2-acb4-879fba7b5875",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b41cf767-2deb-4782-9caf-b9d3297a6c84"
        },
        "item": {
          "id": "5768775b-f09b-4f7c-85f9-43223b7837ac",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1104e313-07fc-4f74-a4ae-aafd39cc2092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc3b032-ff9d-49ee-8e2d-bc181f338705",
        "cursor": {
          "ref": "be52c558-7b9a-4a35-a561-b7e30be46952",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f343a244-fd80-4eb2-bf61-9c682067ef92"
        },
        "item": {
          "id": "7cc3b032-ff9d-49ee-8e2d-bc181f338705",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f4732fa8-433d-4047-bf99-4600853c7a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa7b24d-9487-4946-8fdd-4b3de8b1d94f",
        "cursor": {
          "ref": "ea7f9514-ca14-4730-af19-da1399ecf14d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c97be856-704f-42a9-a8eb-012d4e6d94a5"
        },
        "item": {
          "id": "cfa7b24d-9487-4946-8fdd-4b3de8b1d94f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d28dcf30-7921-4a5f-a52a-551d5a0476be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610c5f89-292f-4624-9b31-4e1777f5a14d",
        "cursor": {
          "ref": "9c2bcf3d-6454-4579-8b58-a1989048d15b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5467d73b-9487-4b96-b2a1-1660b23207de"
        },
        "item": {
          "id": "610c5f89-292f-4624-9b31-4e1777f5a14d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9f09c121-e020-44d6-9549-2e00669d7b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8527517-d9b6-42bf-a40b-06e18ac026cb",
        "cursor": {
          "ref": "e6f73ab3-0004-4d9e-9b26-91016545e10a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "663c5c01-2dbc-488d-b341-dd23791c7c5d"
        },
        "item": {
          "id": "d8527517-d9b6-42bf-a40b-06e18ac026cb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c0ba33d3-2778-474c-8280-4cacf7b1e3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df728d58-1046-477e-bc97-4b61b6c3944d",
        "cursor": {
          "ref": "310a10c7-a7d0-4c6d-b61b-c3637e1f6eb9",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "412df9a8-9723-4430-bae8-627fd2b51649"
        },
        "item": {
          "id": "df728d58-1046-477e-bc97-4b61b6c3944d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6588bf9b-f011-4974-b1e2-3acc1aebc06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f73df3-aaa2-4c33-87a8-b88498413de8",
        "cursor": {
          "ref": "e8173422-dcaa-43a2-b5a1-a824d15327af",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0254279e-af78-4545-81dc-54992aeae2bc"
        },
        "item": {
          "id": "25f73df3-aaa2-4c33-87a8-b88498413de8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fdacb57b-7e50-43e9-8839-fea73aedff01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2263a8cd-f7c0-425c-86dc-ec4702071561",
        "cursor": {
          "ref": "4a917029-4be8-4d6f-9e3e-3260f9225a99",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b2bd791b-87b0-4c9e-b113-e925c520d99c"
        },
        "item": {
          "id": "2263a8cd-f7c0-425c-86dc-ec4702071561",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0f345b7f-42a3-4553-a8d6-d89e3887706e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6183d3-989e-45b5-8b1e-a9fedc450045",
        "cursor": {
          "ref": "a004eec6-0a9e-4928-8ec2-43e7af4993ab",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "eee1ea45-1f63-4be7-a48e-b2518c025228"
        },
        "item": {
          "id": "bc6183d3-989e-45b5-8b1e-a9fedc450045",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b55dead3-7996-42d9-bb31-7d463bfdf33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d935abeb-a3e2-412b-abcf-352c08c5a756",
        "cursor": {
          "ref": "c3eca3c4-a865-46fb-8cd0-763b580930e1",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f196327e-88f1-463e-aea5-1cad71a471ab"
        },
        "item": {
          "id": "d935abeb-a3e2-412b-abcf-352c08c5a756",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b5c06821-fb1d-4154-8174-d77b7f4eaf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914c26fc-0477-4de4-8ae2-7cc824ae85cc",
        "cursor": {
          "ref": "19ed479b-e8f6-4df2-a021-8b62ae699b6f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "47aa585b-9133-4522-a28f-0cbbecad2771"
        },
        "item": {
          "id": "914c26fc-0477-4de4-8ae2-7cc824ae85cc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0ebf339a-54ec-41bc-8c01-35d5a571eff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbea25a-e01a-4adc-a7a4-5e903aa80a55",
        "cursor": {
          "ref": "7504107b-676e-4de1-b815-bd6e880162d2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b17f6436-c5e2-475e-a7c1-9ae6002f1e99"
        },
        "item": {
          "id": "cbbea25a-e01a-4adc-a7a4-5e903aa80a55",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3be0e380-bce0-447b-b83b-8fff697ccb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b156e1-960a-4b06-a412-3c4be209b50b",
        "cursor": {
          "ref": "55e20261-41d7-4c36-81ef-a4c80aa5a3e5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "49358810-15f0-4596-a61a-29c310ec74a9"
        },
        "item": {
          "id": "59b156e1-960a-4b06-a412-3c4be209b50b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9adcbde3-1acf-4077-94b7-f9f9aecc930f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0347d812-40fd-4c3e-90df-846c43b327ae",
        "cursor": {
          "ref": "36f8eb22-7cb5-4cae-856f-31a7c0f5261c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "005a26f3-85ea-4aeb-8f3b-a581abbed3fe"
        },
        "item": {
          "id": "0347d812-40fd-4c3e-90df-846c43b327ae",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3889dfd3-9a64-4812-aa2d-17d4950bab02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7889ee-5bce-4962-8f70-cc5d6199c56c",
        "cursor": {
          "ref": "99ca0330-8a3c-4212-b075-9d8eb601d09e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "de685a2a-7ffa-40be-b2ae-c09a939c2988"
        },
        "item": {
          "id": "1e7889ee-5bce-4962-8f70-cc5d6199c56c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0925ae35-c475-4ae6-a45a-0310db76ffe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219c8fa9-b45a-4199-9183-6db34825cacb",
        "cursor": {
          "ref": "3188655c-4a74-49dd-84a9-4353f8cead6a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e6664373-766a-4279-a353-d993578b7354"
        },
        "item": {
          "id": "219c8fa9-b45a-4199-9183-6db34825cacb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "37eaae0b-bc7d-40bd-9889-72cd992fa568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddb9396-25ad-40f0-8cba-688b2128580e",
        "cursor": {
          "ref": "dda9ee26-8f73-4917-b559-2ae60d382335",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "27c6990e-0c1e-4c2a-9490-2f8464881057"
        },
        "item": {
          "id": "1ddb9396-25ad-40f0-8cba-688b2128580e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "402c414b-d70f-4c40-9b3e-403de0055a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1b7e4a-d28a-4323-94ac-55080da8c214",
        "cursor": {
          "ref": "fde6ab38-f611-4ac3-b731-05bd91eca092",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5d74659d-105e-4d77-9e40-7f4f677dcbbf"
        },
        "item": {
          "id": "5c1b7e4a-d28a-4323-94ac-55080da8c214",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7a22c9b3-4563-4d84-9efd-78faa2c03de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa3cc30-0d13-4239-9dbc-04e42d32cf07",
        "cursor": {
          "ref": "4117f1a9-ef0d-4941-a75b-f3bd02775a78",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "77dfc9f6-bed3-4820-b3cd-27d816fbee8c"
        },
        "item": {
          "id": "eaa3cc30-0d13-4239-9dbc-04e42d32cf07",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1cd8b4ed-28de-4ebb-9c0d-02c098836195",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383b670e-0d5a-4117-a846-08a7b5d216d0",
        "cursor": {
          "ref": "7fa4c265-216e-474c-8ef8-d6902f97dbac",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e350f6f8-2fc4-430a-a59e-4031c4d08a76"
        },
        "item": {
          "id": "383b670e-0d5a-4117-a846-08a7b5d216d0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c368cc81-e8d2-4340-94f7-04411341b97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3daf326-7b0c-4d14-9c14-6487e1f7710e",
        "cursor": {
          "ref": "cf8cf294-df01-4dc8-a45f-e5fb1cdd1b3e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3f3540ab-e6ee-4490-80ca-b894272e8200"
        },
        "item": {
          "id": "d3daf326-7b0c-4d14-9c14-6487e1f7710e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c8d38d20-d9e7-470a-bda6-fe10fe2660a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0791ceb8-7714-4612-887b-7d1d0a95569f",
        "cursor": {
          "ref": "58b6fff3-48ea-47d4-9124-5c880678fa41",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "963bc05d-3090-42a7-9453-635b21028626"
        },
        "item": {
          "id": "0791ceb8-7714-4612-887b-7d1d0a95569f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d945e82e-6abb-448c-8aa9-097f1f52945d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17415be6-7d39-48d1-8527-a69f4143e524",
        "cursor": {
          "ref": "cc79d2dd-dff7-4049-8956-eb8fd6ea55cb",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "43227299-a35e-4637-8676-568386d2b6f0"
        },
        "item": {
          "id": "17415be6-7d39-48d1-8527-a69f4143e524",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f40ba8e8-eb52-4e52-97de-77726dd3ad57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737f09f0-438e-4f98-bb14-103b29ff2b12",
        "cursor": {
          "ref": "981876c2-4459-409b-8830-77da03e2dd39",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0a0e813d-2d29-4cee-9d3e-1711e2f6dbe9"
        },
        "item": {
          "id": "737f09f0-438e-4f98-bb14-103b29ff2b12",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "75b9d16b-a352-433b-a6a7-aa030801dabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa30bb1-c89e-4708-afcc-595225f35d2b",
        "cursor": {
          "ref": "f37d3010-351b-408e-9c9b-fc770e3f6bc3",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fadede3e-8e0d-4501-9ebd-19f56fc7c707"
        },
        "item": {
          "id": "afa30bb1-c89e-4708-afcc-595225f35d2b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cad025ba-02ed-4eb8-84bb-5e4c5991d1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf5e66c-21f3-473b-aa56-7a53c9966fe8",
        "cursor": {
          "ref": "f12e2dbc-b617-4fbd-88c9-6c5f88d50731",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4158ebad-09e6-4c4d-a919-6dec7c3a3670"
        },
        "item": {
          "id": "2bf5e66c-21f3-473b-aa56-7a53c9966fe8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4359e37a-f38e-43f1-a81a-8c60ac964608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cffe56c-0ac6-413f-828c-3169657e8cd7",
        "cursor": {
          "ref": "2a817f46-6274-4051-a983-3b8090355537",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7acdcec2-3efe-463d-949a-5b19dda1da5d"
        },
        "item": {
          "id": "7cffe56c-0ac6-413f-828c-3169657e8cd7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d369960b-a676-4d99-a381-a7357db0894b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa85790a-50fc-41a3-9346-c360a6325325",
        "cursor": {
          "ref": "f6bc541e-54ad-4575-b5d1-a7e9e870e4c3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "998aeba3-4b02-4671-96b4-af021576cb52"
        },
        "item": {
          "id": "aa85790a-50fc-41a3-9346-c360a6325325",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9a170732-07e5-4b82-971e-161e730bd756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40f2a96-ba0d-4d19-8e71-1a4f5ed13a75",
        "cursor": {
          "ref": "a49a0c06-fe01-46d7-8be1-91ecc6068b14",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "778cd6ae-cbe7-4ff3-84df-b4b68c265acf"
        },
        "item": {
          "id": "e40f2a96-ba0d-4d19-8e71-1a4f5ed13a75",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8f230586-9032-4415-8cb3-214ab56d7565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef33b05-2c02-4427-ad95-3e66ba9bc37c",
        "cursor": {
          "ref": "56b768ad-e8ed-4793-a342-0d6374c6caa9",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9d7e73cd-9593-4fe7-875f-8d8f2a708e47"
        },
        "item": {
          "id": "2ef33b05-2c02-4427-ad95-3e66ba9bc37c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c3860112-6bc9-4003-b226-42ac422d4dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151d9588-7a23-413e-a593-41bf3fdb0d08",
        "cursor": {
          "ref": "49f0ad14-0116-41ba-a577-e8318bfdf402",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7db25861-7f9f-4b11-84c4-363de58840a8"
        },
        "item": {
          "id": "151d9588-7a23-413e-a593-41bf3fdb0d08",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8e803bbe-09ac-422f-a046-dfab00548bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae9c133-1f53-42d8-80da-f4e33bb1e404",
        "cursor": {
          "ref": "373dfdc7-6625-4a49-a755-5f4965a11fe6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "313c9ae9-bdae-415b-848e-686c1f0474cc"
        },
        "item": {
          "id": "cae9c133-1f53-42d8-80da-f4e33bb1e404",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b196c040-9b4c-49a3-8a24-02dffc33d5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49225ba-9362-47a5-bcf2-a9e79f66f4be",
        "cursor": {
          "ref": "e70b3da9-6116-4a2b-b327-a63063204e27",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5c7b6476-525b-475f-802c-917c469bef0c"
        },
        "item": {
          "id": "d49225ba-9362-47a5-bcf2-a9e79f66f4be",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "68d1006b-6ab4-4dc9-b67e-9f5df43bb14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf6a4ff-5912-49cc-82e5-6bedd85dadfa",
        "cursor": {
          "ref": "7dc40b8f-832f-44b3-a904-85647196978c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a9d4cc03-913b-46e2-8d7b-661eb77235d0"
        },
        "item": {
          "id": "7cf6a4ff-5912-49cc-82e5-6bedd85dadfa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6bd56f57-8ba9-4d99-bd42-a752c52d506c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd51d35-0594-4253-bbd4-09589e4764cb",
        "cursor": {
          "ref": "8b122c1d-e176-421d-849b-e42ead948003",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e1656ff5-48a1-450b-9bd7-d09e42ad89fd"
        },
        "item": {
          "id": "ebd51d35-0594-4253-bbd4-09589e4764cb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fd6c9dda-f868-457c-8da6-4cb55ad1c9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6720f451-8c1e-4bb8-a914-8fb97a33a919",
        "cursor": {
          "ref": "448e098b-3835-44d7-95a9-bea2ccbd599c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dde1386d-8908-46e2-9778-c2ecf4fd669d"
        },
        "item": {
          "id": "6720f451-8c1e-4bb8-a914-8fb97a33a919",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4241c865-c6d8-4553-b89e-4490a02fae20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217b6cd8-5fd6-46dc-8506-5334e68c9a69",
        "cursor": {
          "ref": "3662e4c1-0e03-4a6f-8997-cb3bae83ae0f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c46e300c-1542-4fdb-a4f5-fcaee55b9c4a"
        },
        "item": {
          "id": "217b6cd8-5fd6-46dc-8506-5334e68c9a69",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c76b8c8b-0b36-4378-88d1-96bfb1e04306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f273c1-6bb1-420b-b990-c8b4e90e0c9a",
        "cursor": {
          "ref": "5cb2eac3-7a7e-4927-b103-40c14eec2d7d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "10f67e73-b07a-437c-92f1-3c92dac8f55b"
        },
        "item": {
          "id": "08f273c1-6bb1-420b-b990-c8b4e90e0c9a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "01583c0a-07cf-4ac9-ac49-f9e491b71200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce1703d-a3a8-4510-b796-b518246245b7",
        "cursor": {
          "ref": "e1ffdc0d-6306-4c21-a436-9d85432bacf4",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "03d40b66-3f71-40fb-b64d-9e74637a51e3"
        },
        "item": {
          "id": "6ce1703d-a3a8-4510-b796-b518246245b7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b0a34187-16ba-44c8-b15c-56a6804e6d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff5572f-c9ce-499c-9e60-d67289fbb2ba",
        "cursor": {
          "ref": "f7e54117-c398-4bb0-a1f0-51fc6b29e8b9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8e5e88fb-147b-4eda-8cc9-61cdd3e9e1d7"
        },
        "item": {
          "id": "fff5572f-c9ce-499c-9e60-d67289fbb2ba",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "04d03641-6df8-4a3e-a0a0-b7f864a9afc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071e41b6-5aab-4bec-bbae-61e6a7f7b0fb",
        "cursor": {
          "ref": "0a674636-9394-48d3-bd34-ec4791f4f29f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f69d8553-e19a-4721-816e-43952eb2fc03"
        },
        "item": {
          "id": "071e41b6-5aab-4bec-bbae-61e6a7f7b0fb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "94ddaca4-88db-4f16-a449-8e4a5981e462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f66c8a4-9199-43c1-8145-38da3da5ad6f",
        "cursor": {
          "ref": "ecf4ce6d-9a78-40d3-a7b9-e03fdfbecc8e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d88b1951-bb22-4949-8666-7f8ff05b8511"
        },
        "item": {
          "id": "9f66c8a4-9199-43c1-8145-38da3da5ad6f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f5fbdf7b-2cf4-4928-8a85-fa431d2ff952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e045591c-27b2-4200-aaf5-ca1ea39c17c7",
        "cursor": {
          "ref": "535760df-98e1-4afd-a5fa-4132df8a8aa1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "179e7eb8-3543-46db-a25e-7002a50258e3"
        },
        "item": {
          "id": "e045591c-27b2-4200-aaf5-ca1ea39c17c7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2bbc86dd-6824-4c56-852a-0410c0229e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa361ba-b1ce-43d1-8b37-e2facbc53af6",
        "cursor": {
          "ref": "687d132e-d2e3-4997-a756-fc668e385493",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3cfaa926-8472-45cb-b934-3bd7c540cfa4"
        },
        "item": {
          "id": "baa361ba-b1ce-43d1-8b37-e2facbc53af6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "eb602f49-8096-41cc-b789-86ddd947135d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d4624d-c566-44c1-b826-d42a51e09b60",
        "cursor": {
          "ref": "f4b68ec2-7507-4850-b180-0ba8287cde05",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d26f09d7-e203-4a66-a796-b8d126491b0a"
        },
        "item": {
          "id": "e9d4624d-c566-44c1-b826-d42a51e09b60",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2c236a1c-b20d-4943-b658-f598a85f3b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9895f69d-200f-4d77-a401-d4655d6a4ff5",
        "cursor": {
          "ref": "6733612a-0a84-4906-b0ef-c0ea63bbfb35",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b07d6945-e0f7-407a-be64-5b8827a1bd73"
        },
        "item": {
          "id": "9895f69d-200f-4d77-a401-d4655d6a4ff5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "72c49dab-642c-4bcf-87a1-f0bd769a4d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59fb6b9-1230-46da-9c1d-f97f92790cce",
        "cursor": {
          "ref": "7bbb75a6-13f0-4c49-a715-eb830fc8edcf",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b49c0735-95d1-409a-a14b-b144ebff046f"
        },
        "item": {
          "id": "e59fb6b9-1230-46da-9c1d-f97f92790cce",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8eb8d0d5-7523-4eea-b51c-455adf122e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef216b37-4210-4ce4-925e-9068f4c81dbc",
        "cursor": {
          "ref": "39075bac-6474-4386-aa3b-09be29fb9f05",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0ce07c02-1021-435c-b297-d56872d574c1"
        },
        "item": {
          "id": "ef216b37-4210-4ce4-925e-9068f4c81dbc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e3646752-c95b-417d-ae2e-bc50fff2b802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b157dced-c2ac-4413-9c0b-661fe1585f99",
        "cursor": {
          "ref": "7eb94000-2830-417f-8d9e-0064d82bb4be",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "26db9416-2346-4d42-a6e8-504143bedf71"
        },
        "item": {
          "id": "b157dced-c2ac-4413-9c0b-661fe1585f99",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "03550492-90ba-46c8-bfe6-8015084c0745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d9d0ee-126e-4158-aeee-b91be0436744",
        "cursor": {
          "ref": "31e8a824-5d45-400b-88c1-0be31a74723e",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3a737b14-a240-48dc-a377-acc36494e4d6"
        },
        "item": {
          "id": "63d9d0ee-126e-4158-aeee-b91be0436744",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a0a185c2-cac4-458d-b563-15a714ec4fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cd7b61-ee54-4b1b-a510-f137e7c955a9",
        "cursor": {
          "ref": "00032d1b-33e8-4058-8556-2c42df5c1772",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "64cc1eca-3ebf-49fc-9a60-f4f56a1746d2"
        },
        "item": {
          "id": "22cd7b61-ee54-4b1b-a510-f137e7c955a9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b5821ff7-c854-480c-9ac9-40ed76b24121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547a7727-e55c-423a-a98f-2e715655a429",
        "cursor": {
          "ref": "a3c1d037-1cca-4b13-be1c-8151532b4ff9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a2c0fe00-ee53-4f18-b6c4-a1d6cf5df70e"
        },
        "item": {
          "id": "547a7727-e55c-423a-a98f-2e715655a429",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5cbcb0b2-e398-4966-8f65-1988cb583798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46f041c-a8a0-4271-9b47-f14ef2c05d19",
        "cursor": {
          "ref": "2c774c98-1e2f-41c9-b321-167e6855745a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4c9d25cd-22d5-4b36-bc89-962a79e5d583"
        },
        "item": {
          "id": "f46f041c-a8a0-4271-9b47-f14ef2c05d19",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7e3932aa-6f2a-489b-9e04-14b1e5146e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d26340-eaad-4c10-8b4e-bbbaa1474550",
        "cursor": {
          "ref": "fee0e466-1d0c-4b12-882c-8c339b7c329b",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "59885aab-546e-4a5b-8291-72d105d8f0f4"
        },
        "item": {
          "id": "d9d26340-eaad-4c10-8b4e-bbbaa1474550",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "42d77b3c-41f4-48ab-88af-3704d75184ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78144f08-6aeb-42ef-a4e7-285474b7fcb6",
        "cursor": {
          "ref": "1bd30345-797a-4027-88d1-2181bc8bbd59",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "481ac541-9acd-4033-9ab3-6e99c6276413"
        },
        "item": {
          "id": "78144f08-6aeb-42ef-a4e7-285474b7fcb6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "74bb84ed-c05d-494d-9bf9-53ea3119a63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2570e9e8-e44a-49ec-8a29-1529271fcfa8",
        "cursor": {
          "ref": "e64d0435-2a54-4726-b7f7-881f5145b2d5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "549737cc-740d-4853-ab81-860e2231efd6"
        },
        "item": {
          "id": "2570e9e8-e44a-49ec-8a29-1529271fcfa8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "84e92c6e-7a94-4799-a3dc-b82aeef6b94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a843766-86f0-4f08-8ef5-87b4221e4184",
        "cursor": {
          "ref": "38d31438-4b4e-4ee2-b8c9-601fe5589bde",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "55424cec-b55f-4bb5-b584-b33ca5a61521"
        },
        "item": {
          "id": "3a843766-86f0-4f08-8ef5-87b4221e4184",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "235140f3-721a-4471-bfe3-93ef7c7594d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840227a3-ea75-4bb4-92dd-001a018c90c5",
        "cursor": {
          "ref": "f1b565e9-dc29-4bee-b40c-dca8e477e0a3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e5d2367e-3e34-436c-8148-f8ec2c289e37"
        },
        "item": {
          "id": "840227a3-ea75-4bb4-92dd-001a018c90c5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "27ad9a38-33c8-4a44-850c-758f266dd21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f74b3c7-a7f5-441d-b67a-fabec9671d70",
        "cursor": {
          "ref": "93718c54-6bb0-49f8-8a7e-9bc5e4e04634",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "738b7152-8b12-45b8-89e0-4704c98218a7"
        },
        "item": {
          "id": "8f74b3c7-a7f5-441d-b67a-fabec9671d70",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cf272766-a5e8-4efb-8ddf-7c230a544dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3f7e2f-ed14-47b9-8cf7-2a11c2dc94ab",
        "cursor": {
          "ref": "3d791c6c-c89c-44cf-b097-04c3bd32a5f6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "43e3f928-2ea1-4e47-a718-4589af583d2a"
        },
        "item": {
          "id": "cc3f7e2f-ed14-47b9-8cf7-2a11c2dc94ab",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0cb1ffc3-cf07-4cde-8ac8-f6ffd21d119f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30095a5-eb7e-467c-b975-fd1107f199d6",
        "cursor": {
          "ref": "884d27db-7cca-474e-b1bd-c3135c82e63e",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bc09f25e-2bda-4139-8d4b-fb4a5b1b2f8e"
        },
        "item": {
          "id": "f30095a5-eb7e-467c-b975-fd1107f199d6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "084d8181-65b5-4edb-950a-6882a7804fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2381e5b2-3f66-4546-862e-1e19099fe88f",
        "cursor": {
          "ref": "ed6ecb02-0ec0-4c5b-873e-07cac5f70d34",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bfa553e7-c8eb-437f-b097-662dd4ed7ad6"
        },
        "item": {
          "id": "2381e5b2-3f66-4546-862e-1e19099fe88f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f8f0fef8-f12f-43a9-bf10-f3078cb57294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d504b2a9-2bc8-404b-bbdf-53e37daa1b47",
        "cursor": {
          "ref": "55a64d21-1047-47a8-9cee-912b63527c4d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cbd72552-7dd9-4d25-9a56-4d53ab4a1345"
        },
        "item": {
          "id": "d504b2a9-2bc8-404b-bbdf-53e37daa1b47",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9fbb2318-d1de-4d3a-b841-180ea3044866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2055365d-6313-4206-b938-89e9b5f1a800",
        "cursor": {
          "ref": "08e67269-791c-4ae8-bec0-a7a14aada5d1",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a64c2280-e1b6-4a8a-bdd7-034780544512"
        },
        "item": {
          "id": "2055365d-6313-4206-b938-89e9b5f1a800",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6755cc08-dae3-45a2-b9cb-1f86f6749d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d93b9a-97b1-4a3c-ae48-473022892102",
        "cursor": {
          "ref": "0f0140da-cc07-42ab-9d95-03afd9a9cdd7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f2b6eafe-2402-4819-8c46-c0f48eafe7fa"
        },
        "item": {
          "id": "f0d93b9a-97b1-4a3c-ae48-473022892102",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "08e57df0-f7e8-4793-a7f4-d6f383fae35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392078c7-e5cd-4703-ad4b-7561c5ec8175",
        "cursor": {
          "ref": "acef23a5-e9b6-4923-95a2-a13b1377fc36",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9c605755-d629-457f-a0eb-360a460d2e2b"
        },
        "item": {
          "id": "392078c7-e5cd-4703-ad4b-7561c5ec8175",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3007cbda-1697-46b1-bf58-56663e96b807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f820949c-7637-47de-af85-0445c9708a11",
        "cursor": {
          "ref": "39fb433f-8653-44ec-9d13-16655e687834",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "25535d91-bbcf-4fd1-8300-9162a4808c6a"
        },
        "item": {
          "id": "f820949c-7637-47de-af85-0445c9708a11",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5a8149ab-ddea-4f4f-ac04-f68feb2f8cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790f26d8-4d94-4a4d-8e45-a6ed5a4078e6",
        "cursor": {
          "ref": "011e37ae-08f2-4a34-87af-b1c959ee0570",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b3670679-3220-4b09-a034-7e8cd0506bb7"
        },
        "item": {
          "id": "790f26d8-4d94-4a4d-8e45-a6ed5a4078e6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8a6a49b5-2c1d-4fd8-8c28-f7478e4af495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a117d7-c5fe-4bbb-8618-d95968c4a4bd",
        "cursor": {
          "ref": "137a4321-de68-473a-9f96-d650c604803f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e3b2f4c5-1d54-46a1-b143-021485fdbf01"
        },
        "item": {
          "id": "c2a117d7-c5fe-4bbb-8618-d95968c4a4bd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a404dacd-598b-494b-b6bd-65c72a0166f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfb039e-c6f4-45d6-9713-86f0fcc7d75b",
        "cursor": {
          "ref": "214605c7-35bc-46ba-9d26-0fec3613d784",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f8fab216-1f47-4520-84cf-d8715df64b0f"
        },
        "item": {
          "id": "5cfb039e-c6f4-45d6-9713-86f0fcc7d75b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "708360e7-77d6-441f-87e8-997d66c57be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec53446-b16a-4fee-ac24-bf0a2cbda747",
        "cursor": {
          "ref": "e6aae987-9fd5-411f-a2fc-7c0582ea78da",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1ca25f0c-e43a-49d7-951e-8fda39e3078b"
        },
        "item": {
          "id": "eec53446-b16a-4fee-ac24-bf0a2cbda747",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ffe1dd12-d0e0-4a7e-939c-7655b58ce466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10389c3-2d2f-4b7a-a240-c1285184334b",
        "cursor": {
          "ref": "5773f8d5-d2e7-40de-82a1-90135b18c82d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1fe9adb5-3804-40d7-b055-4dd061777250"
        },
        "item": {
          "id": "c10389c3-2d2f-4b7a-a240-c1285184334b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "db9781cb-c6e9-48a7-8e48-83819ff8d34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737f7be3-28ce-4717-b3c6-ba37637667a7",
        "cursor": {
          "ref": "44e5d9b9-8cbf-43eb-8197-49f25203254f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "52f8e9ba-9ae2-4548-bef5-c753f43cc13a"
        },
        "item": {
          "id": "737f7be3-28ce-4717-b3c6-ba37637667a7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a69eb8fa-e860-4f81-ba30-97f506e970f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f602711-5eeb-4d41-8895-bd14bcdd02dc",
        "cursor": {
          "ref": "938cab14-3154-462f-b6ea-2e1da8b9656c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6cad9f42-f6d7-497b-ab44-71485c304151"
        },
        "item": {
          "id": "6f602711-5eeb-4d41-8895-bd14bcdd02dc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7e97fd23-1058-4eaa-ab5f-e69bdba43a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f18453-acbe-4a2b-be12-540ffd3cc0dc",
        "cursor": {
          "ref": "da46b125-75a5-4c2c-902c-ac454fabdefa",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "797d787e-026e-47c0-ac07-954e2228f9e6"
        },
        "item": {
          "id": "40f18453-acbe-4a2b-be12-540ffd3cc0dc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4fd1c2bf-a7b4-451c-99ec-c9af0e1abdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da88392-8b6b-4699-85c4-7158dab2efc3",
        "cursor": {
          "ref": "528d0acc-9bfd-4753-b8ee-2125ad2199c0",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c72e1b3a-865c-43df-8aea-ca675d8fab1b"
        },
        "item": {
          "id": "0da88392-8b6b-4699-85c4-7158dab2efc3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "26401b3a-ce73-494b-a27b-6879e4a8f745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c567439b-4cbd-4fa7-83db-3dd2c6135c50",
        "cursor": {
          "ref": "7f028265-3bca-43a2-8e9e-6f123904a1fd",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0aba79c0-3282-45ff-a318-55a302b5d82a"
        },
        "item": {
          "id": "c567439b-4cbd-4fa7-83db-3dd2c6135c50",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fdc0cfd1-ce7c-4792-9423-dd4c866d95cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eae526c-f5a8-4c14-9929-528421ad4bfc",
        "cursor": {
          "ref": "40cac783-d69d-47b1-a5cb-8f26c2bc7e59",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f9aaca57-5b00-4c81-acc3-901daffb461e"
        },
        "item": {
          "id": "8eae526c-f5a8-4c14-9929-528421ad4bfc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "74ab656e-7bcb-48b4-ab6e-c3994fb77d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55454a63-8117-4cb4-b817-52d53244db1c",
        "cursor": {
          "ref": "5d16d80b-e23b-4f7f-82d0-1ece046778dc",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dc5deb1f-e774-4b09-8bc0-487ffdd53141"
        },
        "item": {
          "id": "55454a63-8117-4cb4-b817-52d53244db1c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ff33093c-44bb-4f5d-9d40-b937b46c8785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd94e48a-ad05-4a5a-bf2b-4985b217d3be",
        "cursor": {
          "ref": "b25aaa50-c131-4a1b-8f1a-3db68a851727",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4f931c09-32bc-40f8-901f-ca769c9dfb55"
        },
        "item": {
          "id": "fd94e48a-ad05-4a5a-bf2b-4985b217d3be",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b6e853ba-0799-42fb-a91c-163371dc0e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b21d79c-7a75-4151-aa57-079a4f31fefa",
        "cursor": {
          "ref": "d6d45dd0-9948-4dc8-96bb-d1d3e440e19b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1a948b8e-7b59-4b46-8478-755e0af0da43"
        },
        "item": {
          "id": "0b21d79c-7a75-4151-aa57-079a4f31fefa",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c2d02b71-a14f-4f2f-a6f6-0d24ebbee946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b488063a-4925-411a-be36-5e6fcdfc1b13",
        "cursor": {
          "ref": "26be9593-5482-47c5-a1f7-6e9ba67a725d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "42423161-20fb-4207-926d-773c2a8ba5f0"
        },
        "item": {
          "id": "b488063a-4925-411a-be36-5e6fcdfc1b13",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "57048cc1-b58e-45d8-9ba6-8200c1db0e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f878cff8-dbed-4be0-9088-e737b7663335",
        "cursor": {
          "ref": "e3b11e20-1093-4367-8e69-5df100c707ce",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7ce893e7-3c83-4c98-9e82-e42e9de1b050"
        },
        "item": {
          "id": "f878cff8-dbed-4be0-9088-e737b7663335",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ea4e9c8e-38bf-433f-94b4-b64bb69797f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab5969a-7ff0-4085-a483-cfef420d473d",
        "cursor": {
          "ref": "ef62fb07-377d-42d3-aa48-78eddad131bb",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "712a20d7-d541-44e3-9d79-8558182a1be0"
        },
        "item": {
          "id": "9ab5969a-7ff0-4085-a483-cfef420d473d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b92eb72d-5cb1-4925-b60a-9b6a7189f97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8701d9-ba92-44c6-9570-caf84fbd65df",
        "cursor": {
          "ref": "78fb7368-a29d-472e-975f-5740cc346329",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0a195ae2-2bb8-4527-809d-3ae54c279b69"
        },
        "item": {
          "id": "1d8701d9-ba92-44c6-9570-caf84fbd65df",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2bb6678d-10fb-4d56-aae3-20999904b5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96258979-a611-4b55-b572-1e074bd019fa",
        "cursor": {
          "ref": "47182c6f-862e-4f98-b2be-a69fb3bbe9bb",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "87d9efdc-5c5a-45dc-9d41-533ff511dbc0"
        },
        "item": {
          "id": "96258979-a611-4b55-b572-1e074bd019fa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "54da6842-66cb-495a-bab0-03ee30545f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07907c2b-f046-47c8-9199-249957faa9b9",
        "cursor": {
          "ref": "9fd6c521-be14-42cb-a586-18ad5f2c0d54",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "49a95d06-9582-4663-85e9-0685c6236aed"
        },
        "item": {
          "id": "07907c2b-f046-47c8-9199-249957faa9b9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a139e413-e07b-4d75-9ad5-4812023898e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d721cae9-bec5-4856-95be-2b39e67b62d2",
        "cursor": {
          "ref": "ef20a7eb-7b01-4476-8d23-6850816937d7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "314344ce-d853-4f97-a287-d7bc4770a4ef"
        },
        "item": {
          "id": "d721cae9-bec5-4856-95be-2b39e67b62d2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "39cce081-237d-46bf-ad21-0566fe0ca7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43995180-9c9c-4f4a-b08b-348636718fc0",
        "cursor": {
          "ref": "b83bb92e-b4ff-40ee-90aa-5161ca3b9ac3",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "51bff4c8-401d-41a8-93a8-3f686e6894c3"
        },
        "item": {
          "id": "43995180-9c9c-4f4a-b08b-348636718fc0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a1ab09a6-4b5d-4d8f-b675-5947731dba09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5e304b-c454-41ea-82f0-4dddf9b19f2b",
        "cursor": {
          "ref": "71610058-f8e7-453c-83f6-3f0276b1d771",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9fb78875-eafd-4c1a-a790-d1c34de3cd5a"
        },
        "item": {
          "id": "6b5e304b-c454-41ea-82f0-4dddf9b19f2b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6409882d-9c46-458e-86db-3ad9445a8426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bfbbb0-107a-4355-83b6-5d89222f0481",
        "cursor": {
          "ref": "2a268839-2b17-417a-b995-8a961cc06766",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1b91f251-b8d1-480e-a170-ff2e115582fd"
        },
        "item": {
          "id": "84bfbbb0-107a-4355-83b6-5d89222f0481",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "88652e14-8e97-47d2-a324-987eff1d85ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c335cd2d-6480-462f-bff1-61007ab67aef",
        "cursor": {
          "ref": "0ea9afdb-8512-49e9-aa63-e698bb5e17f3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "95aa8765-7bcb-4314-b5fc-61dcf7b1f4c8"
        },
        "item": {
          "id": "c335cd2d-6480-462f-bff1-61007ab67aef",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "86b87727-0d39-4429-814b-cf0152552b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d765b4f5-6cff-4ee9-9f93-61e7a7406dcc",
        "cursor": {
          "ref": "c72cbc75-8cbf-4a09-ad16-40380b81df2e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "73177af7-af2c-4884-b7b2-e80a228e2431"
        },
        "item": {
          "id": "d765b4f5-6cff-4ee9-9f93-61e7a7406dcc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c327ad11-fc7f-4a16-9c61-9d97328a3174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d499ca8b-7739-47fd-9b22-f54da2abf15b",
        "cursor": {
          "ref": "0c1d77ef-eaba-46e6-83d1-9c809918aace",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0928cf45-25fa-41a7-a35b-71d15ad85c56"
        },
        "item": {
          "id": "d499ca8b-7739-47fd-9b22-f54da2abf15b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "368136c8-db9c-4e14-99f8-b51e734053ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fdd8c9-25cd-4900-a499-563dac453a31",
        "cursor": {
          "ref": "64fcb1e5-b7a0-4955-a964-60ad81db88ce",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "691d26b8-d529-4367-b7e6-be528953511d"
        },
        "item": {
          "id": "c5fdd8c9-25cd-4900-a499-563dac453a31",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "904e8168-dc43-4e36-8113-cebb5900e58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12eded2-46f2-4fb4-9bfd-657065f98e4e",
        "cursor": {
          "ref": "cc0e4ea3-6e2c-456a-9a47-61631164b13b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "05d85a36-8436-4bdb-94bc-62192e1a9617"
        },
        "item": {
          "id": "b12eded2-46f2-4fb4-9bfd-657065f98e4e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4ae938e0-6633-485c-9709-2f285676d01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29a3ce8-142b-4608-8fff-82c83072acf4",
        "cursor": {
          "ref": "6c56ccf1-cae8-4dcf-b5f0-553b653097dd",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0530f8ed-03b1-452a-82f8-9e16e2347744"
        },
        "item": {
          "id": "d29a3ce8-142b-4608-8fff-82c83072acf4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d7096b43-8720-4bfe-829e-fc3159794a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6373ac-8147-4923-b6c2-b7108bde7a32",
        "cursor": {
          "ref": "b10860aa-439b-41b6-ad67-201ffeb489d0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "45334395-f987-4345-ac64-069dd25d669a"
        },
        "item": {
          "id": "1a6373ac-8147-4923-b6c2-b7108bde7a32",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "722ebe57-dd3a-4884-877c-6889a0ae68e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5798bf-90c0-44b1-a371-f01faff97966",
        "cursor": {
          "ref": "437e9c40-e8e2-4c57-b259-c1b92c140ff6",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6fa4c600-6449-472b-a2de-bc29e89d33c5"
        },
        "item": {
          "id": "3e5798bf-90c0-44b1-a371-f01faff97966",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "905f3354-d595-4dae-9f22-6e29056c5a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb33dc3-3dcc-4d55-93a4-22407a5a2af8",
        "cursor": {
          "ref": "a711c1ab-aac2-494b-9a51-8b979d82d16a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "43337259-c44f-46fb-8c0a-b66bc3a0d652"
        },
        "item": {
          "id": "5cb33dc3-3dcc-4d55-93a4-22407a5a2af8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9c988f81-27a5-4513-8ceb-0600373bfde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260be5e7-98cd-4f46-a92f-3a6f4fe7665c",
        "cursor": {
          "ref": "67ff5fc1-9476-4c25-a468-8ef535aaee64",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a522fb8c-9ed3-4dca-add6-7311e9d8a290"
        },
        "item": {
          "id": "260be5e7-98cd-4f46-a92f-3a6f4fe7665c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4100dc2a-511d-4d45-89df-3e73e7d450d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da59c47-b769-40f8-ab12-8a5ff4568f4d",
        "cursor": {
          "ref": "a23809cc-2eca-4970-bd75-89f49da5230a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7f4392ae-7c70-4588-b838-f233f5e12e21"
        },
        "item": {
          "id": "9da59c47-b769-40f8-ab12-8a5ff4568f4d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "21ccc3e4-349b-4de0-80cb-6c1318203331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f221d15b-21ca-42f1-813e-e37bcaf9c104",
        "cursor": {
          "ref": "f8138e31-70a5-43f3-8e14-4aa0f2fbcadd",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dbf6001d-5b3b-4e5a-914a-84963d83b5b1"
        },
        "item": {
          "id": "f221d15b-21ca-42f1-813e-e37bcaf9c104",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cecd056a-452c-4ddd-a998-81bf2073ef6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67590203-4cf0-49e4-adf7-d8f69b687375",
        "cursor": {
          "ref": "9998cbc8-449d-4f1b-8a9a-3a92c7c31dc1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "05df0701-fc59-4fbb-9eb4-f3a1bb38c235"
        },
        "item": {
          "id": "67590203-4cf0-49e4-adf7-d8f69b687375",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8e2c6204-82a3-4f97-9a56-30f3376d09b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635f35d4-cf70-427e-a36c-216531f1b09f",
        "cursor": {
          "ref": "90b6ef7d-b4d4-48be-8315-778f28e41bff",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "94192644-ad9e-48d7-ade4-74a9ab4f6734"
        },
        "item": {
          "id": "635f35d4-cf70-427e-a36c-216531f1b09f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "26134f30-1914-403d-a9fa-b5c5b284bfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9267dc-d6a0-4b92-ae2b-6c153e491008",
        "cursor": {
          "ref": "0569ceb2-d69c-49c8-bb78-7b2e7b3344be",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7c3ea9f0-a3fe-41f1-8206-07d540d777c3"
        },
        "item": {
          "id": "2b9267dc-d6a0-4b92-ae2b-6c153e491008",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "550cd4ac-a401-44f6-b034-ae79769190d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6cb4b4-1c62-4096-865b-65f861900638",
        "cursor": {
          "ref": "c23198c7-cafc-46c6-9fc1-321c8513a4b7",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3e8a104a-6afd-4a88-8105-e7514f35ffff"
        },
        "item": {
          "id": "da6cb4b4-1c62-4096-865b-65f861900638",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6a975549-1fdc-48b4-934f-60e0e15ad433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d30208-3704-4e7d-aa9d-e3ed05bc72a0",
        "cursor": {
          "ref": "0c7591cf-01d2-4aab-b241-85b4df75396f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ba77b5e1-9811-47f4-a372-0fdb1a47edfa"
        },
        "item": {
          "id": "a1d30208-3704-4e7d-aa9d-e3ed05bc72a0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "39fb313e-815d-4acd-93c4-33b76b108a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85107963-5cef-4918-a936-e26c664df921",
        "cursor": {
          "ref": "4d214979-effb-42b7-9a53-ea41df1a936c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0561ffc4-f00d-402e-bd12-b8fee6a905fd"
        },
        "item": {
          "id": "85107963-5cef-4918-a936-e26c664df921",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "811c72a2-cbd8-46a4-9e13-66380efa3d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e836132-f0ba-49f1-aa37-2f85209e497c",
        "cursor": {
          "ref": "b3e515a7-e457-4fcb-b059-7d92404c9122",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d8510c20-1162-463c-8639-1611880a35b9"
        },
        "item": {
          "id": "8e836132-f0ba-49f1-aa37-2f85209e497c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7c585681-2467-485f-91a8-feba57d8ffaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f508339e-a344-4fc8-9d71-6f44f36e9198",
        "cursor": {
          "ref": "8a62c5d7-29c6-4e88-a8af-c440cdeaf3f1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f9018bb0-feed-4fa2-934f-d97207cf4bef"
        },
        "item": {
          "id": "f508339e-a344-4fc8-9d71-6f44f36e9198",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "09366ac8-c865-41f6-b90c-e2b1e625b6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1f2a2a-0cb3-4086-8529-9e7bb9c270aa",
        "cursor": {
          "ref": "c4442b8c-1606-4497-a846-0e7ff9cc64b3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5b473ffe-9250-49d4-a05f-25337c613001"
        },
        "item": {
          "id": "5b1f2a2a-0cb3-4086-8529-9e7bb9c270aa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bf647786-446c-4537-8e51-743914f29d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25191236-3769-4134-9e67-6a58e573b686",
        "cursor": {
          "ref": "0ff81ef2-e267-4da7-a3e2-e060fd4bbc3e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9ec1f34e-c19d-45cd-aae9-9aabd32a19a4"
        },
        "item": {
          "id": "25191236-3769-4134-9e67-6a58e573b686",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "19086da0-a903-4dfb-9867-142311e6d8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f7c4d0-2a14-4e5a-b61e-a8cada1471c5",
        "cursor": {
          "ref": "91ff59ae-3dea-449e-b520-d4ad7cc7f669",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fd1d3419-7efd-4ee4-beeb-938082c47414"
        },
        "item": {
          "id": "b3f7c4d0-2a14-4e5a-b61e-a8cada1471c5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "eefeee25-6215-4dcc-ace8-4a4f2ddcbd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ead142-308f-46c8-b217-d88df621d906",
        "cursor": {
          "ref": "ac4af54a-543b-4510-a865-0204d2f8890c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "73d0fe07-af79-4e75-8659-b85fc28d27c9"
        },
        "item": {
          "id": "67ead142-308f-46c8-b217-d88df621d906",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "25770d51-aff1-4911-84a9-b520fecc4bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db155180-6660-4037-a1d0-c46954c02087",
        "cursor": {
          "ref": "9cdfc8cd-e1a1-4ab1-b6d0-530d25c73949",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a31dd7e7-aade-41bf-9c6e-5c5746154ee6"
        },
        "item": {
          "id": "db155180-6660-4037-a1d0-c46954c02087",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "506baa92-afa3-4209-ab88-91124e7c88d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad980e3-122a-428a-aa59-a23fd8c696a1",
        "cursor": {
          "ref": "b4b30185-16e1-44ce-8453-6e0670072445",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b43b6e7f-04d6-4d3e-8403-0597bf63c0d0"
        },
        "item": {
          "id": "aad980e3-122a-428a-aa59-a23fd8c696a1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2d1381a4-dbfd-46c0-a843-fc60c2bf359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc61805c-c9a4-4762-b410-b17c53f108a8",
        "cursor": {
          "ref": "281c7593-f56a-4c92-bb5f-17dc5ea8e600",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c45aa5fc-f0b8-4ba5-8f2b-d5f253c4e2a0"
        },
        "item": {
          "id": "dc61805c-c9a4-4762-b410-b17c53f108a8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0e4e52f3-d51c-4ecd-84e5-1cbab11f6e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "7f4305ac-6bdd-428d-916f-6befc58f1d42",
        "cursor": {
          "ref": "36aa9122-5aae-4000-8b88-d13e78aec624",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3c2016e0-8f58-4797-a58e-330e723c89df"
        },
        "item": {
          "id": "7f4305ac-6bdd-428d-916f-6befc58f1d42",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0168670a-0d9d-4e7f-86cd-5825566ae3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "c4293ce0-483a-416a-b4f8-451403b55b52",
        "cursor": {
          "ref": "a70e3834-5730-42a7-ade4-a68433e08f41",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0f02deae-d0c9-4a11-849a-e75b210c50bb"
        },
        "item": {
          "id": "c4293ce0-483a-416a-b4f8-451403b55b52",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c935df64-144e-48bd-accc-45239346e6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "4a315ff1-dd42-4dfa-8362-028c1568ed81",
        "cursor": {
          "ref": "58496fce-6c65-412e-a9c6-f820ae457c66",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d04828c0-236a-4d86-9681-ddae5da213a8"
        },
        "item": {
          "id": "4a315ff1-dd42-4dfa-8362-028c1568ed81",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "79270c2b-5bbb-4dd1-98df-7cd16a873e60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a315ff1-dd42-4dfa-8362-028c1568ed81",
        "cursor": {
          "ref": "58496fce-6c65-412e-a9c6-f820ae457c66",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d04828c0-236a-4d86-9681-ddae5da213a8"
        },
        "item": {
          "id": "4a315ff1-dd42-4dfa-8362-028c1568ed81",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "79270c2b-5bbb-4dd1-98df-7cd16a873e60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b7aeec-bca7-4b09-9892-3f43710ad346",
        "cursor": {
          "ref": "17fbf85c-6c73-4a76-925f-ffe92c4f4f5a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "eba3f71b-8560-42af-af0e-d9c6ec10abe3"
        },
        "item": {
          "id": "c2b7aeec-bca7-4b09-9892-3f43710ad346",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "376f6a55-6df9-45d1-b908-c10cd7b7c4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27f1bf3-5ef3-4875-a3be-b185a18c1e54",
        "cursor": {
          "ref": "2a6e6780-34b3-4967-a2ca-b26e1ae3d7e3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cdbc8399-32ab-4c6c-a38f-fb0ef2f8bcbc"
        },
        "item": {
          "id": "e27f1bf3-5ef3-4875-a3be-b185a18c1e54",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4452ff3c-7795-4d22-8318-aac7ce6af02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}