{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6e43472a-6d26-403d-98d1-fa0835a4540c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "69f53485-c747-4ac4-8a19-ac702c659efb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9531952c-aed8-4a25-93b6-fd87aba1de76",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0189cc8b-6e47-430b-be7c-387790de98d7"
                }
              }
            ]
          },
          {
            "id": "9d120692-b693-4f09-b763-90e756c14d01",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f195ce45-739b-48ab-b0b9-32782dd36ea5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cc7470e3-1011-44bf-841c-ed6654098fd0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8757e2c3-ac86-4e95-98a8-50eaa555adc0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a430508f-4fea-4aa6-99b7-1f59dae0d60e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41593cd2-db5f-4833-9272-8b93b5b03006",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e58e08e9-7eaa-4c8f-b54c-99a0954be4f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4921fe1c-7714-4a24-bfd5-23b63bd72dce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "150ea4f2-7cfc-4db5-9388-3a71e62bd66a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97166d0d-6495-4e54-af48-acd64a288fe1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3805fc78-2e4a-4364-8a1a-a5a7fdaa3030",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2d1e3ac-651b-46bd-9dfb-707d7309d757"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "873842a7-479d-498a-a87e-4ba2d27eae41",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "43eb98fa-25df-4caa-9a08-118952e739bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a55ce930-6418-4449-90b6-ce62ac8bd590",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76d06ae9-9970-402d-b463-19c1f4ab5927"
            }
          }
        ]
      },
      {
        "id": "e291b635-0ba0-4cf2-a6d8-4d436dffb7ac",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3959ed20-ddb1-4e07-bfe2-54631caea7a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "148297af-ebcd-4209-8aaa-ca03e97e002f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "329c6bbe-7599-4ec8-9ba7-4b85dda6fb3b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e94b81-bc48-4fd0-a4be-dfa69f332d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3253720a-52c0-4771-93b5-1982c2ff1f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4039dfc4-6f13-4fe5-9aa1-1e4bb113347d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf6a138-3ebb-4d6d-b505-ba8a8c7b62d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31963a91-ade2-49f9-94ae-21dde4105c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3239f1e4-0472-4b20-af8e-1c23e1f7b16a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3597b7f4-880a-464c-a96b-7678fa585e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "565205a6-8584-46bf-9277-7fdf3bd44603"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a68c15f7-8dc6-481c-ad66-32e7d6c2e43c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a65985fc-d3e6-471e-b73a-d846b8a9ed18",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e7cba9-dd34-4ff2-bfca-38616b119c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a265cea4-5f6a-4339-b4fb-690ec5cd47e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baba4b23-d300-4175-abfe-c06edb2f7b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab27f93-d14c-4ea5-89e3-5260668f8fe7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d53a0f10-ef52-4f4c-a3ea-88969b9440c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43f58303-8d91-493f-b3c8-8a8828e4b775",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eedaac74-1e0e-489b-8ef8-20e4e54c103a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b97d24cd-5c94-47d6-8aa7-314939d54a2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad3423a6-0b57-4e93-ae1c-68f1a1dbf33c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3f7dff9f-293b-4044-8485-007249e7b21e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95ac727b-cfed-407c-8be7-b094fa6773ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "086b2261-b2f9-442f-97b4-c0a7456630bf"
            }
          }
        ]
      },
      {
        "id": "11770f96-a706-4ce2-8b89-4579fcbcadf8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c1c9a57e-fda8-4e7c-aec9-4f94a418f477",
            "name": "Negative Testing",
            "item": [
              {
                "id": "649fced4-64d1-4295-b1d3-f0eceeb436bb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "70302bc5-0a34-4df8-96d5-5d8f5ebe72be",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8667bb99-6141-4249-a369-28f26d992af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61747007-fa99-42f3-a0d3-145c115d9e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c47330-53d2-451d-98ca-5530a91d4879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "829db913-fd86-4c9f-91b5-05f949fd5593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f4ddaf-85af-46a9-855c-5751e9dea205",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7399d12-fecf-4894-88cf-e36b25944f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33206c66-ea7e-46af-ad44-1e34ed2bbbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41d7f1e-b794-4d0e-96d5-e8f219f89628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e42e8e9-d4e6-4964-ae43-e1754c3d63e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c354e010-0738-41f8-afec-d892fbe9068e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7afffa-8915-45b7-a250-3cd483748693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42baf246-2f08-4fdd-ab08-431366cd9f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e470558e-9525-44f7-bf5b-d8be166bc855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06aa001c-8579-40cb-8310-289b176cf44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea46c1c9-01e9-4a27-b874-a5dfa099106e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4044860-e894-47d7-b220-ec35eb57015a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314b9630-bd71-45da-b93c-55ccfa60c855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434834ba-4af0-427d-bdea-2fe8f7f3e935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3763fcc0-2912-44f0-9900-615051f3a72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad7ec98-23fa-4767-a6fe-dbaf49c94f99",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc27196b-43a2-4f2d-9562-b23a23fa7869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05177eb4-0f4d-4e3c-acee-6ac94666157e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1ec131-0ff2-4b42-9df5-795b0275598a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7edaeb7-1d94-44fc-8e66-8f64e019d2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739dd0b0-bbe8-4bb7-a802-8e5c43dc4eae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e632765-f363-46bb-a0e3-5801bffb1308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f184f8-7e8b-44e6-b7d5-2a2f54ccb04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06ec547-b39e-4dba-93de-869782c4d73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97945f22-3d46-42cd-b07e-e766bc9ddde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1963f38-528f-4d9a-a8c4-02654cfbe062",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901b40c0-f3ab-45c4-9bd2-b6c774cfca89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407659c5-53a6-4a0e-937a-0ff0419d94b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f481ab-1e38-4357-801b-0b8d3b4de578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8aa0018-c735-4f10-8e55-e92cd9b7bb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109df8c2-406d-464b-a860-c7b72eb3744b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3b5156-abb9-4279-a078-ffcad628cf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d5403d-c889-4d4f-bb4c-32e5b75de477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc50b20c-5205-46d7-8e0a-f9e0d12f470e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45afa114-eeba-452f-9b60-7e25aee34ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077d778e-bc32-4064-a935-462411d4cf80",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e80579-9e46-4802-9e21-d6f5e4661544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c65024-800b-4fe3-ac78-8598d29ce097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0078af-5d9f-4fb6-9ac1-19b2b93ed707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e2e7b95-290d-489b-b02c-c6e51565d93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ef1c5d-1647-4665-a499-86386844fcda",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa1fdb6-bfb4-4962-8772-6e3604e31545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954e1298-3809-4758-b8d6-5468db8b39c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18b38a4-733a-406a-be1d-0d9423179eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4e375b6-0b6e-4700-8a15-3254bff174d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca756e2-580c-4dec-bf1b-be846c56286c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691c8f1c-c67f-41c0-b08c-2ee14fccb9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f85b562-66e5-4540-b4c0-895302b73219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b627ee-9b30-428a-8217-a7c98beccafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de7b8f81-3fd8-4f9c-9976-5da250d3f4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6f8542-bc50-4b0f-a23b-ed41e6b640a0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8c1080-f810-4a9c-84f3-348986865088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e457e78e-92d2-47ab-823f-ea7c45cc4786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2544e6-1677-4a46-ae70-e272739803e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cc13cd0-5ae1-49ee-946f-34ff5a0c737a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f9ff04-6cfd-4618-a37d-6c8a27f3ca6c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3a2853-c821-4d84-9e5a-c4ebb92015f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe6d643-8a38-4c5b-94af-966483520883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d645a4d-5418-40e2-9360-4a3a4c179c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed007ec5-2edc-49d6-9e9f-1f0abe866b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bbefff-194f-4862-b3fa-9298bf639826",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac30bda5-4838-4866-93ff-3b330d1c8d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c81a869-d2f0-4c8e-a8d9-a78ebdb83469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5e73ca-79aa-492a-8233-ffe82442920d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e12d3e-63bf-4366-8f2c-14d38891e53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f448e3-fb2d-4c35-9ba0-a2d26ad048b1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad566dc-2522-458b-a8f9-10d17ef0a483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922d4e23-287d-49e5-9860-7deeef5b277a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae9d419-15bb-406a-9f8b-29fcd75fd54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5bdde61-203a-4b00-b30b-418712a0a187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e1edec-1c78-4338-832c-ad06b1cee148",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76467e13-d444-4903-b230-00d82915d8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cb7428-32ae-4a5a-a228-6bfca12fd66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9df638e-797e-4b8b-9f1b-6fb413606eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "616b02da-b357-4178-8bb9-fd14f142d2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7d3718-0633-4d33-866c-48171bc8ade5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538c556a-70f7-4fcf-9914-b1175f829fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11b9470-403f-4408-821e-a77d61c4ab8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599ce1ba-1762-439f-baaf-d7606b10fd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed4f6c22-9a5a-4fd8-b0fe-a17ae3447e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a03b3a1-8c1a-4c74-a275-2e36600d1566",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e03f538-445a-45c8-b36c-fb5fa2648c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066db6b6-8ecf-4c73-a907-07984a295fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e6fb9c-16d6-45db-b706-57d5a3c7943e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "150cfcdb-9198-444c-9e52-e38dec48e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf87434e-494b-40c0-bc08-8d148532ce39",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeac1763-76c5-4653-8b06-c4a543e4bfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b70dce-ac5f-45b2-aa4d-302bc7bf78c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a251d4b-1eb3-4a6f-861f-cc1d505e1093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "846376b8-1e1d-4939-bdde-26ad3cf942c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd604ee2-91f7-4415-976f-face356ffeeb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aad7bbc-ac1e-43a0-aecb-e9f300f1bd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e06b20-8cda-4287-af6b-724601aabae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f4caec-7d28-4095-93d8-09567846de56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3e2917-190a-4f4a-9987-3cd17d6173f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7574f8f7-9396-4f75-b528-d0ed78a4554c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46edae0-8030-4015-8f92-3cfbd0334d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbc1973-3bfd-43c8-8573-3c295ac54b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2348dfe-75a3-46d7-8e4b-b32378849925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2699c0-3e71-424a-bc4b-a43cb90a44bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f7d1f7-7ba2-46cf-ad64-50147d6f10f3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697903dd-100a-46af-957c-169d178584bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db07f2d-37d7-477b-9e09-eea5a340a634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e11406-6b73-4790-8c81-1a9644f966a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60a321b5-568d-4565-ae40-68077b1e1687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8c0ddb-b654-467c-ae97-7f8ef4c93e41",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50de847-072c-42bb-99bf-b3bb2b1f5346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52d067f-f755-4797-899a-84bf2aad0ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86802938-2f2d-46a9-b642-33dff8b998c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95e0cfc6-34f4-40e4-8128-3a3ad8596fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed324971-9edf-4618-9660-bf7e8f0c8a6c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d64731f-dbf8-4725-a003-f11c65af6ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d2ed08-8d6d-4e42-b2e3-463e1ea73c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8054ddf7-cba2-46f1-b177-87a3ea0c35a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ead8d5db-d9e1-4863-a2da-b7e827281e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b8863c-e5a9-4d36-afb9-2ec017ef03c5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103246f3-447f-4d68-b9dc-3fedbf1b899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0bb975-9d17-48ee-b689-329d7e9d402f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcf8a00-a359-4159-8894-6d711683e3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2792dca-b7f4-4445-a4cc-deb0d6c7cc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673c6a3f-1ecb-4fbb-b2e7-94ee27662b30",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fa4f81-a743-4940-b144-dac3eab46603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca021115-1a56-44ca-a9a8-af7d90cbaf02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fca7f70-4272-464a-a7b7-8a35eab30ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d974691-7928-439c-b389-ab3c32b6e2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74737c1e-3af2-419c-9d41-40d904e6aa26",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a673166d-f2ee-48d3-a450-f9d7460705c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f10258-5c6e-4773-a317-55af3e6a7f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1919ec-070f-4f92-9ab4-8f2409b8ec08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9acbc826-5b87-4a15-80ec-6891f924dfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af7818d-d7d2-47c1-bfab-8c2f964ad06e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efe6d50-f297-4252-88b7-8b62462a09d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ef5d6f-0899-4a38-8ed0-ed75b76c24d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e173f8-170c-4dd4-869f-5afc09d9e4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd259d4-c2b9-4727-887b-160d8dc4f952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232ac1b1-d80c-465c-8d59-919346ad99af",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596076f0-7c1b-4123-8f22-4a166d86febe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc188de-8260-4515-819e-4f750d505ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b536f8a5-8946-4890-967c-1b6e7801c253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7c0025-f2fe-429a-b7dc-5003219b6a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14efda0d-c703-4073-b06e-8d8a93467aef",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4f161f-a469-4fd2-a28e-9d6ccd6f4aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b082344-029a-454c-8e24-a9ecc041cc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc362366-be7a-46bd-b46d-e8e6f4e9654f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db170d1-f2b1-4012-a080-d92385de8c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc428f1-95bd-4dc3-84dd-ddba73c29616",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bad24e-8f19-43ac-9006-2df28bba2bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981feb07-b59e-4843-9a13-ab0b6f952999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a3ff10-24e3-470c-b41c-d578845e1192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b457582f-015c-4828-a712-261edc2fbbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a2009b-bcb0-4112-aafa-05b223b4d8c1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d458f410-5f54-4f44-a2ac-55afbefbed95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c25205c-f2f5-4f4f-8898-dc7ba6c6e367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a4cbde-1dbc-45cd-9bb8-48adc8a5a2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be427c7-1f2e-4ef4-a0f5-920826a97057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa6d839-61d0-49ef-bed9-ec6a0ef98231",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dcc793-d5ec-4e27-977f-f2e38d172d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ab96a4-7614-47fe-8b0d-499791b783c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b0c37e-3a37-4adc-83c0-d427448dd8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf87b17-936a-46dd-92ad-d22e1e3f4a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb71eb46-ac43-40f1-892c-7a46e4a81060",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18571672-46bb-48fa-8668-d1ec6a78583d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae7d40a-6b20-4200-b644-d62b516cc8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab2344c-6679-4fc1-8dc8-78222c1f8ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d6bd46-57c3-42ec-b971-2a1fb1a6fdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc5c563-5b30-4741-8061-ae987e2ca6e0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7550c64e-e2b5-4e0f-bebd-7d421f67b543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02960fc5-e7c7-4910-8312-e41e2aa86c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d374fb-feb3-4458-a7ff-cba615765934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc04ff2-2a13-4a5a-be6b-2820f9e2c681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b5a620-5e7c-4a16-860c-9871c38b209b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931a4897-4090-4586-9a4a-5f870fdb8476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64986c70-10bc-47fb-a1cc-e86860a5cb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21dc452-fceb-40d2-8a74-f07ff6efa576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23a9052e-3a63-405c-bfb3-ecae564aab8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee746bc-aafb-4ee3-8392-02ed16d927f4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cb0593-3522-494e-9e86-d8025e722235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcffbf1c-cdec-4e42-9452-5747b455736c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0e88c6-a419-4817-970c-a62ca014d166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67ddc3fb-0410-49d1-8b72-3d8c0add3532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11d4b41-7e26-412b-9096-dc4652604629",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436cd257-6a85-448b-9f62-bc9905c99728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bfa9e3-27a6-4e0c-82a0-aed476540ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a02b2d2-ebfc-49cc-b38d-ddf4501b670b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c8b0f8-e589-41bd-a9cd-07840a3b8d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1a49f4-1a0c-434d-9346-c358624fcca1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676244e3-5a56-4be2-b4b7-c9bc83bbdde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e038a1-7b6c-4832-9ebd-a7b2e676eeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3e8a2c-f8b0-4539-aca4-f2f6e6bdfe81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89ef067d-de40-42db-90a3-8e6d4ebccdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0876982c-c6a7-4fc1-a16e-c172129f86d0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236f2ae5-6e6d-4249-baf7-bb4a7628d73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10a9e7b-0087-44f0-95aa-dbb12517fae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b63cdbe-36c7-4dc7-80ed-4a5774f229c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f970aef-b018-4f15-bd4e-5b0fe1639c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc22b14-7005-464e-a8e1-1a5417dac041",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6aa30e3-d4eb-4598-87b2-ca31abeaee5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744e20a4-21e8-46ea-afaf-80f977f17d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467cb216-d1e7-4eaa-9d2f-fa3fb8d3b19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1207003-8d42-47a4-8324-47da0841de45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d4c282-a6d5-4553-bef9-81c9ece7a136",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9051af6-5703-40c1-9b52-b5e6dda8c70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3621806-6bd2-47c8-83c1-1a4038dea4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2786252-6871-460f-be39-42de5686d915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "483c38cb-1e7d-47b3-b5dd-dae64ed510f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00760ae-3aa4-4736-a87b-213e4484e6ca",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6027de75-ffc0-4d02-929c-4b27f7559f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e2d2f7-297c-492f-b186-94a22ffabf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25387e6a-7ff2-4ec8-871b-295b9c5cf178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3de8c0da-f816-4b0d-9b63-bb9b3c6d5fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49884f97-0f2e-4f33-871d-96e157792c06",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc557f0-5f18-4a67-96f8-ee1fcf2a8692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd3182a-d83b-4b2d-ac98-30ac721be261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73785eff-00fa-4c83-8e19-b3c61cf5b6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f589f93d-fa66-411f-a604-812c9e271f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85cb340-e95b-41c5-a237-756392e67386",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8197c8-ba3b-490d-8b12-4de04b68fdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8cb545-ebef-4944-9aa9-5dee8e518a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9b500e-9564-418c-b4f3-81582abbbb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cc17cd-bfab-43ed-8796-68f2ebaf71fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3541e755-82d9-4389-bec5-52293a791e3f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114bff96-c397-4ad4-b611-e16049be476c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3e81f9-23b1-471a-a0d5-40f6cd9b581e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729df729-109a-492c-ab30-b575a6cd6f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cd2068-7e7e-49d2-aa39-0ca35aad975d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769263a5-b89c-40ca-8aec-4488e426cae9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f8bb74-2eaf-4792-b031-cfa098dc4ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6920678-8cd7-4539-aa00-e98b1614cede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30f7bb9-2ec6-4824-a5b7-f3b674d7aae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8079d098-ee8a-4efc-9e31-460d60345bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b22145-736d-467e-9f0c-473b6bdd21ed",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d2d5aa-92ba-402c-b2c6-d83a767c9bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e475cc12-81d6-416b-85fc-c828cc109325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871267a8-4019-4144-9a6d-97696c3e8594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a49f712-b609-4d0b-9929-191ff326649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd4047a-b9f6-42aa-adb0-a9310b01bfc1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65249aa-0b02-44e1-9523-f0b93bdf12d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b891a9-fc63-47d6-9680-c070b7769e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1992de-2860-4ace-904f-43c89b8bccee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fda2fc9-992c-4d0c-91fe-901cb9d09f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61d8991-fcc5-4c3e-ac73-09480459e347",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070c541d-2dc0-4979-8a26-251a0cfddce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b9efee-2ab8-422b-affa-298734ab7f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d1a534-8548-4c82-ac68-3ef1dd8bb4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85d6b9f5-6548-44b9-b7ea-f2ba2b7adbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e04adb-78c8-4eb2-8d54-841809c4af30",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf306e55-3371-4440-995e-ac82bf71e1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6c3921-d8e3-417c-9879-bd54ed6bf53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b89369-79e4-415b-a69a-8a307fc6739e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb16cf5f-3e48-449f-9112-08a8751b8d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ad8318-fb80-4514-9e6f-80b08e0bf03b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d99c72-f269-41f1-ac78-4b21e39f76a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aec02f0-cd86-4159-98a4-e9934f579373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19fbbb8-9c0b-4173-9f93-14aa6eaf1eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b10b0c8e-f419-44bd-a296-52d775c076cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cec13a4-2e82-48b2-8e4a-1088203159fa",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdde7dee-6ac7-4bec-9e9b-6ff4b5f92e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba81b8f8-f0bc-4a56-8407-8d5b904b3d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2d6545-b078-4efe-979d-7149c5a678ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48cd6491-3937-4010-82b9-e9c2bdeb9796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed549026-5d59-4c16-8668-1b83d4860452",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced76a9c-acf5-4289-892c-2ad322c88535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df472e3-1107-48f4-8d35-245e98c42500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b7de2d-8f16-4d2c-9490-c5e8adb1b88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "409c8dac-8801-4c7c-87ac-b3f3c7a42749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458cd1ed-7ce0-4c3b-8c9f-ebb72f67872d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d187b0-3608-4dff-a332-4047f46db276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1114058-bb4d-48ca-b81b-af3e796356f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b15f16-2694-4362-9809-3cd5249c926b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc12d07-f4d9-455f-8edf-07016e30fe90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee8105e-dac7-42b0-ba93-e94a5062e9a1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59f6e20-49a0-42c9-9867-6ecad9b6a33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c254273-50d6-4558-a308-95e15ff2d1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaa1846-2b6f-42ab-8198-4ef4ff4f28e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5cdf19-0809-448a-b1a4-5143d7fc7bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc2002a-bd1b-4ad1-9fd4-77f8f5c5607b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8348bd-a217-4410-81aa-bdf9e26c19d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1a6e93-b0f7-4c6f-b337-7939d0a38007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031a8df3-245e-4dd5-b56a-7d208296c322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91244a94-129a-4b4a-8e00-6cc4d8f7f882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a6db32-dbb6-4021-9cf5-0a530459e7c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eedad60-28b3-4449-adb6-9acf52d49e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b70a61d-6f3d-49b7-aebd-1a8dbc87824e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8db5bd-d92d-42fb-b811-347a6efea863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "298b4927-a593-499a-9d21-feca4bc13baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b137fd9b-439e-4cc1-be94-aa0cd0c0ab8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a72fcd8-b9fc-4dde-99d4-c380d5e70a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca503bf-6a90-497b-9507-31d0ee5f0ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9c665b-5bc4-42f8-b1e1-79e3bd33bf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "33f80f64-f1d1-42d4-a63a-0b03740628d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae532439-0f79-42e5-b849-bea346b812d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d55742-b4ec-42b8-8c25-20f0b9111fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb4ebab-d612-450b-b8d0-a19e55238333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b4f6e0-18b2-4dbe-ab1a-07d4362194e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfb70ab-0de9-4935-a01f-74bcd45655cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab5adc0-2967-4678-a082-39a7b346cf9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8484f378-2294-4d3c-8947-2f3f3cf0e4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b241dca8-e067-4ab4-bc70-cf505620330b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2b469b-be8d-4751-9337-0b294f67846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b872d6d7-423f-4cf1-919b-79793e1dd95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650acd53-a8e3-40a4-9256-ae9f4b540116",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee4edac-30dc-40e2-9372-a57815ceb3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30395746-80da-4bce-b284-55a18ffe78b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d961ab9-c971-4091-a69c-5d3d1f6fcc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "05219811-e592-43a2-9911-325aaf40586e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3ed691-291a-4b2e-a080-490b7d51c97c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4647f356-92e2-41d5-8079-799b22d1db32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f6e0bf-f158-4c88-a10d-60118347a7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0065648-c0dd-4062-b72a-66a489760cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64ec8c9-c6b4-4ca7-ba9c-9a56cb8a04db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8769196-3b23-4dd3-86fd-5756636bca79",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1779eb1e-642e-4733-aed4-e8d3c67ca3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dbd5a7-cb30-4b00-8e05-e1d8370b0864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e1cdb9-2ef6-4e16-833a-8c805a624af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "068db7a5-5964-47dc-910f-ba3466f57684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dafbc2e-9852-4de5-8902-e7b03bbfe1e4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76683954-b8e8-4b7f-85bb-c812fa5011cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1e12d4-66e7-4bc0-a368-3c1da546f3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e55565-b8f3-4779-9320-11bd53ac2939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa89341-10d0-414c-acdf-516024569da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c18a6fe-cfe6-4075-a0fe-70da04812e60",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7d4965-c52e-49ed-98ab-61d35bd09ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf2ad6f-afd6-4952-9db8-365a7b51f0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18be0464-f433-42e7-8539-63a232a362b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d0cdc7-09de-45c9-9308-6e92dc6f2a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1f82f3-8431-4fb7-92f6-aef245bf7410",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e0c239-d757-48f3-8ac3-aec1a78672a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a817be68-b5ac-433c-b724-004974941c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b075763-96d6-4ac2-8332-11c416d4177b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be2821a5-94fb-451d-b6ad-e4a541575706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0190802-bc4a-4f57-8e29-29a3f4d44912",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c13a401-61b8-44cf-97a7-d64c3ed1bb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2ed82a-1685-47dc-83ce-75cfbbdad89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596cf262-b175-45e1-8f48-9a038144bf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "86eb3501-866d-494c-b9f2-aaf851d63484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dfa260-c5f9-46e9-b30d-6e0f37db23c7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73602e7-8007-4ad9-9661-3aab420a9038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a89677e-637c-4fa8-b76c-3d24c7c16405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c54026-707b-429d-b3a2-cf8f843c5270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc267ef-2af3-43c0-965f-646b33e73fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc12323-e991-4fd8-8495-1b3f712d821c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5fe3b9-90ea-460c-9ea2-c7f681822c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bafee5-f904-4b3f-b354-092c962dc237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f06d1d-0b06-476b-b0e2-915ac2792f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90995395-3876-4584-894d-3668c80ce272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0fa26a-04f0-422c-98bc-189019393022",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0811e7fc-5cfb-48e8-9969-92a1ea1ba0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f119fef7-14b9-497d-882e-bad464eca852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122c360c-13ec-4cf4-bca2-4b275a3be17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81b69eba-3ff2-45f5-a4cc-459f04a207e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f5a4fe-be2b-40f8-bc8c-60225ff2df77",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dba0dab-5e1b-4a41-8247-0f399f13211c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d83545-3d8b-4362-91ca-9ff12cd1594d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdbbb94-ba83-467a-a046-35474186d7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56954004-75a6-4061-abf2-c15f5257be59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0ec448-5387-44d8-b3a5-30e2fbb51fba",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8e106f-2cf2-46cb-9b79-bf23cd5f696c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6fa611-4ee3-4980-bb02-a77f9fb1986a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d996c73-d077-4a40-98af-35aaa0d5c7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eca1f66-b3e9-4e48-b592-f6657fba1101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121f7cbf-b778-4e1f-8b70-13f0a44110ea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33551f5-e982-4efc-ac92-782d818d994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16310ba5-d368-45c2-9802-5527305c264d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f19d070-9bd9-440a-aa3d-796a11e06e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed1c91a-fc6e-4b8e-8fa5-43bbbddb7176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc6a1bb-e89c-447d-ae13-b523d62a6e89",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9a855d-fc27-4381-a7a1-5d9d0bb5370c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe826d47-bfeb-484a-ad86-472c07f701f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2842018c-df8e-46bf-9d9c-1e3628e333cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4162289a-618c-4604-af1a-d26aefbaba32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc59e87-9554-4a91-90a2-7bfe88a0f2ff",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0cf3d5-c72a-4726-8db4-e3f65cf68ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b6e9d4-1edc-4a08-92a7-e666f2df8216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e7e8cc-e3dd-4f48-a671-8be1e7ce71b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70557127-60f8-41a6-b827-7baf409ea789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989b9cb4-060e-4472-b941-7cc8f4d58fb4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa4b080-99a8-4236-9f0c-d3daeb4f7147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d042e2-4239-4d7d-81cc-2c181e356b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713ad3f4-576f-4efd-b3aa-94a1d18d93a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "358a4084-9347-436e-bf15-dae5bb5d9423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997144cf-ea7a-4aba-a508-7b9a3f6428bb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8d31b8-9c58-477c-b488-6b8e69f2f20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4606cb5-582d-4f94-ad4f-646555273ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ec16a2-075a-4139-b85d-aa3a84565603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b75f5ea8-2587-4484-98ae-dbd503230a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ea4307-b348-4868-8eaf-d8252260dfa0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d3bd28-a897-45b9-b16b-3730a7d3d89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac2731c-bd42-4189-8a0a-392f36a05a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38829e8-a153-4ca9-8f21-f58f47de9e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f194c25-6d47-476a-81e7-05b8095301c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bf2f2c-2a12-47ef-beba-47f5da873960",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e4e3ba-91bb-4abf-90a1-8e8c52dce755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb378e9-cb49-4820-9647-9885cfcf1027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8039571-c92c-4811-bc28-46ad54c97f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33230c3a-a90a-403f-a7c6-ee5ce6213d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89fda27-8131-4063-8544-6da588f0e347",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa16a04-bbff-413c-9ae8-c1dd0601bc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce22580-ccd4-4e7a-a845-d5b16706f569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671e3b5f-57b2-4664-b3b9-ee4d9b5792d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d3c886-5a8f-4ea5-a855-43354e798cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df48d4ab-bf19-43b9-8bcd-594643cb26fd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83373009-b76c-49ea-88ab-16604b1faea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad89f4f1-cd62-4e4c-8b08-c785a94f26d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee3aba0-aef4-4fa0-9c06-7830110ad7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ce9f3f-9089-4861-b4bc-87a4b0ab77f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb224c5a-776e-4e6b-89a4-9244446dfbfb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fa6b2f-1cd9-4e68-80eb-2870df4665fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba6afd8-ca72-4306-884b-0c71f338770d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb28028-78a2-4bf9-87b2-24a9fa8b8d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51275f15-34d5-4335-a337-bcd4fde459f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754770ee-dd4d-4fc5-8e44-301220d70260",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41b5590-bcd3-410e-97f8-2e6f60cf5f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d250adc-3a49-4c61-a0cc-c2dcdb696f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8ba2e3-394b-439c-8dd2-bcde20426527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e97b710-f614-4a3e-8add-a392c59ed930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5908444-b65a-4666-b215-98761b2eaf6a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb40a8a2-30d4-4056-9651-5ad9d8a1774b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36105bbb-3ba9-44c0-b0c3-baec6eca5be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f956ebe1-d4e9-4eef-9d67-dfbf4eda4565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe82a40-68fc-4ef3-9d75-b3950c6cb0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb24cae-be00-4e4e-b4e1-c64d0b5c4719",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7c2b27-bd9b-4b6b-8f83-37542bd4a726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d315124-3ef7-4828-bbe8-c748a3633258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153d08cc-4270-46df-948a-dfe74b6d5a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e878caf8-e44e-4a6d-b250-b022a2bef387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0679026a-db5e-40ca-993a-138b62df4aaf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b42fde-d512-4a1e-afad-903242fc795f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32680bc-31d1-41bc-957b-2fb0e8094ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f340743-a4df-48c4-9904-679a1abb0e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2976bda9-80a2-4c6b-8792-9c7025be7077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509a44c7-17b7-44de-a0dc-7e1fb55fa7ed",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68891e9-ea58-497f-a231-84b0358696d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f37ee70-8ef8-4607-a66f-1ce64104ab97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8800aa1-2133-4c11-acb8-f6f3f12ba6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91fb6ed0-d5b0-46ef-8c42-a13166ff88dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664e4872-0bdd-42b5-a09a-92970068aff6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8220f777-fd97-4fdb-8a19-117ae7437e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c022927-d719-4a25-8596-491698826b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a5ce8b-e837-4346-a532-10f7a814c43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba0d69b-47fa-4acf-bf50-10e638179b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03adf90-6b8d-433f-a441-f432019b6eb9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bd05a3-cc50-4116-b788-2d128f72675e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17c0aa2-2a9a-449a-a4a7-725101019739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fb829f-6736-4a25-9f5e-f41361d79c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffac8d1-7081-4b1f-8364-d56b148a2afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f61b724-6e3e-464a-8184-ceea3abb3e2f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e558197-ba9d-43d8-a21e-cc114cca66bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b17c24-402e-4715-b1bb-07602b0930b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449c50ab-88c1-4e62-8faf-e910da576376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4aeea722-c794-4e55-b8fa-39c94fff8b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864e407d-9be1-4a9f-ac10-6ac17cd523e3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e478d37-1ec5-44c9-895f-8ae8ba0e640f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8787bbb0-e7d2-47ca-9d5e-93a63ba75638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae945373-96bb-4403-af76-c8647588a4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6686f27f-aab8-4468-a9e2-6f4ed2425861"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f03c7813-371b-4c99-bd79-b577c6b92003",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e96fc979-55dd-4cab-9169-70e50cf77ffe",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7888d73-864c-48ce-8e1a-3d5d7d731af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab6d5093-611f-45a1-ac43-5cb090fd979c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1134df02-4c0d-46ff-b88d-b32655235153",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd9e0fed-16d7-4145-b1c6-4cb4b0005a1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88b11808-7e37-4831-a70a-396bd53720f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8257e75-02ab-4031-874b-b84e6f040f8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d83c7915-a50b-443e-b893-60073f0a1274",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9455f95a-15f9-42d3-a8cd-9111c4d31bc8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df645aaa-eb90-46e6-b883-d9c7c27442f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b0a506f-0060-4c78-99a6-03b0e5d3f60d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "21047283-8f2a-43d8-b505-d0c805427698",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9273f7fd-8ba9-48ab-a4a6-0d220baa9e0a"
                }
              }
            ]
          },
          {
            "id": "775b526b-dbe1-443f-a80b-ae84cdc588d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34c3337b-7400-44ee-8d5c-81bb7ecc9f61",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "164ce538-65a3-48c5-aa28-eb27772314cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74f068b1-4720-4a71-8e3d-4035c534e27a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b22614d3-9ea1-437f-8fdc-fd53b5ebe514",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a7e3b2b-a5de-46d8-9053-66e03f47ebb6"
                    }
                  }
                ]
              },
              {
                "id": "97ec17fb-df6e-477b-a55b-2b30655d5cac",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88caee68-2275-4ccf-9c9d-3e27bfe0a4f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11a7bff1-b3b5-4bff-97f9-97b52b538c7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f56e4e74-ccc4-46f1-ab3b-5440135b2cb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc856674-1f2e-4ae9-94d3-656c28d4473e"
                    }
                  }
                ]
              },
              {
                "id": "6c5cd083-6ae3-41b4-8b1a-305b81dc257f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67073083-7f09-4cc4-b7f2-a96d2d7f7875",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9caa189-b7d2-4d92-9e61-d7e9207d439d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da777799-e0e0-4c1f-8d79-ac3c535550c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "540abecf-0923-4ef4-9e4b-22f23369a35a"
                    }
                  }
                ]
              },
              {
                "id": "d6547503-4e5a-4ce0-b2b9-f362c902c120",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e61b8825-b6b9-4a70-8429-0454cd509334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41475737-c5e9-4040-818d-07495ab1f0bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3f31423-4575-4aa4-b225-3d37714ffddb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7af8f15d-32de-4a12-a198-ab04bfdfa39b"
                    }
                  }
                ]
              },
              {
                "id": "9ca9dafd-6c54-4036-9f43-3442eddb967b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e283c696-fa74-4a07-b967-beef28fd1718",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80a97386-f8b2-44b8-a64e-4341bbdc3daa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e60f736-fd46-42b5-af52-3f778ce0b813",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "658517ca-d771-4501-ab9e-39af08788d5d"
                    }
                  }
                ]
              },
              {
                "id": "1da1baa8-0a45-472a-898f-b0540c5b355e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bab7e8b8-9960-4fd1-88d8-99b114535bc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5d2c702-438e-4461-9c2e-44c4737a3130"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12616dc-7b0f-48df-877e-f47c2d361d5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cfcb3b73-9762-41e0-8f0b-ecaa6c6b0482"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "348f3f0d-3dcc-474c-83aa-ddd79273a65a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5162be85-04e2-4948-bbfc-29d625b4a984"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81d3f370-5561-4514-bfbb-8c16a59a7b79",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1c5dee1-b160-43d9-a8b0-8235d29851c1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8b5d390-22cc-4b84-a2a0-ae6b49acc180",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "521497de-3c62-4a8c-a874-cef03a781805"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "beb8268f-a017-4039-b16c-8f8a2701472b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd9f8267-5ae2-4fca-8951-d77bfd88d422"
            }
          }
        ]
      },
      {
        "id": "310c11ea-3697-4636-a41d-22c3a6b386f0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1ea36c4b-c04a-42c9-afce-1864da816c82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b61a0d3-ce30-4a26-ab4e-8d1915ccac46",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "45b1806d-36d6-4748-afb9-cb58912636ef",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fef5eec-b755-4a31-be08-9e1eff53feea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f541cd72-9df8-498d-9711-78b22f6d5780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a67d4ed-c4c9-44d5-b808-8f53b3266d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "27aa369d-a2dc-44d1-a54a-dc9fe1e8fe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6f0c6a-bd87-4faa-8e62-1096481cffe3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0358ba4d-b098-43f3-8b52-c757fa11629f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0cb400-ad2b-4e7e-a547-466ccef341c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851f7d18-daf6-443e-95fa-38c95c650541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "211266e6-e5d8-4858-9df8-77d5cf6acfec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3306f274-3e00-41f7-ac9e-fae5413ed3ca",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb84afb-f836-4cbc-9c4b-bdc31cd8976b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d094dc36-1bdc-4215-a4c2-a4a4005dc47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f59f1b1-5cc3-4911-9183-da4dd552bbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a56540-0f5c-43ea-8ddc-b2037f415bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab18b82d-5ce4-400d-96da-987e906427db",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73efc36-5cae-4ea3-b557-588a7ec2befc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f587f54c-34b9-4f9c-aea1-ddf22a884571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbef83d-93ab-4318-8a12-2c1b3d33f056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07fe26d8-d3fa-4292-bb0e-4d0008c821a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89067d0b-655c-43fb-aeba-e96855fc333e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b959c927-5f01-41ce-8e7f-ccebe04d3f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7a9d26-f6a1-464a-a3d3-7892c68b1d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbf20c6-a896-4f04-b2bb-f792c7e67fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5adcf5b5-befe-4ec4-8dc7-8798cf0bedfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b3de00-edcd-4a1a-a78f-3fe3aedcee8c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5031c46d-b23b-4a01-96c3-439455e178d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091fd7c0-5ee0-472a-9c9b-40f17642ba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c25763-0e20-4431-bbe3-ec28a32b4d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02096a6f-7b0a-4881-8c13-5b4021034c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c0c07b-67fe-49b3-ad96-be66773a385a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4baca6-9ed4-4ac9-9122-d829a31f5264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4540f2-0625-47d9-8191-9d37524cbcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d52df25-300c-4ddb-bb66-c492b52e8aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c2ff3f-dde8-4df5-ae3a-5648a1a9098c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f9481e-03a6-4b42-99c6-2dc71e95ff8f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67f8d8c-67d8-46ca-ae9c-4aebcc0adb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a474d5bd-04ae-4bcf-92d2-a100979a8658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42c92c6-93c5-49dc-8912-c6e8b8255b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a48920-605b-43f2-b9cb-c6d805eeb961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffd095b-e31c-493c-bcfd-157c85825ee5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9a91c7-26d8-485a-beb8-381b49c5e86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e4bd77-dae1-436d-bcd8-ef9599c6328c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc180faa-eadb-4511-9b61-2055b233e095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "419e0627-739f-4010-8588-15eee0f4ebcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e5b19e-1d2e-4352-90c9-4c45904c3418",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb09d74-e3c5-436d-938a-c3636d118238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3786f1c4-2af6-40cf-aa2d-b32f01a032b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb0b63b-c00e-4608-b51e-edba76d2db59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6916fdc4-fa10-4a27-b427-334a1f6f763e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60607313-7943-4a97-b864-9d0575e8b38b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7d145c-1f91-4662-8fbd-572fdcb62342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8049cf23-5b2e-45e0-a110-56ca7074ea53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51ee27e-4180-4280-be49-2856403b815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc3c3a7-0f8d-431d-8b38-5eb5d799adea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcba465d-f72f-4feb-81f8-3c125be73cc5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad3b8cd-b713-4ff7-9ae6-11732955e67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a25828c-645b-4b22-9fd2-99d3c7f4bb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a78c02-1e07-46ff-a7bc-c80f2c57e1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcca99f1-f6aa-4fd2-a8be-1d260a3deb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a31314-f418-4ce4-92ef-232270c58d5a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7551746-142b-44f9-afa2-09266cc6cb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753be4ef-da82-4751-8b0a-0e0f4647257b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c16a3e-0e4a-4928-bd26-5c94214dbfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1ff71b-7f4a-4132-85a1-b5ae5265c188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4395cf74-0950-4b5a-90a4-1bf1f008d136",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1477882f-beba-473c-bf2e-fba78c89049d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0481790f-f568-4f95-866e-be009814f1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a89981a-9d4b-47f4-b188-ac981b86a0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81557e1-910f-4e19-ac27-1d872444b8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b49010-f9cd-4171-94c0-b480173b3ab5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def1b87c-93cc-4bec-9d16-9413345f2369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55cba192-67d4-464b-82fa-27209e140e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0175c95c-9a5f-4f6b-ad4c-ff63cbd3b7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b039c05-554a-463f-8498-1db904f1a901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c014cc-4e2c-4008-bf9c-37f45d65957f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317f03a3-28df-484e-affc-6cfec1ac12a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514cdd87-3753-4ac1-9b45-e0ac3749107b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab29dc9e-cb4e-4218-aad5-2df2ede98a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7573cdff-0769-40ba-95c5-da2086a735f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eff4c5b-891a-4a18-9a1d-e9ac88cdfa10",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66204ce-b621-4a26-9f3b-f5ccbd4af79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e47b90-dd9f-4cf7-98f0-a0d3c98545be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6661f0d6-fa70-4dae-98b3-75b3c5344448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3626d088-7304-4f1c-b43e-43a06a55f091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c7a344-8792-4e6a-9842-1e1c4c4f6785",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cda32f-7fef-4461-b783-d2af79fcb0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8ecfdf-0650-47c5-8e3b-0fc6de1759e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fbc8cc-220c-451b-9002-692aac72730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f80b8a-2a72-4d81-9802-dd255418938c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdeb6f4-11e8-4028-ba9a-b2e005499db1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8224a812-f8e5-4a7c-8960-d3ad7568c055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9a2c23-b135-4815-8cbb-41aeaa154248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9734fc2-db4d-49e0-81c7-23817094764a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d556475-91f9-427d-9976-0979a96469a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7c6a57-9586-4d5e-9d58-42de3d287a06",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2799668c-0f97-41fa-8113-b074d2715e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15dac14d-be1d-4102-b285-768cd833a858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3d57f4-9aa7-4f43-8b14-1cbb265742a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b424c17-4532-4cd4-9a2e-4a448a61854f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d49493-1d0b-43cf-bb23-d014e1c11d90",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fc972a-060a-442a-89c3-011ec034ae89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b21bdfa-52c2-4ae2-bfe7-00775c53a63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0396c48f-b30e-4f9f-a10d-10cb93e6043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa00300-8f3b-478a-b206-1ebd11eea7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3a75fe-ddab-4d78-a0c9-ae1c75fcefcb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719874a8-2601-43a5-b705-f37372188a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5d4147-fbcd-455f-9962-4d2c876ab795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd242bb4-93d5-4fb7-b070-8086b55513ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "600640f7-3e48-4236-93b1-a143befb45b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9024ffe-318e-4f7f-af2c-026285a8f5f2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f3c457-8420-42a0-b32c-4e8727975144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff8f70e-22b1-443f-a859-703d6b0e2858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cece2698-8819-4db7-8b0b-99c6b5d27dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6273faaa-e460-4d85-baf3-47d7e90ddf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1a8251-40be-4a76-9dbc-97f0c24b5324",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03e1aba-6398-4938-8516-beb3570de511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa6b8a7-2141-4ba1-a34e-d81f2dae5f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c6f561-3ade-498f-8f41-ba9c9664853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b39653db-fc33-46f7-9326-e529b396d2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5be4b2-3bbb-4a4d-a4f3-cf58f4843a6d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4789ae05-2c6d-4abe-897d-e60edf404171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71030a04-2c0a-4e2f-8d30-8cf263c96594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bae374-6554-4610-9915-14cbe993cfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5967fb4-2945-4786-99fd-06f6fa4fde9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04e76bd-93f8-437b-b4c9-a4917eace7be",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311dac34-4691-41fc-99de-e4965dbbbca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d90d09f-f44c-44d5-a47a-ae90abbad0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee412315-614d-473f-b4ff-c539f8e71ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2571b158-6c15-4069-b1a5-0ec695b0a608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acc98ac-9c10-4d8d-b0f4-cdb851badc63",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed423853-7647-4685-a09e-1be51936edd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4421532-10b3-40dc-a9b8-01038f0c9a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a66bb9e-c84c-4f26-89b6-923438c9de68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59568bd-0a1c-47c7-a728-d4ad4cf78c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e98e83-1c6f-4912-89fb-b6af4649eb5a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fd4b21-89e7-4607-9a23-9d58896c5fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3467f2-ff96-460e-9c3b-a6f21f37354a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44530cd-f265-4c39-8710-59c9ce218347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b67ab8b-5b41-4792-904a-176a92f84d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d3a782-1fa9-40ff-9eda-65fcc10d721b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b6a485-249c-480c-933f-454580de26d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2415f1a-323e-4118-9950-97605fcda0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26921778-1841-4516-afcc-a16300ff513b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e97767-60ce-47a2-a4a7-38080b128772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4db466-6325-4eff-88e9-47638cc66d8f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454f6efb-be8e-428e-8b0c-a2b9d08b867a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60ca87f-d6d0-41ef-b633-b257fbd74453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef376d43-4b38-4124-a5bd-8db6eab3e167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a6775a-0fdf-4ed6-a925-43aeb53d946f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d3ffab-2603-4093-a1f4-d410877b7407",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba38e315-ae98-4929-9c34-284c64682002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4a0364-31a8-44fb-b08f-d7645c819f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273120e8-61b4-494b-b0da-0c19eb52cd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "851ce20f-0b5b-4a65-bd18-42584d294621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5773ba-c012-40c7-8ff9-a26cfd0fa7d7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6098bcc4-5db2-45b9-93a9-547d7471717d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46161884-f746-4699-9a39-27b3f0b2dcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c86f33f-e3af-4194-ba72-f9040535024f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9fcea5-9396-4264-8fc9-b6c7ee8ae454"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3977ea67-bd37-47dc-911c-27df77d4c3f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eff4bf93-c341-4de1-9aa7-8197d917b74f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252b9f3e-2419-4e76-a1f3-4892dab5cd4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fd6cf7-dc0a-42cf-8c2c-4ba04be7a03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4637d271-df34-43f8-a929-d35eda87b135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea384d4c-b452-4d42-ba3b-e34f32f914d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8eb520d-a518-4ff4-a4aa-e83fa0ddfc72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c65a994f-b4e9-47cb-9449-b73ab0327370"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "666861d9-4278-4f1b-9953-f2fa4d1e702f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adf34ad2-8e6f-4c99-a2bc-61576080fb4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ec1f3fe-9210-483e-8a55-d5c2baed9670",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "729f31da-e1a5-403d-9c1e-4aaa9a3b7d45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c23470f-69af-4147-a6e5-3385669835ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37a51f20-cf35-448a-9085-85aedd494734"
            }
          }
        ]
      },
      {
        "id": "2cbb454e-6e77-4e8e-be4c-dd2b303c9acc",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "46c99bbb-9725-48a5-8b59-572a34bc26fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "834d36b9-cf54-4497-af3c-2c843d4e0210",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad377124-20e7-4013-ad39-75ca23a38a02",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f59dfa2-2cf4-479a-8149-b1c28ee3b600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ad4825-712c-4e64-b923-65ac8f919565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4d7373-91a8-4a3e-a3d8-72a33eaab7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcdd7d9-0bff-4961-bc25-3da39c1d9d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ac2cc9-a60e-4016-a1de-fd8692fbff0e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7210bf80-3d8d-4dad-a576-7358f8d8476b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb255a4-2d40-4d4f-b1e4-2e7578f6fe53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e2d33d-ecf9-4f87-8b2e-a6ea674e6725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3243d4b-d62a-4969-97f0-d8cb77d95268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aed86f4-26e5-4c6f-9b98-f6b6c58c33f6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0dc64e-89d8-4612-b942-f8d5dd30092e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c387f60-c90b-48c7-80b3-80eb09704bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6017ca-873a-4a59-8ed9-68273d29da65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f020f507-efe7-420b-a770-8de70f7c0bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068570ce-1981-4834-9a4f-06025d970441",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c7c1c8-3d88-4aa0-8b4a-d51ac27ee140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfb3cde-417a-46d7-9f36-00a42bff2f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75b67f6-ee18-4c8b-8e65-f99fbbe4c159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c937dfa-1608-4c52-b860-23081e563a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c824cba7-8d69-4cf0-8106-b090b86cbbe6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea5918e-32a0-4a59-b6a5-df5911d572c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c6985d-6b82-435d-818f-ed3d91ee4c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bb94a0-bf50-472f-a1fc-1b8cc2b27dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf58e89-8720-4c5b-a7fe-3528ab5b4826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc74cc5-f6da-4b4b-96ad-915b03bb7374",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f54142c-2f19-4439-becd-fe7944d2daa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cff5ebc-f86d-4dc1-a2aa-ef58cb6acc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f62e105-e9e1-413f-93db-f451b77cb5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67857e9d-74fb-4d85-82fd-cfab0c030eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e8a3bb-d847-4dd6-8e72-b0b773011335",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99c2551-de82-4873-8d15-8d2a881daab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f617b67c-2e00-4722-a94e-5a8fb14ab867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6962c8d4-a619-4f98-92f1-308e4f637746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8644e3-85fd-438a-bfd6-0c70b5b1444b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206c996c-c54e-41bc-be44-ab3769b7c634",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb08119-f852-42f5-b392-d7db12049e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c76798-f0d7-4be6-9ec8-2343ff5b4e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da2c705-56e7-4c7a-8131-ebbcf08e4baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7ddc52-9ca1-4af1-8ca9-4bd5f50c0a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ae1bad-6df1-40a4-ade2-5ebceb76c102",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72edf1d-b06b-42c8-81c8-0a77044625b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a516e8b-3e67-415f-9fd2-0eb8cc0c94da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412a45c9-37ee-4b47-bca3-7bc4515a38aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24d35779-f9ff-40d2-897b-5c622cfa1d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898e7144-5d42-47b0-8b25-fbf16846c93e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197fc990-68c1-4f73-85a5-eb404da69d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f714d60-45d4-469e-aa64-363307141bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd9299e-ac55-4a4f-a5ab-c5f255096424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "162e162e-1ba0-423b-bcfe-06f40b5050c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62d4120-a7b7-4314-8291-59ecf2992e5f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd768b3-58e4-4985-8967-81167904444a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3126647a-9f11-4aa2-8e11-9abb6a9df1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cc4377-80d9-43e1-b04d-61ffca22c320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3153aac7-9aae-4ebc-aff5-b610f5e55133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1662ff6d-f97a-4e35-beff-dbc1fcb4c8a8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca23d911-0fea-49a3-8636-a96422970691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b258fd18-d6a0-4408-9ff0-713dca8433fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33561a05-2dd2-4d5c-9abf-528fc9c390eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "096f4909-6640-4797-ae91-3afbc5a1cdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d321d8-f9cb-46b8-be5c-a7fcf06162ed",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaa2879-7592-4e22-ba38-e48cd0e00100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aef05ad-9f35-4bdc-8bc3-b7e3403ee6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648291ce-6abb-4da9-b1c0-7c004b2d371e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e2d0ce-0037-45ad-8988-3388a64111aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe02f47d-82b9-430d-9394-7df2d9706875",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dad2a1-0583-4bab-8d40-bbb4c54a09dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33be1c6-1e4d-47f1-9487-60f07a5ac35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b7788a-a4f8-4ae9-8fb4-580adc39987e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4842a03f-70a5-480e-a933-fa66adb92b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8350339c-f444-4fe9-a1ea-3664cccd3be8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da932e19-7c10-4046-baaf-956d2f31ba0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6561018c-5756-4d35-9806-a672e21c5063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e469a553-cf07-440a-864c-1ee8ff451da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa705e80-2de4-4c17-b635-251c17988c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf01504-926e-424f-bad9-5377bafdbc85",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3527ef0-5151-4262-92da-b5d703ed9d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980166cc-664f-4770-91c6-55c196b6120d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab90d8e-f8f6-4115-aad1-916cf89876f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a31359d6-33ad-4cf7-bcb7-b2865f6400b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1a0a93-c804-4e5d-a933-81e9023331fa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55aaf534-cd4c-4124-a441-2673ddb4c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152c738a-9132-4bd0-8dc5-93dd8b9c1b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d268313-3b8b-4ca3-98d3-3a3e2826703d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a0b858-9689-4148-83cc-60e5b034223e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb9165c-bb3a-4eff-9b59-0d32d7a4ccc0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48103754-b839-43f2-87ef-50e2166ea071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600fab4c-e2b5-4e5e-a038-44fa47566fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad18611-f955-482d-b003-797bc40d9430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c904721a-e644-4831-9658-a70a1e050cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0a24b6-754c-401a-a29a-431728c63519",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66adb83d-a421-4a01-8c61-33b2dddf1ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f8c79b-8033-4b43-9814-f9e8138ec117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ce7491-995f-4b48-b297-cacbdf1e4214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb136e39-c504-4f63-85b4-3a414763dcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33332810-0f6d-495c-96f0-56e5267d95fa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73b1594-1dc5-45b3-92cb-93e212213009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec3d2a5-f193-4038-9648-4b305db7e470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fbe238-2a15-424b-8510-de32988e4e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e17b85-547a-4078-ae33-a989c0ac4bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bccf9f-f846-4acd-82d6-c3e39142c4cc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfa6ebb-5cc4-4141-a96f-acc17a9b6141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14144404-cc30-487e-bf2e-784b60d7a343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661db6ae-dcdc-4a13-b059-5c5beda5335e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af7035b7-d8c1-4c56-a81c-75f90d9dfae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2272ba5f-b6aa-471f-b71c-22346dbe6d66",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d24ec6e-ed96-4294-82c4-bdff7ebd5d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743dc9ec-3682-417b-b0e7-26239f07f2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa74ba6a-3109-458f-91bf-10a882f2e96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "640ab45a-9451-4540-b9ae-7799593b3bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bb831c-2421-49da-a7c6-6cabe6b637a7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5e88d6-d84d-4a4a-bc32-30944e9011be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97102acb-ba89-4f75-8c1b-6f241db7490b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7052b72-60a3-4f8a-92fd-366925817e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "980a708e-21c7-4d67-a2d6-f53e8b9b66e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae5c935-153c-4f29-a6e4-e2a015244043",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289aa89c-8ece-4fe4-98a8-ff522dc1d88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3213aabe-5889-4f29-8433-5983cd9b5881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61998db6-f963-4247-ad73-ba949dfb84b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50454b5-5393-4760-a55d-ccbdbf95e433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6eaa0c4-18d4-4901-991c-0e7e6e733eaf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f5112c-8d18-41e3-8788-a3bec9337096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d926939-7d8c-4b36-b05c-fe16f0b62777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a40c19-87ad-4740-bdf2-9d1ba1a39f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cf4640-f986-4507-bfb5-378a9079c7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead59b7c-c020-4d52-bc39-fc31896a521e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b76ae0-ac5a-4c55-a993-0980fde752d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cb3b27-c1ef-44ef-a2db-54e1beb1e459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf8992a-7aab-45df-a244-5b0264b97425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d90ac59-7d0e-4dba-9341-4d092dfb63a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d83d07-33ca-4d72-bbe3-ec23eb7a003a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819ebdf1-8f53-401c-8477-51f9d6e358ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0925043c-954b-4a7a-ba69-eb1df9311595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f99930b-917a-4c4e-ae68-71ddc898861f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14a92165-21aa-4792-8096-0394d0f6a178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cc4963-266b-4ae7-9d8c-bd747ea1b605",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd31b36-86f2-4fad-a99c-79060677d993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc0dafd-2ff2-47b3-931a-dd2474b916e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88eafd1-d9da-4d61-9ea6-bbf8de4f3685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb79e5e-f368-4e2c-a6a3-aa7197d4339d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d012949-1b23-4cd5-8f72-64d63576d57d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344a555a-4460-4c66-8483-932b24a582c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f37afc-f2c4-44a8-b1d4-c3dc0080355a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d887d7-6c15-47c7-8a6b-08ead2afcaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ddf24a6-b1fd-422c-be08-8cbcaae4532c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab276cc-51c5-45fd-9e97-345bd0a01f9c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc4d57a-78b1-4aae-8574-23893e3be9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14513cc-fa85-466e-89a7-842dfcad406d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31d78fd-662f-4993-9f4f-f87732d41a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7168dd-a7bc-4b38-80a2-ec88fd906c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0a678a-562b-4fd9-aff2-bccd4ad76d38",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b177fc9b-969b-43a7-b08c-0f1da1da89fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697d056d-e800-42ac-9cb5-0ee4df85092f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cee281-e125-4bd4-ac75-45e00bebd352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdff302-c4f0-45e9-9f01-b5b28dd7a726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf160e8b-c6bc-4889-b938-d685fb5ce35e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c23325-2f52-4b4e-9f5f-4f2a56f0cdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b42551-077d-4fb5-a42f-3511f14ab66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4a967f-4e8b-4393-abc9-badefde59e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbce5958-3dd8-4ed3-910c-f6620d2bf183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd42bb17-f58d-4612-b134-89771c74af60",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7edf03e-5e61-4a10-9563-56ef5248bede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287b579e-f61c-44d6-8fd1-9b5503137170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1b911e-f711-4abc-b4e8-1d2f295a83b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70561f8e-00c1-46c6-b53c-70003ffdb6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b663b9-5477-444d-aff4-91dd80a47aa3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c87d959-c97d-47b5-adc0-924e0b391d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd755f3-6b65-4735-bf66-4e2254ee01f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a1f5d3-68a2-49f0-aab7-c1bf9c0f89d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c329a05-2d81-4454-8a80-bbfe1c19b580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2d7f85-7320-4b5b-a04e-71e2e85ec07f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5b20bd-8948-4f71-9d30-2d61d8a5bb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207ab96f-ce56-4f40-80e3-650b99b655eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfe8051-acda-4a01-b638-60154473d6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f434fdbd-0481-4160-8a17-b5462bf5c338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef1786b-c47d-4de7-936a-8efd67a040bc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9298f3f-ceb9-438d-8b0d-f5c40a82fc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aef9bd6-bf06-43de-add3-5ebcf5f9a09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e70e754-5e2f-41d0-b0c3-f54f6f2d448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ff9b72-c23f-4c95-9a53-5b543ba6fba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b46150a-c612-43fe-8b1b-fe69edc31baa",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056fa8a1-d8e4-4ef9-bc35-42fefd8734be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95258b90-a172-4753-a876-b29b95b8eed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e5a0c5-0912-4a99-8113-3e05c6d19162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f46662a8-71bd-4c95-9050-11d6af36b1e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d65e4b1-596f-4717-a4ac-c5c825601f23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14e3e7d8-427a-4e43-8d63-cd500bb98fbb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302c878f-0385-44be-a7de-fa10b25a6d27",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bddc44f5-6ace-4fdf-b9b0-20620e1f0719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79097d79-9337-4963-8ffc-c4939ea8da35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41231ebd-83f3-4338-b109-78eab6163a79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c974f5f9-9877-498e-9e73-5578acf15bb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3750c9d-4614-43fc-8701-ab2425dcc1ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0309a1c8-90ba-47c7-ad35-00737866972a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13a2cb21-3e55-41a7-b524-bd51188855de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7eb9105-c1fb-4035-831f-4d1b301517e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ff937914-7959-41ea-a545-9b66b333341a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "309f0617-31a0-46ef-bbb6-e17cb04b4054",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40025a90-62ee-4afc-b04b-3b272137aa0f"
            }
          }
        ]
      },
      {
        "id": "71f587d2-d6b5-43c6-a23a-0c893519d96b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6b31ec77-51a7-40ea-a7f3-2ed214e7e1f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00ab44de-0333-419a-ba61-276f3d6739eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebe08b89-c9cd-438f-80e5-d7cdb4b5aad5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9a8398-f4a2-4bde-91c4-f20ce556f3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb805391-0aca-4639-8b7b-4f8b647bddce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1758f312-6e1a-4572-a1b3-54f929486909",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4801e306-6700-4b77-8019-40362670f960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0f7849-1513-4990-87db-4c4d95bce66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72aad7f5-042f-46a1-8f84-cd37b60a5ac3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a691c797-00d2-4512-bed9-8c6a5397cf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef47b01b-6fb7-463f-b992-39de73fdaaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af79e2c-f6e0-4b29-9fd2-497a2a62c964",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264f2111-ef93-4e90-b46b-25903fbb0ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6e0228-01bc-4a0e-9d1e-e3eb01ef6cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d240752b-1cca-43f3-a8de-4e852a4d4729",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6d10a4-db48-4e79-8184-2230b746bf68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a2c3fa-212e-4f81-9b96-800376d09b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d2fbbe-b667-4b8d-acc2-0c5695f8751c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a054a4-8ac0-48ea-8d8e-eda912ed36b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159f78d4-845e-451b-9428-cae2664d8a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72561518-ffc5-4447-afa0-79f8505c76cf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230c3e92-a609-4685-91e2-79fbbc63ce15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919829cc-458e-4120-ad6c-da8d97149fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a646d3-baef-4531-9bf2-c0a89f6bb737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f534b02-3ff8-4334-a84c-c4fb8008e277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1380ce27-57a4-48fe-8ace-4d0d8477a933",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99b40bb-3a05-4392-ac01-9c3318b053ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2840c493-eb79-4c08-b31e-4d772d034bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6490ba84-27d5-424a-81bc-d3aa9779e0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dc5adf-cd04-4970-b7a9-eac11c283ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a390bd10-2610-40e5-84ad-bd936b9e440f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9a43a8-0f53-4250-aa7a-ad30911db852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1bf35ea-0fda-448b-88d9-612d4aaaa7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadb5da7-606a-48ff-94b6-0da5bed5d2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b85fb9d-6841-4349-a682-fbfa4a8cbc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5feec8-b4af-402b-b6e8-405f0159138d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0469b9d6-dbf3-417c-89ea-8090ea32b6d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954f05a7-1d0f-469f-95ba-eb5101b0f787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875f5f1a-3026-496d-b505-efe0187beba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490aa676-dd93-4fe3-9d43-b948b1ec4cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b37be0-2a14-486a-882a-a0895ba05eba",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180f1617-e60f-4069-87c1-5517da28572a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de59b80-f958-44de-ae49-d9dcb27de912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d613d84-f01a-4dbf-b10f-826ff4b283cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052b88d2-9a5b-4873-8ceb-2474097d1255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5e816c-d33c-4dae-b4b6-b644354d41f1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addf978f-3408-420d-8cfe-aba4380b903a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5733451e-e3fe-4cfd-b597-a1d381255a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90427e7c-8569-4375-af46-e70160cc6e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bee5313-609f-4650-8759-ee64fccb361f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2666d9-e70f-4ebe-a929-ea08141b41ed",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f3ee3c-1fe2-492c-bcdf-4895ca8b4dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf1ea58-bbcc-46b6-a76c-768061a76aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b8f92f-19b8-488c-87af-5b994b6bbc42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdce4235-1376-4cbc-af9d-5494a9a2cbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71a23c5-003e-4264-9e25-81a860786c9c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475864a0-7f1a-4189-9159-28c6b9bd48a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32979235-4b2c-4e8b-8a9c-f0a8dcd5023f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89856759-f0ef-4487-933b-a164eb188fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022f1bcd-1784-4adf-b7ae-d9da789e6abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d715360-c247-4193-808f-c2b7a2868503",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5253b1f-568e-40ee-b2d4-63bef152adc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7803fae6-9f7c-4dd6-91ef-f1d1989f7359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82265e2-1f73-4559-a95d-287f028ed947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aab70c7-2ca9-4e35-8387-fd0e505f7dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e569a5cf-5ef0-4a88-8ff1-4d4ae1a67fb5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbfc5af-7395-4bdb-a9a4-e7f259c6bf4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdbc0912-2c6d-4fad-8231-d6d4622065b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ccaf59-83c6-4bfa-b298-09684bcef6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213fa8a7-5f71-47f8-9aeb-2c0d87b2d43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2775d3de-5131-4443-9929-8fac42f65879",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149c6d0a-cced-404e-a372-c1fa6ea721ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbaea094-b0f9-4583-9b15-e6a42ea3fbd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2135fb2c-036e-4988-867a-03ff18e88c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd29e720-307e-493c-8ae5-f0ada3a2f6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5eea1ff-98b6-4a21-83ff-2f28ceade5c5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3a5b2c-b690-45a9-9235-8aa6f2b5fc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71328e9-8618-4473-a875-e381816ab22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414504b6-3f99-4401-b13d-cbf64f158e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accbc891-68c8-4fb1-aee4-16044365a7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eac39c3-5860-4e85-bb16-a8d3397894a3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068d176d-3888-4ac3-ac04-d6f55ca2f2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0087b90-a291-4491-ad2f-c219b53520c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ac0523-1be6-4b02-b360-3998809f8fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf33af7-e453-48d1-8808-ad0bee6e44c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594df5ea-ff9b-47d8-b6d5-1539ec7988be",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1ba682-41f0-4db9-979f-9a22468b9be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971dd808-e27c-467c-93a2-eddaa23dded9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d43ae5a-ea4d-44ae-8963-2df0224dde86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe4e525-6616-4c49-9dac-e77db52d2997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6cdbf1-fd8b-4c61-a12b-80a84538c52e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7d8192-0d28-45f6-ad0d-777390a57a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc2c763-4938-448d-9e86-50272f2f502a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e648ee-7885-48b2-8bc9-1aa2fdf0f8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5049f1a7-21ac-459c-ab7e-4ae7ddd6aab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c397c59a-baf4-4595-8567-9eab5fe58433",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9da371f-eb91-482f-9fc9-447956ba9d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37cd5c9-0edb-4501-8a5b-9753207f8f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4856bdc-6a85-410b-8132-450b4ac51d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab67bc3-cf3a-49d2-a9dc-bd65e4a7797b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ecb079-de2f-4aa0-bc1f-de296518b3bf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49cf48b-80d0-4dd7-b504-13f06f838098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36342626-c76b-4e5c-923c-971e492c2e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b3dd77-b426-48bc-bf60-8c1e2eed0d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e0a921-5193-4906-900b-8a48f607fd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c3074e-ca58-414d-b60f-c65f535fca6f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afc778e-12c2-4ef6-811b-69f7c72dd734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec288ef8-b4d5-46b4-aa0e-3483a97ecbe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87e2367-2460-4d7d-95cb-893b36e2c28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cb5b89-3ae8-467e-9bed-ada0163eb9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7080afdd-a9df-420b-bfb4-6db5eac4077d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce65d041-07d3-4dc4-8d5f-facc1736282b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52993d75-dc79-414f-a1cb-2233deadb3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc5d4c4-005e-45b2-bd8e-26456a7b65e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d5229a-7d4e-4391-b495-fb8b1256c28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d7c4f0-5edb-44e3-9cdc-987f515d4633",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730ebfdf-5e82-460c-a8a8-1f3e78022c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bca5112-2825-4fbc-b266-6fcfc4d8967d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f35669-c565-4247-b72a-bd201ea77c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c3b027-a2b6-41da-bfde-8f41d5ff35df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eae49d6-47d5-4412-abd5-f3f539ec671a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da04ab4-bcd0-4e60-8bb0-16c9c5fe8dcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7dc3a93-1e7d-470d-b962-82c52708ae44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b96b04-d1db-46fb-a3de-3fc4419f1794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ec03c9-e39f-446d-933a-5ef09cf6edb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7181c7-1569-4752-afdf-2a28d9e2951e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0c0d19-fa42-4d21-8518-7af47233b1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa89d051-b871-4c56-8958-42d26c72d777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295a88ff-e65d-4a38-8ecb-8ebb8d4a6d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead60ca3-b0b1-4ceb-ad71-ea7798bf7cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11886608-66b2-49b6-9906-2f31451a877b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558d5220-7e59-4605-b550-ceb2fc114952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a3bb82-984e-4f04-a2e0-77f9a4b16892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df5066c-010b-4df1-b1dd-9418e9f10b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4fa0cf-7343-48a2-a3d4-792c92d5156f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c41170e-9085-42d4-96d4-e97ea171a35c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ffaf8f-4c5d-43cf-8b35-5246d573f6d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcfab4af-7068-4952-abf8-5b84749502a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bff5a1b-9580-48c5-b393-57dc61a56cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2b2792-9b9c-4bbb-bab2-91588289cec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875a5951-2430-42a0-b323-498858c42787",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cc33fe-450f-4e8b-850e-0d7b9abfd28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a77576bb-63b5-44cb-bd45-be310b6dda72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad461fec-17fd-45f7-9cb2-669290eca68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e1469d-41a2-4aae-88af-e16087cbbe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6573e8d5-417e-441f-a7f5-c9262ab22b54",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4877fbec-d05a-4d8e-82e8-315297138323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283801b4-cae7-40e1-979f-48ad6d7fa1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010d34fd-2ada-4418-b2c9-f333b31250f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7931cd8d-8571-4df9-b44d-7b453914ddda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119b4029-d35f-4a9c-8640-bb642d91ebbd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445765a3-db5a-4583-8aec-dd153e18e76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50c9167e-7c45-44cf-b89b-761710bffafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87add2d7-bd29-473e-8e57-d9711b1cd364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ea380c-b9e7-4107-b1ec-8942401a596e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273e0e2d-dc31-4128-aa0f-c9d75646fa4a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70d9114-13f9-47a9-95ec-254d31839315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d33932d9-8627-473d-957c-de1a7156963f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411a9386-9ec7-4000-a49f-ff41a1e8c5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cd3312-382b-4e7d-88ed-3db964b59874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b450e02-04d9-4ee9-858a-10cf762815f5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3ea81f-85ec-4bf1-9643-63c8cf1a82d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a1545a-5cc0-4622-bb0f-339c753967e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dadc28-398e-45df-a7aa-32e7e5007928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1e9eab-fa24-41a9-b2ad-abc6506b09f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d2a6d5-e27c-4fa4-ae10-09250d222ee4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947ddbc4-88d1-40b8-8d60-c33599b4d0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f663ba37-d507-4d93-a2d3-6b27600dc86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ded07a-cbfc-425c-841d-0523bc386c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c267ecc1-621d-4cc9-8a34-6c5a1f0b5217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff56360-82cf-4567-b3c6-26c15b2947e6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823be89c-844c-43e0-b01d-31ddb40cf809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b1ad58-fd6c-4890-bf10-1afc4c9369e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c46ef9a-3841-4318-a66a-c0e5b42b0f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a010aa1b-3ef1-4f14-81e8-ad90fece3ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a33cb84-7afe-4194-a326-960780a68b50",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e44cbc7-40ed-4f8f-a2bb-3eb580adee80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c925b5d-81bb-4bc0-a6d5-1bf2993510ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44586f2-5303-40a1-93c4-b2bead45c445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7367fa-1b30-4dc7-8561-2359a47324d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805698ae-b84b-4420-9f85-7cb5593d8bf1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618519e0-e14c-46de-9621-734ea84cdd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43559055-d2ca-4220-8d55-4a5d95352d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66241e31-0803-4abf-b9ae-c3ad925a3723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67559531-436a-43af-aa93-54e5929af0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2c2e37-2946-47a7-bb37-323b69e8b74f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2096884-4330-4518-837f-82ecbdd5d0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940648dc-53f0-4f22-a9f2-29ec3042fa02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8f1170-5299-4d9e-a6e9-aa5556757d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbb10cb-89ee-49e4-b5a7-c1a677ef6c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf616de-5411-4bd7-a982-10e6fa083b4e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2472d00c-2de1-4f5e-87bf-cf824b1b0e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a199a167-ceb0-4948-8a32-d1250f9e68e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3fcc0b-ac38-4152-a81c-2d32079a0465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466a8b32-c730-4d7a-88f8-643f18b3801c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19484b1-cc93-4091-a7f5-28ef604964af",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d353dbce-a7f1-40e1-a348-3139830edf88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de287c6f-3a3d-4846-9ed4-9ff0405dc3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dc2663-5c3c-4365-9b68-58d4dcc10c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6abd933-2fa4-4e78-8d05-8c259a6aeac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a597ff77-2539-414c-8527-c71ca0645b3b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e1a7a8-d462-49d5-81ad-55c207e9c649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe873af-7662-4478-98da-87ab5deb16ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d058e577-2e66-45e8-8b77-5a87d4bdb87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16979b6-605f-4808-b886-803efd31c5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced004a0-1e44-441a-a153-e5497abaf701",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd529ae2-6ebb-4e2f-b5a9-38628ce43250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ade9a6-80c7-44d7-b124-f5e44d37fe31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc6dfc3-99a0-48cf-8e57-37fc9d9f8c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be84b37b-e48f-4016-b800-3fbacf434a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaea1b9a-0f8d-48c6-af05-f4ceb9b74e75",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97774545-b2d4-4d07-bfd3-da48bf48c8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27ae173-6451-45b3-b022-b66befebff5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326e3e9b-ff7d-4080-a5f9-ae44d85357b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36933f5a-4f36-4b09-88c7-8e58760dc17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f355db3-2625-4a98-a057-f5c35fc43085",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a660a2e3-1035-4099-ac5a-b7f3925a2c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea678a3-19d9-429c-8c9e-81b34c19a549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fada63c-7096-450e-a81d-5e0fa009b7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e8a14c-ea86-40d3-ad1c-c5e85772158a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288130da-bd7f-482f-bce1-ef549a36423a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ef7df1-69cc-419f-9fcb-51a79ec0d014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b559c107-751e-4b1d-ab4f-0aceddffbb4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60db4517-a650-4ed5-9747-f05384d71ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc87008-8023-43d6-b4cd-95694512f7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af6017f-30ca-41d5-bea5-abd29ca08b4b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c16814f-55f3-4f8a-9664-05b7e42546a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3096bcbc-c9d0-4621-b72b-a6f00df2dfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb71207-4c93-468a-96fb-68c34fd9e5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35309068-48f2-40aa-ace0-3b8d806ec395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ee1e0e-1d59-461e-aa39-c41100280cf0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d9bf6d-f3d2-42d7-8780-26390c686558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c9e497-4f5d-432b-951b-ebe5a1ce2fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4759ccd-928d-4726-8e21-e74c8736b78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db9a3b7-940e-4d6b-8630-9ebc720ea2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c356077-a310-4795-bac5-7746797b37c6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676ec1e6-4dba-4c1a-bda5-f26d8e27c145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24ae37a-8055-4d4c-a235-054bb080e834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d77be8-da0d-4a86-b888-b1da74234e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b7b86f-d088-4bb6-ad68-80792baa88f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea39f1e-e0c3-4527-9b40-f6ba55acd038",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edd8f0f-8a68-4f9b-b732-9f63708f0a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f5e529-9063-47cc-8ef0-ad6be47a6c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04159e8a-f3dc-448f-aba3-a58a153a7ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a84f9c0-810b-4c11-83a6-012b41247e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827b85b6-7396-468c-a8af-9c6fe43b16f6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230a76c3-2d10-4e2e-8453-c109d98e2d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa79ea1-a2e4-4cff-a1a8-c7c5ae2ebbab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d0f960-562b-422d-9448-f64bc78b51b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b517cf5d-83ed-440e-bf96-cd9d6dcd2851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535d4472-5f66-40c6-9a15-0107dc434489",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb5e923-24a1-462d-b3be-85393eb3d47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b04b733-0a9f-44a1-9762-b6d6057e69ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c78d765-f615-4b50-9bb7-e119833e65d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177ebba3-5e02-404c-9b8f-41c056960e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49abf4d-db5e-4f10-9438-09640fd12a13",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d774235c-96a6-4715-9f1b-86ede2cadb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c40affc-fd2f-45b7-92be-b8183537ad95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9547bb3-4c54-4e60-9133-65b36664257e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e2a447-757c-4e5e-aee9-3ef36dcca263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68779aed-0a07-4e4e-a644-8cc00a9cb746",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2104b05b-55be-4481-82cf-ecd0a09f5d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fbe506-982f-4b89-b5f8-0c2a1151cc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a22547-91c8-4a81-8490-4a7712a71815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81088595-eeeb-49ae-a18c-8253cfb48d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa85e6ad-fa99-4b03-9ef0-1ab742c77899",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b068dcf-c83e-49fa-8e17-395abcabd351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d873d335-6508-4290-8f6f-e38cc61dca10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7675d6-a6be-44d0-ac3c-13743b0f3046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262224b1-37ec-4ffe-9b7d-5d071d9f80ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17bcd34-14c6-49a8-b9bd-961a1be45987",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820ccff4-0d2c-4ce7-bc31-1e85ed88d014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64d5bf7-2a61-401e-bcdc-a68cb149c770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aec3fcd-7841-44e4-acef-3c7de0b240c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed8fe04-d02d-4849-9281-39d3ce12ba86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc53b43d-2728-4de1-9de8-4b0a3b04286f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3761b04-16c4-4494-8c37-e7802a03c239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58212c06-53eb-4a3a-a2e0-6ed9658c2a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbbcbdf-ba4c-4d6b-9fe7-e684365852a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245798e9-c301-4c4d-8607-b0dee1a9b262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815f57e3-9a92-45f7-8db3-2b083fcc22ff",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647e4a63-9ff5-46a3-81bb-31dc6611eabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990aead6-2e0a-429b-93e0-8c357fb05f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96117b9-346d-4759-b63f-a334c9bbf4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d37388-e6fe-4007-8cc9-ed5bce3a05fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0a3ea3-0fb2-40ba-b77c-8443e94ac715",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fbcd54-d0f6-4dfb-96e0-75eac4e26f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0547841a-9c3f-4454-819f-00db2bfbc8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9754efc2-614b-4a7f-948d-eea7e04595bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bf6839-b171-43d2-977d-42dc04290c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7126be29-7964-4eae-a9ed-e3d9f1ac1567",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2a436c-438e-445a-bf31-6608ce977d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae576d2-f4bc-4b65-be16-4ed25764067e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f93033-6dad-4f8a-9572-1c1ae68d1f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8b356c-2848-4a0e-9b31-c6d69c61bd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcffe98-4306-4f3b-ba9e-2d115c6703a0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e475a3d9-22aa-42fc-8e3c-d78cf17bbb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18de8931-0b71-4fc0-b0d2-3ff0e1ab5e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd825676-5d47-40ca-a52c-66a5c539d7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0fd6e4-f98a-4599-8be7-735f158ec67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7a2417-a55d-4b91-a0d9-f1614f294464",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee7f837-4b83-495d-a614-718ce0c1b2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4180aec3-1291-4e59-bb1b-865717fd3bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a06710-c0d8-45c8-b3de-810d5d5dee99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c892cf67-111b-4fe1-a60e-f00da3aa2074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90df484e-c0b3-4976-bc30-20b844752f9d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6db38b7-00e7-4efd-b9bc-cdc4a783690f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "345d2439-5b09-4ee1-9248-ca9204b918bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833de536-c3ec-48c7-92e0-1b02c058ddc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b32f2a0-44c8-4657-8ffb-88d9665676e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c645a7d-3e75-468d-8ff2-ca516b8c3ebc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87772bef-5c42-4cdd-a18a-7cf74f462f55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a86530-16dd-44b2-a560-ef8291188cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62996548-2996-43d8-aece-212355774cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f449e2d-4ee9-4d07-a9cc-015be0ac50c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc48feb0-7919-4802-acfe-067e406c87a8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a13cc6-8dd1-4b2d-8dbd-d1d67959adc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdfee246-1d78-4240-a23d-466421fcbf55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0a416d-5580-405a-bfc1-3a0710b1c055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cf4bb5-efdd-4cbb-ae3d-05cec6a8d2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e62e8a4-acbf-49f5-a909-811521bc15a3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083adef7-f16b-47b4-984e-8fa854e9d4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b1dbc83-0833-4965-9453-63b6058e0cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02495ae4-0be8-47db-ace4-a9a6d093c1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf5aabd-834b-4b01-9299-ff9e9d769740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d55934-f767-4235-9662-1c52bdc63a5a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1fe78c-c359-4888-911d-e821732ce17a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e6e50d6-39f3-4d14-8085-a9c1a7fef363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e869588f-a6d6-4d30-82e3-a8bdaf0214e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e28871c-e2ef-4a98-a152-23ba381d2450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57487ca9-2236-41fe-863c-d344a3440c23",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d22bd-dafd-4220-89ca-f1f272ad03d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a297042-5186-41b6-a3b3-d2df1d5f1d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76708197-0f69-46ae-b1ca-19c5804ec41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cce6cf-62df-4eab-9613-e89ba2d665c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7473f7-c1a7-47e4-8fad-7b57c3a5a3da",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ace978b-4134-42c0-a0f6-8fd148ebc75c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a926f82-8cef-42d1-a6b7-1e3e00b4eda6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fc0df4-ff33-4047-aab7-438803b152e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d74c35c-4bef-4c34-92f8-da8eff4bec9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd2e038-2cba-4231-b496-5683bebea6d8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194d9dfe-adc6-4a8e-93ea-0f2e2ce3f766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5fd41e-937e-4b97-8db0-36302b102673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062f5777-cf76-46cb-acf1-f28aedebfdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115ce046-e049-435f-aa8a-8d3e2f2e617c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315f8017-b4ba-4fb2-8729-b547c2e33fcb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1c2358-3504-4568-969b-8953033bccda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea95532a-a2b8-449d-a21d-9d71e6d6f57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c65018e-e383-4bc6-befd-88b077a75194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a174c817-f9a0-4472-aa10-58bc0e114d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b49adb-8d33-4bec-8237-e1ee1b3603f8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b57428-c9c2-4f9a-ae8d-72d7485f36fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee107151-9948-466c-9400-7d97f2a4baf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88013703-a90b-4825-871f-119d4a3055fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5d7fba-1c70-401a-a11f-e9cb7a8a0329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f4c814-2714-476e-8334-b57058704b0b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0822b1b-249d-4097-9c45-549cbd1ad704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23a10dd1-d7a7-44f0-95ba-7e33122bc519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b5c0d4-6887-4c7e-8f9c-52055deb0e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832e6652-5093-4dc9-ab03-b51d763d191e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afc5068-1837-4db7-b106-756c141bcb52",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bd5dce-374b-4fe3-9a28-9f9ec0a1bf91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b03161-7c58-4adb-8133-f7ae5d9969e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfbec83-93fa-4ca0-b9fc-2507df8ed698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b147d5f6-27c1-4ab7-b79d-b519755b51bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c7165a-55e5-4807-bfaa-694ee5315f70",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c416b3-fca0-4916-acd9-5d6ce97d8b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be52eb13-ceb1-4ab9-a093-1369f81b2f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861ecb46-fe86-4bb4-ac92-cc76bc869bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2e3bfc-dee1-4098-af43-a3f139dcb17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56442803-2578-4f0e-b048-98bd957eae67",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13b7d75-18cc-4acf-be6f-524b4717228c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24f038c-1191-468f-ad4e-66ebcc450433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030a5d17-62f2-464c-8ea1-2c574766cc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45aa8ede-16d8-4ec3-9e40-4e347e8c8a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f36b33-d2eb-463b-9bca-092f98560858",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c518c6f-1ec5-4391-bf6a-85996b2c5c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1c3d8e6-5348-48d2-975f-3909fbf2ec79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c32895-3750-4c9c-ae27-ce52dc468534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529dfdf3-72ac-4b54-904b-8c41a90d4d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1832349-1e5b-4c6b-9ab0-359ecdb668fc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9ebaf3-4d5d-43da-9ba2-456d261c7fcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb571e79-92dd-40d0-83f3-8526f089cdc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2defae0b-0f78-4b79-b9eb-8a4dd0d14847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b61921f-8c14-4cd7-a819-e3ac38a1777c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fdf099-f6fa-478c-96d0-74d41bf5be8b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ae58b6-b41a-4285-ba84-311f4114cf74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39478889-5265-4da3-a7f8-3e1bfa56b6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acf7ee4-eb53-4cf3-aed8-089539c32bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde70d33-f958-498a-a4ce-4d51f03141af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95709a01-b506-4503-a9f6-f467442088c6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b42ddc-55c4-4e8c-aaa6-2c8372ba0335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9fca69b-6d27-4c55-adaa-570dd1e0f639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6a9a5b-24e4-481e-aea2-4a09927d0c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1d3c38-3b98-4584-980e-2fe496ae3d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3faea806-b9fb-4e4c-9732-63a22178a14d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0301de53-69e9-4098-b861-1e2d4b6c4e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887f85df-31f3-4fac-8329-e3ad09fd9df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b747b530-4b13-44fd-adb0-67a0b1d623ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149d307b-90d8-4053-bdc4-70853068b6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36e7893-58e7-4da7-9748-4e70b84f6266",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb78d23-fb89-466a-96d7-24659f5ad69c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00f1ff26-9b3c-46c6-b15d-01c608fed7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa93f1d-7740-4e3e-988b-1f94a6469100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169ad9d4-b79b-4f32-9364-017426492b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf7ea6b-dd63-4861-bcc5-630ee4ab827f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a135253b-4216-4b7c-a473-013813ad64e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f9a9f6-c7fc-4a82-891f-db7f157b4b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3be9fe-3d91-436a-be09-fc5cbd7f5724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a85360-56e5-4e09-a6b3-7fb53a77634d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e11e873-652c-4c9a-b593-a59322eec50c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f40827-455d-4fad-9129-30a774e2371c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee91eec0-c4b7-42f3-a12c-1cc3b56d05dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f8464b-2724-4d1c-a158-6a37b65e1f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab44959a-8637-45c1-9a00-52995fb6f59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d37e60-4997-45d7-81d7-387b187855f2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a67b2a-5251-4412-bb52-06745da2a66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c667df2-37fc-4556-86d0-3e03e1900d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdb6e21-de5c-401f-9fd4-cabb0b8f06b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0ecdb5-7c4a-4ec9-9137-1afaed134aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcb6cc8-be66-42fd-b847-02b4ba207d70",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb713c6-4c16-43a7-b5d8-1d9e5a00cf7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f820170f-de9a-4891-a88d-f605ae5ac12b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7332fc-61c7-4512-833e-b271cc0edd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e6d88c-9dfb-4c98-8222-9eb804bf8819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c81bb1-4897-4c01-8f9e-f15325a01f9f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79234e58-df02-4ce8-a1c6-ad52722caac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f44f94a-f716-4a26-ad1e-8436a96240dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5430d37-ea4c-431a-bdcd-825110c0c15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3111162-ba0e-41eb-93bd-6aa410989652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e5c7b2-f0a5-41ca-8c24-c6c9895de7a8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175550a9-e011-44b0-8121-2e4b245f1cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed87854-88ed-4948-9a24-8cfde0b52e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e66cf3-53fa-4dbc-ab7d-cfd7c51945d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa55e6c-4624-43d9-8a24-b0b996144e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34946d5a-a34d-4a8d-bf56-73bf4b95702b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c36462-2e23-4089-a307-6011858f3a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ef77da-d4cf-4d98-817f-9ed017ceb533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfddcdf1-fd32-4c67-8f62-e301458ae157",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18469ad-8c5d-42fe-9e67-f4790b5c4af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aff536-e8ab-465f-a74a-7b0a650e3fe8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129c465f-8810-4531-983f-98a34d03d92c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c6a549-f6a0-4db5-a1ca-7b57028196e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa747ec-a14b-4e74-b4e7-b3dc053069f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf297bef-3ab6-4e08-960f-15a70a9f3f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf49f7f-2f30-4f84-a7f6-cd6a7fb5093c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c891a09-387c-4416-a701-c3042b06f39a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b68feed-16a2-401b-84dc-ec050a142b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db6dc2b-c3ee-49a4-95c5-64ad55b2abad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8051ca-73ec-4af4-8bec-9ffe3250fcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641762f0-f260-4b44-9082-4f5113afbcc6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5aa721-8141-43c0-90c1-74f6c51f2dc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb28a03b-5d67-40bf-a0ce-5795348d5d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b5d519-95b5-4b19-af85-874c9c18d029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e60865d-e1bd-46d6-8ebe-9fddd317b185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2949acc-edc8-4c50-acbc-2399b6912410",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3ddf9b-3b09-40e8-af6b-eb9f2df56f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f95e9b6-7ac8-481e-adea-06637d1a83cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c177b4-f25b-4d95-98a8-f04496d46231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3efaf7b-46f3-452b-b7c1-adb5dff4fecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc76238b-1594-43da-88f2-87a0fb89e077",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de85e5b-0d66-4951-9034-9fe644293d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f8b1069-cec7-4217-9414-44d6c6fa05fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36841c0b-151c-4e90-95f5-e31ee1bbd14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0f819b-b6c2-43b7-8588-458a29bea4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2aa44f-90b6-4911-aad5-01e7cf639694",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dc12bf-d1fc-4ead-af1a-4bb019bc4782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf5f18c-24fb-4dd6-b05a-b31f5881c7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49be00e3-00b8-44ec-a3e2-a56f291dbcc1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a832e905-50a1-4a30-88d6-f8f0c9aeba4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fa12f3-bd8f-4cc0-b612-544bd1b3b6d4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39800f3a-c7fa-490f-8813-c2a9aa7ef18b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9344dcbb-e9ed-4743-8c0a-fe54c0137119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2007201c-ae01-43e4-94c2-c36f8bc9bf01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb13455-c797-4249-b3dc-f0d0ee64d1e7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "778d3ef9-b51d-442f-9d5e-ee61c5bac228",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9933c559-cc0e-43fc-b4a5-81897e29954d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4303a045-22f6-4b39-a641-1a75f23386bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e6bf349-5466-4139-85ed-2443d94c78e5"
                    }
                  }
                ]
              },
              {
                "id": "7d4ee3c8-b3d9-48e3-9b55-0a2c2a3c9390",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7cd977ef-775e-49df-9d2a-2872603bdd69",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d087b5b6-b286-42fe-894e-7a5600ef36ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a38d2432-81f4-409f-81b1-a35dafed5325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40178fac-3424-4bf5-82be-55604295b53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4256d94a-957c-4e12-b97b-9ed5f9d5b2ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b716415a-d648-4674-8579-03044cacac88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "175ec29c-08e7-4476-be88-a465a49f30f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d54ece43-da53-4e91-a484-24b6b2c1e103",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe6c95ae-a6ef-4695-8528-8ad03ee911f4"
                    }
                  }
                ]
              },
              {
                "id": "fb124b81-38bd-4e7a-a314-a5df37d0d25a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3f03c24a-595a-4399-aabf-2455550169a1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bf1b78-fc66-47ef-bdfc-21906c74d57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6542c7cb-3b49-4a05-8e35-01a234ba5c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f202aa95-21f8-4067-9669-143eddc6ae3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77a3f11-423a-4580-91f2-1aa1cbf77dfb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "28cf0a14-5e5e-4cd9-b51b-9ca6c37e05a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b0714a9-1812-4dc7-a470-c1705e19aa46",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94025678-0a43-4c77-a175-41fcab913569",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "620b3376-b2d1-4936-b3f9-9299c28e1c1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83d846ab-852b-425e-815d-d85829e1900e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74f36edf-3c59-4e79-a59f-f690964b1e6a"
                    }
                  }
                ]
              },
              {
                "id": "1b333ebb-8647-4c2f-b555-d3de3f43d628",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34b0102e-2c01-4ea4-8d23-f8585b81b229",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8bf0eaa2-a293-44d9-96b0-2c6454515065"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ceaa7b2-7f65-41b0-9358-2aff15e28895",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2346562d-85f2-402c-a206-1aa210abfdab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5305721-b74b-4314-95a9-7bb34ed5466d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b788b3a7-d4f4-46e7-9323-40049088ecbc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a6a8350-21f9-49a9-b6cf-db7c5f225bb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed156f72-83d5-48d9-9c3e-e7abda03d27e"
            }
          }
        ]
      },
      {
        "id": "1203da08-4391-4b29-985b-6cc2e925a353",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1959ad5e-c155-4244-8f8a-7fb9cfa0060c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec3adb46-5127-4cf0-880a-74ca61d7ebc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1eb2e79-4bd6-488c-ae4c-35e87544058e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50125f1c-13e8-4d0d-bcbd-d7d99189d008",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f1f35279-a304-4f00-a9c2-160666426757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20108f86-b84a-4127-94a1-02919c4e9011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "823fe40e-ca2e-487e-b39e-875d9301d41f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bde5cee-859b-4bbc-9910-f2825b3977ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c83605a-4003-4fbf-83af-c7309b078861"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60473470-c935-4266-8769-b725157a377e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "288b2468-fbcf-4666-9c49-1afb60f104cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec8f40e3-25c7-4b78-bc8a-a713295f0d7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3bf69a7f-26b8-43a1-a570-0ed8857a476e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "923d9a84-69c9-4c1d-a161-eed508de463e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98e58bfb-8ebb-4556-bab3-e1054e13ac66"
            }
          }
        ]
      },
      {
        "id": "fca237df-739b-4289-bc3e-9cf7847c270c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a0a8cde9-5658-461a-ae89-a4383d328239",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdf8beaa-bbe2-4d53-9082-f2330fe9ba24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6bcfe5d2-7606-4273-aeb5-83d0682b4a2c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e3df08-6a1d-487d-9212-f93c2f362d96",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0e86186-2b0c-4414-8700-9b5fdf5b8a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01db5371-1f1c-4f4a-aecc-1baa8fe2f0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb633510-bf36-405f-9d52-75332ec49cf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f2760e5-bad7-413d-b0b9-44b070e0dac0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e173da5f-b727-4119-83ab-e6772b655827"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db255ca3-8242-47f7-8b46-d78b5e84852d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f0b28b8-b2b1-43c6-a64a-4d8b260c0cb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c9d35ef-ae01-4946-9e47-087ff665b275",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b075bf94-4d39-4182-8e96-f5a4fb698b4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06cb4e0b-ed4d-452a-a306-b9584dab64ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4007f56d-e2be-46b7-9e1e-456705dd43d0"
            }
          }
        ]
      },
      {
        "id": "f6ea0373-6ca0-4f8d-896c-3dab4d4dc14c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b7ed5e0a-9cfe-45fe-aad0-70358b11808d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52026a53-4e2c-47ef-9537-6115a254d79f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed9f2d66-a988-47f0-a86b-afca9a03a28e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4b3163-3915-4b7c-96d2-cbcb8dde253f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b89bd0f-de8a-43c8-9969-a7a4058aa895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9d5bba-aa4f-443c-8a8c-8ffce8bd9eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7ea673e-9cb5-472c-86fc-245337ae7cfd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49ee6174-fcd6-4b5f-b75b-bcfb7691c75c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5b1e36b-e2d0-4bb5-87c4-d0da6be40b0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e8b7bc0-f7e9-4978-84ad-586b2125312e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef64e905-335b-4073-beba-9543edb65739"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "820b40e4-a4d6-4603-8ae8-fa1f557b8f47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f3578959-f7ff-4a97-a192-88385d1b4ec0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7224bc1-6ed0-42c6-afa0-28b3613dedc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b85646ba-1bd4-40dd-ab5b-91ce24ec0eae"
            }
          }
        ]
      },
      {
        "id": "26cf2a21-58fa-4049-8a58-18d5f4411480",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cd17ffa-cf6d-4b8d-ba92-62ef260f410b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "101c18fa-1ab3-41a1-9d1e-91d46aa788e0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c264452c-6901-46cc-be17-2f2fde70934d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2365c56-ab27-47e2-954e-ec0d2520fc3a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f60ee3c-4f53-4be0-8770-3c15a25e0674",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.21830985915493,
      "responseMin": 5,
      "responseMax": 229,
      "responseSd": 22.344333559402603,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695688423040,
      "completed": 1695688437862
    },
    "executions": [
      {
        "id": "69f53485-c747-4ac4-8a19-ac702c659efb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "63626a97-415f-4c82-a66c-3407435f1a7b",
          "httpRequestId": "e3d09668-d2cb-4ae4-8d08-dcc3f9da421a"
        },
        "item": {
          "id": "69f53485-c747-4ac4-8a19-ac702c659efb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d336c229-d99e-496d-81d3-e76c993a1b33",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "9d120692-b693-4f09-b763-90e756c14d01",
        "cursor": {
          "ref": "496fdfdb-c906-4f48-a7dc-251470239614",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c8d64da4-09a2-4d76-a69b-1707a754acc1"
        },
        "item": {
          "id": "9d120692-b693-4f09-b763-90e756c14d01",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7d471b10-159f-4c92-a316-6bbbad1742fe",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "41593cd2-db5f-4833-9272-8b93b5b03006",
        "cursor": {
          "ref": "e3dac6e0-bc21-4a1d-a329-2f76b7207e7f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "45c39f96-9a55-4804-b90f-ee9304d2509f"
        },
        "item": {
          "id": "41593cd2-db5f-4833-9272-8b93b5b03006",
          "name": "did_json"
        },
        "response": {
          "id": "2e47ef33-cdb6-4cb6-8a4f-3fa38c2ac14e",
          "status": "OK",
          "code": 200,
          "responseTime": 167,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329c6bbe-7599-4ec8-9ba7-4b85dda6fb3b",
        "cursor": {
          "ref": "61da54f9-cfcd-4beb-9072-e2605cd87383",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a7ab546-7e80-4fd8-83ff-48a0ded8a2c1"
        },
        "item": {
          "id": "329c6bbe-7599-4ec8-9ba7-4b85dda6fb3b",
          "name": "did:invalid"
        },
        "response": {
          "id": "88b216b6-8c38-4906-a8b6-741f90170721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329c6bbe-7599-4ec8-9ba7-4b85dda6fb3b",
        "cursor": {
          "ref": "61da54f9-cfcd-4beb-9072-e2605cd87383",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a7ab546-7e80-4fd8-83ff-48a0ded8a2c1"
        },
        "item": {
          "id": "329c6bbe-7599-4ec8-9ba7-4b85dda6fb3b",
          "name": "did:invalid"
        },
        "response": {
          "id": "88b216b6-8c38-4906-a8b6-741f90170721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4039dfc4-6f13-4fe5-9aa1-1e4bb113347d",
        "cursor": {
          "ref": "71c6f073-5066-4acc-9c88-97252415ed66",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "676a2381-dfad-4c5a-921f-fa6a5359ea4d"
        },
        "item": {
          "id": "4039dfc4-6f13-4fe5-9aa1-1e4bb113347d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bb8c9c33-cde1-4ba0-8867-74ff6056ebd1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3239f1e4-0472-4b20-af8e-1c23e1f7b16a",
        "cursor": {
          "ref": "85983081-acbd-4aad-8c67-eb6b0b4af417",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9e861554-e386-4b66-a434-19642025b9ac"
        },
        "item": {
          "id": "3239f1e4-0472-4b20-af8e-1c23e1f7b16a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "24a84afc-2d5a-4201-9a92-500585c903cf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65985fc-d3e6-471e-b73a-d846b8a9ed18",
        "cursor": {
          "ref": "252c925e-5102-4019-a8d8-dc96bec4f815",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ab9b56d0-74c5-4126-a6c6-7bbb9b6e0b34"
        },
        "item": {
          "id": "a65985fc-d3e6-471e-b73a-d846b8a9ed18",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "82e52c9c-83ce-4f29-a18e-409689faabe4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f58303-8d91-493f-b3c8-8a8828e4b775",
        "cursor": {
          "ref": "a6c7e4c1-8fc3-49c2-acc8-ff65eaed6e5f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c409e06a-b23a-4156-94e5-20844011135b"
        },
        "item": {
          "id": "43f58303-8d91-493f-b3c8-8a8828e4b775",
          "name": "identifiers"
        },
        "response": {
          "id": "8bf5fff6-9da7-4e75-9eb7-9600fef8dc92",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70302bc5-0a34-4df8-96d5-5d8f5ebe72be",
        "cursor": {
          "ref": "96dde1db-49d5-41b3-a3ce-7f2b0fb8b3aa",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "58839cb4-fd47-48ea-95dc-d0dbd1a1c529"
        },
        "item": {
          "id": "70302bc5-0a34-4df8-96d5-5d8f5ebe72be",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a443bce6-7a1a-41f4-8cac-ae79b15d4231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f4ddaf-85af-46a9-855c-5751e9dea205",
        "cursor": {
          "ref": "76a43dd4-305f-4d62-807d-fe8700ff8b07",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "df4c1bac-91e2-4807-bdd2-fb79ea1f3b86"
        },
        "item": {
          "id": "41f4ddaf-85af-46a9-855c-5751e9dea205",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9aeee38f-546d-438c-b7b9-53946c61cb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c354e010-0738-41f8-afec-d892fbe9068e",
        "cursor": {
          "ref": "eac01d3d-0c03-4536-b152-d14ff3602a84",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "989f1a70-b9a9-4633-9755-6d62e9d85563"
        },
        "item": {
          "id": "c354e010-0738-41f8-afec-d892fbe9068e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cf935845-cce2-450a-9f0c-b6839cbbd011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea46c1c9-01e9-4a27-b874-a5dfa099106e",
        "cursor": {
          "ref": "5bab6c0a-56da-41db-ad8b-ababf22fdc91",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ed86e239-f4c3-49b2-ba18-e49a7fb9e570"
        },
        "item": {
          "id": "ea46c1c9-01e9-4a27-b874-a5dfa099106e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7aad6f40-90f9-4402-b8b4-d3fbeb711f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad7ec98-23fa-4767-a6fe-dbaf49c94f99",
        "cursor": {
          "ref": "0a67b585-d2dc-4782-a3d4-48a242d25eb7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ec1057cb-b590-4c76-a857-e93b396c83b9"
        },
        "item": {
          "id": "0ad7ec98-23fa-4767-a6fe-dbaf49c94f99",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f4b876ec-fc4d-415e-827c-62a83c773111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739dd0b0-bbe8-4bb7-a802-8e5c43dc4eae",
        "cursor": {
          "ref": "952acaa8-4632-4ae7-b950-2859d7163349",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e470cd92-378f-45bb-be38-928a4f5ace05"
        },
        "item": {
          "id": "739dd0b0-bbe8-4bb7-a802-8e5c43dc4eae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "329cf7e1-bfc6-4d58-b716-ff6b018b5048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1963f38-528f-4d9a-a8c4-02654cfbe062",
        "cursor": {
          "ref": "fdbb5bb0-9a87-4082-9040-ec5a59a9f33b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "11db6343-f4d7-4ac8-865d-cbd75c7eeff7"
        },
        "item": {
          "id": "c1963f38-528f-4d9a-a8c4-02654cfbe062",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "233c1b26-5fd3-4897-b8ea-434eef2e25b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109df8c2-406d-464b-a860-c7b72eb3744b",
        "cursor": {
          "ref": "73dad0aa-0a63-427c-86bb-02fc5d0ab89a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e6606a1a-c975-4c97-8a0d-bf5770fc0efd"
        },
        "item": {
          "id": "109df8c2-406d-464b-a860-c7b72eb3744b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cc4b27b7-b701-478a-9272-8d8cb946fb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077d778e-bc32-4064-a935-462411d4cf80",
        "cursor": {
          "ref": "116213a7-aa60-43b2-b244-feaf1155b761",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "985ba677-8406-4e95-a668-d1c65f55f148"
        },
        "item": {
          "id": "077d778e-bc32-4064-a935-462411d4cf80",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b46e5d43-4189-4ffe-bbab-3663617b26c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ef1c5d-1647-4665-a499-86386844fcda",
        "cursor": {
          "ref": "712e71d3-c672-4870-afec-006d720c7aeb",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f0f736fc-6222-4fe1-b835-4534fed91dfb"
        },
        "item": {
          "id": "56ef1c5d-1647-4665-a499-86386844fcda",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4fa71637-cd13-4c47-846d-4267dd567a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca756e2-580c-4dec-bf1b-be846c56286c",
        "cursor": {
          "ref": "01fd1473-f0de-4449-ade2-6d732cc91933",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "27bb3993-7059-46b5-8241-ccbe36b06a2e"
        },
        "item": {
          "id": "fca756e2-580c-4dec-bf1b-be846c56286c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1f195181-aa7f-4e0e-b9dd-bb3253106aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6f8542-bc50-4b0f-a23b-ed41e6b640a0",
        "cursor": {
          "ref": "509faa37-92f0-4fb3-9dae-7665068ec1d3",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "55fa7e87-f719-4668-b067-002697e4ca06"
        },
        "item": {
          "id": "9b6f8542-bc50-4b0f-a23b-ed41e6b640a0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0017b355-af50-4236-ba10-c2585f6ee821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f9ff04-6cfd-4618-a37d-6c8a27f3ca6c",
        "cursor": {
          "ref": "3cdd126a-daae-4492-92b4-02dd4f0173c5",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "053e4b30-b0b2-4c18-b911-7744de7bdb6d"
        },
        "item": {
          "id": "b5f9ff04-6cfd-4618-a37d-6c8a27f3ca6c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "512d773a-c8fc-4d70-af56-5ad6e1b36fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bbefff-194f-4862-b3fa-9298bf639826",
        "cursor": {
          "ref": "11629810-08f4-4900-849f-a333e6a2f89b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "96f42cec-7a90-4e92-8eab-7769ee52ae78"
        },
        "item": {
          "id": "81bbefff-194f-4862-b3fa-9298bf639826",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "959f34ba-6a7c-42be-bdf1-7b452e66fc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f448e3-fb2d-4c35-9ba0-a2d26ad048b1",
        "cursor": {
          "ref": "39336266-182d-4ec8-8274-80aa66c1ea0e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1ff5b5a0-f16c-41ea-915f-25fef478bad8"
        },
        "item": {
          "id": "09f448e3-fb2d-4c35-9ba0-a2d26ad048b1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bba9082b-7cf7-4fbd-96e8-cea1c9f5eb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e1edec-1c78-4338-832c-ad06b1cee148",
        "cursor": {
          "ref": "7efd93cd-5f05-4211-9043-b32fb6f6171a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fec59b5c-2bc3-465c-aafb-9cd28cf8fc33"
        },
        "item": {
          "id": "26e1edec-1c78-4338-832c-ad06b1cee148",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d33456e7-e35e-4274-855d-f9ffc8873b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7d3718-0633-4d33-866c-48171bc8ade5",
        "cursor": {
          "ref": "107d8aa6-e97e-4b7c-8ea6-dba832d6fd88",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6cc955ba-8bc1-4849-9f3b-b47dd78adec0"
        },
        "item": {
          "id": "fd7d3718-0633-4d33-866c-48171bc8ade5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d3be2c2f-9912-4fa2-af83-f87a65e591e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a03b3a1-8c1a-4c74-a275-2e36600d1566",
        "cursor": {
          "ref": "bb395cef-fba8-4cf4-b744-3dd58046b198",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1044be40-a476-4e8f-8e56-ac7485efa0a5"
        },
        "item": {
          "id": "0a03b3a1-8c1a-4c74-a275-2e36600d1566",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "24e87c19-e877-4a9e-9b6a-1c4ac9d1a8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf87434e-494b-40c0-bc08-8d148532ce39",
        "cursor": {
          "ref": "d80a485f-f896-4e3b-9f3f-d2f3b1dd3274",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4d30a506-7559-40d6-806a-a7d7142dbbf3"
        },
        "item": {
          "id": "cf87434e-494b-40c0-bc08-8d148532ce39",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "701217b5-1621-4652-8476-71e4e9049ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd604ee2-91f7-4415-976f-face356ffeeb",
        "cursor": {
          "ref": "efaa3dcf-ef95-4cfe-9c83-15b6a8b36077",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1071e064-2791-49c1-9897-3a40af37a3ae"
        },
        "item": {
          "id": "fd604ee2-91f7-4415-976f-face356ffeeb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ada0b53f-34bb-43ed-aa6f-bba654c26bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7574f8f7-9396-4f75-b528-d0ed78a4554c",
        "cursor": {
          "ref": "d12952b2-2a9d-43a4-9b26-66a14751df88",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "31b30194-6d0a-4cd3-9961-b3bdd749d177"
        },
        "item": {
          "id": "7574f8f7-9396-4f75-b528-d0ed78a4554c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f7698908-51f0-4c60-b691-c9a23cbf63ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f7d1f7-7ba2-46cf-ad64-50147d6f10f3",
        "cursor": {
          "ref": "761f7fcd-8e1a-4bca-b5b0-7481973888ab",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "31d1c57b-8e0c-4d12-826a-43a42aa82de6"
        },
        "item": {
          "id": "46f7d1f7-7ba2-46cf-ad64-50147d6f10f3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e47d9c56-d801-455e-9aad-9a74d4349c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8c0ddb-b654-467c-ae97-7f8ef4c93e41",
        "cursor": {
          "ref": "547091f5-67f0-4716-ac42-15b8be688cf1",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e7dfa387-6b35-4262-be26-90e6e3fe05fa"
        },
        "item": {
          "id": "2f8c0ddb-b654-467c-ae97-7f8ef4c93e41",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "768f5d4e-0338-4b40-b9c6-0993f684ff24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed324971-9edf-4618-9660-bf7e8f0c8a6c",
        "cursor": {
          "ref": "892fef59-3f2b-436a-9525-11221e9380b7",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4b8338a0-7061-4dcc-89e1-9e85e88428dd"
        },
        "item": {
          "id": "ed324971-9edf-4618-9660-bf7e8f0c8a6c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5b772554-4392-4886-9f34-9a78884fc952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b8863c-e5a9-4d36-afb9-2ec017ef03c5",
        "cursor": {
          "ref": "ed72efa8-f324-4889-a0ca-149c90a94147",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "330a80a8-c347-4f63-96c2-c996d082e0ed"
        },
        "item": {
          "id": "58b8863c-e5a9-4d36-afb9-2ec017ef03c5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b2e1f950-8273-49a1-9334-bbf5422e1da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673c6a3f-1ecb-4fbb-b2e7-94ee27662b30",
        "cursor": {
          "ref": "c8828fac-003d-49eb-9ab7-43d1bf21c542",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b6c914a6-ea87-4450-970b-ab81b598b25d"
        },
        "item": {
          "id": "673c6a3f-1ecb-4fbb-b2e7-94ee27662b30",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "33830fac-4ab6-4a40-a434-76da49b5b94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74737c1e-3af2-419c-9d41-40d904e6aa26",
        "cursor": {
          "ref": "4a6c6f78-f2b6-42d2-9532-3919997798d9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6ecbe132-b09a-4f11-8769-1445cb2d7370"
        },
        "item": {
          "id": "74737c1e-3af2-419c-9d41-40d904e6aa26",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "84015014-a924-4d19-b7e7-ff2193bdc280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af7818d-d7d2-47c1-bfab-8c2f964ad06e",
        "cursor": {
          "ref": "69e5fa89-bc66-4c22-a370-b570439ef377",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e183245b-27c1-429e-b274-fcede11b7955"
        },
        "item": {
          "id": "3af7818d-d7d2-47c1-bfab-8c2f964ad06e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "668efab7-ab65-4ea9-9f47-a2694a325905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232ac1b1-d80c-465c-8d59-919346ad99af",
        "cursor": {
          "ref": "c17faad0-48f3-4242-a0d4-82e627b56c6d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1eb3b567-b2f4-4d67-bad8-57647199a235"
        },
        "item": {
          "id": "232ac1b1-d80c-465c-8d59-919346ad99af",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "238bb1ba-ddc1-45fd-ad3e-51bb59f6ab9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14efda0d-c703-4073-b06e-8d8a93467aef",
        "cursor": {
          "ref": "b4a9e99d-7bc1-431e-bfd4-4e01af4a9fa1",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fd365847-636d-4e8c-995d-7a081a770fe5"
        },
        "item": {
          "id": "14efda0d-c703-4073-b06e-8d8a93467aef",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e2482296-ab44-41b5-b103-8c822a1ffce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc428f1-95bd-4dc3-84dd-ddba73c29616",
        "cursor": {
          "ref": "764bfc8d-ddde-4e27-87be-8ad316f7c4e8",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7ee33c47-2a81-411e-a2de-b100854afeac"
        },
        "item": {
          "id": "9bc428f1-95bd-4dc3-84dd-ddba73c29616",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5442ce9c-6367-42be-9802-78ea5a4cb39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a2009b-bcb0-4112-aafa-05b223b4d8c1",
        "cursor": {
          "ref": "8a974baa-4004-4173-9865-54b7f60bf5f7",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0cdce5f4-d4a3-4290-952a-14b831f96eed"
        },
        "item": {
          "id": "96a2009b-bcb0-4112-aafa-05b223b4d8c1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "05496c89-1686-4383-917a-3fac00e552e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa6d839-61d0-49ef-bed9-ec6a0ef98231",
        "cursor": {
          "ref": "205167ce-eb1c-4532-b29b-3d876026b2d1",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a40b33d1-61f0-4a1d-91dd-a13868741c96"
        },
        "item": {
          "id": "ffa6d839-61d0-49ef-bed9-ec6a0ef98231",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7e165b8a-2eaf-475f-a987-a5a0378a036b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb71eb46-ac43-40f1-892c-7a46e4a81060",
        "cursor": {
          "ref": "e3e53255-9162-4a6c-b67b-4edd7bf25014",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f130466e-4b2b-43bd-bf2b-3551958300b3"
        },
        "item": {
          "id": "cb71eb46-ac43-40f1-892c-7a46e4a81060",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "12f47ca4-126b-4eb7-87ef-f2c981300738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc5c563-5b30-4741-8061-ae987e2ca6e0",
        "cursor": {
          "ref": "af4368a9-f5b3-41af-8032-69c59db83cc7",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a009f8cb-0abb-4174-94f7-224c60f9fc1c"
        },
        "item": {
          "id": "bfc5c563-5b30-4741-8061-ae987e2ca6e0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2530c65d-36cb-4f43-af99-1e4db3df7726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b5a620-5e7c-4a16-860c-9871c38b209b",
        "cursor": {
          "ref": "5b9c1bc8-c45b-48ee-8cff-fdd3246d9295",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fd933d1c-8270-4395-a17f-f3e4ff078dbd"
        },
        "item": {
          "id": "d0b5a620-5e7c-4a16-860c-9871c38b209b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "15a748fe-30fa-4828-9084-b7647f744f73",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee746bc-aafb-4ee3-8392-02ed16d927f4",
        "cursor": {
          "ref": "7654b685-9004-4824-9886-1fbf2777c61d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3857c3c2-d421-44a2-adcf-d228cdd80033"
        },
        "item": {
          "id": "eee746bc-aafb-4ee3-8392-02ed16d927f4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "28da6e9c-a42f-4f6d-8766-7d11c9b4d00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11d4b41-7e26-412b-9096-dc4652604629",
        "cursor": {
          "ref": "015b4127-f497-4c46-bd73-eeba5418eaf0",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "984a7c9b-171c-47c4-9593-a8f169274816"
        },
        "item": {
          "id": "c11d4b41-7e26-412b-9096-dc4652604629",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "819c27d8-212b-43fe-8894-b9ad514f7f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1a49f4-1a0c-434d-9346-c358624fcca1",
        "cursor": {
          "ref": "bc5e8901-7acd-4cb0-8a2b-bab05cea5614",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c89d180d-29eb-468a-963f-a110041fbbf1"
        },
        "item": {
          "id": "ab1a49f4-1a0c-434d-9346-c358624fcca1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b2fc0c7e-03c5-4ae5-a172-145e7e15c8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0876982c-c6a7-4fc1-a16e-c172129f86d0",
        "cursor": {
          "ref": "7f8f927e-e888-49d3-8f55-7e516a53e65a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0a58d74e-2b83-4a54-ae1f-bcd9d466e413"
        },
        "item": {
          "id": "0876982c-c6a7-4fc1-a16e-c172129f86d0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c79a5afc-d8c7-45ec-8d1b-dd0b9cbfb2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc22b14-7005-464e-a8e1-1a5417dac041",
        "cursor": {
          "ref": "c23834ce-e589-4fe7-996b-241367d3a903",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dc879383-edff-4571-ab88-c6961dc5d62c"
        },
        "item": {
          "id": "5dc22b14-7005-464e-a8e1-1a5417dac041",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "16cf8927-8194-4704-b4bd-543cea3f3c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d4c282-a6d5-4553-bef9-81c9ece7a136",
        "cursor": {
          "ref": "89cf4de2-611f-42b2-99dd-95fb9bd5ce00",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1a858d02-d58d-403a-99c0-caed980db09f"
        },
        "item": {
          "id": "24d4c282-a6d5-4553-bef9-81c9ece7a136",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3b6a9ebf-7eb0-41af-8341-f7aaa72a6ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00760ae-3aa4-4736-a87b-213e4484e6ca",
        "cursor": {
          "ref": "6d8948d6-89f3-4f7b-959f-3ba75f44ba40",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8f8b8a6d-49fe-4727-8afb-607420010d71"
        },
        "item": {
          "id": "b00760ae-3aa4-4736-a87b-213e4484e6ca",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "29e119b8-e56c-4cd8-9c15-10950220b0da",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49884f97-0f2e-4f33-871d-96e157792c06",
        "cursor": {
          "ref": "7791debc-5656-42f5-bece-87cc52e0946e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "59b80bfc-2dad-41f2-aa2d-407e43652f8b"
        },
        "item": {
          "id": "49884f97-0f2e-4f33-871d-96e157792c06",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0cc8d4ee-86f6-4474-98a1-24e6c0781657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85cb340-e95b-41c5-a237-756392e67386",
        "cursor": {
          "ref": "34695c80-4d13-49bb-8166-f8370a8155f5",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1278f849-158d-424c-9127-1c08b6f17996"
        },
        "item": {
          "id": "c85cb340-e95b-41c5-a237-756392e67386",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "378fafcd-0a3b-4144-b164-ccfa5e4c71a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3541e755-82d9-4389-bec5-52293a791e3f",
        "cursor": {
          "ref": "ca187019-f924-4bce-a2bf-e2ccaae87a18",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a3e6f9c3-87ab-448d-a012-b08138595351"
        },
        "item": {
          "id": "3541e755-82d9-4389-bec5-52293a791e3f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9aaeaf09-d799-4d41-983d-63e6085f0aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769263a5-b89c-40ca-8aec-4488e426cae9",
        "cursor": {
          "ref": "18fe8b77-e908-4117-8a2d-a80aacd03319",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d74c7235-a5d8-4ebc-a6df-8d59fd48c41e"
        },
        "item": {
          "id": "769263a5-b89c-40ca-8aec-4488e426cae9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e36f30f1-ee29-475e-9a05-7243a3a06e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b22145-736d-467e-9f0c-473b6bdd21ed",
        "cursor": {
          "ref": "fee93a28-84c4-404d-ae9f-7bfe9bed43e5",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1cb8e87f-54e9-4839-b681-acf2e92a5610"
        },
        "item": {
          "id": "46b22145-736d-467e-9f0c-473b6bdd21ed",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7a75325a-718f-45c2-a4fa-adabc95cd940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd4047a-b9f6-42aa-adb0-a9310b01bfc1",
        "cursor": {
          "ref": "c146c210-966b-4e10-9983-057f430ebf49",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2702766f-5f43-4fb3-b763-742db493d22b"
        },
        "item": {
          "id": "9cd4047a-b9f6-42aa-adb0-a9310b01bfc1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "29f5488c-7e6d-4606-8e12-733af78e6c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61d8991-fcc5-4c3e-ac73-09480459e347",
        "cursor": {
          "ref": "efd59f64-7b56-4bfe-943c-8cb28999b46c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0b5238aa-4773-46dd-adb1-b6ddd95c1871"
        },
        "item": {
          "id": "d61d8991-fcc5-4c3e-ac73-09480459e347",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4fdd0499-1f8b-436a-8b2c-64e1063aa267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e04adb-78c8-4eb2-8d54-841809c4af30",
        "cursor": {
          "ref": "22584b98-15cd-4997-82a5-653cdb4e80ed",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d240f812-3b0b-4eda-bbbd-0be111133dc8"
        },
        "item": {
          "id": "20e04adb-78c8-4eb2-8d54-841809c4af30",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3b9bce9b-6e52-4723-a836-e9815bf37562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ad8318-fb80-4514-9e6f-80b08e0bf03b",
        "cursor": {
          "ref": "36a33cec-914a-4a50-97e4-ca2dedb8967f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "70ec8c51-a894-4c59-9055-c15ad45342c2"
        },
        "item": {
          "id": "a8ad8318-fb80-4514-9e6f-80b08e0bf03b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4c7ba3f5-b658-4d5c-86e1-7a7d9cd2eae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cec13a4-2e82-48b2-8e4a-1088203159fa",
        "cursor": {
          "ref": "e8e8c148-6c76-4fac-9d97-0a4fbe28abe7",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c0bb0f9a-08e8-4952-9eec-32ce816ed440"
        },
        "item": {
          "id": "4cec13a4-2e82-48b2-8e4a-1088203159fa",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a05fdff4-f69f-4d05-993f-30186dd42146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed549026-5d59-4c16-8668-1b83d4860452",
        "cursor": {
          "ref": "e4d719cc-1745-437c-8a4e-f807e06a8491",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8c1e21d1-bd78-484c-a990-c6e4c0ffda77"
        },
        "item": {
          "id": "ed549026-5d59-4c16-8668-1b83d4860452",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2a6dcb57-fe2c-4a66-89a7-b1c6a3e19732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458cd1ed-7ce0-4c3b-8c9f-ebb72f67872d",
        "cursor": {
          "ref": "6bb1b202-a808-4fa2-9349-d7db8f250274",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2bcc90e8-5261-42c3-b278-ff35d538c3a9"
        },
        "item": {
          "id": "458cd1ed-7ce0-4c3b-8c9f-ebb72f67872d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a2d334b4-cda7-4ca5-8235-ddf0ca9b831c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee8105e-dac7-42b0-ba93-e94a5062e9a1",
        "cursor": {
          "ref": "73965c5a-bbb9-4799-8ed8-b81e36c6d0c3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5423d4de-d34b-40f0-9929-6132df79ade8"
        },
        "item": {
          "id": "8ee8105e-dac7-42b0-ba93-e94a5062e9a1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fe44229d-1e49-41a9-ad69-996e6a182fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc2002a-bd1b-4ad1-9fd4-77f8f5c5607b",
        "cursor": {
          "ref": "70d9a884-fe8f-41fe-b3cf-49e76119829f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ee68eb47-edbf-4057-a15b-c701c4033e96"
        },
        "item": {
          "id": "5dc2002a-bd1b-4ad1-9fd4-77f8f5c5607b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5933b380-8d76-4703-b1a5-c86604c547ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a6db32-dbb6-4021-9cf5-0a530459e7c7",
        "cursor": {
          "ref": "3f1d9100-3f38-4d9b-95e4-50b6ded58eec",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "94bc3edd-2e0a-4787-9868-f43f182e3473"
        },
        "item": {
          "id": "f8a6db32-dbb6-4021-9cf5-0a530459e7c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c94f21bc-d267-4dcc-b5ff-cc16101e129b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b137fd9b-439e-4cc1-be94-aa0cd0c0ab8f",
        "cursor": {
          "ref": "d45d48cf-33df-4105-8468-668ea0372717",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e837c61c-5b9b-4c47-9928-a12a8e2d8034"
        },
        "item": {
          "id": "b137fd9b-439e-4cc1-be94-aa0cd0c0ab8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3e58cf68-3201-4f1a-b43c-4a1cbb3d6fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae532439-0f79-42e5-b849-bea346b812d8",
        "cursor": {
          "ref": "7a9d01f6-eca3-41e9-8353-7531f1cf5096",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ad9b90b4-6809-4e58-b482-3ec89b2a9e73"
        },
        "item": {
          "id": "ae532439-0f79-42e5-b849-bea346b812d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ad4fb8b7-a8a4-4ba8-a44c-080515801c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab5adc0-2967-4678-a082-39a7b346cf9e",
        "cursor": {
          "ref": "1479d9b0-7e0f-4dc7-868d-8d7cc203d20c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8bd8c638-de92-4186-a748-96f522394b16"
        },
        "item": {
          "id": "0ab5adc0-2967-4678-a082-39a7b346cf9e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cd6b0b62-5847-4ee8-8dec-326d1f268dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650acd53-a8e3-40a4-9256-ae9f4b540116",
        "cursor": {
          "ref": "c5df315f-4c6c-4186-97c1-97f91252d681",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4594e94d-91e8-416e-8168-0f4375ef9404"
        },
        "item": {
          "id": "650acd53-a8e3-40a4-9256-ae9f4b540116",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "09f79ebd-a232-4091-a5c8-9fb23570654c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3ed691-291a-4b2e-a080-490b7d51c97c",
        "cursor": {
          "ref": "f6122d55-037d-4fe9-b480-fe475a62dd47",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4c15799f-3bb9-4968-b70d-9f7fe0166893"
        },
        "item": {
          "id": "2e3ed691-291a-4b2e-a080-490b7d51c97c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "37f284d9-d54b-46a4-8be4-48237ac44a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8769196-3b23-4dd3-86fd-5756636bca79",
        "cursor": {
          "ref": "5b7dcd22-afcd-46f8-8aa8-3f2d3615eedd",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5936418b-6b25-4a9e-9a6d-9c7e7f1267d2"
        },
        "item": {
          "id": "e8769196-3b23-4dd3-86fd-5756636bca79",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5c62d68f-8f0a-4a34-8e43-ce9f713ef567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dafbc2e-9852-4de5-8902-e7b03bbfe1e4",
        "cursor": {
          "ref": "e2c2c044-60b0-4799-91a7-7fc87d9eecbd",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fcd80746-c30f-48af-b233-6864c3ff8288"
        },
        "item": {
          "id": "0dafbc2e-9852-4de5-8902-e7b03bbfe1e4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b606cbc6-8491-4ec6-9478-330e418ec51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c18a6fe-cfe6-4075-a0fe-70da04812e60",
        "cursor": {
          "ref": "18c73b47-7eb2-49e7-a0a0-8fa9e136d297",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "488792d9-f283-416f-8c50-764a50b41137"
        },
        "item": {
          "id": "1c18a6fe-cfe6-4075-a0fe-70da04812e60",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ec358518-f5af-4a18-8fa1-5a6c06acd56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1f82f3-8431-4fb7-92f6-aef245bf7410",
        "cursor": {
          "ref": "dd574748-e1bb-48ee-a370-d0ecbb7de8f3",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aa4da02a-cdcc-409b-934e-93c12cde489d"
        },
        "item": {
          "id": "ad1f82f3-8431-4fb7-92f6-aef245bf7410",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7568cd57-d7b1-48b8-9f2e-309538fdef3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0190802-bc4a-4f57-8e29-29a3f4d44912",
        "cursor": {
          "ref": "03d3d7c2-0298-46d7-8b53-ebe35a8d6c63",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bf854d4c-e890-48aa-b78f-d9f41e9b5c5c"
        },
        "item": {
          "id": "d0190802-bc4a-4f57-8e29-29a3f4d44912",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5a69fa6d-16d2-4bf7-8133-0904dc201ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dfa260-c5f9-46e9-b30d-6e0f37db23c7",
        "cursor": {
          "ref": "4184d4cd-4552-49be-b410-ac6acaea6291",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ecee45f3-901d-48f7-bad4-015416d611c6"
        },
        "item": {
          "id": "d8dfa260-c5f9-46e9-b30d-6e0f37db23c7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "06c0895e-91f7-4257-ac87-f7295ab3b4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc12323-e991-4fd8-8495-1b3f712d821c",
        "cursor": {
          "ref": "5f983a67-99a5-4db1-bba5-6b649b63eae8",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9301aea5-9a75-43d9-ae78-092121a80750"
        },
        "item": {
          "id": "dfc12323-e991-4fd8-8495-1b3f712d821c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dc4be867-4120-446b-a166-ac75bd654bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0fa26a-04f0-422c-98bc-189019393022",
        "cursor": {
          "ref": "537bb917-e431-40e0-a7e9-a376e23f1f0a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f75b5082-a5bf-4b2d-b9f5-8a030022e85c"
        },
        "item": {
          "id": "0e0fa26a-04f0-422c-98bc-189019393022",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "655cc642-ec42-4c93-ae1f-f5656fd9133d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f5a4fe-be2b-40f8-bc8c-60225ff2df77",
        "cursor": {
          "ref": "5403273c-6f72-4600-9247-678669765490",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "81dacd61-3211-4ec3-8f59-4d43d857f7c6"
        },
        "item": {
          "id": "40f5a4fe-be2b-40f8-bc8c-60225ff2df77",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6e451ceb-303b-49c6-8db8-5ee9fd525b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0ec448-5387-44d8-b3a5-30e2fbb51fba",
        "cursor": {
          "ref": "f7ae7a56-c943-49db-95cf-507412635c9b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7822a6b7-3802-4cf9-adcd-2144fd903c8e"
        },
        "item": {
          "id": "bf0ec448-5387-44d8-b3a5-30e2fbb51fba",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e43bf82f-df08-4d96-ab0f-e73c0645d203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121f7cbf-b778-4e1f-8b70-13f0a44110ea",
        "cursor": {
          "ref": "f38ee59c-21dd-4745-9961-271533ffc5e8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "72505ad8-6024-4818-9b28-bf6767d385f9"
        },
        "item": {
          "id": "121f7cbf-b778-4e1f-8b70-13f0a44110ea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5bb152e7-7b82-4a8e-b784-05e3b71ece1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc6a1bb-e89c-447d-ae13-b523d62a6e89",
        "cursor": {
          "ref": "0788776e-bd3a-4469-b51a-c996dbd22aa5",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e1414a7b-afb0-478c-af97-32442c486d02"
        },
        "item": {
          "id": "6fc6a1bb-e89c-447d-ae13-b523d62a6e89",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b5252a23-df71-4515-82b2-369f621d5eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc59e87-9554-4a91-90a2-7bfe88a0f2ff",
        "cursor": {
          "ref": "c1e194e1-87f0-4296-8df0-9dbac2312c64",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "03d00edb-ad06-4e6d-bef9-cf065ab09dd2"
        },
        "item": {
          "id": "5bc59e87-9554-4a91-90a2-7bfe88a0f2ff",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "705833cc-9f6b-4b57-9fa8-a47e6ef1bc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989b9cb4-060e-4472-b941-7cc8f4d58fb4",
        "cursor": {
          "ref": "8b1ba07a-997c-441d-857c-832313fb8753",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2605810e-3fe0-4924-85e4-e938dc5cfe50"
        },
        "item": {
          "id": "989b9cb4-060e-4472-b941-7cc8f4d58fb4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9b2f1d0a-4f7d-4331-b95b-151705e3888a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997144cf-ea7a-4aba-a508-7b9a3f6428bb",
        "cursor": {
          "ref": "0176940c-3ed8-443a-abd5-fead8c19db3e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "94472393-4db9-4d89-9f34-d27482c398bf"
        },
        "item": {
          "id": "997144cf-ea7a-4aba-a508-7b9a3f6428bb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7a2d7543-5d48-4722-8e53-213bd7785b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ea4307-b348-4868-8eaf-d8252260dfa0",
        "cursor": {
          "ref": "4ec0ca31-bee7-4e0c-b177-8f1ae43953e6",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b8d9301d-ca28-4599-b741-54c049e6a7a1"
        },
        "item": {
          "id": "25ea4307-b348-4868-8eaf-d8252260dfa0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "de145ecf-6c4c-4c19-84cd-9b5dc745de46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bf2f2c-2a12-47ef-beba-47f5da873960",
        "cursor": {
          "ref": "7af70ee4-1c61-493c-9d6f-f3cda7e33229",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b4d22f8c-80cf-4837-8ace-296e2770aac5"
        },
        "item": {
          "id": "c7bf2f2c-2a12-47ef-beba-47f5da873960",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fa398c27-956f-4b38-a205-a35fe2a276df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89fda27-8131-4063-8544-6da588f0e347",
        "cursor": {
          "ref": "4b6010b3-e1e8-4856-8ed5-44616cd14b6d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "eb0ab1a5-a734-4268-82cb-01b6dca87eeb"
        },
        "item": {
          "id": "f89fda27-8131-4063-8544-6da588f0e347",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "562fc5f9-da55-4df2-8208-75b6c1e07780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df48d4ab-bf19-43b9-8bcd-594643cb26fd",
        "cursor": {
          "ref": "8e372327-c93f-4b44-ace0-e8ee0260fc78",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7b1105f2-7913-4df5-8563-19d14b51b7cf"
        },
        "item": {
          "id": "df48d4ab-bf19-43b9-8bcd-594643cb26fd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1ce623fd-a932-49f1-a6ff-e7fb8f0efa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb224c5a-776e-4e6b-89a4-9244446dfbfb",
        "cursor": {
          "ref": "0769e3af-bf28-4c80-97ea-16f36c7cedac",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bed48cc9-4d0c-4712-abf7-5076bf95c96f"
        },
        "item": {
          "id": "cb224c5a-776e-4e6b-89a4-9244446dfbfb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0dc22ccc-4ee6-4818-ae85-83402b08b232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754770ee-dd4d-4fc5-8e44-301220d70260",
        "cursor": {
          "ref": "8d19b317-121a-4749-af71-6f159431e5ba",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "50340e3b-f508-4478-ba5b-f6b10ad9578c"
        },
        "item": {
          "id": "754770ee-dd4d-4fc5-8e44-301220d70260",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bd379cbe-d474-4c26-8452-fe69c0d5fdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5908444-b65a-4666-b215-98761b2eaf6a",
        "cursor": {
          "ref": "9797a7a8-be09-4db2-ba4a-f9178d464668",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "25b96892-57bd-40c5-969b-933e3c31fd99"
        },
        "item": {
          "id": "e5908444-b65a-4666-b215-98761b2eaf6a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4ec0aa0f-d3ec-48ca-9866-60c7389cf67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb24cae-be00-4e4e-b4e1-c64d0b5c4719",
        "cursor": {
          "ref": "2aa87cbb-3107-410f-ac12-68f77aa6d53d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0ac98cb6-5881-45ae-95e0-ae1d638f686e"
        },
        "item": {
          "id": "8bb24cae-be00-4e4e-b4e1-c64d0b5c4719",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c6dbcdda-5451-4971-944e-4347a0ffa5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0679026a-db5e-40ca-993a-138b62df4aaf",
        "cursor": {
          "ref": "e5f591ca-c7fd-43c4-b366-3393065a366f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "00f9c26b-f5f8-4c4b-9a94-07d1f9e311ba"
        },
        "item": {
          "id": "0679026a-db5e-40ca-993a-138b62df4aaf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1d35f7e1-ec31-4768-ad98-764bb440c262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509a44c7-17b7-44de-a0dc-7e1fb55fa7ed",
        "cursor": {
          "ref": "6d3b87c7-527a-4db3-9aa0-48b2be89f5ba",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4d74ff9a-710b-4814-857c-dcaa6170d12e"
        },
        "item": {
          "id": "509a44c7-17b7-44de-a0dc-7e1fb55fa7ed",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "db42ebf6-e378-4737-84d6-3cb7368dea27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664e4872-0bdd-42b5-a09a-92970068aff6",
        "cursor": {
          "ref": "b68eff48-03b1-4c1e-ad94-e8207fdb88b5",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4a4994f7-1f04-4284-8d7f-3bcc9aed4529"
        },
        "item": {
          "id": "664e4872-0bdd-42b5-a09a-92970068aff6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "56a4e3c2-4032-4160-ba69-1a25307e1b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03adf90-6b8d-433f-a441-f432019b6eb9",
        "cursor": {
          "ref": "77f59ed2-2b58-4e9a-9b25-fb18e23b02d3",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "074b806b-43f1-4061-ad2f-4aa91b484034"
        },
        "item": {
          "id": "f03adf90-6b8d-433f-a441-f432019b6eb9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "745935ed-e3ec-408f-835b-ad4767ddf9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f61b724-6e3e-464a-8184-ceea3abb3e2f",
        "cursor": {
          "ref": "42b0eb7f-3e38-4e88-89cf-034828854c35",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "76b59447-4b52-47ae-bf65-94cf3217ec5a"
        },
        "item": {
          "id": "9f61b724-6e3e-464a-8184-ceea3abb3e2f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8fc023f6-c45b-4a49-bd1f-03ce99beedc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864e407d-9be1-4a9f-ac10-6ac17cd523e3",
        "cursor": {
          "ref": "c180f3e4-6255-401a-a3a4-a95eed6ba189",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "eb2abc41-303f-43d1-8d11-fd727b9ab534"
        },
        "item": {
          "id": "864e407d-9be1-4a9f-ac10-6ac17cd523e3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d2887c9b-b842-41fc-96bc-ce7265a09f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96fc979-55dd-4cab-9169-70e50cf77ffe",
        "cursor": {
          "ref": "3ec01213-8762-4a85-b39b-4eb4b6d6ddd7",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b865fd4c-aef7-4c73-b49a-53b9d8f5832c"
        },
        "item": {
          "id": "e96fc979-55dd-4cab-9169-70e50cf77ffe",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dc5b2525-48dc-4499-bc1e-eae9a508d762",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c3337b-7400-44ee-8d5c-81bb7ecc9f61",
        "cursor": {
          "ref": "6c4773c9-b471-4584-8a78-c6943e6aaaeb",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f0211541-b86c-451b-b556-b28446c991d8"
        },
        "item": {
          "id": "34c3337b-7400-44ee-8d5c-81bb7ecc9f61",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6ed18721-8cd8-4fe0-b23a-10911447db63",
          "status": "Created",
          "code": 201,
          "responseTime": 44,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ec17fb-df6e-477b-a55b-2b30655d5cac",
        "cursor": {
          "ref": "e7610d26-0014-4735-abe5-aac10edbd19a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "19a4530a-3453-4821-a429-ee993f6000f1"
        },
        "item": {
          "id": "97ec17fb-df6e-477b-a55b-2b30655d5cac",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bf07cd68-733b-43da-9f47-d9ce66d633b0",
          "status": "Created",
          "code": 201,
          "responseTime": 214,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5cd083-6ae3-41b4-8b1a-305b81dc257f",
        "cursor": {
          "ref": "4f2d16b2-70e3-4558-a3f1-37dd8192d5c6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4e0fa203-3c9d-4971-890d-7711919a9a35"
        },
        "item": {
          "id": "6c5cd083-6ae3-41b4-8b1a-305b81dc257f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6f8e51e2-ca65-4c5c-ab41-4766ae222b35",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6547503-4e5a-4ce0-b2b9-f362c902c120",
        "cursor": {
          "ref": "9e807fc4-3413-4fd1-b4c2-4c909f42c211",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7c343d2b-5e2b-4ee5-bb7e-36d0c4385df1"
        },
        "item": {
          "id": "d6547503-4e5a-4ce0-b2b9-f362c902c120",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a5149689-515a-46a1-b9f9-06690cfd8ced",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca9dafd-6c54-4036-9f43-3442eddb967b",
        "cursor": {
          "ref": "b8c6e7da-e858-464d-bb4c-f970ad5985a7",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "93b92588-24d8-4d04-87eb-5dcf00f51e07"
        },
        "item": {
          "id": "9ca9dafd-6c54-4036-9f43-3442eddb967b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4302b656-0001-4e3e-99e7-e27e930aa565",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da1baa8-0a45-472a-898f-b0540c5b355e",
        "cursor": {
          "ref": "7bf26c8a-1957-48c8-a8eb-9a0157ef04fe",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "523888a8-3ff9-46f9-80b4-bd3b302c0087"
        },
        "item": {
          "id": "1da1baa8-0a45-472a-898f-b0540c5b355e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d70c7e07-0765-463d-8d69-f3afbcfdcdcf",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b1806d-36d6-4748-afb9-cb58912636ef",
        "cursor": {
          "ref": "cc11969e-e117-4cf6-866e-ca52048a05d7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5c79ecc1-52ed-4a93-b710-2a4559cb6938"
        },
        "item": {
          "id": "45b1806d-36d6-4748-afb9-cb58912636ef",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cec766a6-7451-4ce8-bd24-a1226bdcb3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6f0c6a-bd87-4faa-8e62-1096481cffe3",
        "cursor": {
          "ref": "762c04bb-204b-485f-9a19-c0e64f05f272",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fa2ac0bf-45fb-43e6-95a2-94227d45312b"
        },
        "item": {
          "id": "fd6f0c6a-bd87-4faa-8e62-1096481cffe3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "38bf2bf3-4264-4c28-8ae4-9f6acdcb2b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3306f274-3e00-41f7-ac9e-fae5413ed3ca",
        "cursor": {
          "ref": "25b4c338-89c0-49e1-a630-55d2a24407ef",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6f798078-2490-4926-a401-ecb5ea27e7b7"
        },
        "item": {
          "id": "3306f274-3e00-41f7-ac9e-fae5413ed3ca",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3c58f5b1-490f-4422-8fe3-c12009295399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab18b82d-5ce4-400d-96da-987e906427db",
        "cursor": {
          "ref": "e136965a-ddd6-44ac-bd69-4813af3c922a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c9638c82-0143-4f7b-ba80-37ae4abd793e"
        },
        "item": {
          "id": "ab18b82d-5ce4-400d-96da-987e906427db",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "502f9c33-115e-4929-95e3-89eefc700990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89067d0b-655c-43fb-aeba-e96855fc333e",
        "cursor": {
          "ref": "45ee8495-9a3c-4f0f-a389-ec907c4b8470",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5efa4119-db20-4f64-ad0c-4d623fdaca37"
        },
        "item": {
          "id": "89067d0b-655c-43fb-aeba-e96855fc333e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "755e2152-fd04-4c45-96ce-1c94b95d450b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b3de00-edcd-4a1a-a78f-3fe3aedcee8c",
        "cursor": {
          "ref": "0ceb3b0c-f802-4efe-a9a7-8eab17c1128a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c705a3be-f869-4110-ab5c-a57cf57e82b3"
        },
        "item": {
          "id": "c0b3de00-edcd-4a1a-a78f-3fe3aedcee8c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f2365e7e-6143-4f4e-b693-4cce3e6140f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c0c07b-67fe-49b3-ad96-be66773a385a",
        "cursor": {
          "ref": "0914f67f-faa9-49df-9cf6-8cb63fd95bb4",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4943dbc0-b420-4c74-b00e-26d0ecfdae42"
        },
        "item": {
          "id": "c4c0c07b-67fe-49b3-ad96-be66773a385a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "613b22f1-6cb8-44d8-8e8c-81e6bde5e417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f9481e-03a6-4b42-99c6-2dc71e95ff8f",
        "cursor": {
          "ref": "9c735531-f78e-4e3b-b215-523177182819",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "18844bcc-ae72-4faf-beef-9c6fab99bdf1"
        },
        "item": {
          "id": "b4f9481e-03a6-4b42-99c6-2dc71e95ff8f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9e4e7428-2953-4edf-a6bf-ff1c7cffeb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffd095b-e31c-493c-bcfd-157c85825ee5",
        "cursor": {
          "ref": "1030fcf5-e00f-4b53-a199-256cef8909a1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2173e462-8c5e-4403-8374-76fdee981131"
        },
        "item": {
          "id": "7ffd095b-e31c-493c-bcfd-157c85825ee5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "21fd0272-74b7-4053-8708-f388491c7f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e5b19e-1d2e-4352-90c9-4c45904c3418",
        "cursor": {
          "ref": "656135a4-544a-4c98-a59b-ed25eca7a13a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1b9f9590-4e4b-47ad-b664-2f65cee77559"
        },
        "item": {
          "id": "59e5b19e-1d2e-4352-90c9-4c45904c3418",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7002d3a3-2510-4aaa-9d00-d97e40abeae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60607313-7943-4a97-b864-9d0575e8b38b",
        "cursor": {
          "ref": "735d69b3-1ad5-44e6-99c6-4b132ab1bdac",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "265f6dbb-eca8-4f3f-92a3-a9853fa5ec8b"
        },
        "item": {
          "id": "60607313-7943-4a97-b864-9d0575e8b38b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e3e7639f-92b7-44e8-a867-4ba49414f389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcba465d-f72f-4feb-81f8-3c125be73cc5",
        "cursor": {
          "ref": "2b9245ee-685e-408b-8349-29f69c75587c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "07a16fd5-b47a-4213-a454-229594c5dbf8"
        },
        "item": {
          "id": "dcba465d-f72f-4feb-81f8-3c125be73cc5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3007bf5d-1972-4c1d-a971-972ba7d9c12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a31314-f418-4ce4-92ef-232270c58d5a",
        "cursor": {
          "ref": "a786d6d1-9194-497e-a6b4-2945200cf84b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a5916f65-ee9f-40cc-96ee-e69eedae7705"
        },
        "item": {
          "id": "95a31314-f418-4ce4-92ef-232270c58d5a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8e9e2f04-3b3b-40c0-86a5-5cf1f21e254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4395cf74-0950-4b5a-90a4-1bf1f008d136",
        "cursor": {
          "ref": "ccf72e5f-33f9-4b22-9749-39fc4d4598a3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9b7d4f33-6f69-41fa-becc-69b366ff596b"
        },
        "item": {
          "id": "4395cf74-0950-4b5a-90a4-1bf1f008d136",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3959bc09-b558-45ee-8af8-14d7e070eb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b49010-f9cd-4171-94c0-b480173b3ab5",
        "cursor": {
          "ref": "9364a16a-121c-4772-a64d-2091039e5add",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "35f96343-41ef-4947-bf46-480f26034fff"
        },
        "item": {
          "id": "a0b49010-f9cd-4171-94c0-b480173b3ab5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "92acfb41-41f4-4fc9-b70e-54d14db24e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c014cc-4e2c-4008-bf9c-37f45d65957f",
        "cursor": {
          "ref": "a311aedd-156d-47c3-b2ea-5b3ff39ba231",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1b7aed86-263a-48ca-bbcc-372a9de5a405"
        },
        "item": {
          "id": "d9c014cc-4e2c-4008-bf9c-37f45d65957f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e8b1e9af-733a-4622-8ec1-9503d37f4e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eff4c5b-891a-4a18-9a1d-e9ac88cdfa10",
        "cursor": {
          "ref": "7d6f42d3-6a10-4387-99e6-8be682b2a72d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "86137277-a1ce-434d-ace3-f211ef757afd"
        },
        "item": {
          "id": "0eff4c5b-891a-4a18-9a1d-e9ac88cdfa10",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4ca9d04a-a219-40a9-bdba-1bc7efe15036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c7a344-8792-4e6a-9842-1e1c4c4f6785",
        "cursor": {
          "ref": "86472089-b838-42c3-8444-5321678f97a6",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "89f816d7-73d2-4bf8-b646-21be5a0f5ff2"
        },
        "item": {
          "id": "43c7a344-8792-4e6a-9842-1e1c4c4f6785",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "20fed95f-0201-4ac7-983e-dabee734d1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdeb6f4-11e8-4028-ba9a-b2e005499db1",
        "cursor": {
          "ref": "45a012e4-a05b-4a85-8818-d25c15cdb297",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e9c5a213-d24f-4b1c-a239-0a788a0747fa"
        },
        "item": {
          "id": "2bdeb6f4-11e8-4028-ba9a-b2e005499db1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3e9f09ed-2959-4a8d-9551-142cfae6a6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7c6a57-9586-4d5e-9d58-42de3d287a06",
        "cursor": {
          "ref": "8d23fe1e-faff-4d3a-b188-1b08855f65dc",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4cc43cb6-d50c-46c6-98f3-030e929453f3"
        },
        "item": {
          "id": "fb7c6a57-9586-4d5e-9d58-42de3d287a06",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cbfb0962-6089-4e59-bbcb-cb6e56154827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d49493-1d0b-43cf-bb23-d014e1c11d90",
        "cursor": {
          "ref": "3a03cd3e-68ae-4734-83f5-a7421587719d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fb26fe02-5f42-4cb4-b92e-93f093253fe8"
        },
        "item": {
          "id": "a3d49493-1d0b-43cf-bb23-d014e1c11d90",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5f40ec40-d9fb-4124-9d99-2cec1a8f9880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3a75fe-ddab-4d78-a0c9-ae1c75fcefcb",
        "cursor": {
          "ref": "2f2b7316-5d4b-488a-a2b4-a1ff3e941f04",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7d90b521-dbfe-4967-a7e3-6ec1103c204e"
        },
        "item": {
          "id": "8c3a75fe-ddab-4d78-a0c9-ae1c75fcefcb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "415b9c26-2deb-4f9a-91da-bd53bb867cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9024ffe-318e-4f7f-af2c-026285a8f5f2",
        "cursor": {
          "ref": "b09b16da-818c-4d87-bd8f-0014b9d888a6",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c3820ad4-6175-462c-9849-41567ff1158d"
        },
        "item": {
          "id": "e9024ffe-318e-4f7f-af2c-026285a8f5f2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "87d36859-b822-4dea-ae50-3c6492dc58cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1a8251-40be-4a76-9dbc-97f0c24b5324",
        "cursor": {
          "ref": "98f77950-e7c2-419e-88f3-bed1b88a4ffe",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8cd12026-0163-4bbc-b641-16a5225954b5"
        },
        "item": {
          "id": "0d1a8251-40be-4a76-9dbc-97f0c24b5324",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "79c6d7a1-9253-4730-9945-5b9d6e7caf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5be4b2-3bbb-4a4d-a4f3-cf58f4843a6d",
        "cursor": {
          "ref": "be4a8671-a83e-4978-bb6c-519880f26702",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0fac9116-1e18-4fde-bde2-95088200295a"
        },
        "item": {
          "id": "ed5be4b2-3bbb-4a4d-a4f3-cf58f4843a6d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0aac3a50-ff7d-421c-a7ea-c17a106eb505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04e76bd-93f8-437b-b4c9-a4917eace7be",
        "cursor": {
          "ref": "2af47631-3954-4ca0-9cff-82d6da2806e2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2853ccd3-8bcb-4e84-94fa-4d4f2c47c86c"
        },
        "item": {
          "id": "b04e76bd-93f8-437b-b4c9-a4917eace7be",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "863c2ec1-4b16-4c34-9cc9-700921085a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acc98ac-9c10-4d8d-b0f4-cdb851badc63",
        "cursor": {
          "ref": "2b916467-035c-4459-8f64-64a9e6e6906a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3c52c425-6955-41de-aacd-0c77640d690a"
        },
        "item": {
          "id": "6acc98ac-9c10-4d8d-b0f4-cdb851badc63",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a00f55ad-1252-47ac-9d96-c46984bb4759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e98e83-1c6f-4912-89fb-b6af4649eb5a",
        "cursor": {
          "ref": "0db23376-43f6-43cd-a4f1-3f4c907840bf",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "82d1518e-3e70-415c-b271-f61a07083a9c"
        },
        "item": {
          "id": "c9e98e83-1c6f-4912-89fb-b6af4649eb5a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "663d1174-d07a-46dd-a7eb-3a7317d84aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d3a782-1fa9-40ff-9eda-65fcc10d721b",
        "cursor": {
          "ref": "e01c5b6a-af29-4dec-a3fd-43116d269a4e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b136d983-69ac-4a93-9958-68bd937c3c52"
        },
        "item": {
          "id": "75d3a782-1fa9-40ff-9eda-65fcc10d721b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c2bb7419-5046-48ef-9269-4993e97d0f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4db466-6325-4eff-88e9-47638cc66d8f",
        "cursor": {
          "ref": "fa0b5020-8ef9-4e4b-8dfd-1aa921e754a4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "65936cae-66a4-4c56-a43b-735f60b1fe8c"
        },
        "item": {
          "id": "bb4db466-6325-4eff-88e9-47638cc66d8f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "52a0da9d-71a8-4f88-9fe2-32419a5076df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d3ffab-2603-4093-a1f4-d410877b7407",
        "cursor": {
          "ref": "e58bcafd-a50e-4c6e-82d2-017be122ac46",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4561e8cb-e47f-415b-ba08-fae5819fe39b"
        },
        "item": {
          "id": "88d3ffab-2603-4093-a1f4-d410877b7407",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "750ca7e0-ef7c-4a9b-9e2d-1da6d95fbd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5773ba-c012-40c7-8ff9-a26cfd0fa7d7",
        "cursor": {
          "ref": "62158b71-81c9-4f7d-ba94-f6ec48022c56",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3926dbaa-70f4-42e1-a1e3-a57347d19792"
        },
        "item": {
          "id": "cc5773ba-c012-40c7-8ff9-a26cfd0fa7d7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "df9a44a2-df6e-44da-a4bc-09e25b65c383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff4bf93-c341-4de1-9aa7-8197d917b74f",
        "cursor": {
          "ref": "a40cfa77-07a7-4385-a8d4-3a45cf92a54e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e4fa3896-9015-4ce3-958f-004b338fb911"
        },
        "item": {
          "id": "eff4bf93-c341-4de1-9aa7-8197d917b74f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9d31c31b-7f8a-4d91-be1d-c33c04ea89c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad377124-20e7-4013-ad39-75ca23a38a02",
        "cursor": {
          "ref": "c09ac18c-39e6-404d-9ee8-20a17ce9602e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d115ee45-9ed6-4a13-bdec-1c6eceb7c68f"
        },
        "item": {
          "id": "ad377124-20e7-4013-ad39-75ca23a38a02",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4aa8bd28-7687-4ceb-8612-5ff9f693ce75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ac2cc9-a60e-4016-a1de-fd8692fbff0e",
        "cursor": {
          "ref": "0e4c8611-618c-4827-b501-2a3832ec44ea",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cc8b3c8a-28cc-45b1-9378-6405910d3694"
        },
        "item": {
          "id": "21ac2cc9-a60e-4016-a1de-fd8692fbff0e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3c54e9ac-6743-4999-9c08-2fea10430c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aed86f4-26e5-4c6f-9b98-f6b6c58c33f6",
        "cursor": {
          "ref": "38be7137-6bad-4644-8f7e-48cb055f17c4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "75397f6f-dfe6-4705-b4aa-ba9c7ee62979"
        },
        "item": {
          "id": "3aed86f4-26e5-4c6f-9b98-f6b6c58c33f6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9fadc13d-0192-4a4c-9dd6-6e5f0656c4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068570ce-1981-4834-9a4f-06025d970441",
        "cursor": {
          "ref": "c8f3de34-a34e-461c-8786-0e153969454c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5078271f-8e8a-43e5-b813-a8dfffb643f9"
        },
        "item": {
          "id": "068570ce-1981-4834-9a4f-06025d970441",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d55fc032-6173-4b72-ab44-78aeece6da93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c824cba7-8d69-4cf0-8106-b090b86cbbe6",
        "cursor": {
          "ref": "152b5731-c20f-4b6c-8f27-71ce4c2ced4a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "31ac5f3d-cafd-405b-a505-4b122d1c6408"
        },
        "item": {
          "id": "c824cba7-8d69-4cf0-8106-b090b86cbbe6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c3a540c-5def-4f0b-80ad-031e7fdcc1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc74cc5-f6da-4b4b-96ad-915b03bb7374",
        "cursor": {
          "ref": "0f75759c-ee2c-4717-a463-59f6bc089f77",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4b79c376-06df-4a2a-a5bb-9f325ab4a497"
        },
        "item": {
          "id": "cfc74cc5-f6da-4b4b-96ad-915b03bb7374",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "28b19dd8-d664-4575-bf9a-4257d4978bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e8a3bb-d847-4dd6-8e72-b0b773011335",
        "cursor": {
          "ref": "4214216b-681d-4f5e-933f-a023041593cb",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5c3ae72c-44d6-498c-a108-bb83cf5768ee"
        },
        "item": {
          "id": "08e8a3bb-d847-4dd6-8e72-b0b773011335",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5e8c1a37-44c9-4d6b-b707-b4ae61301331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206c996c-c54e-41bc-be44-ab3769b7c634",
        "cursor": {
          "ref": "9b368440-1130-4dab-a63a-6139c0a19d86",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d7778618-1c65-41ba-b25e-d5260967adf9"
        },
        "item": {
          "id": "206c996c-c54e-41bc-be44-ab3769b7c634",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "890b00f9-6643-4f7f-905e-36bacbdb48de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ae1bad-6df1-40a4-ade2-5ebceb76c102",
        "cursor": {
          "ref": "d45d5a96-77d7-4cca-ac1d-6041082dcd93",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0026ecba-c773-43db-bc70-b363913e1e1e"
        },
        "item": {
          "id": "74ae1bad-6df1-40a4-ade2-5ebceb76c102",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2e22b98e-7dfb-44c9-a379-0b2a3922bbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898e7144-5d42-47b0-8b25-fbf16846c93e",
        "cursor": {
          "ref": "b78d9404-59da-434e-9a2c-6d2abad86d3f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "34f54f18-a337-424a-8fb3-16be5b9b0b96"
        },
        "item": {
          "id": "898e7144-5d42-47b0-8b25-fbf16846c93e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2f412577-3a93-4010-a471-0b96c2cf8bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62d4120-a7b7-4314-8291-59ecf2992e5f",
        "cursor": {
          "ref": "013a0af0-7d53-4c7d-a47c-e2574e789b59",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ba204ade-65f0-4f23-b870-0c76ce67ab79"
        },
        "item": {
          "id": "d62d4120-a7b7-4314-8291-59ecf2992e5f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e0467436-05a3-44f4-82bb-354d81efd50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1662ff6d-f97a-4e35-beff-dbc1fcb4c8a8",
        "cursor": {
          "ref": "ad849cb9-6cba-4a73-8bec-a51cfae49f4e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5f308327-bd54-44c4-8a4e-3a3b68e89079"
        },
        "item": {
          "id": "1662ff6d-f97a-4e35-beff-dbc1fcb4c8a8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c70f737a-daab-4f40-8fac-93324727dd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d321d8-f9cb-46b8-be5c-a7fcf06162ed",
        "cursor": {
          "ref": "43dd0623-12fb-49f5-9011-9ba573779943",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0d4d30ce-f9b9-49dd-981f-16371867a037"
        },
        "item": {
          "id": "17d321d8-f9cb-46b8-be5c-a7fcf06162ed",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c2361f05-ca8e-4015-9ef1-08201ec919a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe02f47d-82b9-430d-9394-7df2d9706875",
        "cursor": {
          "ref": "3da2a765-85d9-4b5e-9284-4cfd5f0cda30",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1229aa83-1e17-4d25-9ad0-7f80308c0ed7"
        },
        "item": {
          "id": "fe02f47d-82b9-430d-9394-7df2d9706875",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7ba5ba48-fa71-40a5-b347-c7bbc65a01e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8350339c-f444-4fe9-a1ea-3664cccd3be8",
        "cursor": {
          "ref": "6bb3e946-af4d-4542-b11e-add226f8f7a1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f000d7c1-7dae-4dff-af5f-4f738f48238a"
        },
        "item": {
          "id": "8350339c-f444-4fe9-a1ea-3664cccd3be8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ee714657-cc8c-4f5a-9c7e-b39eef70e5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf01504-926e-424f-bad9-5377bafdbc85",
        "cursor": {
          "ref": "3952d53f-9433-4c5a-bbae-8600d40c1cb0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b9092e2f-c5f1-4b04-9569-2ff13cbc32d9"
        },
        "item": {
          "id": "abf01504-926e-424f-bad9-5377bafdbc85",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "387f0d28-7502-4f57-b442-01007a5c1a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1a0a93-c804-4e5d-a933-81e9023331fa",
        "cursor": {
          "ref": "3b83cd2a-ca68-49f2-bb9f-cefc6226226d",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7574af10-6766-4e3d-a265-83a69e569b64"
        },
        "item": {
          "id": "1f1a0a93-c804-4e5d-a933-81e9023331fa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "45785639-5e3b-4dd9-a56e-350cd61f6685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb9165c-bb3a-4eff-9b59-0d32d7a4ccc0",
        "cursor": {
          "ref": "860433bd-f366-482f-bbd9-50b48a0f71d0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "12c9a0b3-0225-4086-9aa0-64e69c04131a"
        },
        "item": {
          "id": "3cb9165c-bb3a-4eff-9b59-0d32d7a4ccc0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "83bb9df2-ce0b-43c1-a8f9-4e88a3ee04e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0a24b6-754c-401a-a29a-431728c63519",
        "cursor": {
          "ref": "987fe704-5760-4573-a68a-3fbdcf8bcd92",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "73bdc8e0-1666-42da-816a-f68b8029a99d"
        },
        "item": {
          "id": "fd0a24b6-754c-401a-a29a-431728c63519",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "58d73cfa-dfa1-4f24-9757-d4386fd05787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33332810-0f6d-495c-96f0-56e5267d95fa",
        "cursor": {
          "ref": "3208e86a-f7f0-493e-976d-1b425a3382d5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "228b0f7a-5858-4699-865a-fc51fa3677e5"
        },
        "item": {
          "id": "33332810-0f6d-495c-96f0-56e5267d95fa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "503ce336-58d9-40c4-a4b2-23e910bcef69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bccf9f-f846-4acd-82d6-c3e39142c4cc",
        "cursor": {
          "ref": "d8d0a588-99d9-4d45-9be4-0c9f753399d3",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e93617c9-582e-46c9-b36f-67b50636e6ff"
        },
        "item": {
          "id": "b6bccf9f-f846-4acd-82d6-c3e39142c4cc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "23e05805-a3ea-4ce9-93ff-284394950005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2272ba5f-b6aa-471f-b71c-22346dbe6d66",
        "cursor": {
          "ref": "7e66b9ab-baba-4334-8749-cf2cb53a359a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e81698ed-af97-453a-a577-6a2c5d601603"
        },
        "item": {
          "id": "2272ba5f-b6aa-471f-b71c-22346dbe6d66",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7d472d55-8683-481e-a1e8-32af1dc82bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bb831c-2421-49da-a7c6-6cabe6b637a7",
        "cursor": {
          "ref": "b85b23fe-3f67-41f0-bac7-e1a1e882cfbe",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3534191a-e728-4087-b0ec-ab8ecfac1b66"
        },
        "item": {
          "id": "20bb831c-2421-49da-a7c6-6cabe6b637a7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3cede9b8-014b-44bd-81c7-134cfc2797e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae5c935-153c-4f29-a6e4-e2a015244043",
        "cursor": {
          "ref": "375d7dee-1046-4414-8d35-8ca5f8cd6a3d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "810f8538-c73a-413a-b595-a65f89bedc1a"
        },
        "item": {
          "id": "6ae5c935-153c-4f29-a6e4-e2a015244043",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0f5015c8-0490-4197-9dab-e8e01055109e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6eaa0c4-18d4-4901-991c-0e7e6e733eaf",
        "cursor": {
          "ref": "5ea4faad-3ea2-4447-9fb9-4c841ea2d5ef",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6398250b-d37a-4f52-acbd-7ed44ab8de66"
        },
        "item": {
          "id": "b6eaa0c4-18d4-4901-991c-0e7e6e733eaf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ee1c9c17-44c7-4fa0-8f64-547a0057b4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead59b7c-c020-4d52-bc39-fc31896a521e",
        "cursor": {
          "ref": "f90c7961-2ed5-41cc-8d7b-11ecef27820f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5574ff27-096a-46de-9467-6f3a565b505b"
        },
        "item": {
          "id": "ead59b7c-c020-4d52-bc39-fc31896a521e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3f59a6ea-74c8-47e3-9fd5-89960e7bfe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d83d07-33ca-4d72-bbe3-ec23eb7a003a",
        "cursor": {
          "ref": "f1fe60d9-2c03-4f26-89e5-675189da94f7",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1536d820-2312-44ac-b4de-a8d6103a5629"
        },
        "item": {
          "id": "37d83d07-33ca-4d72-bbe3-ec23eb7a003a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b9342a8f-759c-4aab-972b-7ea6c86c201d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cc4963-266b-4ae7-9d8c-bd747ea1b605",
        "cursor": {
          "ref": "10d2efc3-73c8-4768-93e0-5cca18246944",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "341ce7bc-aab7-4e4e-8114-cc905e79a5ed"
        },
        "item": {
          "id": "06cc4963-266b-4ae7-9d8c-bd747ea1b605",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1224a409-d1f7-4ffe-ba54-40cbc99ab2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d012949-1b23-4cd5-8f72-64d63576d57d",
        "cursor": {
          "ref": "7e64d074-e1d1-4cb8-9cb1-fd372ecb76ef",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0312a14c-dee6-4cdf-a6e3-4f1269d0ec54"
        },
        "item": {
          "id": "9d012949-1b23-4cd5-8f72-64d63576d57d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "28841ea1-c47a-4b97-bcd2-860a21b84dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab276cc-51c5-45fd-9e97-345bd0a01f9c",
        "cursor": {
          "ref": "fd184ba6-52e7-48ae-992d-e985fbec1ea2",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b81625b0-f3cc-42a1-8528-5d9ce55f7225"
        },
        "item": {
          "id": "7ab276cc-51c5-45fd-9e97-345bd0a01f9c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7827751-7888-4a28-bf8a-1a70e1591594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0a678a-562b-4fd9-aff2-bccd4ad76d38",
        "cursor": {
          "ref": "e4ed9051-a19c-4a9b-82fb-654cd97accd2",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "312b2f0b-4a17-45a3-a9e1-3c9a6672e681"
        },
        "item": {
          "id": "eb0a678a-562b-4fd9-aff2-bccd4ad76d38",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e853a466-4919-4682-927d-7d80acdebc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf160e8b-c6bc-4889-b938-d685fb5ce35e",
        "cursor": {
          "ref": "7da82814-7ae0-4117-8d75-148e3d692f77",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "01b92dd1-67fd-4412-8ab3-bcceb66f4833"
        },
        "item": {
          "id": "cf160e8b-c6bc-4889-b938-d685fb5ce35e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "814e99fe-5471-46a8-b572-a08b12fe2545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd42bb17-f58d-4612-b134-89771c74af60",
        "cursor": {
          "ref": "8cdef9b1-1cae-4455-9d32-0bb201db926d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "acb4e45f-4196-4aeb-8c15-47fb2e4674b7"
        },
        "item": {
          "id": "fd42bb17-f58d-4612-b134-89771c74af60",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "53e5f2de-4c3f-40e9-9750-bc50942daa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b663b9-5477-444d-aff4-91dd80a47aa3",
        "cursor": {
          "ref": "a991b772-59f3-4c69-89fa-c29daaba75f5",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1de69335-2015-4acc-9f75-1cd0dfa5f7cf"
        },
        "item": {
          "id": "02b663b9-5477-444d-aff4-91dd80a47aa3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c55a9f7f-c936-4823-9e38-d46faeb08c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2d7f85-7320-4b5b-a04e-71e2e85ec07f",
        "cursor": {
          "ref": "f7ec928b-ab88-4ad5-9d0d-b9bfe0dbb6fe",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5fe01450-ad21-465b-9747-1028d9dcb8b7"
        },
        "item": {
          "id": "ca2d7f85-7320-4b5b-a04e-71e2e85ec07f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a5dd9f5e-75d4-41ab-910e-c11b4f094661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef1786b-c47d-4de7-936a-8efd67a040bc",
        "cursor": {
          "ref": "04d5c1c3-eb34-4f36-8375-9a771f43d2ca",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "939b904f-b091-4c8c-a2f6-b3d0c8342790"
        },
        "item": {
          "id": "bef1786b-c47d-4de7-936a-8efd67a040bc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0866c222-99b0-437e-ae9d-aa25a000017c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b46150a-c612-43fe-8b1b-fe69edc31baa",
        "cursor": {
          "ref": "ec27f4c9-17af-4dbd-b646-b3c2f6490e53",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4cd82dce-2b56-4678-bf0d-101d53f5a5ca"
        },
        "item": {
          "id": "5b46150a-c612-43fe-8b1b-fe69edc31baa",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "91f5b7dc-078a-4955-bbdd-ae47a0ce3906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e3e7d8-427a-4e43-8d63-cd500bb98fbb",
        "cursor": {
          "ref": "9c66039e-2174-4c34-8459-a8630fca7707",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2ad82c68-96f8-4abc-9903-5299d961cf8d"
        },
        "item": {
          "id": "14e3e7d8-427a-4e43-8d63-cd500bb98fbb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7ecc8bee-6001-4386-b3a4-acd4058f182d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe08b89-c9cd-438f-80e5-d7cdb4b5aad5",
        "cursor": {
          "ref": "e92dd820-34cf-47e8-9434-cc52bcf4297e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "87bbe234-334a-46f7-88fe-3372222832fd"
        },
        "item": {
          "id": "ebe08b89-c9cd-438f-80e5-d7cdb4b5aad5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d3becb54-eb2c-4af2-86c6-905c7f4a1e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1758f312-6e1a-4572-a1b3-54f929486909",
        "cursor": {
          "ref": "55b3d87c-1a7f-4161-88a4-29f2e01a526b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9ccd4a07-a6f5-43fd-9719-316315a1672b"
        },
        "item": {
          "id": "1758f312-6e1a-4572-a1b3-54f929486909",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "04a4e796-2290-48fd-b49a-368b391ab929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72aad7f5-042f-46a1-8f84-cd37b60a5ac3",
        "cursor": {
          "ref": "fa389957-4c88-4eb2-a7e3-8b4c84976326",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ee12577f-639e-4f1b-b4ec-7fc6763a98db"
        },
        "item": {
          "id": "72aad7f5-042f-46a1-8f84-cd37b60a5ac3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ee66bf51-7b4d-4c70-8be9-ff35477699c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af79e2c-f6e0-4b29-9fd2-497a2a62c964",
        "cursor": {
          "ref": "e2eb6a77-a0c5-4225-ba97-54adfc84d2d9",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f572ff5c-98fb-4493-a09d-d8e3f42454ce"
        },
        "item": {
          "id": "1af79e2c-f6e0-4b29-9fd2-497a2a62c964",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fcb387de-de23-4944-af3d-d1884d52a612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d240752b-1cca-43f3-a8de-4e852a4d4729",
        "cursor": {
          "ref": "ba535e0a-325f-4d4e-95ec-6602890519fe",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1841f459-22cc-49f1-8123-862fb9d53cfb"
        },
        "item": {
          "id": "d240752b-1cca-43f3-a8de-4e852a4d4729",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c1def489-046b-49f5-b7db-8ec8c7f21fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d2fbbe-b667-4b8d-acc2-0c5695f8751c",
        "cursor": {
          "ref": "11b6dd4a-aa47-4d31-a4ae-45d0d4573280",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dbeebbdc-2a35-406e-8be1-35ce50c7a367"
        },
        "item": {
          "id": "58d2fbbe-b667-4b8d-acc2-0c5695f8751c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "692a8191-f4fe-403b-b588-f52348a849ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72561518-ffc5-4447-afa0-79f8505c76cf",
        "cursor": {
          "ref": "56222665-33fc-438f-9824-4eee57bb5d1d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7f6976a1-b4b0-432f-ad42-74cba6578e1d"
        },
        "item": {
          "id": "72561518-ffc5-4447-afa0-79f8505c76cf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "41180c16-2114-4424-8b86-034bd94d7103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1380ce27-57a4-48fe-8ace-4d0d8477a933",
        "cursor": {
          "ref": "b610ae6a-47f6-4d02-a521-200ab31f10f3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "697e1b99-226e-4422-b391-2ffe5e9d52c3"
        },
        "item": {
          "id": "1380ce27-57a4-48fe-8ace-4d0d8477a933",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d3f2880c-7e3c-46c2-ae0a-e23adacc2d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a390bd10-2610-40e5-84ad-bd936b9e440f",
        "cursor": {
          "ref": "a2f33c79-2954-452b-891c-5f9b1cf433e9",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "40ad7d7f-d378-4284-82f6-3662747b3edf"
        },
        "item": {
          "id": "a390bd10-2610-40e5-84ad-bd936b9e440f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3f805c59-e519-4a63-ade9-f2042f316f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5feec8-b4af-402b-b6e8-405f0159138d",
        "cursor": {
          "ref": "26a36ab2-9728-4a3c-b448-ad23f82af5ae",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "33f5d753-0468-4ca7-b745-bf1ff6b1166c"
        },
        "item": {
          "id": "3f5feec8-b4af-402b-b6e8-405f0159138d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f741a85e-8a83-440b-bee4-d956d1c9542a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b37be0-2a14-486a-882a-a0895ba05eba",
        "cursor": {
          "ref": "f2270f9c-fae6-4068-8799-1e1e8f9e94f3",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b0e5cf9b-3589-4b8e-8e0b-3e9295af6fa4"
        },
        "item": {
          "id": "91b37be0-2a14-486a-882a-a0895ba05eba",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "475a415b-9d24-4a34-ae1b-2c28a6244550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5e816c-d33c-4dae-b4b6-b644354d41f1",
        "cursor": {
          "ref": "339518c0-33c6-408c-96c6-62491546b696",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a8d5d77e-8561-4ddb-b080-418b0df21354"
        },
        "item": {
          "id": "fd5e816c-d33c-4dae-b4b6-b644354d41f1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d6dd785a-2620-47b2-893f-1b019c3ca46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2666d9-e70f-4ebe-a929-ea08141b41ed",
        "cursor": {
          "ref": "c8f3ae47-0413-42b1-941c-57d60275a987",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f1f822ad-505e-4022-9ccd-de6443f3512a"
        },
        "item": {
          "id": "9a2666d9-e70f-4ebe-a929-ea08141b41ed",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "81588284-0613-4a46-98bf-8684548de86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71a23c5-003e-4264-9e25-81a860786c9c",
        "cursor": {
          "ref": "35205365-7aa6-4e79-9280-cc04df4d6d28",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "befe8c99-2b3a-4f5e-ae0c-ba48ee352ca8"
        },
        "item": {
          "id": "d71a23c5-003e-4264-9e25-81a860786c9c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8795f01e-6cc1-4cc4-84b7-54d5d79f86fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d715360-c247-4193-808f-c2b7a2868503",
        "cursor": {
          "ref": "f5209a0e-f236-4ff2-98cb-fc13b3ebec0c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9df9b517-60ae-42af-ae7a-487ad01f9804"
        },
        "item": {
          "id": "4d715360-c247-4193-808f-c2b7a2868503",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "722c97ab-d71b-42de-bf5a-084b6e2847b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e569a5cf-5ef0-4a88-8ff1-4d4ae1a67fb5",
        "cursor": {
          "ref": "b851df96-a5e2-4ff0-9fc6-720e58c32531",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "50fdc004-7727-4139-9e41-b50f1000b3d6"
        },
        "item": {
          "id": "e569a5cf-5ef0-4a88-8ff1-4d4ae1a67fb5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5c83ffd2-2e3d-45b6-a40c-f883a9386522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2775d3de-5131-4443-9929-8fac42f65879",
        "cursor": {
          "ref": "56c5972a-9138-47aa-ade4-018f7551f71a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6d6afcfc-eb34-4ff3-9a0f-94cad50b5770"
        },
        "item": {
          "id": "2775d3de-5131-4443-9929-8fac42f65879",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7b99f7e1-5821-4df7-917a-c6bf7ea72ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5eea1ff-98b6-4a21-83ff-2f28ceade5c5",
        "cursor": {
          "ref": "3d685a78-02c8-4c13-8b69-ab8be0547cd8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c45f29ba-1044-44ba-82df-63540b035af8"
        },
        "item": {
          "id": "d5eea1ff-98b6-4a21-83ff-2f28ceade5c5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0eb7b5de-306b-4fd7-b53d-4e9b33fb65d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eac39c3-5860-4e85-bb16-a8d3397894a3",
        "cursor": {
          "ref": "e4e37146-034d-4aa7-a500-ed4e8299753b",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2d154941-11f9-4dba-8b98-19f11ad16f46"
        },
        "item": {
          "id": "1eac39c3-5860-4e85-bb16-a8d3397894a3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e4ba4ed2-dbcb-4a6a-a8ef-5e1ed4501f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594df5ea-ff9b-47d8-b6d5-1539ec7988be",
        "cursor": {
          "ref": "f8d2a72b-c21d-444e-847f-44086ebe417c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ba4a4c7a-72a6-4b28-b9aa-c6a8c1336d87"
        },
        "item": {
          "id": "594df5ea-ff9b-47d8-b6d5-1539ec7988be",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "699d4ddb-2ae6-4c39-9ea5-96e37fc6af37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6cdbf1-fd8b-4c61-a12b-80a84538c52e",
        "cursor": {
          "ref": "30efa6bc-900c-45b7-a175-7ecc79a8b41a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7a7135d3-a38e-489e-835e-59f67695f1f8"
        },
        "item": {
          "id": "8e6cdbf1-fd8b-4c61-a12b-80a84538c52e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2735e802-8f70-40f4-9143-470230057f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c397c59a-baf4-4595-8567-9eab5fe58433",
        "cursor": {
          "ref": "d9cec301-35c9-4bd5-a826-69ca7c620a8d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fd4c9156-8cc2-4408-af63-b202cd9ae3a8"
        },
        "item": {
          "id": "c397c59a-baf4-4595-8567-9eab5fe58433",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b6dffa6e-f22a-43fe-a43d-839d68cf8fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ecb079-de2f-4aa0-bc1f-de296518b3bf",
        "cursor": {
          "ref": "408e6d1b-a63c-4008-b7e0-95bfc98bac3f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "459223f5-8455-447c-bf6e-af90a92aa670"
        },
        "item": {
          "id": "e6ecb079-de2f-4aa0-bc1f-de296518b3bf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "be91d109-c5c2-4d4a-a3e6-00e5fba92668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c3074e-ca58-414d-b60f-c65f535fca6f",
        "cursor": {
          "ref": "437430cd-237b-408c-adb3-ec389ce0d8d9",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dd86ae07-7753-46e5-a0ad-edcbced6d194"
        },
        "item": {
          "id": "93c3074e-ca58-414d-b60f-c65f535fca6f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6dc5a6b7-a7ed-4341-9fde-83a551350f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7080afdd-a9df-420b-bfb4-6db5eac4077d",
        "cursor": {
          "ref": "e96d4c22-ca46-4961-a674-edd9a34e0290",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "116b6bb8-00bc-4c22-82b1-6dd62028c7ee"
        },
        "item": {
          "id": "7080afdd-a9df-420b-bfb4-6db5eac4077d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9fcf0a49-0243-4fbd-a037-984c8b8afa86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d7c4f0-5edb-44e3-9cdc-987f515d4633",
        "cursor": {
          "ref": "3ba49448-4c15-43ae-8693-9fd7ad62386d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b84bc6cf-eebf-42fd-8e61-00ee5bf9686c"
        },
        "item": {
          "id": "e2d7c4f0-5edb-44e3-9cdc-987f515d4633",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6f2cc008-e109-4372-8df8-10bbf72ae6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eae49d6-47d5-4412-abd5-f3f539ec671a",
        "cursor": {
          "ref": "46751c98-d208-4dcb-bf7f-afd9a0a9a244",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d6d87cbf-a38f-4f43-8937-a472f1b52895"
        },
        "item": {
          "id": "8eae49d6-47d5-4412-abd5-f3f539ec671a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "92604f02-f627-4da8-94f0-35edce5a9345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7181c7-1569-4752-afdf-2a28d9e2951e",
        "cursor": {
          "ref": "dd08b29f-8765-4e25-ae40-05c73b536d9f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5e3d2622-f0fb-44ad-ad3f-883add6134d5"
        },
        "item": {
          "id": "3e7181c7-1569-4752-afdf-2a28d9e2951e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "593ec496-2a56-4442-b2e8-704ef9d7782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11886608-66b2-49b6-9906-2f31451a877b",
        "cursor": {
          "ref": "c87ac5f4-8639-4899-b8fc-fd37ae888faa",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0c7bfdf5-68e0-4b1b-93d3-7867d8d1957c"
        },
        "item": {
          "id": "11886608-66b2-49b6-9906-2f31451a877b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7f0011db-3ce3-4960-b791-90ebdaa9f1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c41170e-9085-42d4-96d4-e97ea171a35c",
        "cursor": {
          "ref": "0f19ca18-89d7-414f-a442-9961bf73a1dd",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "62950ccb-0146-4a14-afa8-e58781c6381e"
        },
        "item": {
          "id": "8c41170e-9085-42d4-96d4-e97ea171a35c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "490b0cf1-f39b-4b26-b134-171c46358a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875a5951-2430-42a0-b323-498858c42787",
        "cursor": {
          "ref": "a318a058-65e4-4f5f-ac7e-3aee53204e1a",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "125d36bb-f6ab-45e8-8931-598b1a78cb50"
        },
        "item": {
          "id": "875a5951-2430-42a0-b323-498858c42787",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c57e2ec1-9ac1-40a0-b265-7a5d238cff60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6573e8d5-417e-441f-a7f5-c9262ab22b54",
        "cursor": {
          "ref": "5f7a9ccf-fbea-49d8-bf03-6b2ded3985bb",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a1bce85e-a8d6-4834-a334-50f6f27f9663"
        },
        "item": {
          "id": "6573e8d5-417e-441f-a7f5-c9262ab22b54",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3d592976-1144-416b-b7af-a7a8f1c17f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119b4029-d35f-4a9c-8640-bb642d91ebbd",
        "cursor": {
          "ref": "e8af345a-4eca-44a0-95de-8c57bf102fc1",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5dc977b9-1dfa-43b5-bde6-be15c63cfbb1"
        },
        "item": {
          "id": "119b4029-d35f-4a9c-8640-bb642d91ebbd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "78112229-cbd9-4a86-9a65-2ae9e2c2c60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273e0e2d-dc31-4128-aa0f-c9d75646fa4a",
        "cursor": {
          "ref": "d3a0dc24-6224-4971-94d4-53e9904430c4",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "170ae854-12af-4c3a-9b0f-414ba5feb7fb"
        },
        "item": {
          "id": "273e0e2d-dc31-4128-aa0f-c9d75646fa4a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4652ce8a-f644-4a5c-87c1-a846008f118b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b450e02-04d9-4ee9-858a-10cf762815f5",
        "cursor": {
          "ref": "3993d0a4-5075-47fb-9e1d-afe28745bcc8",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "829182e2-2080-40ff-8d3c-4dea620aa0a6"
        },
        "item": {
          "id": "7b450e02-04d9-4ee9-858a-10cf762815f5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3afe8c93-c526-45f1-aec5-bbfefd4373d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d2a6d5-e27c-4fa4-ae10-09250d222ee4",
        "cursor": {
          "ref": "7a8d9e02-dbf0-4bdd-839a-5413459d48fe",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b870cb69-1f4e-4f04-97cb-fcf61e76c887"
        },
        "item": {
          "id": "17d2a6d5-e27c-4fa4-ae10-09250d222ee4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "854c3ce8-fc3f-4cf4-9d44-bd43f75de6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff56360-82cf-4567-b3c6-26c15b2947e6",
        "cursor": {
          "ref": "5733b7ab-6611-4248-8bf8-563bce2cdc69",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c20e724b-6542-4097-8d64-4bf27b758ba4"
        },
        "item": {
          "id": "0ff56360-82cf-4567-b3c6-26c15b2947e6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "57c7fac8-c254-4711-ad88-050339f2eef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a33cb84-7afe-4194-a326-960780a68b50",
        "cursor": {
          "ref": "0420e489-2f5b-4f95-ad87-f225ea4c1433",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9936ed2f-d124-4e32-807e-b94f64f7b81c"
        },
        "item": {
          "id": "1a33cb84-7afe-4194-a326-960780a68b50",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1de46655-70be-435b-a160-207cf989980c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805698ae-b84b-4420-9f85-7cb5593d8bf1",
        "cursor": {
          "ref": "a6379041-4b7c-4083-8da4-a36260f935e6",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ca219645-f5b4-49bc-b4ae-c7defe16cc2d"
        },
        "item": {
          "id": "805698ae-b84b-4420-9f85-7cb5593d8bf1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a360aed-906a-40f2-baab-ed87d22d80e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2c2e37-2946-47a7-bb37-323b69e8b74f",
        "cursor": {
          "ref": "e729fbcd-786b-42eb-8e9c-4c999f2dec30",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d792aac2-c58d-442c-9948-b88ffb6324ba"
        },
        "item": {
          "id": "3d2c2e37-2946-47a7-bb37-323b69e8b74f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "613d116a-7f82-40e5-8eec-1c0daf01b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf616de-5411-4bd7-a982-10e6fa083b4e",
        "cursor": {
          "ref": "0c7856fb-86f9-4093-9b77-cbdbabc3a3ad",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "596eb63d-fd4f-41c1-b4cb-827679cd2e88"
        },
        "item": {
          "id": "ecf616de-5411-4bd7-a982-10e6fa083b4e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9a5c0fec-cbb8-4a3b-84b2-1e7484034e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19484b1-cc93-4091-a7f5-28ef604964af",
        "cursor": {
          "ref": "985876fc-65be-452e-a67d-d04202e07076",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "101095be-9192-4759-8332-7191d2a7d01d"
        },
        "item": {
          "id": "f19484b1-cc93-4091-a7f5-28ef604964af",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9f8eaa14-7cd3-42bf-97ee-f344c18bb5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a597ff77-2539-414c-8527-c71ca0645b3b",
        "cursor": {
          "ref": "8a66e252-4732-4374-950a-2bea5ebf8c34",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7fe94fc0-de5a-4e51-a31a-f3c99dda1775"
        },
        "item": {
          "id": "a597ff77-2539-414c-8527-c71ca0645b3b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c1f739dd-701e-4acf-83ac-2b542bd51cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced004a0-1e44-441a-a153-e5497abaf701",
        "cursor": {
          "ref": "6cf3441a-af02-4f19-94d5-a1745c1139b7",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3b4b1a1e-b4ed-4b11-aa2c-e515e6c480ec"
        },
        "item": {
          "id": "ced004a0-1e44-441a-a153-e5497abaf701",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1b6fc13c-31bb-4aea-9829-bf7d4af8135d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaea1b9a-0f8d-48c6-af05-f4ceb9b74e75",
        "cursor": {
          "ref": "5a3ca0e0-0e2c-467b-b703-64f1cd06595f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "865f5aa1-ba87-453a-9cb5-84d73cf9ebb7"
        },
        "item": {
          "id": "aaea1b9a-0f8d-48c6-af05-f4ceb9b74e75",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1410c873-ab08-42a9-8745-de22b6c6b0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f355db3-2625-4a98-a057-f5c35fc43085",
        "cursor": {
          "ref": "362948ce-48ab-4a1b-ae22-de4d62ab83f2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2a4e8d42-7d75-415e-a022-ab87400359b8"
        },
        "item": {
          "id": "5f355db3-2625-4a98-a057-f5c35fc43085",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "72c4f1c0-8125-4bd2-873b-3d640814b507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288130da-bd7f-482f-bce1-ef549a36423a",
        "cursor": {
          "ref": "8b714066-59fd-4a83-91d0-93d15142068b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7f061187-b779-4857-9c83-c5ebaef56b2f"
        },
        "item": {
          "id": "288130da-bd7f-482f-bce1-ef549a36423a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e63c549b-f7fb-49e4-9686-b106353b159e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af6017f-30ca-41d5-bea5-abd29ca08b4b",
        "cursor": {
          "ref": "a902220e-f7f0-48d0-8625-e70e38fe583d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "df721387-1409-4832-b3c7-f10f8ae544f1"
        },
        "item": {
          "id": "1af6017f-30ca-41d5-bea5-abd29ca08b4b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "96563602-d173-4116-ba03-7843c61efe41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ee1e0e-1d59-461e-aa39-c41100280cf0",
        "cursor": {
          "ref": "47f39dc3-719f-4bb5-83a0-a4f86aa55807",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "03704edd-907e-441a-be06-05a6ece09287"
        },
        "item": {
          "id": "33ee1e0e-1d59-461e-aa39-c41100280cf0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8c192444-f51e-4efe-812e-5f9fac28506a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c356077-a310-4795-bac5-7746797b37c6",
        "cursor": {
          "ref": "57a87523-10f5-4d92-afad-98e24ff0f58f",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1371dad3-7634-4d39-b0c1-d67a182b3f44"
        },
        "item": {
          "id": "1c356077-a310-4795-bac5-7746797b37c6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "72c88f54-5d73-4c3c-be3c-f874be7de1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea39f1e-e0c3-4527-9b40-f6ba55acd038",
        "cursor": {
          "ref": "b8f83608-24a8-4aad-9598-7148b7bb720b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d56aa8c5-69bd-4f77-b8d7-675334497469"
        },
        "item": {
          "id": "cea39f1e-e0c3-4527-9b40-f6ba55acd038",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "80610cd5-1d7e-4801-a6a4-943a84e2edda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827b85b6-7396-468c-a8af-9c6fe43b16f6",
        "cursor": {
          "ref": "feb9c060-3739-4566-bb7e-bdd1cf52796e",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f2158e60-482a-44c5-af46-d4911d85662a"
        },
        "item": {
          "id": "827b85b6-7396-468c-a8af-9c6fe43b16f6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "717c3ff4-96ae-4f4b-95ac-1b03099ff874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535d4472-5f66-40c6-9a15-0107dc434489",
        "cursor": {
          "ref": "3cdebe80-1e11-423f-bc7b-cd2026257cc8",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2e41000c-eb68-4859-9b66-db7d759c383f"
        },
        "item": {
          "id": "535d4472-5f66-40c6-9a15-0107dc434489",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9313549b-b06e-4966-9dba-6c0635cbec7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49abf4d-db5e-4f10-9438-09640fd12a13",
        "cursor": {
          "ref": "731a53c7-2310-4b1a-8323-ca66196272d7",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3eba3cee-8eaa-48eb-9592-28f0eee2343c"
        },
        "item": {
          "id": "a49abf4d-db5e-4f10-9438-09640fd12a13",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9df59d3a-b49e-4743-a283-f2c91f3ca6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68779aed-0a07-4e4e-a644-8cc00a9cb746",
        "cursor": {
          "ref": "01212835-8752-4797-8751-8d230a91e812",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e443b759-7c33-475c-a16e-1ce619e2bc31"
        },
        "item": {
          "id": "68779aed-0a07-4e4e-a644-8cc00a9cb746",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e3e68419-ef64-47da-94fb-aed47021b46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa85e6ad-fa99-4b03-9ef0-1ab742c77899",
        "cursor": {
          "ref": "cf1ace01-59f9-47b3-a189-658b4a780397",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bf1a0687-dd14-4fad-bfd3-29cdc6668be4"
        },
        "item": {
          "id": "aa85e6ad-fa99-4b03-9ef0-1ab742c77899",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "044d1a41-0182-4f08-a258-1babee40d9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17bcd34-14c6-49a8-b9bd-961a1be45987",
        "cursor": {
          "ref": "a38d7b99-ad47-4acf-ba42-48685013accd",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0dff1828-cefd-47bf-97a5-b34f7c022c4f"
        },
        "item": {
          "id": "d17bcd34-14c6-49a8-b9bd-961a1be45987",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "45345a51-432f-48ce-b126-46b98b708458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc53b43d-2728-4de1-9de8-4b0a3b04286f",
        "cursor": {
          "ref": "b36363d6-91b3-4a02-99b8-643994371285",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "90fa273b-e128-4766-a2e9-3ae571532260"
        },
        "item": {
          "id": "fc53b43d-2728-4de1-9de8-4b0a3b04286f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "43d7ad3a-459a-4cf4-be5c-35d53d47530f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815f57e3-9a92-45f7-8db3-2b083fcc22ff",
        "cursor": {
          "ref": "ba75e4cd-fd9d-443b-824b-367ee9e51b8f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "98d97e02-a1ba-451d-a5e1-1be6dcf673e8"
        },
        "item": {
          "id": "815f57e3-9a92-45f7-8db3-2b083fcc22ff",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0a525c1b-9adb-427d-89f1-73af08a86570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0a3ea3-0fb2-40ba-b77c-8443e94ac715",
        "cursor": {
          "ref": "1834c388-1f14-4b86-80ed-bafbf17e2f57",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ce1517b8-29fc-4316-a949-8aa50ed8c187"
        },
        "item": {
          "id": "8d0a3ea3-0fb2-40ba-b77c-8443e94ac715",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "68a55bc2-6867-4884-b181-427307e844e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7126be29-7964-4eae-a9ed-e3d9f1ac1567",
        "cursor": {
          "ref": "3ba5db20-c9f1-47d0-9d01-765968962e3a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f8704698-b48e-4d54-acba-6b609f10fb8e"
        },
        "item": {
          "id": "7126be29-7964-4eae-a9ed-e3d9f1ac1567",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7c248d18-557e-429f-8654-dc5a308d979d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcffe98-4306-4f3b-ba9e-2d115c6703a0",
        "cursor": {
          "ref": "c965b74b-4a2e-4cc5-99a2-45a77647b8ef",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "72326777-ab75-4946-9811-5f37f3f5573a"
        },
        "item": {
          "id": "4dcffe98-4306-4f3b-ba9e-2d115c6703a0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8d3f72d1-a1c4-4e9d-8968-daf2117c95c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7a2417-a55d-4b91-a0d9-f1614f294464",
        "cursor": {
          "ref": "b01e40ef-8aad-4d1f-9b90-ce8e365feaf3",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "41e26d30-9f41-4897-b567-b486b34f46b7"
        },
        "item": {
          "id": "fd7a2417-a55d-4b91-a0d9-f1614f294464",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d157e121-75e1-4ad5-ac18-866bb892d855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90df484e-c0b3-4976-bc30-20b844752f9d",
        "cursor": {
          "ref": "a0f5d530-2bd4-423b-8a4c-72e6031508f1",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "aa303180-c831-4f74-96f2-4803368756b7"
        },
        "item": {
          "id": "90df484e-c0b3-4976-bc30-20b844752f9d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0761c90b-5f90-4e70-aa69-e705f973e93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c645a7d-3e75-468d-8ff2-ca516b8c3ebc",
        "cursor": {
          "ref": "6ad8ef33-ac51-48d4-905b-59181478eb3a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ee44dc52-082e-47a0-b9e8-2d1fd566fae5"
        },
        "item": {
          "id": "3c645a7d-3e75-468d-8ff2-ca516b8c3ebc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b79eed97-5359-4cdf-814e-c217081d4520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc48feb0-7919-4802-acfe-067e406c87a8",
        "cursor": {
          "ref": "62f2af7e-646d-4baf-b15b-cb79a345e644",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3f52c35c-8ce3-4e16-bdf1-f1a399be462b"
        },
        "item": {
          "id": "dc48feb0-7919-4802-acfe-067e406c87a8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "665b580a-abce-4176-bc67-6706edc96ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e62e8a4-acbf-49f5-a909-811521bc15a3",
        "cursor": {
          "ref": "ad00329a-89d6-468f-a6e0-9326849f6b7c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "45078ceb-da91-4ac0-a53a-d14e959faeb7"
        },
        "item": {
          "id": "2e62e8a4-acbf-49f5-a909-811521bc15a3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ea569433-7e63-4a31-b8aa-df53f4585370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d55934-f767-4235-9662-1c52bdc63a5a",
        "cursor": {
          "ref": "68c72ce4-dfa1-4641-82c6-66302e196592",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "10011846-c82b-4a1f-825a-5709bbef0fbd"
        },
        "item": {
          "id": "c1d55934-f767-4235-9662-1c52bdc63a5a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e8e11f87-d895-490c-b0ec-920d4cabe206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57487ca9-2236-41fe-863c-d344a3440c23",
        "cursor": {
          "ref": "eba5b09d-e86f-4d2e-a069-f60098f6164f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "295c1f0f-7356-4ac4-b774-73874ff877c6"
        },
        "item": {
          "id": "57487ca9-2236-41fe-863c-d344a3440c23",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "be1d55a2-59b0-4671-96c0-e6e1be844574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7473f7-c1a7-47e4-8fad-7b57c3a5a3da",
        "cursor": {
          "ref": "f1accecd-3d8f-486d-a95f-b3d8743813e6",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f7aa9458-c40a-4364-8768-142ce20490df"
        },
        "item": {
          "id": "5b7473f7-c1a7-47e4-8fad-7b57c3a5a3da",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1f2a2730-598a-4758-8c0a-0b90f82dee63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd2e038-2cba-4231-b496-5683bebea6d8",
        "cursor": {
          "ref": "4f452eb0-aa72-4186-9a7c-55e37999283a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b6392faf-a09f-4845-9e02-84dab5b00027"
        },
        "item": {
          "id": "1fd2e038-2cba-4231-b496-5683bebea6d8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cff79d0c-61eb-4510-a469-d2f10b1bcaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315f8017-b4ba-4fb2-8729-b547c2e33fcb",
        "cursor": {
          "ref": "860bb5d7-aad1-4497-a6ce-781c05943dab",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "311250fe-95af-4d15-bb4b-eff6f560a34b"
        },
        "item": {
          "id": "315f8017-b4ba-4fb2-8729-b547c2e33fcb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bfb46e56-3c2c-45df-8c0e-6d99696471cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b49adb-8d33-4bec-8237-e1ee1b3603f8",
        "cursor": {
          "ref": "76d41428-6b2d-49f8-aca6-3b3b66ee4467",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "662b5f53-cfa5-46a9-bb1c-b6041757ad81"
        },
        "item": {
          "id": "70b49adb-8d33-4bec-8237-e1ee1b3603f8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "24bffe55-87cb-476c-817d-f44bc7c7258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f4c814-2714-476e-8334-b57058704b0b",
        "cursor": {
          "ref": "29a153e7-2d57-4681-b970-8a4a2deb86ee",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ccbac23f-f994-4fd4-919a-0bed9c86e128"
        },
        "item": {
          "id": "88f4c814-2714-476e-8334-b57058704b0b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d127f035-ad6b-4ce0-84ef-03efc64a1c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afc5068-1837-4db7-b106-756c141bcb52",
        "cursor": {
          "ref": "09f7acc8-da8e-496e-b286-82848e63ead0",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dafa2d2f-4176-431c-9510-884a69b29bda"
        },
        "item": {
          "id": "5afc5068-1837-4db7-b106-756c141bcb52",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "08d37afe-4c4e-459b-9cfe-7bbcbdaa2936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c7165a-55e5-4807-bfaa-694ee5315f70",
        "cursor": {
          "ref": "ea68c492-a323-43d1-a71c-1c73ff927993",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f19a7b23-4d6f-443d-9875-1af2a55f4c1e"
        },
        "item": {
          "id": "f1c7165a-55e5-4807-bfaa-694ee5315f70",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e4e92f20-4beb-4fb4-85e8-0783cf016597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56442803-2578-4f0e-b048-98bd957eae67",
        "cursor": {
          "ref": "bea97c9c-8315-4d29-94df-361c34b0edde",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c4c7ff1d-2e31-4b82-be20-52997a8ea036"
        },
        "item": {
          "id": "56442803-2578-4f0e-b048-98bd957eae67",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f1c963bd-5b4f-42d8-986f-320ceb2f412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f36b33-d2eb-463b-9bca-092f98560858",
        "cursor": {
          "ref": "3deaf1de-03d8-47a2-9398-45cae629f857",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "05e9a48b-3d74-4d24-b7be-a0351010cb22"
        },
        "item": {
          "id": "b6f36b33-d2eb-463b-9bca-092f98560858",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "735693d1-939b-4172-8cdd-66d5b0bdc020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1832349-1e5b-4c6b-9ab0-359ecdb668fc",
        "cursor": {
          "ref": "5f2c4d8f-7f11-4c4a-9382-07aa13b263b3",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "cf9d69ec-967f-42c3-90c5-b222c819ee0d"
        },
        "item": {
          "id": "f1832349-1e5b-4c6b-9ab0-359ecdb668fc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "19acaa5f-8c3c-41fb-92e5-69585bf5d30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fdf099-f6fa-478c-96d0-74d41bf5be8b",
        "cursor": {
          "ref": "d0711326-8cb8-447f-b442-c40b2a216c3f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6719af58-4f4e-471c-a25a-11091d9ef532"
        },
        "item": {
          "id": "f8fdf099-f6fa-478c-96d0-74d41bf5be8b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "296bf50f-0cec-4f5b-8954-f0de8cf7b269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95709a01-b506-4503-a9f6-f467442088c6",
        "cursor": {
          "ref": "364c1cf0-7cd1-4374-85dd-bcdbf88dea88",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4c40d5ce-1fd1-4781-a814-2e4da07d1fac"
        },
        "item": {
          "id": "95709a01-b506-4503-a9f6-f467442088c6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8be40ece-413b-4684-9cde-b36f192e89a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3faea806-b9fb-4e4c-9732-63a22178a14d",
        "cursor": {
          "ref": "4f03d420-1b83-43f3-82f6-8034c85e9c4c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5a76cba1-f94a-4449-899e-4fae038ac246"
        },
        "item": {
          "id": "3faea806-b9fb-4e4c-9732-63a22178a14d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a93c0474-3397-4e39-bc4f-709e8c11d8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36e7893-58e7-4da7-9748-4e70b84f6266",
        "cursor": {
          "ref": "1ed019bf-bd59-43ce-90ba-ab1ab9493ef1",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0cc47da7-b76f-4197-8276-4435b0b0808d"
        },
        "item": {
          "id": "b36e7893-58e7-4da7-9748-4e70b84f6266",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fea6964c-196b-4bf4-8531-3e9481282a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf7ea6b-dd63-4861-bcc5-630ee4ab827f",
        "cursor": {
          "ref": "67f46174-4acf-44db-b34a-fea18085fe36",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "16b04d7b-c7d6-4500-9e29-10488b877636"
        },
        "item": {
          "id": "acf7ea6b-dd63-4861-bcc5-630ee4ab827f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "48f94ff3-c5af-4afe-927c-c4404275b0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e11e873-652c-4c9a-b593-a59322eec50c",
        "cursor": {
          "ref": "ad4e8686-29aa-4978-99b1-d6ecdea1ed26",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cf3813d6-3711-46e0-b413-ded9c65e6bcb"
        },
        "item": {
          "id": "0e11e873-652c-4c9a-b593-a59322eec50c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bbc99241-4474-447e-af8c-b5c35b26486d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d37e60-4997-45d7-81d7-387b187855f2",
        "cursor": {
          "ref": "847b3067-95eb-443b-8632-cc970ca8b7ad",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4dd96987-7571-4e96-ae14-baa5a2631ca1"
        },
        "item": {
          "id": "86d37e60-4997-45d7-81d7-387b187855f2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c8d9c0e1-4ece-4c96-a811-b185ca63385f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcb6cc8-be66-42fd-b847-02b4ba207d70",
        "cursor": {
          "ref": "916d6d44-cd48-435a-9cae-a28b869b8c13",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c7632897-6b98-4acc-912e-944bbfb94b5a"
        },
        "item": {
          "id": "ebcb6cc8-be66-42fd-b847-02b4ba207d70",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e0596db3-2e81-4423-8db3-8a81b8bbba24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c81bb1-4897-4c01-8f9e-f15325a01f9f",
        "cursor": {
          "ref": "66526b31-1ce0-4f60-a662-d9b1cc76998b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3e477950-be59-4a18-97c9-39cef09a9a5e"
        },
        "item": {
          "id": "87c81bb1-4897-4c01-8f9e-f15325a01f9f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2790f220-f7cc-4dda-b4bb-0c58bc549673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e5c7b2-f0a5-41ca-8c24-c6c9895de7a8",
        "cursor": {
          "ref": "a7c74077-91a0-482f-8d45-41d7a9823029",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "80c8e5b2-2835-4898-8c42-20c5d7c174f4"
        },
        "item": {
          "id": "b6e5c7b2-f0a5-41ca-8c24-c6c9895de7a8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "31533402-de02-485e-ad27-93efb1bbe775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34946d5a-a34d-4a8d-bf56-73bf4b95702b",
        "cursor": {
          "ref": "a5780df7-ec44-4002-9405-d786e150e24b",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "08a1fb03-8649-4078-9fa8-51548d0abe88"
        },
        "item": {
          "id": "34946d5a-a34d-4a8d-bf56-73bf4b95702b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b0a8e5d4-e08e-4e2d-9513-168194dad192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aff536-e8ab-465f-a74a-7b0a650e3fe8",
        "cursor": {
          "ref": "6f6eccc6-c050-459b-b049-2c7975873c15",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c3cb086c-32b7-4c62-8963-6de8af4a2f02"
        },
        "item": {
          "id": "44aff536-e8ab-465f-a74a-7b0a650e3fe8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "75c5b8cb-4253-4dd2-ad14-98eb0b9b67d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf49f7f-2f30-4f84-a7f6-cd6a7fb5093c",
        "cursor": {
          "ref": "785841d4-5657-4b1a-9b25-eef78f47db46",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5d2c14e0-a8d6-42bc-b5fb-42b0cf481a93"
        },
        "item": {
          "id": "1bf49f7f-2f30-4f84-a7f6-cd6a7fb5093c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b383882f-2302-4646-bd91-6b45eecb416a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641762f0-f260-4b44-9082-4f5113afbcc6",
        "cursor": {
          "ref": "4baff1f5-1e67-4f3d-a813-ee40a80b9bc5",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6a4ba5c5-70ea-4d6f-ae66-851677d60e6e"
        },
        "item": {
          "id": "641762f0-f260-4b44-9082-4f5113afbcc6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e0d1e5b3-bee6-4626-a48b-830c16c32e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2949acc-edc8-4c50-acbc-2399b6912410",
        "cursor": {
          "ref": "db71caf1-1a10-4f3c-828e-38ce1f0bcf9a",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b434d332-5fa8-4846-a091-eb2383f9f3e7"
        },
        "item": {
          "id": "f2949acc-edc8-4c50-acbc-2399b6912410",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "11a5ef84-da4c-4315-a084-914161ba6b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc76238b-1594-43da-88f2-87a0fb89e077",
        "cursor": {
          "ref": "9359c978-3d95-4413-9a5b-25a29959bf64",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "aa1b470b-327f-4285-ae4c-760f819775a1"
        },
        "item": {
          "id": "bc76238b-1594-43da-88f2-87a0fb89e077",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d3471879-0222-4646-bd91-a4229abce862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2aa44f-90b6-4911-aad5-01e7cf639694",
        "cursor": {
          "ref": "6858df07-79dc-4aba-8e88-14513a2ff76b",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "50d0b492-7c05-466c-8053-84759245ad7c"
        },
        "item": {
          "id": "fd2aa44f-90b6-4911-aad5-01e7cf639694",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a2e2d030-2176-458d-87a5-13fecb80a085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fa12f3-bd8f-4cc0-b612-544bd1b3b6d4",
        "cursor": {
          "ref": "6ab60e4d-f6e9-4ebf-bd49-c89f625beea6",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "efcaabed-a92d-4853-a105-cbfa65de7626"
        },
        "item": {
          "id": "76fa12f3-bd8f-4cc0-b612-544bd1b3b6d4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "06b1fab3-4224-4ce5-b277-39b4234ac1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd977ef-775e-49df-9d2a-2872603bdd69",
        "cursor": {
          "ref": "004ae8db-07a6-4ccb-b705-34633d5d79ca",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "05825e78-0edd-44ac-bb1b-4533ee4e9b8f"
        },
        "item": {
          "id": "7cd977ef-775e-49df-9d2a-2872603bdd69",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4cf8ed9d-ecda-45d7-8e5d-a4e59538745e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f03c24a-595a-4399-aabf-2455550169a1",
        "cursor": {
          "ref": "f9c6ff21-deed-4ee5-8fff-829fe7334447",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0101a81e-885a-4046-a3c9-1abf5fc1616a"
        },
        "item": {
          "id": "3f03c24a-595a-4399-aabf-2455550169a1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ed12557e-fa71-4dc9-967f-b677af56a5b3",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0714a9-1812-4dc7-a470-c1705e19aa46",
        "cursor": {
          "ref": "974b9e7e-c54e-4484-8a57-e08fc4be7a3d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3fbfafe9-7327-4d9e-abb6-0ffd2f56c60a"
        },
        "item": {
          "id": "5b0714a9-1812-4dc7-a470-c1705e19aa46",
          "name": "credentials_verify"
        },
        "response": {
          "id": "aa0e2add-b7d0-42a9-bb2f-b19018a4c4b5",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b333ebb-8647-4c2f-b555-d3de3f43d628",
        "cursor": {
          "ref": "eec1cc34-17e0-49b9-8cf8-b2e5efcf84a7",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4a4a56af-d00c-46e2-8e0a-4f0956409398"
        },
        "item": {
          "id": "1b333ebb-8647-4c2f-b555-d3de3f43d628",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f07fcfbe-3dbc-41ba-867e-9aeb7bf797af",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eb2e79-4bd6-488c-ae4c-35e87544058e",
        "cursor": {
          "ref": "47419213-a5af-4779-8cc9-dd167498627c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8241d7b3-745e-4781-a52a-75accf341d91"
        },
        "item": {
          "id": "e1eb2e79-4bd6-488c-ae4c-35e87544058e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "48aa5f14-aff7-4b59-972c-5e26b5f5a288",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eb2e79-4bd6-488c-ae4c-35e87544058e",
        "cursor": {
          "ref": "47419213-a5af-4779-8cc9-dd167498627c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8241d7b3-745e-4781-a52a-75accf341d91"
        },
        "item": {
          "id": "e1eb2e79-4bd6-488c-ae4c-35e87544058e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "48aa5f14-aff7-4b59-972c-5e26b5f5a288",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcfe5d2-7606-4273-aeb5-83d0682b4a2c",
        "cursor": {
          "ref": "0e2421b1-9377-452e-a073-97fdd1f1c2b7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "85e10553-b253-41cd-a7fe-95be5f0e94b2"
        },
        "item": {
          "id": "6bcfe5d2-7606-4273-aeb5-83d0682b4a2c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "37b88679-ce62-4f02-8874-d88e738a82aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9f2d66-a988-47f0-a86b-afca9a03a28e",
        "cursor": {
          "ref": "486428e5-74a1-4a29-bb30-e39b391f4026",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "756b9452-4a7a-436f-90b0-c07a968df23b"
        },
        "item": {
          "id": "ed9f2d66-a988-47f0-a86b-afca9a03a28e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "81e61acf-5eb9-4ca2-bad0-2acecb2d6abc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}