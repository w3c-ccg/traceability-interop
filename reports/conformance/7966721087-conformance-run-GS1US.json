{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "42aeb131-8881-4a69-a2e9-7c9d434d641d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0186e1f3-639c-49b9-b9cd-8204d1694f7d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2cb7a9d-e20d-46c1-925b-dab592c5513a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bf7fee2a-79b6-48e5-8070-bb5f467bd633"
                }
              }
            ]
          },
          {
            "id": "99068d7a-c5de-4680-88d1-a73c967ca62f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff72a21d-ccac-47db-8002-74ab7ca71210",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "09b452a9-991e-4b3a-9d69-1a9085bb50a8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aa071d12-9ddc-4bb9-a42c-9a628194449a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8c89c06c-83f9-44be-afa9-6275e1f5287e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "150c24a0-12d0-40c3-8886-383957be7e6a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8ddbca6-2d04-4218-adb4-0001f1e4d74a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16eb8cf5-f659-44ee-90ca-d70270920537"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "064c1e2e-7b18-4abc-bd98-dad008e11018",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17684a79-a8db-4436-8422-71834204fd37"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9566a2eb-6b38-4122-890c-7a7d66a603b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52a9a250-c7a9-4827-8937-e00cbdafff64"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d2e9405-d460-45ef-bb7e-49a7c65cf476",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "773958df-d9d1-435b-a425-520300a4de82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "389c200d-785f-4b37-b1c6-edbc56e209f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c02cf403-822d-48c2-a9e9-6eb6e5217e22"
            }
          }
        ]
      },
      {
        "id": "d86f7b85-afc0-4921-9eaf-86f1c1cf8911",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b470b76a-af49-4e0c-8208-b8e2b97c7f3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b5a9486-8ec6-4d73-9c46-afab0f8eebe4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27b0b173-e4c4-4a3a-b0c4-dd5fe37c9247",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3480b3ee-87cb-4d83-9046-725101b7dbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d16fbf70-8569-4b08-ba14-efdbb1c11ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dc4685-a587-4f83-90a6-8e6613c26007",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144b5b1e-83e9-479f-94cd-233856f5bc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf8f2c87-2b02-4ead-aac4-4c7a2849ec5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d48c34-af47-44eb-90d8-426c85ac50d8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340446f9-8c3e-41fa-b6d5-19c9567cdd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4994ef42-0157-4de4-b05b-14fc26d7d81c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96d50312-37ed-4d84-9f0f-f7b21711d6b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88c18aac-2eb1-4795-9e9d-0cf208281301",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fddeda-647f-4e1b-9890-af017d9a771a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32c4770d-7b2e-42db-a4b5-36c117dd4549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e38d83-bfbf-4ec4-8503-a82cd3c4126c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3066c33-2cad-4236-b2e6-7b9d63cbc906"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0fdee315-9ada-4562-9b08-73457874c2ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2715c5b1-dab7-45c4-8417-752dde2457e1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "796295bd-55ba-4344-94b0-51b0cd65ef56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "44a92a60-14b3-4152-b531-accdd8a3aa30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f323505-f38b-492d-a68b-578d5912aaf6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "484025ea-a40d-435a-bf73-83f97fa3ac71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e224a7d9-cad2-43c3-b424-aa7d145dcdb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9df267a2-44ca-4fce-846f-59da40dd1c04"
            }
          }
        ]
      },
      {
        "id": "fdb22cf3-3262-4d21-a5ce-898a9483c222",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f6bbf298-9fa3-4518-b3e8-a947458100fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db9c6abe-084b-47ad-aebf-9cd8671dc7e6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a6276dd7-4c99-4e1f-bb15-cde11593773b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef7d52c-42ec-457d-a442-fe5ca6cd203d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0188f29-61e4-4a98-ab52-26e80346bd38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f40bb2-d689-4cfc-a368-3d74d64a8805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc11be1e-4b24-499f-a670-dfcccffd9453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c338a3a-ebec-4cbf-9536-afb30440a444",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826521a2-0d0f-4833-a7e9-b8cfa85a9c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda16983-c364-4129-b938-a43a95ae0d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50644c59-ae5f-41f3-96d1-013ffc118c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "190e303a-869f-4779-9fca-bb2fce23ff73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8955ff-1198-41e7-b204-6f29e08dc1a7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201ebcfa-69d5-467c-b8f3-4c25cd54ec7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e538be59-7e49-4acf-b15f-42839931b548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c9745c-2fe0-4f67-9d2f-0f92ab527e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "761a8e66-ade4-410c-9285-6d8073657e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88fb3be-a060-49b5-b25e-12c6dd508759",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8570fc3-e2c1-4f6f-9bea-8830d7fd5e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814a5582-f364-48ac-b0c3-d7109db29fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d9d310-840d-4180-bbca-1b74ec03326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fd0341c-c941-4bea-b125-38349af27b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6874f9a4-7728-4de9-9c81-1b3d22aed090",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9106f50-ed13-458b-911f-08cb6084bb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b7735f-e80d-4f79-a59c-934eda573569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0e26e4-410d-4459-bab6-9042670f64ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dedba83a-9b2b-4a6d-a669-7989ee10181a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf6f398-1c6d-4824-9e98-0a62fe1b023a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c862ec9-7ebb-4672-9046-cb9848a8b1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006ef763-2c5e-4076-94a8-b42c4c396a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df5e119-7f54-44c1-a416-f728703439eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7500bf3a-a315-42e8-893c-6012f602cf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e732e3-2056-471d-bead-bfeb1107c82d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e98d271-6eb4-4c8d-a54c-efe9cafe5428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827c64bb-f5d6-4440-be03-cd2a12d45117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e0aa77-778a-4ce7-8fe5-e2e226e845e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27ab2879-6225-4c85-b6e4-6e61e4c6ebb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40da2007-db1e-40eb-8917-e5dad44f152c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4789f4b4-6eb5-4a9f-804c-67f4c36f25ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f354bfc0-1f41-40f0-9351-729c72f9a2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6db140a-d5ac-4d97-9720-35edd7e4d88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de2cb523-5846-44cc-8c7f-6b6f72c9be6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0f4cb4-de28-4def-9d57-09b4750e4e98",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c91e08a-d6bb-4a1a-a30c-5a9d21b2bc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ebd365-a492-4731-82da-ef595802ab68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946a5805-d79d-4cc0-ac32-c25c59e36414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c69f206-0538-42ed-8ffc-e2355640cce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f1ea22-ad59-49ac-b640-3e1264caaecd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3bdecf-1be6-4802-abe2-987e9e07eb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcf5f73-eb42-41cc-ab88-0ac7fda4dfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48274078-5f77-4e88-94d2-4dc361576b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1165b731-08fe-4792-8282-552eaa97d2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd0e437-7f9a-4b17-8ac2-6918c08e0283",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afce3bd-2ad8-4f92-8124-86dd657b2620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18ac28a-b889-43bb-875f-55b4d82808ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b68b9e-be2f-4f6a-8417-875d4e0177ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81b4d6be-827a-4300-9a1c-bed4b4a393a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02cec30-05c3-4e07-87ca-168bb5e6eebb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2b93bb-9f8b-4514-89a2-c097d9422035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dba76c-29f6-4811-85ab-d672a673da8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91725c7f-f6f4-42cb-b370-ca2111ee3938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5709623-c44f-47a9-9599-2679e0f862fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87953f6b-7c60-4b78-bb6e-ff46413fbe83",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12069a48-bb9f-4e05-bb07-b7fa1291fdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1114273a-48d6-4f92-a111-ac2425972fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66313a1b-8d2b-4f7b-8d47-f4fa450fbd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55e4e82e-eef2-4cf8-8f40-e63881ad2fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb8d987-5ac7-43ad-b799-c61947dc562b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5902519f-b791-4fb4-9375-f7c8fe413516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a99f00-9ddb-4a5b-bae4-4b9649c64c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af96eab7-5a89-4773-abd6-7e96ee814934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c539189-ca46-47c8-86bb-9024fbfb8f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b4cfa3-ebe9-4784-8552-e622b4d4d54a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b8042f-e84a-49aa-b9fb-9af8728f4654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f76470d-527a-4273-855a-c2f295b84b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80402ee-6ba2-4fb7-9e3d-6995606a1d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3292947e-fc6d-4ad9-a65d-5395407f51c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d03f50-fe0a-492d-a6f5-09c7750d520e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165364ed-c211-4841-ace4-7a0ac955ac47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660b7ac1-fbeb-4f2d-9d1a-505fd8cdbc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b49ee77-6c31-4e77-8a92-6ee38dbf7931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "046081d2-3c5c-4036-8d45-c305de282e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86efc932-895c-43c2-8226-5a1f5f2fa124",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bba521d-2a30-44c1-8268-9930673f4e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57668d37-c1b3-4ae0-86d8-61414c9e9f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565be85e-daaa-4372-8636-8622f9a58073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10fd7fb3-a2fc-46d5-98bc-831553dba27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886fabb7-180d-4b7f-bc71-b514be9e946a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44df7199-9eed-43d3-8a96-3052860f1a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf44af2-3209-4493-a9a6-875029c75707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3af2fe-e1a1-477b-b2e4-d7df3145819d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "986b4f02-752c-47b9-9435-0cd3ef179aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de381c75-4604-4008-b1a6-a36fce0d8c3a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896e5e63-5220-4705-93a3-e0e19c9cce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1e9820-e8da-4920-8895-4181eebfb5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167e52a2-ed20-4d97-b0f3-063fc6435747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3932869-657c-435c-8fc1-ed4980d82b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b81cc2c-e6e0-48a8-ae26-fbf33ecbe621",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83dca65-8935-4dd4-9bcd-3babe40acc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec483411-90ec-41b5-b686-6f67852435d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dd8eb5-e965-4aba-9425-cf1549533a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4bb1b3-b928-4560-b312-409c50b87918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c183b15-e658-4160-bea8-b59db25aab7f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63c887c-778d-4300-a67b-4201b9b937ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1b8c13-f242-4d59-828f-0bed52376af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578f9838-7f61-4678-a785-f20ff56d7fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe117320-15e9-4d5d-b76e-26178c0c8612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe93bea-6784-4375-a0d9-c02618df919c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5725a0b6-f761-42aa-a8c6-00c8da7c44e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2044b5ed-283c-45f2-9939-aec6b336106e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee96eea-b727-48f8-979b-5a61023f5a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe71e7a-575e-43c1-9fd9-a6ddd18818c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823fe00a-61db-4766-89da-e5d5e79edc25",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b9ba16-60d1-4d59-a36e-eb16bfd5e59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae5a9b5-4a8f-4af9-b77f-92076a33d5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9af694-e081-4665-bf3b-cd91cfc0234b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "679dda8f-e6f2-47f0-92f2-0cc18dca6268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3bbbba-27f7-412c-80a3-c54135153ffd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071bd72e-1bd8-4117-aff5-1ceb9400ced2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f512d2-2c9d-4daf-8220-2667a0e3c96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9949531-c74b-4c51-ae36-3b8cea58c9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f136fa-9f00-4269-a05c-26e0150641d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151d1ef7-bfd1-459f-b349-c493ba36c244",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376bc950-99ed-4835-ab4d-d09723b6f462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2c6baa-f737-43a3-9e50-c178593d65dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6990710f-5e92-4406-af91-7464c61075b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc79f1e-ce5b-4016-8de5-fa4adfded614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7239ab58-fe74-4810-8387-371e3be4f24d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1164abd3-5bf6-47c3-af95-77b80f2277d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaf8cfa-c840-46bf-9d40-e3bf3ecc12eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e246aa2-4d26-4b5e-8699-c368f332bf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d019f618-45c4-48f5-8de1-27f50aca6e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbe19ec-88ce-400d-b93d-d0d33204784c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b0b695-4cfa-4c28-bf72-a21ba4d61d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1e42b8-05ae-425a-bc2f-2f6090c727ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a256a4-2b8f-47c0-bc38-4ee2815c19ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade5da35-959a-4044-a485-8426ae420a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417eb45a-cd34-4c05-b46f-bef5d2a677c0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f5245e-03d1-4f73-98e9-829d6175e4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d1a64b-c531-4005-9f69-59765602e5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708f676c-a575-4bab-9f44-21069bd096a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "637912f9-6590-4f1b-a6f1-5441f09060a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e366e5a-d633-4fa1-a84c-799439102dbe",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1259b15a-07f9-43bb-870a-cb5148f80bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43357266-7692-4122-a7a8-2dddf58cda6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8779d0b-2804-4637-9a2d-4a3a55c02b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a90277-53a2-41d4-9b08-0a421bfaf023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9256436c-c2a3-4d80-80dc-44c9e47a6736",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd67e98-007d-4405-9eae-fc63247593e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5c2e79-d866-420e-ac92-71c3abc8e5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f5b16c-17bb-42f6-8564-bc80fcc80356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cc8002-4c04-4caf-815d-182b32653ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540745c2-80c4-417a-9698-5e048cddf330",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fcbbc6-b0ad-4a9d-8771-6af98aea9f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6af1f9f-c731-49f1-a5e9-0239617b785e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3cee89-b048-4248-91d0-9ea5c411e168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f53f97e-b6b3-49ec-bb48-eb227d8f0ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09236c8-4df8-49a9-bf7f-4c7977cd47db",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6e57c3-6f88-4d52-80ee-3557d8805bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7917f642-0d87-47a0-b7a8-9bae8787199a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e278acc0-1e38-4576-941e-28257572f178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdab5ae-fac8-40a5-b67b-56ef752876db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d0d689-02c6-4b69-b9fd-940d2a5659ff",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8a2d05-2ab4-416d-808f-ee29506e7912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40941597-7ad9-4245-8116-7811be88dfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47001f0-eb2b-4869-abef-54949dd7e7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c71299fd-d64e-49c4-81ef-c992a7be7583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1aa1c1-a99d-4346-bd27-d316df677fb1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a02671d-198f-4d6e-a868-ed0a7d23ca92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb3993d-a028-4aec-95ed-5c9fc14cbad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a79572-fbef-475c-bcc5-b6f4601e2974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0270e240-503b-4461-8643-8822c4780f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b41ac38-a76f-4087-a708-772a35959c04",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809491de-e64a-4ae7-9174-1ce76fd9dc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631145d8-9cf9-49d7-aa79-e260ce684eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677e88d3-3bcc-4112-81d7-65b1d2ce34bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3491b393-9084-44e6-86fc-4f67a1966dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300a46a8-d630-4f1c-8d87-ec3b7b8d45c5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7422ca95-0e4f-4bcc-8b5a-9af24e7b62b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bebb7f9-b799-457f-834f-648e622c5482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de56656-1ef7-417c-a516-b9435a0989ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8bdccd-169a-458d-a13f-65d7ec5a9742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2124eb-1c1c-4b02-befd-af40132f3af4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70f6800-af65-4157-9174-4b3a5774584a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca37d7f-f564-425e-a09b-af2d4b0f05de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfd15f6-3bee-44f8-b324-641d14946e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de28dcd5-f06a-4f0e-a7bf-6fdb9bd073bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cf11b2-7f93-4eae-a06d-cd739f03943b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbbb38a-f5ef-4590-a853-7cdfca65463f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bc084a-2d66-45a1-a124-30afc1823d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24376a32-0b05-4ddf-b6c2-7232bb76246e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d51f170-709f-4b6f-9cfc-b4a3ce44322d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03062b2-424d-4ae9-8dcb-e58aab4577e5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c295c7ac-94e1-4aed-889a-6f184b9771ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52636d61-0618-4e8c-a4fa-1380dc8c060d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9905451-9e36-4b98-8a71-780aee65efd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89b451d1-5ee1-4a9f-b21c-88335b4a7a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d660c0-d2ee-40f7-9e18-5cb4d448190b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5be54a-b816-4695-924a-34f7155a61e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b762f3-0eee-4948-96bb-fc5d07938bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405072c9-aa4a-49ab-b771-7605fcd0dd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd996a78-fe2f-4a26-bc6c-3e4b7c384fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2e174d-f467-4349-a520-fd99053013fb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cd0f0b-56df-47b7-b06e-45999a78b54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2afb7b0-aaf5-45ae-aef9-4c1da6fd1d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04284d3d-ffa0-4ffd-a39c-1d816cb83fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdace13b-f855-4b08-a0d2-8ad8faa38436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078aa3ed-a019-4d11-9627-c378b97e9ff4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee6dc8a-fbe2-49ae-aa4c-a3e7f977531b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc88398-f6d1-4d1d-86ff-623a67d5327b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64645821-b4c7-4cd5-bf43-5dd150e28159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "19528f03-d91f-475c-a33c-02b048f1cba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a07e3d7-61a1-49c0-809c-f2ca6c11aa79",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1e019a-6e74-45b1-b5f0-7688aa2908f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9520c160-91a0-4389-b2ab-8d97a70ec4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845eaefc-061b-41cb-8006-88304c8de158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4870714-2016-4a5a-a64b-89cf1e8480b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5def7d-00c7-4584-bbb9-2c9590cd9f05",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f16b4d0-1fa4-4606-83c5-10f154d240d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c9e4a3-2672-4dcf-a6c4-6fa60e16db6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e575f9b-07c7-44bd-82a7-1d0bad5f2548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8716325b-1b24-4a9c-8b8a-5f9bb5d35895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59332ad-c548-499b-b9c5-22fa7b8d9185",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca179ee-9c24-42b5-a4bd-c10dc071063f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8893d60b-00c7-45ca-8b41-91401876eadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb74ef92-b94a-4c32-bd8d-70ab44f93285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "88bbbfba-13c8-42f4-bc8a-e7d16cfb0de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed4f7ef-96f2-4de7-9a16-cead2f4539e9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62859142-b6a7-4c44-93dd-987e535273d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e55a8f2-635d-4e31-b0dd-b0ee2f8226e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5678abc6-0e8b-49b6-b038-b2f7ce3eec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20db36cf-688b-4cce-b90a-1a45cdf12b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b7afa6-676f-4110-8309-7b2f6b5b0529",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5ebba6-bbaf-47d9-bed2-c454573c1d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7185ba74-b46f-4c3f-94fd-f755f7b4a85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4bd667-3702-423a-bc4c-6d3b185dad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aefe998a-6d83-4931-8139-651428b01176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e260f5-2abb-45fd-8b00-778fb09fb3b5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a936d4-644c-4845-9689-f2b03370def5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0d1821-c332-4c6b-93ae-f2a3e25019f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99891f1-160f-465e-81f4-b044cb3e4b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4e18f2-2ccb-471e-b27b-fef5a6955514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d3991b-3ca1-421a-9bae-ed0df53318c3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85da4985-076a-4e1e-89c7-15161db8a4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46e80c0-1688-46e4-9eea-d29c5083c53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba70286c-4a64-4e97-9a85-f5cc54f68a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ef6b6c-8495-4e16-8cda-7bb390f81601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692cc183-492e-4437-bc81-9540cf9caa67",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f7283c-d9aa-4ad9-923b-067025ff4f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555dd2f7-1021-4aaa-97a2-204e88815c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb8f3ee-1a59-45a7-9e13-871d3b8431b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c96e70-d5d6-4e44-976c-eb7cefd96b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5fe9b4-5db1-4546-94c1-233fa09e3eab",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fea106a-81d5-4fd3-9c5c-b1068ec10129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc8b970-e845-480c-b50f-caafda6815bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945ad19f-d463-4769-bf17-cd5f8f7375c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c56fe7-9286-4a5e-80a1-30848594ae56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdcc544-e421-41c1-bb91-1c29d299f31c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8042fe-bdf0-44e6-9bf3-02e28feb8cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665b52c0-ba2e-45f1-b6b1-5793932a1d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c38db0-fe68-40b5-a231-c14c241a166a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "271a789e-e11f-47ce-bf9e-6178d9efeb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4747d6af-3c0e-43c1-ba4f-3abe8c9361b7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0f6809-b91d-42da-bb9b-8d7ba87941a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4754ae-6127-4d65-8b60-6fb05264b851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dd9f22-2396-46f3-b144-4bef48b82fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61230659-6fc9-4498-93b5-97ca1b8e2631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a2c972-6361-499c-aec5-866076ed8e90",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73559df6-3a7a-40e5-87ba-7f7d3de16dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88710d21-ced7-4783-a1bd-3947c1265f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0173ee57-8fcd-4f01-b198-76fa63261b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f662523-da6d-45ad-b575-dd1ebfdda240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a4ddee-6548-4d85-aee4-27672e351195",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5f10d6-d243-44e9-925a-de14ad98a3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6674f212-6ffb-485d-b69f-cc468e546ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc769ee-c0c6-480a-9ce1-9f7efbd8c676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cef63ba7-9499-4639-ade7-a4236b64375d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e637e04-8830-47b6-9e49-39075ded0239",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7259430b-08cc-4456-a9d6-dfa6c1e5b3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4178994b-701b-4a36-9943-0e5a61bfcee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec86f3b5-bc7e-4c0d-8e97-4a92653d34ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5a985e23-09e1-4cc9-8036-4aba6ce6de22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e6f9e3-f691-4cb6-817b-6d19f83a5939",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f277f10-8640-4b33-832c-3a78974fbc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0535259-988a-46f5-94e0-11091b608a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bae151e-8ca4-4fc7-80c8-3c5d5eda1371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1d2da7-57ff-4a30-ab71-a5a9c3eb6a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e365336d-ba54-4b52-85cb-692bc62b68df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148840fc-048e-4487-8c63-1d36e461e05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b43ae4-5e7f-43a1-b82c-b057ae6c79b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad39c9dd-2add-4e7c-91f2-b957ec46aa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa2b6ab-2f9d-4ea9-b841-ed791b25e858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb9b0fb-91a3-4d23-b273-e32610ac05cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce1e7ca-689d-4ff0-86d9-02e68356ce7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453f38bc-ef3f-4349-a029-1946825ccec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c995af2c-bc6d-4561-b395-ddcd1579fd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a2bd8f-2f02-449b-a731-b68354daf9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fb4c1a-5442-427f-a69f-74d0e4b76634",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3075b40-b8e5-456b-86a6-25c13312aa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438c48ed-c8bf-41bc-8fa8-8931c31ccd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e278f7-ecf0-46ce-9ade-0774045c15bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1404e15-57cf-4ba5-bcf0-9deed3798adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc930fd6-9471-4e5d-9fa1-05a49e56cc4c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2f05ec-991d-4c02-95b4-4af430494543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea77c06c-6816-4d1c-ac26-93adbc7b77cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbbaa81-b579-4ee0-9604-1c95b133766e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "68cf2e2e-3c6f-4b55-8687-b77dda5c564d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b45c38-660b-4f8b-be6d-6d3e4dc31e3e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad6fb63-9789-4f08-85fd-09f4fc79a3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a2a44f-6e26-4497-87d7-9019b91f554a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a40f2f2-d57c-41d2-a8bb-53e25ef4cac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e493e0-7b10-4ce5-8574-2a49c1848f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4f90b3-bd11-4490-a75c-12fefe25a4dc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5789c1ec-e723-4a26-bdc8-d070218ac7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9566c5b3-c140-4f04-8dac-033f3145b063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b2f9ef-b6d9-470b-8edc-ba04d3faa85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "34160240-c9b0-42a6-be05-0a999bf4e508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260a8b82-ca95-4ea7-8d31-985442f10224",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22996d4f-816b-41d6-aaa7-38ad523e075f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7679be-7b1c-4058-bb2b-55f387e161e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd83a00-95ba-4fdb-9617-d4783d441c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f38894b-6a85-4039-9129-282d3cd851f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccb99e3-8c86-448f-aa50-b663a69fa143",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5599b01c-e6e3-4b75-91cc-0a388d8e89eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc58bede-9627-4f1e-b09a-fa1c59ece78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e8b132-9a58-488e-8332-197ade1bd1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8a2a72-29d0-4cc0-8c31-7082e899fdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfebb372-2719-4837-82d8-4621bfadfafd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a3d2c6-7b95-4dd3-a29e-9212bf5bebd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cdc8f6-3944-4e73-93a8-64195123492b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f45467a-9e37-4c3c-acfa-5fb961e11252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e92b635-3a19-467e-a050-9de57bd9af59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e8af71-f7a4-4306-93de-3d99789266bc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b8e981-dc4c-4ce7-a09d-40c8c1121140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ce2455-4338-4942-b9ab-ced88a27da9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b683e7-faaf-4396-941e-6ebc5d559cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "710e85d0-f9f0-4e64-9769-beeb045be7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed30217-25d8-4c62-8efe-7573c102b817",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f464b8-72e9-43d6-9335-41b7745da9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd35a6e-5e64-4e8b-bf9a-ac566f25187e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde75bd0-8226-45fc-9424-c3af7bac2881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c30db43f-2c29-4b56-bb00-982b0316cded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffb522f-32d5-4d19-9b88-ba3e1ca6519f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f85afc-c28c-4776-8748-463435afc6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40b9437-fad4-4325-9f11-17628c0a0889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9f0bee-9666-4915-bd4f-501c3014b111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8546b459-7dc8-42a7-b266-5fe9e601ddaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b723d7-bcb2-46b8-8131-7ae650ffc7c1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f847408-a0e3-4745-992e-8fad8e549389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6641f377-e7fd-4f57-949e-2885edefb89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64c0bd7-95ad-4563-b053-521ebb1e097f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8453dddc-47eb-4325-908e-f1620e33a768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6f2c90-dd45-42ce-98fa-9997a88f7e0d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce210c7a-9eae-4765-8615-be10aaf5b5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75ac265-3e3b-4029-bee5-daa6b6ba4b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3b2b72-8a06-4fe8-881b-d8854fb2fd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9d59fa-6fb9-4090-97a9-ce8a38d54592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a42aa5a-d49a-4dd1-91d4-3da399c63e16",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38475f27-222b-4801-af67-9f5f5ce5ccaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d3fdaa-e81b-45b2-9773-744c7cae581b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47fa909-7e59-4f28-b844-00ee8a18a0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaef3d90-7c35-4923-bc81-a50c7684175d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86de6c71-b5d3-45fc-8cd0-a6e467c70501",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7456789d-92a2-4fda-a58a-1866391823c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49b8384-dca0-46f5-b9e4-040e4a7947e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19021cca-652f-46c7-afd3-08f753b82975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6442b152-5250-4eaf-a876-ae11ea122178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3453c834-2c0d-4301-9245-b896893fb985",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7915962d-cc30-4b88-9d36-9aa734899246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6c8f1d-3e56-4bc4-8a5c-846c158e3c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d196fa5-e0c9-4d06-80a9-53d2a52fe706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a76ecc-e33a-4da9-9072-5940db67867f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c7ff2f-1cc6-4fa5-9779-fd7d399a8184",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be67644a-096d-41d0-8f54-521fbfe78d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7b3ebd-cd60-47a6-8d83-3db85d5ee890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30766c64-6c4e-41c4-8fe3-cc24210ef095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e31782c-2080-48a3-a349-30d57b213e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb15948-ca56-46aa-94ff-7ee9e8ad8254",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a438eb-4090-4c42-b116-0c69ae2e206d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c876eb1-0882-4c08-a0ee-e00e6c2fdcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a93a09-4dc4-4c0b-a7d5-39998e7d4222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b55b3e-1fba-4e6a-9ccd-c37202dea14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31416226-494b-436c-8db9-01b5b029639a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ae1c5b-26c2-4294-b299-ab2d433aaa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce47d553-2174-4324-9bf8-8fbe0570571d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873c67e4-c1fc-4618-b7ae-3313b7065530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07dd0f14-299b-45a1-bb2c-f5d6d490a209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04aea6ec-c3e4-432b-af6b-cfc7d10ab2bb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1ee9d9-2000-424d-9d1b-292520d5b156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b981ac-95ea-4977-b86c-85bc4fd4bbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf62fe7-27f5-44fb-96b4-d9173de90167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff776b7-dba0-4fca-b2a0-e1fca386429a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c5f30f-c3b8-4528-98b5-04e5b56d788d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6f3d9d-c61e-4fab-a4de-8025248fb022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686b6196-6dac-447a-858e-c5fa9401f78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244fa23f-e1de-42a0-a282-6503f9d998c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "737f0fa2-e1ae-48fb-96cb-2afce1b216f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e2609c-aaf6-48a1-a1af-0b93dd1d2488",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a02f98b-d2db-40a4-bfed-a5d013e21993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfaa122-5fe5-43a1-8265-52fdeac3069b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79904755-a28b-4fc5-b4b1-155789a3870b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0f8897-96e3-4783-9738-504096c49748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f87e16-2848-451a-9d8a-f721f8fcc0fd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdb11ae-c732-4f96-86c3-c8b8fe3028b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82195d9d-ea1c-46b7-82b5-3aaf102decff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd3e371-0593-47a9-8aea-65f6fa19e4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2abcf396-4aa2-4150-b12f-848dfc3c2960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c93fa9e-919a-41bc-8577-bf1c76e0fd8b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7716bf-c6f4-45e7-8b3d-aefe5f252662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51a4296-7276-4ac6-9cbd-a04c5e4c7dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa1b6ac-fccf-4ba5-a069-dfd2ae64fbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "478ffa7d-168d-4382-b1fb-76e84a570dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32ba6b5-f0cb-4b97-a3a5-692f5fd4338d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50d94b7-23ca-4547-b9e7-6f336bd07cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13006386-80f4-40eb-b7a6-40e63db19de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97c72df-ad49-48b4-9011-c1de89054f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9127d1-83ef-4f82-b138-e5e93c04a655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c847db13-b5f4-4404-91f9-c676c0a29e6d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a8333a-b398-4d90-abc6-e4739e3a3d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ee6bdb-0ef5-412f-838e-f192b59902d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e85317-5be4-41fe-af2b-1f9e794845c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87ccfeaa-b255-4513-a8ea-02d05cbce4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df80d69-5f96-4906-b7ef-4741f4c73636",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c805b78e-3f81-4c4f-af0e-f6c3543568b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c820383e-e24d-4e83-8f13-d4125bffcbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8891562e-ec77-4c54-ab4f-4b361c1a9173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95e07f51-4244-4a6c-b7d8-5cd9ed0a6350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e63e0e-197b-450c-a027-921706d59d73",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e44198-41c5-47b4-bae9-01ee0328f1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c65ecc7-14ed-45d1-b313-7e9d96c9d4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17466f1-252f-45bc-ad4c-2cdf19178039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "102153b9-2349-4f1d-857e-dd9d1d99527e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21de4110-1aa5-4475-861c-26a67c56da91",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f51e21-18ed-4303-af9e-00c0ca8f98d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4caed22-f91e-4fe9-9e91-390b36e09a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcb161e-2a67-48e8-a410-2f33dd9ea482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1b9816-149a-4def-a40f-bcc1a064c28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cadd4f4-cf41-4f64-9df7-f3d5e71d08d0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5a05a8-1d36-4362-8758-cffbea97bcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae3e69c-dcd8-49d7-864d-d6a4b270e3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b27bf-94fb-443d-9101-cc20ed36b4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3792b4-60a4-410c-8c5f-fe42a65306bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372379ae-44ca-4e76-be94-2ba9796ae9a2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd1d0e5-d861-420e-aed9-f3702f86011a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d89c6d6-3875-42ec-955b-778e747bccb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13accf1-fb3d-44bb-a1e2-c731d8fe8449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd69b0b3-b15f-46e7-91cb-f904bd8cecb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b818e400-9af6-4014-927a-2a487ce9b9a7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f5ec6b-2190-432e-ab4c-6e899a1e42d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae7fa38-7bc4-4914-a935-d0690f81c0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527311fd-7e7c-42dd-b0a1-c4b93ba12e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab18e509-9118-46fa-b227-913bcd679967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f609c90-87b6-4c84-8979-db7aad003b49",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabdfce5-ba6f-4e4b-bbe1-2b6c727271ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6f39ba-f0d8-4a93-ae2d-131cd81270f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b095cbbe-c798-4ce6-874b-e423c6b073f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7197c5c0-f8a9-4a30-9827-cf3485749771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505b90e4-7331-4211-ab21-8ec5289146ff",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5bc838-a1d2-4868-b9b6-4e49ae191abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e6692471-9ca5-43a6-8500-c35850583514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871d72a7-7d69-40f8-83fc-37f3e36442dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "10feae5c-4303-4eba-ab81-282d3b01ad45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "614f298c-392b-446a-9cf6-8f354c08a5f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e87166c-01b5-4a03-81c1-af45f83ebcd2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b097a6b9-7556-4a7f-9629-a25486305a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f77d5bd-76ad-4b28-97b2-6b5ead8156eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb1903f-a8be-4958-8526-6e0e0e353546",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21af0348-ef67-4d2f-9458-6607efd93a38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08f37e7d-60cc-4b62-8c06-bca185d16d81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a594a65-9ef2-4f33-8f97-b9ec74232525"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "700b9671-fc34-4f27-9433-d60ced47e871",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10d5464f-6670-4883-aa8d-fc430c6b4724"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cddcbefd-b61e-4018-aaf6-7c52dba162a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3ed253a-4985-437c-a922-686cec0236f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d2e3024-2251-4438-b66a-5f3b160580f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74364de9-179c-4aaa-b27f-ca93db540e70"
                }
              }
            ]
          },
          {
            "id": "0dad27f5-4f47-4f74-98cd-ae42331b63bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "419ff5bb-875e-4ce8-816e-f6aeffe0e8cb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a43062ec-3aff-4125-b89d-4d6d856a39dc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c18a45a-7b89-497f-be0e-8d9bae70dcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9821579d-6e19-4097-9824-2d302325595f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4c0a83-61e1-4eb0-a53d-0ae329caedfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d506d7-5376-48cd-bd9d-f45b0e6845b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8dceab48-b9bd-4966-a98e-09ccc71a87f5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e30383f-a2a6-4e97-9fe9-eb7dce194494",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6f97d3f-f602-41e5-9c3b-5b16da6cbe18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cee27019-596d-4249-bcaa-07a84b64ec42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72c5b14e-154c-414c-a21f-998a04ff8d46"
                    }
                  }
                ]
              },
              {
                "id": "44dce930-6f8f-44dd-8d33-c96cfee96e11",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bce14d3-feab-45f3-86d2-fe044347659e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0471d801-8bf7-4ad1-b5d5-d9a2f733b351"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39d7864c-cdd3-4561-9f45-a851086bf8db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23fc4ae3-2b70-4b0f-9d2d-989f1f7e32a0"
                    }
                  }
                ]
              },
              {
                "id": "cb4a0c9d-4437-49c8-80fa-c2cb28bfd342",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83585204-18b0-4710-8a82-01e41ca45c2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8296806-0a87-4889-ab93-b49631f417c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec1bc574-b782-458f-b2e5-e3dfa15caee1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "daf1bd02-5b68-4b88-aea9-7febaa87c505"
                    }
                  }
                ]
              },
              {
                "id": "5bdb8a70-8a01-434a-a848-f05f95d564d2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa325003-578d-4d71-859a-65fe61d0656f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0a0e002-0c60-4a32-8d3e-e3cd53cc9fed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaf220f0-2891-4f45-8858-641d81f7e9bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8dd2d7f8-b610-41bb-8df1-79026d913042"
                    }
                  }
                ]
              },
              {
                "id": "8a92ae50-9c5a-4f00-8211-c25f3e86a454",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5eb007b-4227-41ba-a3bf-faa96cbb5319",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e07094f2-3e43-480e-b307-2f10bbd9ce6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c29cf38b-619a-467d-a90e-b3b86f696558",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "28ce4952-aeb3-40fc-8e41-fb0054e3c44c"
                    }
                  }
                ]
              },
              {
                "id": "416f71f4-b3a1-4a5b-a13d-61f6fcc46d8c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38c829c6-bec2-4829-bc38-22a9f0e9df2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edd8025c-abd6-478a-a57a-758ca93aad94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ea57f4d-3cdf-4f06-8df0-312378c95f85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e25e66d9-570a-4190-9e5c-b7e9da85303d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c52ef4b-df1a-4176-80e0-1c197b97ee71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a06942bc-76ad-4ae3-8ec2-7b5001369213"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51adddf3-b084-44af-964b-fbea5a49d0f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1e25b49-e7f0-49db-a220-9769277e502a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "814d95f9-0dc7-4619-8ddb-de6e6ddf6c73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "764e59d5-0ab8-47fa-a216-fa6e11fe5696"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12253136-42ff-49e3-9dad-32aeb3d6f1a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d90d413b-b4e8-4a67-9465-2ea98cd528de"
            }
          }
        ]
      },
      {
        "id": "53da4f54-d30c-4a0b-8912-d22370a8d363",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "437b4642-bd7e-4f79-bcd6-ea5b65f2cd39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6975e64-429f-4361-905c-9819255177cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b3acafa9-c5cb-4968-91cd-db4707ddb6b5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db607012-f5c8-44d5-bbb8-821746473a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90d4d4b-e9a2-4fb1-a0dd-3013ead80605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ea10a8-ac5a-4717-995b-158c42967244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b46bef-e210-41a3-8f5c-35d16fc01a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe73bcd-c8b2-4c96-b36f-a5124584e92b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b032973-9551-4098-a180-55a04df72512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8b85e8-f20f-433a-a7d1-f7fdb2b63d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aed6be-6fa3-41fe-9661-1dcdd7476d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01cd2cc6-ece6-46c9-b91f-bc75d695d6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b23cad-1f36-4e69-9b44-faedd05021a3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e4cce0-0911-4084-9da2-cf3dc68c3b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6365fc7e-0314-4229-8ddd-2314b3ad7833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36deefef-1010-4fa5-8525-0410c3dcc8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66fb1e5f-ec85-4b43-a165-9239b4f11259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252327d8-f1d5-4e8a-9cee-3f54662ff61d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ecf648-7281-4ed2-aefb-8ee0497d10a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2f9127-ffa3-4dfd-8c7d-8fef4f830f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5b9cb1-967e-45bb-b416-3bcaad27c6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c892a07e-3595-4aa4-a2c6-cedc766cd70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01561396-45f2-4192-a17a-401babec4749",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47755ad4-ffae-4a31-8782-720bd208ccb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98f78d8-9048-44b5-a5b3-8ba7ccfc4f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742aff84-3ad7-40ff-8dcb-07590697a070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97157293-8ae0-4037-8037-6999edc98509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31caaeb0-a180-43c6-89e1-98b8b57840b5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53add60c-c98e-4513-8328-43341fea7479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ed621f-ff5c-42c5-bc5b-401ad71e13e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8fa001-3188-41d9-b837-65b4bbd6f293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d281382-40e8-494b-96cd-cd843e097893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b41e2a1-62fb-4c90-bbf2-3bcbeb3836c0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401c4ff6-1b73-4acb-9077-4364824d911d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff09ada-c128-4c1e-8bfd-d4b68160cfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d669ecea-99ca-4377-963d-11f986ffcfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "83332f42-fe83-4557-8e80-4587797b0f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e60b563-3b99-4bd5-940e-501ef5cce3a5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4c41d3-f653-4d52-850d-90a40f1b0596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c003fe5e-3569-485f-8739-8e8bf2aabe92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03239a85-4f79-42f7-bf6a-ced8813ac51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "170a2d88-9f18-4f8a-8eda-5db2ccc874d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ab846c-598e-465a-892c-be77993f8a9f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9454a837-143e-45ca-ba62-c03046e5bfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ef1549-26ca-4239-8ac5-4a4b8c15899b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60324e16-5cd9-4067-a1c3-9aa894a6e8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a037da5-eb0d-427b-92c6-d6f65f70908f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b6b0f6-2432-4131-9333-f4f7355f5414",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce068ef-556b-4090-a32a-be9b697c4a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fabd90a4-737a-4c98-835b-7c775638a25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b154da-aad9-4e63-b96d-39c28ae8e1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d37575-2146-42ef-983e-60b59b096576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae096f73-121c-4789-9065-3ee161f3ed88",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e425f62d-00d6-44bb-8be2-0cd0111f0aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ae7de7-15a3-4472-a7ea-c35b005544c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731d073f-58c4-47c4-953b-a547c5a66efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e4522de9-2031-468a-a754-51c8e79b6603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724e76da-35b7-46c8-92eb-46ae76cbee86",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ff1242-429f-410e-94df-39c77aa367d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8475075-86ea-4f0f-bf8a-9b3baecfd8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5486ef-8d6e-4227-ac18-af8ee9c2b619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd4431e-a28f-4d7d-8d3b-2799afffa825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b7569b-1f49-4eda-afc2-8b4687099caa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cee89f-f338-4ea2-a316-6f212e1f79df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357cc34f-2811-4511-b964-28030deef21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803057ba-d9e6-41f3-b0dc-83ffdc31de18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f53ae99-fe60-48b1-a492-5d0f9dcba9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea873294-9850-42b5-91a8-6bd335d9a87b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3142b6e0-7314-4df4-b437-ca8c652596d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce505f8-d8c7-4958-8b8c-28bed3b406c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ff712e-575d-44c5-a93f-3e5f5bed2dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0415c305-4e56-4437-b046-4427eb68fd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850b2ad3-f9b9-46e7-b276-07f16c814152",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58158104-7ca7-44bb-91dd-a76c79f2c6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fab3b5-0c4c-4b80-a928-a0fd65b2c232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99aed79f-c5ed-4df1-83d2-292ff4d26229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb040476-e155-4533-a29b-ee2aa6dd35b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568bbe5f-7fcc-490b-b523-f3cfa3fb6d82",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94334f30-8913-4c39-a4cd-0056cea2046f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca812db-9eab-4097-b8d6-447ad50b1343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15df13e3-7ee4-4d4b-81b5-485ef0167fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b958fd0-90db-4aaa-98c7-7754ec202af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2ce242-d0b8-4b5d-b44d-43be10f5b962",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadcdeba-746b-4025-94a6-6be03c8404da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5112d0-9bd0-4732-bb81-7474840b04dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7681444d-b5fa-4e06-92a6-17b8b3f00b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "07b560e0-26e2-4ce4-9c09-8a951687d4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f230049-6d98-41ae-bd8b-cdde44028dcf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a1f80c-8992-443d-a7e9-8ba7d5d2b8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9813ea-f903-4180-8ad0-fe0b9824e2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ae72a6-fbbf-4f8b-957e-dbc2674d9b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a691c5e-c6a5-432d-800c-350a7bc8ca2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ac5040-9139-4dc7-96a4-0732969d2e21",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806747ed-6a64-4f24-a463-cf355592d6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33435c62-7806-46a4-a112-a2f220f3f918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6607a8-6227-4650-8991-3a0e1e015306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6422dec0-d02f-4ad6-a8cc-d144f41e8c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fd102a-8e8e-496f-8e5c-6e18e79c4187",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d314bba-7d84-40e4-a4e8-137e76a90f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41f37fd-0212-4363-b79a-010212994813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb4eeb4-a1f8-48ff-9d9f-a5259ff29a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a34c2d76-1fdc-4349-b3d9-4f84c9bfdf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afcebe3-999d-459a-b0a0-82a4ca54aab1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ab65e9-467b-40ae-b77a-d192b5172eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086db0d6-73fe-4f14-8fab-8a9f55adb745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b224f3a-f47f-47f1-a699-e8c202449635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2eb671-0953-4c73-8a10-347b5acc8f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e2b223-dfe1-4976-99ee-67e462a11f89",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd70ccc-f80c-44a1-bfa8-80a09d014e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4541f3-a9b9-4621-b407-6d6b4e8ae7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f9bdaf-580a-4f5a-b7c5-71b74cadd8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ed30d3-f546-47dc-af16-008c708decc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055ba55c-9f35-45db-9858-c1fbfdb0cf34",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0c9af9-5f3c-4fdb-8687-d926955c0b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeced9f4-6e5a-461d-9708-6d8edcd04104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ce477d-eab6-4fb7-8bd4-c4f0268cce99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ae16f8-bae3-4831-baa7-ad5b8002cded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52cc01e-e012-4022-a471-7d681b4ace72",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb06c45-4beb-417f-85ce-c6c07ebdca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c93318f-1936-4d15-a303-d07b062b6635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ba4553-384b-4136-b326-e035d647e6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e4f0a3-0705-4f9b-bc54-f6431e3b8846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b647ec0-bba6-4d71-9bf0-420a9212ee45",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f1891f-9260-4fca-b232-1d59f54169a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3745da4d-8cd5-4c91-893e-23874608f854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96935737-bd0e-487c-8a62-00fb7cba8fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c0f25c-9d5f-4d4e-82d9-2c5dc6a7dd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a308b5-3054-4a96-8cdd-d4db4599457b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ca9b0a-3a89-4418-bc15-27eb4fd66af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150a6f67-8134-41a0-a89b-c91c9222978d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0b45d0-03a0-4e80-a478-3263e36f8caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e329b220-b53c-4060-9208-293361d0a684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9417330-4b22-43ce-a835-03a1520861c1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d2421a-c37f-413d-bb65-ba5e78fae7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98ed500-0b89-43ed-9aca-b032e198dc15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf759d6-9cfa-4647-aad2-a0c441901c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f49c569-7f5e-4236-bd79-765fb85d0eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a36923-b144-475b-8ecf-58932b65dab7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c702b449-b134-465b-bcb8-888b39824fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ca3fee-1b27-4d6a-8017-dfb87e295c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb591bd6-fc51-4cbb-bedd-b03b6e955f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f2db31-ee68-4b9a-8f8b-3694b4f76894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82155ea-436f-4ed5-8e62-aebc5ca43b40",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becec3e4-41ae-4412-afdd-0983933d0ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ebb4c5-98c1-4c60-8a4e-c5ea8d461498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c3eed1-9fb9-4fa8-9dc0-84197bffc854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b242ab-b321-450b-a704-24bf5d802c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a5cebd-adf1-4a70-b83e-5c07a3c5cc39",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5630eb-7e2a-4c4d-af91-519dea283e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e1d2c7-88d3-42d2-8729-630a3f51b2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c94935-34eb-4681-970c-34570e4b553f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41cb3d83-cf80-40f1-bd9f-34bf1ebd88f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f308df4-7ff5-49bc-935f-b62870d2bba8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bab742-bf0d-4406-83df-f94316078990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118684d3-110a-4a79-947e-4e6db296940e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75868a4a-7541-4411-970f-7231472f39f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25dc40e9-4507-4f9f-ba31-1557f7f383ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb46f60-07d0-4ab5-bd8c-99262c9e6bc3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d3afb0-b3f0-40d0-af18-67fe68d48f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f26ec3d-5335-4b54-a02c-e942b85acffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b06007e-1a6b-42df-8b4e-80dcc4052b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "385c98d7-419e-45ab-bb55-562525f76428"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e0bd093-2355-4c94-b87d-7a245d325c7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c033dad-ca53-4234-9788-671cc1e761aa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b838c8-ec5e-43a6-88a1-371a4279c3a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb70470-a874-4931-8d4f-91c4f1b1cb31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dac5e20-0f2a-4639-a2fb-7cf9e77ffce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b7a473e-ffd6-45af-8041-de047bc36159"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ae3f4cc-7d78-42c7-a2a4-a88419a417a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20eb1b4c-0812-4786-832f-be6d2b82f9dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "998bb9be-0f4c-4eeb-8455-bcf34fa91758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1119960-b4f5-446b-93e8-8e7396b68d67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "263879f7-4dbe-4c85-8800-9d02042f5aae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55ded86b-98a0-4d99-8dce-fdcf9c34b8fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4179f62-446d-4f16-80be-a7117d82bc11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4f07e9b-711f-42f5-9587-ce2da8fa640d"
            }
          }
        ]
      },
      {
        "id": "4931dc2a-988a-4a6a-979e-029ff626c90e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "574b76b2-c588-42ac-a041-38ceb749b257",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92613032-0bb1-41ec-8d83-6e3937f877c1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "50c20a94-43a4-4b91-ad75-c01e9709f779",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba53a65c-3012-4254-9374-c664769ade10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd4d608-0515-4235-bfdf-f77ab958bbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3206c2-333c-4bc8-869e-eb64257a83d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f59d8b04-ebea-41d6-acd2-3c287821894e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a2090a-1a38-4c44-8843-896d6c6c0784",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546d0dc1-917d-423d-bd1f-6b0f0c0ed7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8255b0a1-2359-4999-bea3-9466b7b55988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436947ef-089a-4f00-a261-71a7c1c970f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0508b7-e4e0-4b7e-b277-b6a9b637ea31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b763e83-487d-47c8-9841-d7245686b7b2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6812010b-4803-47a7-a17a-5c44cdfff1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c87d12-d6dc-4d48-9137-5e45f3a5fbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed72b931-882d-4dcc-8907-ba733cf6ecd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82ee91cb-f596-40c0-8644-0e3c2ba94da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0175ea9c-f14a-49d7-b899-9042c51788d5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c862f79-1271-4b80-83de-411faa5db729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66c2cc6-7b24-48c1-974e-88a72bd9331a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c58e9df-6f31-45f0-aa88-bbdb548ed79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1106ece3-1b9d-4e2a-b945-4f3cfc89c8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b337670-6757-4c01-b2a0-ec1bb711d25e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30bff84-8e5f-4817-8d8a-9cd1b6136b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d988336-db12-48f9-9968-acc7c1de3e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cccdc6-0faa-4df6-8328-421aa59882d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39156f6e-45b1-4d22-976f-abd93ed3f1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b1f8bb-3567-465b-9b09-31ec83751c94",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262ec8bc-a745-46e9-9e82-c347f27a4745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49acb59f-a400-4c2c-81c8-7d62dad10f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326dedf8-d2dc-48bd-a759-564e07c0d71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8afd4e2-633e-488d-874c-9f1cd83390a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c90b1a4-2dbd-4fc7-982e-0d60ba78e61d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b309812a-d812-44b8-a5d5-fa87ec60659d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cc8147-4ef7-430d-a42f-2ca9ad1c58c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c4ec80-4d19-4af2-83be-dc68d7d60f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b64035c-a39c-438f-b680-efbee6096156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb33e76-62f1-48c0-b78b-6163f3d8bf4e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67990c06-fc78-439d-8fd8-8293d752a41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e48fe9-1bb9-4ba4-b23b-17909cbe98be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a71cab3-d9f0-44d0-a520-3e712669eaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "673c2b88-3c30-4ca5-a1d2-2f1dac627f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f18c93-47d8-46c6-ba91-381963adb4cc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fcc7b2-a3cb-49ea-bcb3-6d8e402b97f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed6a240-6e85-4196-91ec-3ade015ed8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5faba74-de4a-4ffc-955a-7bef01baef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "570a49ec-db51-49a3-a9a1-b892d5304d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6b04ce-8ad1-4700-bbda-51ad983398d9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c40957-2d1f-4966-9f38-c630999db8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0566bb-93c7-40bc-95ce-0f7732b0f433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02584b1b-3b69-4775-855f-edd676708f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "570254e8-1978-4b83-8344-f9ad277c0a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090d5e08-3cd8-4139-8ba0-43caca30e302",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75810e3-a690-4df9-9c8f-41a00b9e2aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38f7876-3d3a-4e98-abaa-4076f8667f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f532b53-8d67-4ecb-95a1-8d9b5b17c616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ed82240a-edc4-45b7-b33e-34a163261cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bbc1c8-1b24-4f04-a482-70777a190e5c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9cdbed-25c8-415c-90d2-563650483106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f2a705-3788-41f3-9739-a2458ae2f2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9880c6-30c1-4977-9634-6cb50b6bb12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb689601-d282-4ba7-8700-223e812afbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312ee453-400f-4818-aa73-7a1d7094eba3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb95af3-bd68-4121-910e-90aa6f7bd31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225b770d-9c2a-43f5-84e5-21ff71231445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4125a9aa-d0a5-4424-8a10-618b8ee1f201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88b38bd1-fcb8-43b8-b1e2-0078a1f41405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a41032a-cbfd-4352-93d6-b26c320d69a7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5e9089-f87b-49b4-bc3d-c3b71ff126ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec69abd2-066f-419f-9c1b-8f15e238fc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b083cb-3a35-4fcb-b627-1348008e9a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "69cdf573-71e3-4a89-b277-a0c1ed766706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597a5c06-a49b-4689-938b-008ab59d9862",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8938e002-0ad8-4254-adb8-d2207e3cb941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe249de0-eec8-4d65-a1c9-b643fe41181c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5f3392-674f-4512-b9fd-49bc122edc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8548f7db-00b0-4af9-a50f-6fea01d7d3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b1460f-e7a9-4228-a072-ba5b62631cad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cc23da-0cd5-4389-afa4-badca481e1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e6767e-0cee-4782-bc6e-d57d75054054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d13669-09d5-4e6d-8184-feafccd3637f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e8aa4f-b25f-4d53-b6a1-261e5c962778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e8fa4a-a94d-46d8-b530-f65416f04994",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a96eb3-e9c6-4c2a-b577-66f246f3fdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6472f683-cc91-4004-8a9d-bf9850c882bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e286ab7f-093e-4074-ad36-0500f1400428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "789ac171-c30b-43f1-9f2c-7a06072703e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d362cecd-9756-460d-88bf-71cd32ef9591",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a9189a-8175-4db1-ac5f-2a185349ca93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23a6e92-aba8-4060-9d6c-cb707b989827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00f4d1a-99be-403f-830d-e07d213f42a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a8f24f-738e-449a-8acd-110cddc1041d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e32ccc-21c6-48a6-9b26-66a016e41f13",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa93fde-17e7-46ea-9cc1-7d4c804ddab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6bc18c-5432-4a7f-81f0-06ee0055c72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50483c9-d4b5-433b-8555-065ebb6a0756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e24435-a933-415a-8078-8705a09985ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cc119c-8b8f-4b95-8420-2dcfaf7a46e9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1110beee-fb1e-4c33-a492-7ffc75040e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36d5a78-84ed-4832-8a26-4d3c75e26f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2243c785-4470-4e5c-ac5e-5109ec63a117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd4d634-1f02-4159-9da3-0c080ba5c851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11567769-76d7-4086-9954-d006d889a4a8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae5dd16-a7c8-4b73-8237-895b6d499ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a57b38d-66af-4b1c-b8f0-a6d1730e52ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b3e399-c90b-41b8-997b-52ed7c435629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a65699-f993-4ecf-94cc-8a87a25a479b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3f8dce-e53c-4aa6-9ca9-6e0561624904",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434e89bc-32c9-44dc-88d9-ee8aabdfb108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deed5269-ebb0-4041-b2be-06a9286bbc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcc6783-80b2-48fd-8830-18a1ca3d7602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca3a1f6-e4d1-4f28-8e89-a83a37a28730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd163c7-08bf-4cbe-b54e-c91212e4d638",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0db5f9-8ea6-4acb-9d0b-8b1b003bc67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d28515-ac88-4571-9a3d-ad0e88d15627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f2e7d7-195a-4160-a8a5-8869d59760fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9c13c7-ef63-49ab-a983-88298baa78b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe89436-b69e-4853-9e65-32c57eb8502e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34d14a9-a522-416d-8f92-9f14d57b4219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703aeb9d-e9d3-4074-a7e8-4a45a0e963e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe49de65-d56e-472a-b508-7573c9fe3b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1372a3-8c65-401e-b3bb-d2df38f0d7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cf7a45-9301-402a-a71a-0cebf5c4dfa5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10347ca0-418e-47a4-89d9-623e77639af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3a3164-2827-4178-bf0c-ac7ed61d3669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d90cd1-163e-450c-9e63-c3ad79f45f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e16f2c6e-2d6c-4c59-afb9-b0f552c6b3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24768d5a-0747-4ff8-9015-17ef46ea95d9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa8aeae-dde9-40de-bc9c-bb535b77a3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ebb7a7-42e0-4380-b2be-2031468a5980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7437755-dd85-4995-bf39-c1fd2e64dba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c529218-30a9-4232-93ac-83cf6fcd6b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4302c598-6ddc-4993-9caa-2f109b6afd9b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cec357-240c-42db-adf6-1cca42fffa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38b17a2-9482-49bb-8c47-616a3f097fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dada764-2448-4143-96d8-cda8fb9e273f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d0cecd-0d19-4fd6-a3f4-d37a00d9e2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b0a0bc-4786-4125-bffd-01218ef58c74",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71167f7b-e10f-4306-9a96-15c6e3244e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc046dc-77c6-4e2a-9078-ec6279aa1fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993a6a1f-4015-44fe-9698-80d92da7fff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf6d55d-a4fb-463c-b7d8-da9199d15b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb3e339-5fb6-46b0-99f1-f263227b7af9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cea7e8-e239-4e02-b307-abd5c2725c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a25973f-a2b3-4ee5-8b9b-7c66581d7fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7279cdae-714d-4413-b75d-043bafa103ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9988208f-034e-4ffc-8b4a-747c1f2d00cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065457da-fcd6-4e5a-96fc-206d83812f5b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cb3d2f-f3ff-4b0a-804a-6572fc34f0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba46c200-f6ce-43c2-be55-c705b813d790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adba283-50e0-4405-811c-ca2c1bfb69a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcebf49-646e-4846-a1a5-60a60ff43418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7ce2a2-0ddd-45d3-be86-11706815a528",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b12dbe0-ff5b-4418-95a7-d43e08e8e327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab96e0f5-8e1a-4bac-ae53-23ce519165c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff21ade8-04b6-4a30-916f-fef49c71ffbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82aafd70-ead2-4067-a3b8-569a364459f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70004a6b-c067-459c-8b48-11b3ac9451ab",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1766a5-aa74-4a6a-afb8-b108f0c8bf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a627832f-73df-4e77-b092-770fade88b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ad27a4-6a91-4dd1-9af9-312702b468ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b416ce5-c767-42ad-a92d-cf257dcccd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf0b4a7-af10-4517-8767-580e6617e5c5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229f8afa-607a-4fcc-9b45-b8f1a69b25c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12285169-41b2-4f21-b32d-870b864c08df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e9e318-a7e8-4e8d-bbcd-2673da6df145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8f83d4-a3a0-4051-af03-22b74a06fe54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d1207d-2881-4852-bbeb-0f280f98b102",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93edac51-9df8-40a8-8753-77d8466b0560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337c8eff-f106-4af3-8641-96f9dc8ccf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcadcbbd-f6f9-421d-8312-f25e8635c26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca0cda4-505c-4bf4-806d-25a83363ed1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0fdbb6-df45-4797-b38d-3a0917bd3c1a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bb8444-711b-4a1e-8ca6-dfd8de89b08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fc3f53-a70c-455c-a90c-7c065c654d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f533ea-6787-466f-8d46-0f802af7041d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "123e985c-7b21-400b-bc79-9975337a5c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d893f97-b88b-4982-94dc-a67c61c927d1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55471b07-a720-4351-b5f2-000049644f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530b9e44-af22-4ade-acce-26fab477d8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb18bd5f-f98f-4139-91fb-cba7361218c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c47fbdb-83ce-4b23-b2d2-e3d74a14b00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6141edee-e313-40bb-be79-9623ba55b677",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae9aced-2342-4e9d-af05-45e6f1e41be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9047bb-4ed5-4765-b13e-d2bc4fd0f281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbf4a68-49a1-4b68-8a2e-fa4afa4652bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "117a9507-0c5c-4da5-b8e1-7dccfd68a893"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a6f26b1-d8c5-4590-aa71-d1b3018dfd36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "274073d2-06fb-4d6a-a268-b249fbabe8ae",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6830d56b-25e2-45ed-b362-9f53aab15e58",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "12ff6066-7af9-4156-917c-893437da9808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d55014-44ea-4c88-9db4-0d95f8301d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cb5f3c8-3df0-470d-9cef-406f0c4d58ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27ee78c8-07ab-4701-aa8d-111cd13b3ee9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd539d7d-c4c3-434a-9943-d13342a8170b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e9588df-b735-49c1-b882-05466c3dde66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "772bac55-2b30-4612-93cc-774cbbc0ed6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cab2885-be71-47fe-89f1-e8db739d7721",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a84fa861-7ba1-4b7a-a9ad-7c1581b42240"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "730434d5-b0f8-4cd8-9c18-9dad5daf26e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3c94d57-d775-46a0-9074-7a620dfa20ca"
            }
          }
        ]
      },
      {
        "id": "e81e415b-bbc8-4bdb-ac4c-e72964164287",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fef0c983-018d-40b5-8eec-f8e3a6578a6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32b429ea-d598-45a8-b905-1e57bc17f12b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93758b33-49e3-403c-a136-1741a465479c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c520300f-ad2b-4629-b389-e9a8d68eb3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59997d13-256b-45e7-8998-d55ac11c3774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03af0eb4-721f-4311-bbcd-8e20503cf9e3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12352ddb-e3ea-4d0e-b244-c564b2752ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c511c2-64ce-43f5-931d-659fd1641887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73f0cbb-7449-4c34-a37a-72ea539bf784",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4104a79-15bb-4a98-bd99-a3292110ffdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8369c9-66d5-40aa-9f7b-b88b2e2c23eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f213544-863f-4981-a894-0f444cf5215f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94ac287-8bad-431e-a54e-5e1de9599efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fb789d-060a-4d67-b2fd-f8d77482a816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10df23c5-dcd3-4311-9c26-13b8b94a27b3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af20af6f-8195-4d99-9c8a-8fd58a88fa16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c114e61d-9144-4dde-b815-e7c4b3e3cf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bbbf25-a777-4cd9-867e-5c61e4d3aa16",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fbfc3b-3570-43f6-b33d-2e8e9515e504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bef8cc-5210-4324-a849-7e2690d82de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c4ee1f-18f0-4606-b142-61cf68370e88",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d39ee3-a9b8-4c95-b0f5-0d82a3ed3607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f914aecc-6a7b-4221-9235-e63c620ecd79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077a65b5-bb37-4f0f-a527-9c3795cae0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aba0996-eeb8-4257-affb-1c14092642c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ff391d-f2ef-4bcf-bcf6-8ab0633bfa4d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3c0220-46d1-4e36-8c58-9baab944f280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21d1a5f1-f9f0-4bb9-94d4-262039a6f30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ff1158-fdb9-4520-93aa-fe93b04607fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d43c0cf-ddd0-4021-9bc7-2d4afdeca0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe78cba-156a-4d9b-a556-742a6c191418",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c58823-da3f-414b-8a76-4e663cc36460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c51842e-10fd-4490-b5ce-03419b368694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e7a3f8-7b7f-4a69-b969-959b7fb87c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2532c1db-2928-4e21-8190-8c479e2288d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9904c7-89d6-4e6f-a54b-c5ff317de081",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcf00c6-7541-4891-9507-0944f2011c69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8d2e98-8e22-41be-b2d5-b3402ee5fd59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e6e79a-e026-440e-ac5e-3f0069784564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66256926-f801-4d2c-a42d-75757f4e7506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c306ef-3044-46f6-a160-4cfeda4fca3a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74d1b2b-ec1e-4a80-84cd-589d0071d249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d011b572-697a-49ab-98a3-060ec52f622a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0adca61-f9ef-4184-8283-78663c3086c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a440579c-e1c4-4365-b1c6-7fdb294abbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcffd51-55ba-4fac-8d36-c5524384cbfc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b00b7f8-8939-46c4-9569-09b3f8a37824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e64168-00bb-477a-aabc-46860a0f8008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4b57bf-5a70-43d5-89e4-0f400b254f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5d8f72-ebdb-4569-93da-4c1e45b9646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8d0f11-4542-48d3-9a20-5d6b4ee2efb5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9c419b-b39b-416b-bfbf-66c8b95f7ac4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc13266c-4f41-46ee-a684-dc77baeb7425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4091fa67-0747-4b6a-8361-5f345a89b82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3c743a-9be0-416b-b61b-6b292ffef4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19291e0e-5daf-4aad-8001-7a8cceddad0e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da90de95-1c40-4c6c-898a-610a5fec9e26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c0ec794-73e3-43ec-9c98-6c7a3204766a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac21f1f-bcdd-43e2-92fd-3124fac49cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae002cc-3bdc-4163-9ff6-2a3e3cfa0486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8227eee4-6fb6-4f88-a3d3-f9f6f7485c02",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798b0f7d-1a55-4de4-b63b-8f0df0338dca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e7fbcf-3653-4dd6-aa6c-1b63322cf0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bc01c6-43c9-4a62-bb43-fcee8c4e393b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a053a408-1a2d-4cc8-9343-54a328bcff7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea88685-f8a0-4f6d-aab4-212b25abf952",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2500ef6c-4358-44d5-b24f-54aed9b88d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a4255c-ecf7-44e2-bd6f-b87d3bd9dc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3ff88a-41e9-4f6a-a081-3c2cfe5f852a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeac335d-5e77-48b3-8f82-4118fc810ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b8bd5b-b52f-40e9-9350-da076ffecca0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a1de90-6d21-453e-9f58-b2782dcdc36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad9f930-171b-4298-89db-3f411ab2afa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419c7267-0cfe-4b24-81b8-066699f088b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2133a97d-7db8-4eb4-ac54-bf1411476566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4897bcca-6d98-4979-83be-a95d98fbea5f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2148d215-e414-461a-a827-454ab4434613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a6427d-12a5-4a20-8bc1-858c6f6ca238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2ad031-54bc-4fc8-84b1-abc7a9d47016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310a9b6f-0cb0-4aa1-b219-9113b964600b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ab7efb-be50-4376-981a-745e80d3e204",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601e98b5-0bbf-4785-a919-25a2f188c7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5046b1db-f1ff-41d5-9df4-d58b288ba06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696c9f31-4150-438e-9076-21ba8ff481bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e779639e-5885-4787-b381-271127b6ad84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e0a445-3a77-426c-8817-c8df1f39970b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88eecd16-68e7-442f-bb5f-9be6be0e81ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc4e734-6c8d-4869-89b9-e0ac1ef5c51a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40011d1-f94f-4986-beda-2568bfdd3ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a926d9-bbee-496e-aee3-27cb1f8b08be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c754998-1f73-4f04-9921-d38e957432d7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf1bdac-5d3b-4560-98b5-6697ab5f5cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ab69a4-24db-426a-9e6c-a497365dbff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2713ffe-6064-4d73-962e-3ae107ec65c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b1ec7d-f3f5-41c0-b6f5-7f3f8c46fd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a4b752-f67f-495c-9d33-7f2419630bb6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab438af-a439-4eb7-8fac-57c12ef3c012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325877ec-b2d2-4ed9-b76c-9994dc3970ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e979b862-f43f-486e-bfbe-a69a0fef6b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdba2ed3-7968-474b-bfa9-64652ae6c140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5681d3fe-5555-4873-bd04-8cff10821053",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92da2cd4-61e2-449f-9ffe-b5a6a56bd83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c03259a-cea6-4a80-82f9-27d46b12855a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a618f640-51f3-46d6-825d-bba03a5295e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75de8800-27c2-49c7-880c-72d5e805571a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60308469-042d-4d38-bfe6-cea59eb662ec",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83a67d7-7712-477c-b114-53f82b4ee1f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0adb0cb-0e65-4b4f-a343-200c319e324c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2468b3-b681-4615-83ff-6fe09c99c78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453b269b-5d4b-47ce-b970-93a31a6b9596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6c5cab-1b62-4615-8acc-1bf7dc564a8e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af895b3-1dd2-4fcc-9982-bc54bcbc49cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be5d37f-9d0f-4eca-a855-82b2cb973b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcdae65-fa20-432c-b2dd-b23ce6d7c14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55be3cf4-3bbd-42c3-8e92-71f89edacba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e000245-8735-4994-aea3-04369ea34748",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557e973e-bd72-4636-be79-62481d73a7f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "600bc7f4-e759-4add-8d9d-9b179ffb5ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a1f039-f19e-4044-a968-3daf22a63135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57ade11-2418-48e8-b317-5a454c9ff620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df64d9a9-927b-4d6a-8920-90ad9ca8cfb0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41737888-45b9-4cca-815c-64b75dc0efeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db17b921-0fa0-4ccd-971b-e983fcd62ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25252c9-b4ba-49a4-9d9d-a86364771f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2992a045-54f5-4571-be9a-1e0d59349163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1935bed-42d9-46c0-98a7-099386197b0e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f037f172-d431-408e-b42d-3695e929fc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e781b285-1a9b-4cee-b092-bc871a53a9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0d3041-9060-422d-8984-d67ce8ea862d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a11384c-7cb6-4029-88d2-20ff979813a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5921c175-402c-41d3-8c79-66d92943c97c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ec6b28-8821-49aa-9bd2-a34960b120d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635c658b-e219-4043-a81e-8eedc7dde431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c89946-8947-432b-8c60-5bce74b835fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35309888-f862-41b8-b0d4-5186d4328121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4907ec5-bcfa-4a7b-b2c1-ddabde2ea81c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dc6a0a-0dd2-40d1-be7e-99ee35841ee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f401ae-dc32-46b4-b27a-39e15505e4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5465add8-c3fc-43df-81e7-82f703520381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c9e6f4-8355-477b-b4f0-b96c85509870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0ee53f-2163-4e3c-aa6d-b166da2ed148",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d092ae5-c3f0-4b76-b173-e5ee0addb876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c86f08d9-b7ac-4237-9b3f-ac18dcbb1501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8016f1-ad59-4eb7-a3de-bedf6fa4afb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c8ca63-5002-4b73-867d-df63ee1022f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dad431d-5473-4b8b-8947-e17b513a7b6e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6894b85d-dd77-4335-975b-07d8c5da6662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "809b6841-269b-46ff-8790-f07c44d2063f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec902a62-7dc8-41a3-84cb-604cfff3cbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e82d66-742a-4ed6-8e6b-a7cabe0a9d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81860f7b-026d-4a46-af1d-d8b4696c2c27",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c9cdb5-92af-4e00-a726-377bd0c18f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f4a0a25-b648-4f5c-809c-4ab086450a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fae1367-8abf-4149-a998-5ece297e110a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f0d795-31af-457a-aa68-f1d679e88167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070d6aa4-2fc1-4bf8-ba75-a98dab7525bb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da0f4bf-3486-4c4b-8af9-3820d1a2694d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "090331a5-06b3-45bf-9a9c-b6f13521fbe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4238db0e-7284-4c96-9cb6-ef124cfe189c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c0bbcf-9e51-4a95-8490-1a9c786ab017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f1b2de-ac99-487a-bbc8-435f94178550",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1d2ab4-2aba-4382-b1de-997cc7508dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe63d745-9bad-41de-a8d2-e224001d68b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af19832f-b970-4b12-b000-63285d430575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff24fadf-087a-4f61-b9d2-0b5a5467e208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c555168b-41c1-4be3-9c5f-813ff1d1c1c9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456b6756-a363-49bf-b671-115e6d47a2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae24c249-7139-49b6-9083-00159f2373eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e519fde8-45f5-4834-8fc2-d273bb485a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e46045-c57a-4d4c-b393-bd31c9fc25a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f6ac80-9daa-4376-b4d7-59842819ea1c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d1c4c2-4b6b-4dbf-8ac4-a909872b0b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2c126f-af26-4d0e-8020-816af5605eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe25f8b-3675-4261-9a69-43c0e284d381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63658522-9268-4fad-9c8e-d8906882284c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ff6fe7-5264-4970-9df2-1005429e3fa0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a70a3a-b031-48b1-a57c-8d16a870c6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b554825a-fde4-412f-8da6-1c25ab9e872c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1be908-5ab6-48e5-91b6-29d8e4814a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aded92f-9510-4527-8124-7efdf22ed6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1906bcea-5805-4ca7-964b-67e6186ec5cb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75c3fb7-2434-4d8b-8ffd-0eaf72c894a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcf433c-7617-4542-b9c2-3e6515dc9867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd50c0f8-1b50-4eda-b27f-77a21bcb8fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50f4231-19fb-444a-9c04-6afdede89b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a99db1-e940-41d5-be8c-5b07bd9baf2a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e440bec-2382-4c23-b7bd-8280eeff92ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800d98b0-b391-4eaa-af8f-1ad0c097a245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8b1c9b-50e9-466a-8508-e9e338cf0da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1071b157-feed-4c6e-b573-12593ca0f208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f400347-4af2-4a84-ae03-f134b8e90efe",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9a8e19-ed59-4763-b09c-04fb75d18c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59222688-bfcc-46c3-975e-51244969d037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd18f77-c5c9-44e7-bef0-a14bf1db5ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b004cd-cb8f-4197-851d-c193a5bd83ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fde480-8305-4b77-8f41-96bc3cec9625",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8eba928-d9ea-423e-a52e-d2c29d15ca6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff09c03-c8a0-4838-b286-5d6304dd036e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9116044a-b635-415f-9e30-d54c93507da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b72ced1-7488-4ea5-b9b8-05a60eea079b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ce8b2a-5d0d-4803-ba35-fc262f9c84c4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1368b8f9-eb98-45b2-9898-bca05b0fe0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f50879-e013-42ed-9b39-50a81ad30480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7638648b-627d-4d73-8fd8-9d02d2a44505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a794c2c-de66-410d-b292-8d196ebef92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866a1521-e9aa-4ba0-b488-9bbc6e24a2a6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b68000-084f-4d8b-b0bc-3be3f86621f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9204143-9163-43b0-a41f-2716dd2bd7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129876fe-616e-42c9-b67f-ed6aa4c46742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad433e8e-221f-47b5-8ea4-101b10dab912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610dfe49-f92a-4df1-a3d9-de4895805a81",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0654e6-ec51-4688-b0eb-be510b67a373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d85eb32-cb1b-48ef-b89b-9c8dfbaf506f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e80ad6-b774-4180-b788-d8f707a389b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1872097a-74df-453a-bee7-4f994c5d32da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa377855-4e58-4f92-9a97-e0b55a66c92a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c4abef-b6a9-40e5-8b5d-8f9f449b9495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4155753a-856b-4b7f-ba55-693649088bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2770698-dbb7-40f2-b9c4-f95ffe935b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33eb7ad4-1722-406a-bdd0-9924a23a4774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7489cbf-9c72-4821-8397-7218f2a69f17",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61af0477-38cf-442a-b0ac-2459d47ed9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83920dba-012c-487e-b41c-c1e0c4227ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009257c3-70db-498e-a4b2-04cbc483dc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d67bc5-5e4c-46e0-bcf6-62ccb5bae392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f906a6-beca-4831-8738-468bf636b5be",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f808dc-0ad4-4285-a873-0ae453888616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cab6b6-2504-41c1-8fe3-c85f9460446e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cda139-1199-4b55-9795-a5a14805d7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3572bf45-323a-4f92-89be-d2b2811a662a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed46158d-b950-4689-baed-f501b404da86",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ff1d81-4b23-4322-82fb-d83e2626a825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d214e23-7dac-4033-80e1-12257659587b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb15b82-29e5-4eca-b1b9-fad32e5527bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7315ad71-2462-46f5-9ec2-7f974653aa65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a62d32c-7afb-4575-a094-131a55c9f47c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082c0893-9f38-4d53-9895-551f44232320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b32342-0e1c-4f05-87de-ed733901d63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59972bb8-15df-4931-8c91-c32a4567974b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1613a26-f7ed-42cb-ad73-b16bf34271ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f88e8df-3713-496e-9930-c470c6fac201",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af44070-1bb0-4506-ba6f-cbe169d6dae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274e48c9-b6c3-491c-84d6-0147b7a19700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ab8548-4e69-44cd-9155-e8b8e59610cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2154f6be-2ca2-4da7-a52d-7ef3c85a8f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce10921a-5ec9-4657-a1e0-273ae7669199",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3958c639-d699-4549-9ae7-f19891f08e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b520a6-7058-49b8-a4bf-9ebf0785b5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5e4799-82a3-4741-abd2-42ceb8daa997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65de7d9-dcde-471c-b3be-95d71bacb681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57146e66-e25a-4860-a7c0-4871cb896817",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850fc0a5-5e84-4b00-b6c4-f334eb550c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b452c299-7060-4498-ac1e-3a8e89c73e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f41be3f-5b90-45d0-a409-7e3db5b423d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d86d35-20b7-4e48-b184-22e20cb241c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93b78df-892d-465f-a919-75db074483c1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94166495-f17b-4f3b-ad7f-bd6738b4ffdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e97799-3a3c-489f-ab0d-e6a019be5536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3a8bda-1712-4840-b46b-346f6c3a4ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7474ebb7-9404-4e48-baf3-3bebc42761ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b191e63f-adf8-434a-9a62-97cd4b7adccd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0639065a-e705-43d2-9d90-b6ace5f5671f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97186a6-f232-491f-a7be-7953073fd3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6d1a7e-7ea0-4bde-9be7-7e40b37160fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8841e171-ba4c-4ced-ac75-5d43d8b59f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a72427-3e1a-4e4f-8b91-ab0ccc7be315",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1232c260-8f41-4151-8294-a07cfaa4dfaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f6d92f-968c-4e14-a2dd-96cca3759316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20ebbc6-a248-46e8-b8f3-5f64de7f130c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c473b40e-3d03-40b7-b363-0f04e0d5a6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc0cf6f-d299-46c7-81ce-250984a6c072",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dbbcd0-2565-4824-a439-4ca624d8a257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c391bc65-244d-49f5-b6e8-e52207a082e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0697f430-75b7-4f9e-bad3-809d5cf8e26d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e439607-b1ed-4c5e-beff-a05a778e33dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95b5a9f-8956-4fb0-a953-816945a4df49",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8815b91-728d-4bba-8d98-32ca53c0720f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5019a6f7-f7db-4ca7-9028-e7091f3fa872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748dc642-fc66-45c4-bc20-ad4489cb397a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db2ebf6-6df0-4259-b8ef-35f3f3f51908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7c8851-d6d7-466a-8c03-445ba0970f56",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18de6cd-d08a-4e98-9605-97f27c30fa5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a46bb36-2346-4aef-b722-fd34ae0ccdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15489a99-e785-4997-9f8c-89c51acebad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b069dc4-ff83-48e1-82bf-e6ebb870fb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f829be-9f88-4072-96f5-b73b55a63628",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2604af37-ce95-409a-94f2-97f29416c6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e7e5ac-6de5-45d1-8dd5-24a99ee73542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af01b12-e9cc-4912-adfd-26dae7ad089e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399c1d7a-cd05-4bdc-97f9-7809e83ec6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a08364-fe7f-4441-a8d0-a626177b7ed1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b3561b-3070-45c9-846f-e8079fd3f670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7154ce55-2dd9-45ce-a653-bf86fbfb3fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c35fd9-da01-4009-bb28-49830de15455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00ee47f-4ba8-4020-9841-b3cd99c1a296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a526cc0e-6e66-4471-9966-1097f224f8a6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c4aeb3-e0d5-4868-8cbb-eaf967f0c855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa42438c-857a-4a90-ab0f-c857258d796a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3542a412-f64e-4b3a-9526-5822fcd9c9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a71653-3471-41e8-a70f-0d71a958f4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711a77f0-90e2-48fe-aa02-499590e5ce8f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517ced55-049f-4e12-90dd-5a05fb8a6df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7c4ac7-f006-4caf-83f4-6b3a496d0f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0b6acb-e8a9-4696-802c-b6c8dd4ea56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdc5f46-da87-453c-a274-b8c6516e505c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c730b662-674a-4889-9a9b-18454d6d799f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b581d0-840c-40d1-b7b8-660cc6b82b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b28ca203-1b5e-44aa-9f6d-21188858cdc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310f72e9-8563-4f97-abd3-fbe05a046429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4968842-6c8e-4930-82e3-c130a53457ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5db727f-b144-4f26-8b6b-62a29e9ca9ec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0391196-c128-4525-8fbf-a12e801eb973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "671237d2-e5be-41c7-bd5e-7d715357b548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0430207-be2a-49bd-a4d1-2e78acb2315e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d58d62-d919-49d4-b17c-20188e0fc840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c14d489-76e6-4d01-9dd1-0c6b26e215f3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d14808-a74b-4997-851d-340e112f0376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74aba648-cca7-48b0-a5e7-36fcd37d4fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084c82d8-5126-4fcc-86bf-473ac0dffa43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1f0258-5a44-4c4a-8a87-5d4dbc5fabe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df3d74f-2540-4516-9b4a-f6f1d6ca5288",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029ffb45-f9eb-4001-8b02-0855ea84091d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8efd5bc1-96cf-4e66-83e8-643e018f9b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858da1f3-4c67-4651-94c1-bd7cc12077a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b32199-5c72-4dc1-b6ba-3c07e4a6c61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f49468d-941c-4f52-b16e-5f7711cc210e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecadb48-3a76-40a8-b81a-c800ab51dc84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e26e9e90-05bd-47cf-aa37-aead5365f44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fd05d8-aaac-45b7-8be6-64d81079b167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986e1365-a1cf-45a3-8238-4358e0ed51cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca6aa15-2b3b-4db0-b24d-8875c75a3a33",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26c9c60-7b52-4fae-8618-ffba7d4a7cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec9eb50-1804-4f1e-b0f6-d0093665ff4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5342447-fca8-43f7-bc74-28b73fa07b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16dd49c0-8587-4d06-8e65-ed6a6298ca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eff56d0-d6d2-409d-be0c-eb009f7f25af",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b115e119-8703-4574-a441-cce042b0b372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6e857a9-62a6-439b-ba51-4fbdfa12fb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2790a0-3128-4258-a8d4-cf4958b5b6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2188e8ff-3389-47e3-8136-e74c0273421c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f680b5-ecdb-4c55-a740-220cf094ce14",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebc497e-4765-40d5-bcf0-dc90fb9b8188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c8202a-33c9-41be-bfdd-63b9b7b4c1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad61aef-803b-4efa-86b5-b7470de14649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fb36fe-00e1-4e65-bfbb-ac9d4807736e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026f370c-5604-4e45-8a49-90e276d8b7f6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8d70d3-152d-48b8-81e5-b7342d4f08ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e89a80fd-982c-48d1-a09e-92e618f031f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2719565-c9c3-4bca-9718-22e0d51f2bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf12cb2-85bb-4bac-822e-f0121de94bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608b42c4-27b9-4709-862f-1dd06043872b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa92b367-cdaf-4137-86e3-dcc853c1c15f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ffecaee-3a32-4016-bb84-8d0847ebf495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f046c3-2f49-48e8-aa09-16a7a88dffcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d3a219-a6d0-4f7c-b7b6-4257bb1d0e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60655384-80d4-4f52-8e66-0ab2c089e254",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81836ede-1ea8-4eaf-a8ed-9d9f7ecf70e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f175569d-12d2-490b-a51a-3f76611ebab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291ed14b-25bc-44d6-9145-827314ec5996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbe81d5-6259-49cd-a087-d643a5e0a92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e4f30e-702d-4115-841d-8dedf1f16fbb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14b839e-d4c3-4810-9a3f-c3a8b410fcd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63c791d-5279-4178-8ca1-27afd805bda6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4d60db-ba4d-4d1e-9b2f-cf0a1271324b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e42be1-8916-4e2a-aa23-6dd77ab6eac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cc0e74-7d8b-4d4a-ab9f-863b2aa62808",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15bc216-e926-4b6f-aab2-be96f7edef5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29351ded-7a55-42e5-bd2b-e69368d4d159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c256ff1-a6d3-48f1-be6b-39694e87a82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0609710-e677-4ccf-afef-288260fd7518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a99239-29a6-45e1-b249-64537153569a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5541a45-4e81-460d-a342-0f6f76dd672c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b97d7d0b-ed6a-4f6c-a501-4f33a1b70ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4cd420-c0e3-4d56-aa29-ebafd73c7a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f8cf4a-5e79-4041-aaf0-04e7064c6826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cf987f-abdc-4419-8527-daa27256b167",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0ee9d6-0f39-47fa-9dd0-b72dd680062b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f61555a-40bb-4d36-827e-5c0564427f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39257990-1c21-44a2-9f20-544b2f9728cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140eb1d5-b474-4a35-a7fd-ec2d7faf5724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea9e916-0dab-4f8c-812e-a9568f503f12",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13559fe1-5192-4092-bc3d-1fbf60fb050b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac2fda7-9dbd-4bcc-95a8-08f250c8f7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1d26b8-11d0-40f6-969d-448860b6171b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e163a4b8-320d-4272-8888-6a96ce6bef94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6671ab65-d180-4c97-a696-2cdc9a63ed1f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3982947-8770-4ebe-b65c-9021fb4aee71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e39da61-ae51-47f8-b672-fddc14a900c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa94c92-bb0a-4f0b-a12a-8a2aa41c9a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab1912b-207a-41ae-82ea-44da02297793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b485f902-87d0-4713-9974-d5177c8e6a08",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1776fe22-91c8-49cb-90e1-da09802208f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d725e2ce-4e9d-4312-be69-e065e6c320a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d22346d-101d-4a3f-ad32-18579559ebc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38aa96b-ad0b-41c1-9921-95110370c15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca03cfa-d55a-4a69-a007-1f27edac143b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72d9eb4-184c-4b82-9ab8-fb701af7db66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "380ff55a-bf5d-43bd-8594-161636b1a73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46472622-44f7-4711-8daa-9e1a60682920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d9d3b3-8370-4cbe-876f-01b32755a6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ef2b43-ab98-4ec1-b09a-d992980ace39",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b56b3d1-ef98-428b-b092-a8bd9e65def2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6438b4-3839-4ffa-8e2a-9b880dd6e757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1622927-6af2-4b7c-804a-f0c66933ca62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e01cb2-b825-49a1-ae7d-1b75cab29755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133a412e-03bd-43cb-8a04-a93069a8a2cd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6f0ae1-56d0-46a9-997e-c533aa3ece00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a64183-2aa4-4718-9a5e-14aeba759be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a77dfa-322e-4db7-9006-d4ce5625a5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edd5f7e-815a-4c42-a695-002530fef94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6e11e2-7129-43bf-9ac9-640a8dcd8217",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e99c179-80cf-4861-b6a9-b3e2ed2caabd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3242f41c-cd45-40ae-ab8f-3adf472e3b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3ed66b-6bc6-4d8f-bc29-fd73cd13e748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3231b966-ffd3-40c2-bc1a-6c6dbf466857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078acd8d-86fe-4a25-a6f6-552bc0c1d622",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3aa7ca-a576-40b9-b911-add014bdd452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa1e454-33c9-48e5-beeb-427622e8729a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bfb1b7-2af9-48f6-9024-99c52ea2256a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ea2127-9a57-4db9-a9ec-90f8f2339d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122dbb20-40d7-4605-806c-c1493fe0ddef",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ba8319-810a-4960-b452-573c7dc01ec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc8bc7c-747c-4a59-af58-fba599642e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf38ce7-eb50-4cb0-84dc-1660ffbb4bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab771c1-be3f-4003-add4-09d2839958c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1899e4c6-c053-426a-8722-c70282ae6570",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad5504e-8f35-42f3-bdd4-143c60ce6660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406eea84-ee04-41fe-b1fc-8fa62e1c4bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c4f27a-201e-49cd-b9c8-38a004c2415d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafbb593-e064-42c6-a3f5-0a6eb17b9d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8ba47a-7e3a-4add-8d1e-37c1687e92d3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3798fa4-c601-48a5-bcd0-e8bff28d109b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd8dbe23-793d-4eb6-822a-3520601cc8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d12eeac-a04c-466a-ba19-2c313a7f3b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ceef595-d0a3-42ba-9516-c14e3a5ab349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4d3180-6b1f-4ef3-93d8-0f3877b7acf9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1b50cb-670d-4bcb-9531-265abb0db891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6728e2-f6dc-43bd-8330-c0d4fef1c9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050fee2e-5a13-4b75-aec0-3fe8954301d3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb34eee6-aaef-4383-8848-ebe9fec822c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038858cd-b8c7-48a8-adbb-38ac90d87126",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0f35f8-a4cc-402b-b2be-19317bcbd6a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be41e689-965a-4af2-8395-fe36d3d2b1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822af364-e2c9-42bf-8833-b88387116167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852d5dca-ef57-4910-962e-954182658d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dd7fb1-56ca-439e-ba2a-7927e417f92b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8464bce9-1056-49f2-ae1f-1cef7d514dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de70da8d-68ed-4987-a315-a94c32d1981e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3affa901-7660-4065-9a67-a62531f7a85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a78085-0123-4e6e-bfa3-d3e8d48da56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db87a4e5-0329-4fc3-bfeb-bebeb44b0d1d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e995a8eb-741d-488a-be6e-9410c740cf18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f61940-c2f7-48ff-8ec1-9c6f393d02b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3f8445-b605-4582-a81f-271a2d8eceef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7801784b-e24c-48fe-8793-ff9efdd2b85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d611d3-21f6-479d-9001-d09144f6c999",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ac8524-9701-411d-8756-2d82f07751e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a71fef9b-3bda-4c85-9712-76917994b379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a25ee44-e0d1-4eb1-a991-b0004c068e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f23b24b-b418-4615-8cfd-8349ef2a73a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95115a55-e3f3-485d-b47f-592a7f09a4e7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fe1ce1-6c32-4cff-a224-98c06b8be8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c724cf2c-cff4-458a-a0e2-ee4362a10130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b461b7-fbd4-4b2a-ba1d-bf360992cbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcc2df6-4a15-42be-9ed7-34959b7907ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282dc400-c0a3-468b-9c50-51b6e03efcba",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195864a4-a104-4b7d-b95a-8650103ccf09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd8c613-7295-4f44-9377-6cada0e841f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8523fd-af7f-49ff-b4e0-b7e5013f809e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3b4530-c75a-4600-a68f-0ef86e5867f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3e9ad6-f75e-43c7-b53c-8373474d2e9a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcee662-0eeb-44ef-bc73-6d59bac0274a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a6c178-1fe3-4017-93f1-4c7d5e89b4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46be9ee4-7e35-40c4-8630-96372aef54e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7ab2b6-0cb0-4ff5-98b0-6f2fc15339a2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63c2679f-f8b8-4a4a-aa21-d187355418c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "298ac2ae-1272-4249-a11f-e54e3e8d1ff8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d9b63dc-1b68-4447-8c3d-2e8d5c924c1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89435379-57cd-4541-a8ae-d82441f6f4de"
                    }
                  }
                ]
              },
              {
                "id": "0cb98550-fcf5-4219-b304-1c477b8248c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99e4324b-d7f2-47bc-b8af-693a762ea463",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e517678c-cb8c-41c0-8986-ba93816165ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4a5c066e-2e3b-4438-9980-4f9afe9eb3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d47174-1f8b-434b-88a7-e5dfa0f61bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9984bf51-9ea4-4b1e-b128-a144433fc2b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f63d834-709d-41f5-9b5a-5742a0ad9471",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "355f29c2-79e5-41b3-889d-0d2ddb4c98df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35c3df28-bc34-46e7-9cd6-5c470ab58b29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f74f38c-de17-49cf-91f8-78baab837b25"
                    }
                  }
                ]
              },
              {
                "id": "2c195b21-84e7-45e3-8f31-819e460753b2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "43a5b2b3-0acb-4e97-80dc-96f7cc8dba97",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4536331f-53c5-4aa3-bf52-c782a1a45df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1cc3dc6e-67f2-4636-8a92-2282a21624f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9c722d-2c11-44da-b340-77e1a08785eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2a6194-080a-45f8-b5fe-47d2989a7c2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b71442f3-5004-4663-a8ad-6bc375d7388b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50001233-4a80-41ff-9bce-46dff33224c9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "239a217c-fb4b-4dd2-81ae-28758935cb9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "41b1f27e-0b3a-4e54-8d56-b09a5c976873"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9990aa1-54b2-47c3-b392-40e89465ce78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d153160-22f7-49bf-8ee6-11edfe122ca0"
                    }
                  }
                ]
              },
              {
                "id": "2982a7c9-1db1-4604-86df-482881fb6e23",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "caa23d65-5b2d-4159-9674-2a6d51af5d95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e5fcf9cf-f178-4a4e-91ce-a80da912ac4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de465d7e-e5a5-402d-a812-6521f2790d13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "697b5834-4162-4226-bb1d-98a426eb21c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ded58397-4f71-48d7-8a89-0cb1b308735a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b8d46305-ba48-4961-8006-810e16d4a718"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2594b640-81a8-4112-8af5-542a0cec6958",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c9bf106-426b-4a6c-a6e1-c58c529d7b89"
            }
          }
        ]
      },
      {
        "id": "0106c1e5-5451-4fea-8a2d-55562d0bfdb9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a637d15b-4a9f-4484-ab20-e2129cf2cdc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14d5ac06-566f-4582-add1-16ab6c6d208b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f73e3597-07b8-4500-9225-ae554bceee6a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a2e48b-1174-4edb-a07d-fe27f10c8784",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bfaafd7c-482d-401b-be47-7b4f0fc130c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcd90c7-293f-401f-b85e-c7564d66ef88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ad00be5-4d46-4498-bf7d-a0125b63f104"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14af8a88-e78c-4b22-99e2-7fd604e07ebc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b24a926c-05c7-4b15-a22a-e4dc7b3483a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "803110df-a7e8-4c47-bd7b-08d8c039b105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1dd9fe6-07b5-42cb-bd54-f3c7a99e00cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da308a54-a1d4-46cb-ab9e-db78488ca28e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "67d111fe-64ee-4087-bf3e-d0a7d3261be3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7487d48b-9a54-4644-a744-ffd179352fe9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f350cbf-ba2c-44d1-b389-e17d71c6faab"
            }
          }
        ]
      },
      {
        "id": "a89f8000-baba-4e7b-a20a-87274032a998",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d991bfaa-c7e9-4ca1-98a4-4e9e7b198507",
            "name": "Negative Testing",
            "item": [
              {
                "id": "223d722f-3f53-4300-99d7-b74dd91dfc21",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56d62be7-c608-4160-8081-fc9cf0d26f86",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d3308f-2d82-4072-923e-d32214cf94b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43f0b36a-4281-49a5-b8b6-b900f63d192c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467dfdbd-67ba-460d-8879-9baaddb332d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96587052-edae-4e9c-8cbc-c07d77fe7c85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba37545e-a90b-4a30-9bce-6803f45344d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e41bb91a-aeef-40c5-a032-6201c9d656f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5835b4e-c138-4231-87a4-967c921bd5f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fd3d470-ec50-4a21-a629-1932cb5b2616"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc7f03e6-4047-4971-95d8-14875ac17695",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ed0473f-7b50-4f48-a876-75d1c4b99ae3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ae8849a-406e-4fe1-a6d9-fe380e1d0acf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89e3b162-a2f8-455d-9263-abb753342450"
            }
          }
        ]
      },
      {
        "id": "d858bf2b-7ceb-48e7-924a-7fb6005d3bc8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d11d218e-5f54-4676-b16d-3b426b7fd65c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0a2d454-3f01-4803-b806-422a13c1b4ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ec836ff-8884-4502-8514-3a308ac34a0b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a1da26-4b01-44d7-a4d9-594e5985a6ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f846e309-6748-482b-ab6b-a787dd135dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcef255a-fa15-4610-b94c-228117f92d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8572149-b329-47c1-89c8-49bc25e4d970"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b15de161-be97-42c9-b809-dde3e531d64f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a94c5d9-766a-4e75-b70b-608e3bae6faf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fe3b6ee-0e03-45c8-a87c-712cdc981eca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c9e6c4f-dd18-4e2f-bf7f-0ee081b0a243"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63cfcf2e-7c93-4009-930e-ee5624984adf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f5d6d6cc-fdc5-4451-84d5-decab1188824"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c7b38bf-232a-4161-a72a-8598d3a16fa7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6eb14d8f-cdca-4dd4-844f-b7188ac786f3"
            }
          }
        ]
      },
      {
        "id": "db2f8b35-f638-4848-ae0c-85aee9534f19",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b25c1d8-b7e2-448e-87f1-a925f46ba6ff",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92bfcc4f-be31-4631-afa6-f05f60f4771b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0ca092e3-7fb1-4eb0-9a15-dbd6220eef34",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e93f4c4-349f-44d7-a473-0c69dd0c2428",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0147f4e-9dce-49af-8a0a-4477308da704",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 136.23157894736832,
      "responseMin": 5,
      "responseMax": 8716,
      "responseSd": 571.5891811303172,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708389215101,
      "completed": 1708389263116
    },
    "executions": [
      {
        "id": "0186e1f3-639c-49b9-b9cd-8204d1694f7d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "399377aa-8267-4057-a3ce-d985f78f2541",
          "httpRequestId": "ea39bf5a-ebaf-4bda-b4a1-1c574d77c185"
        },
        "item": {
          "id": "0186e1f3-639c-49b9-b9cd-8204d1694f7d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fe2ff581-2126-415b-8bdb-203bb3052400",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "99068d7a-c5de-4680-88d1-a73c967ca62f",
        "cursor": {
          "ref": "12417359-6fd1-46c0-8e3c-05f1e3de14f6",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9bb49c97-e5fe-4fb8-ac4a-d540d43d73b8"
        },
        "item": {
          "id": "99068d7a-c5de-4680-88d1-a73c967ca62f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8ab2c9e6-79b8-4b19-ba70-6c1bb1e8e688",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "150c24a0-12d0-40c3-8886-383957be7e6a",
        "cursor": {
          "ref": "6d94fc1b-378e-4db2-b249-2430c4fbe473",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "853c152a-4a94-4011-8070-9691b395cf14"
        },
        "item": {
          "id": "150c24a0-12d0-40c3-8886-383957be7e6a",
          "name": "did_json"
        },
        "response": {
          "id": "0548804c-1e3e-467b-a911-fe291d6967e7",
          "status": "OK",
          "code": 200,
          "responseTime": 376,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b0b173-e4c4-4a3a-b0c4-dd5fe37c9247",
        "cursor": {
          "ref": "37396135-8b05-4a04-bbe3-4ef8b35ea670",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "91706546-e18c-4eb6-913f-63ff87f507ea"
        },
        "item": {
          "id": "27b0b173-e4c4-4a3a-b0c4-dd5fe37c9247",
          "name": "did:invalid"
        },
        "response": {
          "id": "82f07bc2-f6fb-4dc4-8ec8-2155feb149c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 869,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b0b173-e4c4-4a3a-b0c4-dd5fe37c9247",
        "cursor": {
          "ref": "37396135-8b05-4a04-bbe3-4ef8b35ea670",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "91706546-e18c-4eb6-913f-63ff87f507ea"
        },
        "item": {
          "id": "27b0b173-e4c4-4a3a-b0c4-dd5fe37c9247",
          "name": "did:invalid"
        },
        "response": {
          "id": "82f07bc2-f6fb-4dc4-8ec8-2155feb149c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 869,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dc4685-a587-4f83-90a6-8e6613c26007",
        "cursor": {
          "ref": "4811e9ec-b3e8-426d-b627-4fba0364ad14",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b4fd4e7c-4bf3-4d12-900b-e1f29128298b"
        },
        "item": {
          "id": "10dc4685-a587-4f83-90a6-8e6613c26007",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ccb14491-96bf-411a-af83-ec7a13bbb3b1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d48c34-af47-44eb-90d8-426c85ac50d8",
        "cursor": {
          "ref": "9c715386-f89d-4806-ac65-b6edb0e0775e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0635695d-0191-4959-bb47-d864d976ca1b"
        },
        "item": {
          "id": "c5d48c34-af47-44eb-90d8-426c85ac50d8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5b457745-752a-4052-a151-155ed736c0a6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c18aac-2eb1-4795-9e9d-0cf208281301",
        "cursor": {
          "ref": "209b2efc-360f-4b2f-af20-fe4c3b4c2f6a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7f803eee-10dc-447e-8a92-29ac713b9893"
        },
        "item": {
          "id": "88c18aac-2eb1-4795-9e9d-0cf208281301",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9148555c-134d-4a89-8795-925a57175bc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2715c5b1-dab7-45c4-8417-752dde2457e1",
        "cursor": {
          "ref": "4a7660b4-890b-47f3-adcf-4a9a1c4f9fe9",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c57c2443-0e0d-4212-80a7-f1fc77324373"
        },
        "item": {
          "id": "2715c5b1-dab7-45c4-8417-752dde2457e1",
          "name": "identifiers"
        },
        "response": {
          "id": "971b0c62-1574-4345-8130-7209b44ed3d7",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6276dd7-4c99-4e1f-bb15-cde11593773b",
        "cursor": {
          "ref": "76353b32-3b89-4af5-8351-aaabbcd7be3e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9a7bee55-dbcf-4f17-a126-5c090adfa435"
        },
        "item": {
          "id": "a6276dd7-4c99-4e1f-bb15-cde11593773b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3dffb90c-519e-4977-bfd9-29732dc9beb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c338a3a-ebec-4cbf-9536-afb30440a444",
        "cursor": {
          "ref": "fd82630e-9471-4312-9ab4-80b6bf750241",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "56d86777-aec8-44aa-a6fc-9a44275d1b23"
        },
        "item": {
          "id": "5c338a3a-ebec-4cbf-9536-afb30440a444",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a33321fe-eb12-47d2-8ee5-28cf5582bb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8955ff-1198-41e7-b204-6f29e08dc1a7",
        "cursor": {
          "ref": "a5e7f65b-32b9-4632-bffc-b663823f827c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8b31bb75-1f0b-48a5-a5c8-834e732c5267"
        },
        "item": {
          "id": "bc8955ff-1198-41e7-b204-6f29e08dc1a7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "81443042-9f4d-43af-a5a9-b2dc64f6c6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88fb3be-a060-49b5-b25e-12c6dd508759",
        "cursor": {
          "ref": "28043aae-be1c-4a98-b9a3-051ead9a9a56",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bc80a1fe-aab3-4d98-93bf-0e278cbccdb7"
        },
        "item": {
          "id": "c88fb3be-a060-49b5-b25e-12c6dd508759",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e7662938-3c2f-4e03-8a40-ae1a4e1de89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6874f9a4-7728-4de9-9c81-1b3d22aed090",
        "cursor": {
          "ref": "f0e61d45-d70f-44aa-a24f-dee40ccb78fa",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "23df755b-6d63-48c4-b6ad-403286c46d9b"
        },
        "item": {
          "id": "6874f9a4-7728-4de9-9c81-1b3d22aed090",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2612d1c8-8899-46c4-b398-7c33aa7c21da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf6f398-1c6d-4824-9e98-0a62fe1b023a",
        "cursor": {
          "ref": "abe9087a-0e6c-499c-85b5-eaaf6fb3b3a8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e4751280-a11d-490f-9f13-d477fc4ec5bb"
        },
        "item": {
          "id": "3bf6f398-1c6d-4824-9e98-0a62fe1b023a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "92240b8a-dda0-4700-8fc8-4b3bef2ee4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e732e3-2056-471d-bead-bfeb1107c82d",
        "cursor": {
          "ref": "06e3ff5d-a0d2-4a1f-a57a-f99e81f3b3f4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "39c8fd90-8605-48d6-abd5-841e3056c4fb"
        },
        "item": {
          "id": "81e732e3-2056-471d-bead-bfeb1107c82d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ee6d38a0-2d56-4156-a834-627493fef049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40da2007-db1e-40eb-8917-e5dad44f152c",
        "cursor": {
          "ref": "0063f724-eb6f-4c42-b4fe-24b61171ccc3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dfa952e2-6606-4107-b24b-89d905e30e06"
        },
        "item": {
          "id": "40da2007-db1e-40eb-8917-e5dad44f152c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "86bc1865-05f1-4b8c-a1ac-67d832f20384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0f4cb4-de28-4def-9d57-09b4750e4e98",
        "cursor": {
          "ref": "ac5be924-987f-456d-8afa-0fb97b9954f7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "27fad3cf-c7ce-4fc9-b0dd-6471db36ce7b"
        },
        "item": {
          "id": "ed0f4cb4-de28-4def-9d57-09b4750e4e98",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "acd765ae-f863-4570-9f13-70ff8bc694c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f1ea22-ad59-49ac-b640-3e1264caaecd",
        "cursor": {
          "ref": "01a1fe75-a294-4dce-bc24-97b31bdeb3c1",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0ebbf521-d8d9-4759-96ca-600be26ccb7b"
        },
        "item": {
          "id": "27f1ea22-ad59-49ac-b640-3e1264caaecd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6917cb04-1427-435c-af20-e24fb7027a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd0e437-7f9a-4b17-8ac2-6918c08e0283",
        "cursor": {
          "ref": "6a0ac8e5-f669-43fb-b8b3-c2a0e6d1b43c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2925574f-9539-4269-bdde-774d2b74b4f4"
        },
        "item": {
          "id": "dcd0e437-7f9a-4b17-8ac2-6918c08e0283",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c3b03c67-05d4-4f1c-8cb5-9e6160771284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02cec30-05c3-4e07-87ca-168bb5e6eebb",
        "cursor": {
          "ref": "66433733-8d57-40b2-9a7d-fa337e826318",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "20839061-c759-40bd-8267-f22115c7c1e9"
        },
        "item": {
          "id": "a02cec30-05c3-4e07-87ca-168bb5e6eebb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b1d74dc9-0edc-4791-b485-146a517533d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87953f6b-7c60-4b78-bb6e-ff46413fbe83",
        "cursor": {
          "ref": "2467de17-d081-425c-a0cc-01b5473cd674",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d55d7811-b0c3-47c9-be33-6916b88c4a92"
        },
        "item": {
          "id": "87953f6b-7c60-4b78-bb6e-ff46413fbe83",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1ad00db7-1496-4e45-bfab-47f473764fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb8d987-5ac7-43ad-b799-c61947dc562b",
        "cursor": {
          "ref": "845dbbda-9eff-4aae-a371-1048129fe4bb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "27f1652f-51ad-4bda-94b5-c8045008a5f3"
        },
        "item": {
          "id": "4cb8d987-5ac7-43ad-b799-c61947dc562b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e0be094a-7bae-4c7e-bfa8-ba03b3647d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b4cfa3-ebe9-4784-8552-e622b4d4d54a",
        "cursor": {
          "ref": "38dcc70e-ec4f-43ce-b2b9-076a504059d4",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "57cfc3b6-4515-4129-b311-5f9775910763"
        },
        "item": {
          "id": "22b4cfa3-ebe9-4784-8552-e622b4d4d54a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7b5b9cab-fbed-4b2d-8799-6d82ac6f3a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d03f50-fe0a-492d-a6f5-09c7750d520e",
        "cursor": {
          "ref": "a720d038-bc0f-471b-9045-1c2ac27b089c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1d90d0de-a23e-4545-84a4-44ae215fc9da"
        },
        "item": {
          "id": "70d03f50-fe0a-492d-a6f5-09c7750d520e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "869425f9-d217-40a2-a0d7-1847b2d2ad99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86efc932-895c-43c2-8226-5a1f5f2fa124",
        "cursor": {
          "ref": "c47ceb9b-e50f-405e-b875-2f8706a0fd47",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "910254ed-a18a-4076-b3b6-83bb150068f1"
        },
        "item": {
          "id": "86efc932-895c-43c2-8226-5a1f5f2fa124",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "effcfe1a-4360-4472-a3fc-899e7330e00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886fabb7-180d-4b7f-bc71-b514be9e946a",
        "cursor": {
          "ref": "eacba6cb-e319-4b5e-a2d6-fc6d9caaa980",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2244d853-7a2f-4ab0-9375-804821b9b07d"
        },
        "item": {
          "id": "886fabb7-180d-4b7f-bc71-b514be9e946a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "36fa6ddd-4d58-4379-83c5-609cfe2230a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de381c75-4604-4008-b1a6-a36fce0d8c3a",
        "cursor": {
          "ref": "c47a50a4-d423-4c19-a10e-699026b66852",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "95d9192f-5359-4d02-90a8-82b6044850d8"
        },
        "item": {
          "id": "de381c75-4604-4008-b1a6-a36fce0d8c3a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d800aac6-dd09-4997-b79c-855dfc3d0a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b81cc2c-e6e0-48a8-ae26-fbf33ecbe621",
        "cursor": {
          "ref": "36f36a0a-c5cb-4edc-9855-5eb3aadc5991",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "046481da-8dcd-4b0d-850e-d474c73b99e0"
        },
        "item": {
          "id": "6b81cc2c-e6e0-48a8-ae26-fbf33ecbe621",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "590156c0-5728-4bf5-9277-464ec1d86624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c183b15-e658-4160-bea8-b59db25aab7f",
        "cursor": {
          "ref": "3ef3b2ec-763c-47a1-93e7-023245566f71",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "aabcbaa3-95b3-4d00-9e93-b73d18ce55a9"
        },
        "item": {
          "id": "8c183b15-e658-4160-bea8-b59db25aab7f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "29bd0983-43bc-470b-be73-a0a1bb089eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe93bea-6784-4375-a0d9-c02618df919c",
        "cursor": {
          "ref": "ef72fe81-8125-48bd-a36a-338df01d48cd",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "999913f1-7bc5-40b1-bbf3-d1c7bb2e8a21"
        },
        "item": {
          "id": "cfe93bea-6784-4375-a0d9-c02618df919c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b78970c3-27ec-4ecd-a464-59f72d89e612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823fe00a-61db-4766-89da-e5d5e79edc25",
        "cursor": {
          "ref": "9bd4d52b-a37f-43f1-a93d-136540019e4c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "95206854-b392-404b-b4a0-1450060b89e7"
        },
        "item": {
          "id": "823fe00a-61db-4766-89da-e5d5e79edc25",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a00d052b-856a-4f13-b9f3-f6fa7b213e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3bbbba-27f7-412c-80a3-c54135153ffd",
        "cursor": {
          "ref": "1432ed0b-06bb-43c0-aa50-5d3bae45cf04",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "84c2f616-74d4-4977-a92e-498c8e272550"
        },
        "item": {
          "id": "8d3bbbba-27f7-412c-80a3-c54135153ffd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "39b9393a-e8ad-4b04-86f9-397682d04b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151d1ef7-bfd1-459f-b349-c493ba36c244",
        "cursor": {
          "ref": "1e683edb-71fd-4a84-9456-374d30d25124",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f54e63a5-ec27-4895-a0d7-886d4b3e7598"
        },
        "item": {
          "id": "151d1ef7-bfd1-459f-b349-c493ba36c244",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4be6469e-256f-40f4-ae2b-62100edac3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7239ab58-fe74-4810-8387-371e3be4f24d",
        "cursor": {
          "ref": "3cae1e2a-52e7-4dc4-a58a-375553ec18d2",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "197e79f5-6b0b-427f-9093-495d7472ea75"
        },
        "item": {
          "id": "7239ab58-fe74-4810-8387-371e3be4f24d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c37e8859-3dde-4740-b3f2-948725a54859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbe19ec-88ce-400d-b93d-d0d33204784c",
        "cursor": {
          "ref": "049c5a20-1936-4d07-a878-2ec41617c9d6",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fce23ef9-4951-4852-b4ed-6e33e9216216"
        },
        "item": {
          "id": "0bbe19ec-88ce-400d-b93d-d0d33204784c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "13cf0a89-7700-4788-a6d0-4b0032ebd76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417eb45a-cd34-4c05-b46f-bef5d2a677c0",
        "cursor": {
          "ref": "bbd6f8f7-a380-495c-b21a-c14f7536267c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c38b2e74-605a-4948-b905-395720f377c6"
        },
        "item": {
          "id": "417eb45a-cd34-4c05-b46f-bef5d2a677c0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ea57969c-2c5e-42d1-aa02-59751b8442c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e366e5a-d633-4fa1-a84c-799439102dbe",
        "cursor": {
          "ref": "aec6686b-37a8-4abb-87ef-4f0b9c0c179b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6f404dd1-27a8-488f-99ae-332ec67f4081"
        },
        "item": {
          "id": "4e366e5a-d633-4fa1-a84c-799439102dbe",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a38b62bd-1505-4f84-921b-dac5073abe51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9256436c-c2a3-4d80-80dc-44c9e47a6736",
        "cursor": {
          "ref": "2793430c-b501-4345-8cf4-b18727cd681f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c7943109-add2-471d-aa2c-a3fdf346fad9"
        },
        "item": {
          "id": "9256436c-c2a3-4d80-80dc-44c9e47a6736",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "afa32a88-46f4-4d09-92a4-3d821bdf1547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540745c2-80c4-417a-9698-5e048cddf330",
        "cursor": {
          "ref": "b55cdc0f-d19c-4d88-9d6e-01d34a54c15d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e3958346-02e3-4a8f-8a69-430d2179bfb2"
        },
        "item": {
          "id": "540745c2-80c4-417a-9698-5e048cddf330",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "27dfa143-b8fb-40c6-b1dc-2044e659f866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09236c8-4df8-49a9-bf7f-4c7977cd47db",
        "cursor": {
          "ref": "08515172-db62-48c6-b7d7-2334cdb0d4a2",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5fce4b68-f736-4d04-a6a8-46f711f32d3b"
        },
        "item": {
          "id": "a09236c8-4df8-49a9-bf7f-4c7977cd47db",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9d8caace-0954-497b-bb23-f167b79d9412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d0d689-02c6-4b69-b9fd-940d2a5659ff",
        "cursor": {
          "ref": "dbc22072-d6c3-4bee-909c-999effb6edac",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3599f12b-c093-453e-ba04-ff6b7b5a1b5e"
        },
        "item": {
          "id": "c8d0d689-02c6-4b69-b9fd-940d2a5659ff",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "527f14d8-faf3-4b7c-a523-25d192c9a9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1aa1c1-a99d-4346-bd27-d316df677fb1",
        "cursor": {
          "ref": "3fea4c47-287c-4c18-b723-e2affa845a02",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c20b7ad7-ca52-427d-986c-98306a2773a1"
        },
        "item": {
          "id": "bb1aa1c1-a99d-4346-bd27-d316df677fb1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9810dd44-7bde-454a-8a0f-ee74af23a105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b41ac38-a76f-4087-a708-772a35959c04",
        "cursor": {
          "ref": "303cf315-2c61-40ca-88e3-097b49c73570",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "07bbee78-46de-4ef9-b824-2fe82709996a"
        },
        "item": {
          "id": "2b41ac38-a76f-4087-a708-772a35959c04",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9b013665-d3f8-438b-bd29-d807fd404d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300a46a8-d630-4f1c-8d87-ec3b7b8d45c5",
        "cursor": {
          "ref": "4e6dfa26-e167-4889-a4c6-c4e19ebb611f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b8eda40e-23c8-4c2c-a33d-77d9addec53d"
        },
        "item": {
          "id": "300a46a8-d630-4f1c-8d87-ec3b7b8d45c5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2a3df966-22d3-46f5-89fc-08dcad046e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2124eb-1c1c-4b02-befd-af40132f3af4",
        "cursor": {
          "ref": "2d81b5bc-53e7-49f2-9e04-141a95487df8",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ddd5677b-1d7d-4f61-8d64-92797658302f"
        },
        "item": {
          "id": "2d2124eb-1c1c-4b02-befd-af40132f3af4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "487aec40-df4b-43b2-8687-f326dbcca40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cf11b2-7f93-4eae-a06d-cd739f03943b",
        "cursor": {
          "ref": "98f64e1f-a887-4d7e-a8af-dd7c496d7a87",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3bec85ea-26c7-487a-a2f3-12dc2379e559"
        },
        "item": {
          "id": "e5cf11b2-7f93-4eae-a06d-cd739f03943b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "910a5e84-7aaf-4617-83b8-0d83f882dba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03062b2-424d-4ae9-8dcb-e58aab4577e5",
        "cursor": {
          "ref": "3d0dc98d-abc2-4358-abca-12757af49f30",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cce20fb0-a3d4-422e-80a1-ad00a996f452"
        },
        "item": {
          "id": "c03062b2-424d-4ae9-8dcb-e58aab4577e5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cab96654-c321-4984-b628-ded635f9654f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d660c0-d2ee-40f7-9e18-5cb4d448190b",
        "cursor": {
          "ref": "26e2f0b8-cbff-47a7-a2b2-99fbef96815a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6c52bac1-0f32-4a14-92ec-87babb8d4c1a"
        },
        "item": {
          "id": "75d660c0-d2ee-40f7-9e18-5cb4d448190b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2112d68a-8c86-4199-9dc3-804429362216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2e174d-f467-4349-a520-fd99053013fb",
        "cursor": {
          "ref": "1e677688-89c8-4d2f-ae86-f112a6e7a117",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4522fb2a-bfeb-4145-bb91-a241bde61b5b"
        },
        "item": {
          "id": "6a2e174d-f467-4349-a520-fd99053013fb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1d81bca5-7695-4f73-abc5-a54fd0b0582c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078aa3ed-a019-4d11-9627-c378b97e9ff4",
        "cursor": {
          "ref": "1d9e212c-15a7-43d2-be2e-dd1535e45e09",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "45f0e30a-e25e-43bd-8828-41bcf3d8b259"
        },
        "item": {
          "id": "078aa3ed-a019-4d11-9627-c378b97e9ff4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5a998da8-e0ad-4451-955f-7a0dfbdd1d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a07e3d7-61a1-49c0-809c-f2ca6c11aa79",
        "cursor": {
          "ref": "204ea1fc-47c4-4f48-984f-c9a2b3268e0b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b8ff6acf-8033-4b22-a3c7-5341860487e7"
        },
        "item": {
          "id": "0a07e3d7-61a1-49c0-809c-f2ca6c11aa79",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2d8c3799-5cbf-4cb3-b181-f8c025f138f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5def7d-00c7-4584-bbb9-2c9590cd9f05",
        "cursor": {
          "ref": "4a096870-55f5-4e7f-8285-591e4f370b42",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "91cf57a3-5b84-45a5-8f07-b0778a9b645e"
        },
        "item": {
          "id": "dd5def7d-00c7-4584-bbb9-2c9590cd9f05",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4d2533a5-540d-4840-b501-bf7838a86d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59332ad-c548-499b-b9c5-22fa7b8d9185",
        "cursor": {
          "ref": "19e46724-2be9-4168-95f8-7af1ad61b5c3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "395c0148-a984-49c7-ae4d-73bd0826bcb3"
        },
        "item": {
          "id": "f59332ad-c548-499b-b9c5-22fa7b8d9185",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a6e39da5-fdfb-4ae6-874b-57f9a7b545e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed4f7ef-96f2-4de7-9a16-cead2f4539e9",
        "cursor": {
          "ref": "dde124dd-cb1f-421c-9b47-8633f8c94f68",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3f9de2bb-0d45-4762-80a8-94fa3d7c0877"
        },
        "item": {
          "id": "0ed4f7ef-96f2-4de7-9a16-cead2f4539e9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2c7db5c0-0e8e-48de-8a6e-7ec8ca6033f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b7afa6-676f-4110-8309-7b2f6b5b0529",
        "cursor": {
          "ref": "5e1a5de6-2a8a-46fa-9766-4b92bc7143ee",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6de1ad1b-642b-4dce-92a3-487b603f4fd1"
        },
        "item": {
          "id": "37b7afa6-676f-4110-8309-7b2f6b5b0529",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6a73a660-0d9b-4b37-8a62-8af78ed7ed13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e260f5-2abb-45fd-8b00-778fb09fb3b5",
        "cursor": {
          "ref": "2effba5c-d552-4b3b-9b16-6364e6d83464",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2348a0a8-182b-460d-9352-c451f78f89f7"
        },
        "item": {
          "id": "32e260f5-2abb-45fd-8b00-778fb09fb3b5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4763a28c-aef3-4867-bc73-1bd3670fe906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d3991b-3ca1-421a-9bae-ed0df53318c3",
        "cursor": {
          "ref": "c8ed5a47-9d0b-4601-932c-32f083f66287",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ef259955-f884-452f-8fad-cc8fbdb509c5"
        },
        "item": {
          "id": "a5d3991b-3ca1-421a-9bae-ed0df53318c3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7a6b0325-2f87-4192-b31c-59f0205ae808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692cc183-492e-4437-bc81-9540cf9caa67",
        "cursor": {
          "ref": "8f91a2d0-a0fd-4c57-922c-64671deabda7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "04988c05-a92f-4553-b7f4-cfd8a7b6114a"
        },
        "item": {
          "id": "692cc183-492e-4437-bc81-9540cf9caa67",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f3663906-acaf-467f-b364-9aa788e66853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5fe9b4-5db1-4546-94c1-233fa09e3eab",
        "cursor": {
          "ref": "844a82b0-ab95-4bbb-baa0-e5eeb559038a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "03f576ae-456e-4711-ad6c-f8729b548d00"
        },
        "item": {
          "id": "af5fe9b4-5db1-4546-94c1-233fa09e3eab",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c18f7010-0b19-4f61-b295-feb5c94e2ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdcc544-e421-41c1-bb91-1c29d299f31c",
        "cursor": {
          "ref": "d4ff7620-61da-4fd6-ac43-4f110641f972",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "84918d26-4068-4383-b73f-acb58fb80b09"
        },
        "item": {
          "id": "9fdcc544-e421-41c1-bb91-1c29d299f31c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "399b82e6-eed6-4232-84f1-fbe7aa632afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4747d6af-3c0e-43c1-ba4f-3abe8c9361b7",
        "cursor": {
          "ref": "68b5b235-30c6-4528-b253-ed57989322ce",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0f49b7f2-3ee5-4f42-8e42-38d258571d2e"
        },
        "item": {
          "id": "4747d6af-3c0e-43c1-ba4f-3abe8c9361b7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "81d42e13-d455-491c-89f6-fbd5efc05d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a2c972-6361-499c-aec5-866076ed8e90",
        "cursor": {
          "ref": "e1317cfc-4a0b-4ffc-9fbf-500946b3b816",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7f065c2f-8f12-462b-8c0f-dd9257ffd8c2"
        },
        "item": {
          "id": "56a2c972-6361-499c-aec5-866076ed8e90",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e7a158f6-6d45-4f2b-af54-1d2d2acaa6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a4ddee-6548-4d85-aee4-27672e351195",
        "cursor": {
          "ref": "03435801-7d9c-4263-b85d-01a2405a782a",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "375dfaf2-bb9d-48ea-bf91-c4f4bf9b8171"
        },
        "item": {
          "id": "b3a4ddee-6548-4d85-aee4-27672e351195",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d2e70ce5-6e5a-433a-a11b-9529edda776a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e637e04-8830-47b6-9e49-39075ded0239",
        "cursor": {
          "ref": "c9509abd-193a-4af7-b984-593aecc08e8c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1b31749f-5ea2-4d5a-af21-e9faae51d128"
        },
        "item": {
          "id": "8e637e04-8830-47b6-9e49-39075ded0239",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "409f57a5-7c09-4f5c-95d2-dc0f2d0756b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e6f9e3-f691-4cb6-817b-6d19f83a5939",
        "cursor": {
          "ref": "283242dc-8e90-4dc2-bfa6-587051320055",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4f9ac13f-5aed-4be6-96ad-58af1a029d81"
        },
        "item": {
          "id": "62e6f9e3-f691-4cb6-817b-6d19f83a5939",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e5224294-5af2-4de8-b7b6-e02a9399f73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e365336d-ba54-4b52-85cb-692bc62b68df",
        "cursor": {
          "ref": "29c35aeb-acce-4c95-9ade-6a02217661c6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5be79699-54fc-471e-84ac-9657c4603354"
        },
        "item": {
          "id": "e365336d-ba54-4b52-85cb-692bc62b68df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b1cba2da-c6d6-451d-a20d-0f871a49a430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb9b0fb-91a3-4d23-b273-e32610ac05cd",
        "cursor": {
          "ref": "b4f75d83-042a-4f91-9b9e-ab8d5faf1c71",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f282aaaf-8c0a-4c66-8fe3-83d186dd0d61"
        },
        "item": {
          "id": "acb9b0fb-91a3-4d23-b273-e32610ac05cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a8621b07-40d1-460c-9cc9-78cda7f8770a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fb4c1a-5442-427f-a69f-74d0e4b76634",
        "cursor": {
          "ref": "139f7980-dc17-4733-9893-39dc7bdc94de",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6f85cafb-61d1-4668-8ab6-ed82e7529707"
        },
        "item": {
          "id": "f6fb4c1a-5442-427f-a69f-74d0e4b76634",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e149ab2d-a334-4dc2-b9f8-e9e7581a183c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc930fd6-9471-4e5d-9fa1-05a49e56cc4c",
        "cursor": {
          "ref": "712d379a-0778-4910-a448-59a49be914b8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "13ccd50b-55f8-4486-b9f0-8155c7aa762c"
        },
        "item": {
          "id": "fc930fd6-9471-4e5d-9fa1-05a49e56cc4c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d914155c-90e4-421b-a010-2e36adc6529a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b45c38-660b-4f8b-be6d-6d3e4dc31e3e",
        "cursor": {
          "ref": "755f0a02-2386-4e2b-b18e-212cce4c74c4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "573a65ba-864b-4c2c-b585-9d2ca2b9ac92"
        },
        "item": {
          "id": "25b45c38-660b-4f8b-be6d-6d3e4dc31e3e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ce9ecb16-59bd-4df8-a31d-4f2c2f1b2b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4f90b3-bd11-4490-a75c-12fefe25a4dc",
        "cursor": {
          "ref": "c0f68dd9-30b3-44f6-be9b-3ef58c033192",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "04d1cd8a-4eed-4101-8626-a7c658975779"
        },
        "item": {
          "id": "cb4f90b3-bd11-4490-a75c-12fefe25a4dc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d8e27baf-15a2-4dba-8002-96b758fcdd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260a8b82-ca95-4ea7-8d31-985442f10224",
        "cursor": {
          "ref": "3416b095-0faf-4987-8b2b-2ab7c9081c2b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b0528d4c-4be1-4413-987b-4ef4a6164c24"
        },
        "item": {
          "id": "260a8b82-ca95-4ea7-8d31-985442f10224",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e1477318-6470-49f7-b521-9427bbd56444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccb99e3-8c86-448f-aa50-b663a69fa143",
        "cursor": {
          "ref": "85cf55c6-b127-4c92-a4e2-c50d33d1c43e",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3d75badb-358d-4c44-ae5e-69e6c398d5e2"
        },
        "item": {
          "id": "eccb99e3-8c86-448f-aa50-b663a69fa143",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d6a174f6-a8e9-4f5a-b390-d3b0a0b58fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfebb372-2719-4837-82d8-4621bfadfafd",
        "cursor": {
          "ref": "c984f01f-e387-46f8-87c3-9ebce18ce1e9",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e98eee06-583e-4f8c-b8b6-8910c1680cad"
        },
        "item": {
          "id": "cfebb372-2719-4837-82d8-4621bfadfafd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9cfddcbe-9430-4867-aa1f-0162f3eac6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e8af71-f7a4-4306-93de-3d99789266bc",
        "cursor": {
          "ref": "8dfcdd12-1f78-4e89-b979-9ec0526e2ffc",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d0aa0da0-10f1-4ae5-abfc-1bece3ba6457"
        },
        "item": {
          "id": "e1e8af71-f7a4-4306-93de-3d99789266bc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "088b262b-6b88-4ddc-889e-c74f8221e831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed30217-25d8-4c62-8efe-7573c102b817",
        "cursor": {
          "ref": "3590fa84-3e6b-4c52-bafc-057d9378d2ad",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fc17bf4c-b103-4e57-9f9f-a326232a2e07"
        },
        "item": {
          "id": "6ed30217-25d8-4c62-8efe-7573c102b817",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a80cfcc1-bc34-4a5b-b103-73ec98f79a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffb522f-32d5-4d19-9b88-ba3e1ca6519f",
        "cursor": {
          "ref": "685fcd7e-bce6-456c-a550-6f2b646d300a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "757cd777-e209-45cd-8003-ef5af94055c6"
        },
        "item": {
          "id": "dffb522f-32d5-4d19-9b88-ba3e1ca6519f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bbcbedf5-9f01-47c3-b5c2-2f76aee548f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b723d7-bcb2-46b8-8131-7ae650ffc7c1",
        "cursor": {
          "ref": "870c6a59-100a-44aa-b906-15b932eff8b9",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "81b1497f-32ad-45cf-806b-b578d53f3296"
        },
        "item": {
          "id": "12b723d7-bcb2-46b8-8131-7ae650ffc7c1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "835f91f3-5590-4f0b-9e08-bd33679ac31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6f2c90-dd45-42ce-98fa-9997a88f7e0d",
        "cursor": {
          "ref": "de8a28e4-b016-4a5f-81d8-333f44de2879",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d455eeae-7eea-43d6-b69b-ba653f19e3bf"
        },
        "item": {
          "id": "1d6f2c90-dd45-42ce-98fa-9997a88f7e0d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b099d366-1e4d-4cb3-aa50-3e603a076646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a42aa5a-d49a-4dd1-91d4-3da399c63e16",
        "cursor": {
          "ref": "f5f662ae-a3d7-41c8-a64f-110a5117362e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "61d418d8-864e-4dfc-9646-b06780069060"
        },
        "item": {
          "id": "6a42aa5a-d49a-4dd1-91d4-3da399c63e16",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8f8caaa3-efa4-4a6f-a16c-f24304c51e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86de6c71-b5d3-45fc-8cd0-a6e467c70501",
        "cursor": {
          "ref": "f2282a75-1ed8-451a-ab06-1a694fb1ec19",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fe72a0e6-4762-481d-8f42-1528d580b8ea"
        },
        "item": {
          "id": "86de6c71-b5d3-45fc-8cd0-a6e467c70501",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a7e1cba5-6b57-4490-930f-b1effbac030e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3453c834-2c0d-4301-9245-b896893fb985",
        "cursor": {
          "ref": "1fede8a4-9689-408e-94ce-5757bbb69b00",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "71d385cf-bfe2-4b4a-a293-e906499d8a25"
        },
        "item": {
          "id": "3453c834-2c0d-4301-9245-b896893fb985",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0e60aa2c-04e6-4609-bc58-437e0fe266e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c7ff2f-1cc6-4fa5-9779-fd7d399a8184",
        "cursor": {
          "ref": "75f41035-5be1-4502-b00e-782391454f35",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "14b71216-3f2d-4fc6-aba9-27fcc925b057"
        },
        "item": {
          "id": "96c7ff2f-1cc6-4fa5-9779-fd7d399a8184",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "33035d4d-0c05-4068-b689-21d78baf424f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb15948-ca56-46aa-94ff-7ee9e8ad8254",
        "cursor": {
          "ref": "ec84f5f6-f567-410a-8fc5-f8298c95ea7a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f91d7e72-4ad0-4797-9369-3ca0da533b3f"
        },
        "item": {
          "id": "bfb15948-ca56-46aa-94ff-7ee9e8ad8254",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d3409d1d-085a-4a47-a191-a598446a9f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31416226-494b-436c-8db9-01b5b029639a",
        "cursor": {
          "ref": "0bc68951-7c72-4fd3-9fcb-887889f1761c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "80d9e08c-8e0b-4b6e-bd16-17a71095a9f0"
        },
        "item": {
          "id": "31416226-494b-436c-8db9-01b5b029639a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8e580c9b-42bb-4dd8-bcb5-8c12cf9341b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04aea6ec-c3e4-432b-af6b-cfc7d10ab2bb",
        "cursor": {
          "ref": "8e0fa989-3139-434b-b446-bf4ff663c796",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ad006879-70d5-48fa-9d38-fd77810643cb"
        },
        "item": {
          "id": "04aea6ec-c3e4-432b-af6b-cfc7d10ab2bb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bbdba1db-9dfd-4591-9fbd-4f25b86ccb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c5f30f-c3b8-4528-98b5-04e5b56d788d",
        "cursor": {
          "ref": "6f6c290b-1575-4d0a-a780-8599418abf67",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "68f174ed-b2f8-4e2c-901d-99144f093bfe"
        },
        "item": {
          "id": "e1c5f30f-c3b8-4528-98b5-04e5b56d788d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cdfc068a-2cda-4b5c-80c8-73c0196e2033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e2609c-aaf6-48a1-a1af-0b93dd1d2488",
        "cursor": {
          "ref": "4add172e-bf33-4925-93cf-5d6a6a1a5be5",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bcec6b7e-3d56-4240-b1d5-30b1045d43a6"
        },
        "item": {
          "id": "b3e2609c-aaf6-48a1-a1af-0b93dd1d2488",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3862ff3f-273e-4177-9eee-f7644ca8a2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f87e16-2848-451a-9d8a-f721f8fcc0fd",
        "cursor": {
          "ref": "67869176-07a1-4c66-a857-009476d36893",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f5111156-a892-4550-8180-ce2ca40f82aa"
        },
        "item": {
          "id": "39f87e16-2848-451a-9d8a-f721f8fcc0fd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d185a89d-59d1-44f6-a754-8c1e8e4c6ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c93fa9e-919a-41bc-8577-bf1c76e0fd8b",
        "cursor": {
          "ref": "68360922-e77c-4d63-b069-33340d569d94",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fe4cd052-1a58-4179-ad0b-87cb353dcaab"
        },
        "item": {
          "id": "5c93fa9e-919a-41bc-8577-bf1c76e0fd8b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7ee769dd-ca30-4582-a53d-83ee12278690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32ba6b5-f0cb-4b97-a3a5-692f5fd4338d",
        "cursor": {
          "ref": "d30944b5-5761-4e03-bceb-b8a8997513ce",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1fc40ac7-1dd1-4003-8c03-4a1df163b660"
        },
        "item": {
          "id": "c32ba6b5-f0cb-4b97-a3a5-692f5fd4338d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cf1d8d92-1a23-4125-bbfb-5f3935ac05ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c847db13-b5f4-4404-91f9-c676c0a29e6d",
        "cursor": {
          "ref": "7e738773-45f0-45b3-9e57-f313db4146a4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2f04e542-74a0-417f-bcd4-29b5a044c7c0"
        },
        "item": {
          "id": "c847db13-b5f4-4404-91f9-c676c0a29e6d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8b874b55-dc4d-4201-b72d-721d4f86031b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df80d69-5f96-4906-b7ef-4741f4c73636",
        "cursor": {
          "ref": "76ee26b2-21f5-4c24-b4d4-17db5e041473",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f60e4f53-2a55-44e6-9794-33b54184f1da"
        },
        "item": {
          "id": "0df80d69-5f96-4906-b7ef-4741f4c73636",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1b82a680-d61e-4307-89f5-42da1b7f8229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e63e0e-197b-450c-a027-921706d59d73",
        "cursor": {
          "ref": "8a489026-fe34-432b-9781-4bcd17549ce3",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9b864db7-73a9-4889-bfde-cf71de30e06a"
        },
        "item": {
          "id": "38e63e0e-197b-450c-a027-921706d59d73",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8a3680bb-066a-4933-b8b8-e4244a0f2122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21de4110-1aa5-4475-861c-26a67c56da91",
        "cursor": {
          "ref": "1e3b0bd4-83fe-48dc-86ee-2a1a0ad3d13d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a2869b07-779b-4267-bdea-a861cb5c7a9f"
        },
        "item": {
          "id": "21de4110-1aa5-4475-861c-26a67c56da91",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "54d08dc3-d757-459d-bc60-36e56db1039f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cadd4f4-cf41-4f64-9df7-f3d5e71d08d0",
        "cursor": {
          "ref": "2c936528-2fda-4f2a-ac67-cbe77f8ad084",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3dea94a8-1979-49a2-98ef-6f156414c325"
        },
        "item": {
          "id": "2cadd4f4-cf41-4f64-9df7-f3d5e71d08d0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0319fb28-6b39-4782-a8ef-b1a223afb8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372379ae-44ca-4e76-be94-2ba9796ae9a2",
        "cursor": {
          "ref": "023380df-35f1-454a-a586-302ec6d399c3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f1dce206-e6c7-4679-a591-eb9600518201"
        },
        "item": {
          "id": "372379ae-44ca-4e76-be94-2ba9796ae9a2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "22061a14-a151-4400-b68b-752a65500b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b818e400-9af6-4014-927a-2a487ce9b9a7",
        "cursor": {
          "ref": "0451258d-1b8b-4385-a513-4087fa794526",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "04d22028-1d43-4e75-b4cb-7d6f678067e7"
        },
        "item": {
          "id": "b818e400-9af6-4014-927a-2a487ce9b9a7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dc29f282-789c-4d1c-b60b-a66c8dd2ba33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f609c90-87b6-4c84-8979-db7aad003b49",
        "cursor": {
          "ref": "9e62cb01-cc28-417b-aee8-6255d9b27eda",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9767c72f-8e12-44d4-977a-deb19a448e27"
        },
        "item": {
          "id": "0f609c90-87b6-4c84-8979-db7aad003b49",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "23c50c1b-a6e0-4d4c-80ef-eeeb7eb3b9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505b90e4-7331-4211-ab21-8ec5289146ff",
        "cursor": {
          "ref": "d21ebf46-fbcb-4226-9d6d-42f580f09bd0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7716fc9d-27bd-4f96-b1de-7e2dd02f30d1"
        },
        "item": {
          "id": "505b90e4-7331-4211-ab21-8ec5289146ff",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b823c86b-cbb5-405b-a140-9eb94f75ee45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e87166c-01b5-4a03-81c1-af45f83ebcd2",
        "cursor": {
          "ref": "26d131f1-d743-4f85-a20e-ac9478ebbd4a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "533908fb-455f-40b6-9191-6bfa5b8809c8"
        },
        "item": {
          "id": "4e87166c-01b5-4a03-81c1-af45f83ebcd2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4a47c327-32f0-4967-86e3-d1b3475f0003",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43062ec-3aff-4125-b89d-4d6d856a39dc",
        "cursor": {
          "ref": "212c2098-6eb5-48e2-9ae9-f706b6421a02",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4e8881c7-c94d-48c0-b4ad-37f50efabf89"
        },
        "item": {
          "id": "a43062ec-3aff-4125-b89d-4d6d856a39dc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3bbdd696-2e53-400e-b52f-21e2befdd5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8dceab48-b9bd-4966-a98e-09ccc71a87f5",
        "cursor": {
          "ref": "90730293-5ebc-44d0-9655-c38345d95fe6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "12eeed84-f195-4384-a03d-e2cbe79aeb98"
        },
        "item": {
          "id": "8dceab48-b9bd-4966-a98e-09ccc71a87f5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0864d9a9-a4b7-45cb-a9a0-1137ea8d466f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "44dce930-6f8f-44dd-8d33-c96cfee96e11",
        "cursor": {
          "ref": "06cf80e1-dbb9-4ad0-9c5b-37ae1504acb2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cd2baae2-d9a2-425b-9a6b-de3cf6a4cea9"
        },
        "item": {
          "id": "44dce930-6f8f-44dd-8d33-c96cfee96e11",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2c8dd18a-87e1-4502-90aa-bcb5d88e71d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cb4a0c9d-4437-49c8-80fa-c2cb28bfd342",
        "cursor": {
          "ref": "033bddfb-cd79-4b35-a960-9265f0d87aab",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "03d5bcae-7159-4d68-ba43-44516d8a6d87"
        },
        "item": {
          "id": "cb4a0c9d-4437-49c8-80fa-c2cb28bfd342",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8d2a26ab-3b75-47e0-82e5-4390b6556d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5bdb8a70-8a01-434a-a848-f05f95d564d2",
        "cursor": {
          "ref": "56b48530-cd38-4b44-ae92-5c50093949a2",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "54459d05-83d4-43c4-a9d1-a2a9f4aa8723"
        },
        "item": {
          "id": "5bdb8a70-8a01-434a-a848-f05f95d564d2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f3286076-6f62-4e7b-8fef-8a1ec0b1971b",
          "status": "Created",
          "code": 201,
          "responseTime": 8716,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a92ae50-9c5a-4f00-8211-c25f3e86a454",
        "cursor": {
          "ref": "ccd79bd9-bc86-47df-8de7-5a92004bef9c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "18adf5fb-8c14-4b19-85d3-8e1a22d2a39f"
        },
        "item": {
          "id": "8a92ae50-9c5a-4f00-8211-c25f3e86a454",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e91704f8-f241-4fc8-8564-8b3f579871c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "416f71f4-b3a1-4a5b-a13d-61f6fcc46d8c",
        "cursor": {
          "ref": "d8cb066b-e86b-462c-a2f5-a6322eb0973b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2482b5a6-6c18-40be-969d-d76d14f7a952"
        },
        "item": {
          "id": "416f71f4-b3a1-4a5b-a13d-61f6fcc46d8c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "43a60a6e-e82e-473f-a058-fa96c0bd5233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b3acafa9-c5cb-4968-91cd-db4707ddb6b5",
        "cursor": {
          "ref": "dd25d241-3ad3-4db2-a35d-9ee46b1dcb55",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "deab7aea-bb60-4eed-b4c5-96996101cedc"
        },
        "item": {
          "id": "b3acafa9-c5cb-4968-91cd-db4707ddb6b5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e401d019-9fbc-4c31-8252-9fce8abe094e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe73bcd-c8b2-4c96-b36f-a5124584e92b",
        "cursor": {
          "ref": "c89b6ed3-8e39-4a11-b2d4-35fc5f2a6283",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9d0e1171-2aa0-47f3-aa89-70daf1cd25c3"
        },
        "item": {
          "id": "fbe73bcd-c8b2-4c96-b36f-a5124584e92b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c24d8d81-e4f7-4a58-bb9c-1669a8cfe342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b23cad-1f36-4e69-9b44-faedd05021a3",
        "cursor": {
          "ref": "23d05c7d-772d-4cf2-889e-65679fcfd516",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2b3a468e-5924-413e-ab9d-7be1e6511dc5"
        },
        "item": {
          "id": "69b23cad-1f36-4e69-9b44-faedd05021a3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ffa5d952-b190-414e-b7bb-fc7068549aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252327d8-f1d5-4e8a-9cee-3f54662ff61d",
        "cursor": {
          "ref": "e9a9c1f7-83a8-4691-b4a5-c970669f5eef",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f12e3dc9-3adb-49cd-9c20-ee3daaaad7a0"
        },
        "item": {
          "id": "252327d8-f1d5-4e8a-9cee-3f54662ff61d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2af2cb09-9713-4aca-bd41-c18435f7c38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01561396-45f2-4192-a17a-401babec4749",
        "cursor": {
          "ref": "a6dd9579-e36f-40f3-8039-12c0fd0d10d5",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aaccdcb1-5d27-4f1c-96f7-dd8d11c72313"
        },
        "item": {
          "id": "01561396-45f2-4192-a17a-401babec4749",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4133570c-1d3a-4e22-ac98-b3fb55f4c112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31caaeb0-a180-43c6-89e1-98b8b57840b5",
        "cursor": {
          "ref": "f937f454-1edf-4438-9923-7fbc9a5a72e5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "81982057-2dde-484b-9a0d-504292027ec9"
        },
        "item": {
          "id": "31caaeb0-a180-43c6-89e1-98b8b57840b5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4695ac9c-3f62-45f8-9360-ee3ae6c296b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b41e2a1-62fb-4c90-bbf2-3bcbeb3836c0",
        "cursor": {
          "ref": "be35db94-bfc0-4334-9948-18184c896e3b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f45bee7d-7b80-4f80-a135-b79b5d2dbb65"
        },
        "item": {
          "id": "8b41e2a1-62fb-4c90-bbf2-3bcbeb3836c0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "85a5c0bc-4e34-4360-9229-1e3a64731a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e60b563-3b99-4bd5-940e-501ef5cce3a5",
        "cursor": {
          "ref": "653cf751-d4f7-42a0-8107-e3c7822c4246",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bdde4815-c758-4cc5-b6e1-11523c2ab444"
        },
        "item": {
          "id": "9e60b563-3b99-4bd5-940e-501ef5cce3a5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b421c12b-64ef-4eea-8d6e-f561b3149443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ab846c-598e-465a-892c-be77993f8a9f",
        "cursor": {
          "ref": "39eff38a-dd76-4525-b668-d2763e8be896",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "996804a8-0e06-4dc6-9ef1-bacedf94c697"
        },
        "item": {
          "id": "20ab846c-598e-465a-892c-be77993f8a9f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ad4ca5f6-a079-452c-b302-d304549805e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b6b0f6-2432-4131-9333-f4f7355f5414",
        "cursor": {
          "ref": "ed2a2fae-f5b3-4119-9fbb-4cff64541d71",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4164f0e4-0145-4481-bf62-455e0b357b3f"
        },
        "item": {
          "id": "e0b6b0f6-2432-4131-9333-f4f7355f5414",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4f94f8be-4489-4d31-bc2c-1ec5a7444532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae096f73-121c-4789-9065-3ee161f3ed88",
        "cursor": {
          "ref": "e6f99b05-8ba3-4b11-9dec-2a33f718cf83",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c177e2da-bc2f-4cfe-bd72-f3da41483f7c"
        },
        "item": {
          "id": "ae096f73-121c-4789-9065-3ee161f3ed88",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d485f888-6d55-4980-a015-e386df4debb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724e76da-35b7-46c8-92eb-46ae76cbee86",
        "cursor": {
          "ref": "c25aa104-8107-48c9-9951-06981a9da23d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e0c0651d-bb08-4dad-b68b-eb5c01d0a588"
        },
        "item": {
          "id": "724e76da-35b7-46c8-92eb-46ae76cbee86",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9d080bc3-6df6-4b45-b4f8-1bc322823008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b7569b-1f49-4eda-afc2-8b4687099caa",
        "cursor": {
          "ref": "5495751d-3d21-4758-881a-a4e10243618e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1a86caa7-be4d-4d0b-bf5b-8069c6130e59"
        },
        "item": {
          "id": "14b7569b-1f49-4eda-afc2-8b4687099caa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e2e2238b-9da1-4741-bf2d-7e4df62e5f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea873294-9850-42b5-91a8-6bd335d9a87b",
        "cursor": {
          "ref": "7ac9f3d6-f499-40e0-a156-3a6650bef07b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9979e767-25ed-4d64-851e-691a4c5d0afc"
        },
        "item": {
          "id": "ea873294-9850-42b5-91a8-6bd335d9a87b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d2276b2f-78cc-4de5-a072-c72d74e984ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850b2ad3-f9b9-46e7-b276-07f16c814152",
        "cursor": {
          "ref": "c2147f29-7282-48bf-a21b-532ad4269280",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5b3fe84a-eba3-4a29-a7fb-e00ce8447e9e"
        },
        "item": {
          "id": "850b2ad3-f9b9-46e7-b276-07f16c814152",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bc975a1c-b872-4460-ad26-724b91d86c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568bbe5f-7fcc-490b-b523-f3cfa3fb6d82",
        "cursor": {
          "ref": "57d7b03e-58e5-4adf-aa89-269465be06d0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e9dd7ce9-e516-44e5-9551-a6ad62a3f805"
        },
        "item": {
          "id": "568bbe5f-7fcc-490b-b523-f3cfa3fb6d82",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7626cfb3-01ba-4751-9451-f335eeb569c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2ce242-d0b8-4b5d-b44d-43be10f5b962",
        "cursor": {
          "ref": "089cc54c-64cd-4f31-a3ba-07c2a4fbc381",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0f7fce1a-64a5-4911-afbd-f71394fb441d"
        },
        "item": {
          "id": "8a2ce242-d0b8-4b5d-b44d-43be10f5b962",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "666e44f7-b197-4d8b-b938-4629b8406dc3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "3f230049-6d98-41ae-bd8b-cdde44028dcf",
        "cursor": {
          "ref": "8de74e58-83bb-4fd0-a524-98eb63b09ce8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d9fdc81d-a7e0-4c65-a9bf-297262f93f74"
        },
        "item": {
          "id": "3f230049-6d98-41ae-bd8b-cdde44028dcf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "52a57659-af14-4c90-885f-f85072e8b22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ac5040-9139-4dc7-96a4-0732969d2e21",
        "cursor": {
          "ref": "99d3c6e8-38ef-4b6c-9ed5-ac4fcc7c228a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5e17405d-ebb4-4f28-809c-8f3046008d87"
        },
        "item": {
          "id": "e8ac5040-9139-4dc7-96a4-0732969d2e21",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b89d012a-de41-4683-93d5-1e94979584c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fd102a-8e8e-496f-8e5c-6e18e79c4187",
        "cursor": {
          "ref": "01285ed6-6bbe-4eb2-9788-2ff09f9441de",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a5694b02-dad7-49e7-a110-5983eb62380e"
        },
        "item": {
          "id": "e8fd102a-8e8e-496f-8e5c-6e18e79c4187",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "637e2dd8-15df-4c04-9697-b1afd49fe7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afcebe3-999d-459a-b0a0-82a4ca54aab1",
        "cursor": {
          "ref": "78d49c41-24fd-434c-b1cd-a62334be52fd",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3c933fb5-690f-47cb-9029-74b44529536c"
        },
        "item": {
          "id": "8afcebe3-999d-459a-b0a0-82a4ca54aab1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7acee347-a867-4bed-b977-1254a676e3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e2b223-dfe1-4976-99ee-67e462a11f89",
        "cursor": {
          "ref": "4137c3fa-3249-4ab4-b0fb-4408ebd7a883",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1591a213-4c8d-4609-a5af-3ec6fd2b6f5b"
        },
        "item": {
          "id": "80e2b223-dfe1-4976-99ee-67e462a11f89",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "18aeffa9-ab27-4d0e-bfc2-3130d7ee4def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055ba55c-9f35-45db-9858-c1fbfdb0cf34",
        "cursor": {
          "ref": "9929cc2a-8aee-41a8-bcc4-1ea5cb1fb4ee",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b1c125b8-3e61-4758-9bec-0c3b7e151610"
        },
        "item": {
          "id": "055ba55c-9f35-45db-9858-c1fbfdb0cf34",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bdd09089-6dbd-4148-a892-72ffdc835224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52cc01e-e012-4022-a471-7d681b4ace72",
        "cursor": {
          "ref": "15279ae9-8f59-48c0-a54a-d4e0daffee0b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1ee35b5d-33fe-4453-be07-b0d30a05fcfa"
        },
        "item": {
          "id": "f52cc01e-e012-4022-a471-7d681b4ace72",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "35221340-34a1-45c1-92d6-cbad642b8ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b647ec0-bba6-4d71-9bf0-420a9212ee45",
        "cursor": {
          "ref": "474ad2bf-1d83-4c61-98b6-3cf2600b4111",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c2f2dab0-f06a-49ad-847d-3f97e070a1a4"
        },
        "item": {
          "id": "2b647ec0-bba6-4d71-9bf0-420a9212ee45",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "487c74c2-13cc-47d5-8972-ca092180fe2a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "e9a308b5-3054-4a96-8cdd-d4db4599457b",
        "cursor": {
          "ref": "eb146c7c-a536-4d5c-af58-bdd1a4bd5728",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "64f29dfc-fbb0-41c8-8cae-9a9dc6a8034d"
        },
        "item": {
          "id": "e9a308b5-3054-4a96-8cdd-d4db4599457b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7130e8ff-a80b-4a72-a948-028071809278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9417330-4b22-43ce-a835-03a1520861c1",
        "cursor": {
          "ref": "fc2c7f06-9f02-40d4-8651-71e068abd5eb",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a35a4e24-d9af-436c-be8b-747f23a9f749"
        },
        "item": {
          "id": "a9417330-4b22-43ce-a835-03a1520861c1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1e7dfffe-2162-4d55-895f-4f75d8c2f01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a36923-b144-475b-8ecf-58932b65dab7",
        "cursor": {
          "ref": "7735cdc1-0d09-4582-b1f5-c142db2b03d5",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4a72718f-8295-4a15-9a55-1b1816b4eb86"
        },
        "item": {
          "id": "b2a36923-b144-475b-8ecf-58932b65dab7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e083f0a8-50da-4a36-9d67-4b08f3cd340e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82155ea-436f-4ed5-8e62-aebc5ca43b40",
        "cursor": {
          "ref": "62013d07-8017-4f3f-a1c1-1adc93299dba",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "07eced0c-5056-4dfa-bab2-24e55e4141a4"
        },
        "item": {
          "id": "f82155ea-436f-4ed5-8e62-aebc5ca43b40",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5378322c-5314-481e-9b7c-4319169535eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a5cebd-adf1-4a70-b83e-5c07a3c5cc39",
        "cursor": {
          "ref": "908908c6-e304-47d4-9e33-7b1129cdc31d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c06c93ad-f0f2-4e3d-903f-3214dee5c10b"
        },
        "item": {
          "id": "95a5cebd-adf1-4a70-b83e-5c07a3c5cc39",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "753651f8-1553-4d71-a9bd-186b2fa6d8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f308df4-7ff5-49bc-935f-b62870d2bba8",
        "cursor": {
          "ref": "413c09d5-fa8a-47c6-be53-91bf88907abe",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "56a93ed0-cd2d-496e-b3bd-d14b319cba8d"
        },
        "item": {
          "id": "9f308df4-7ff5-49bc-935f-b62870d2bba8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2713ba1c-eddc-4f6c-bbaf-de1dd141ccfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb46f60-07d0-4ab5-bd8c-99262c9e6bc3",
        "cursor": {
          "ref": "1710f9a2-c431-4308-8588-21ac8913c1df",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e2da381d-79b5-4ffa-8199-a04ba14a88ca"
        },
        "item": {
          "id": "bdb46f60-07d0-4ab5-bd8c-99262c9e6bc3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1bc5fb1c-6cf8-44dd-95aa-777731034c54",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 107,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "0c033dad-ca53-4234-9788-671cc1e761aa",
        "cursor": {
          "ref": "50f48b6c-bfa0-4619-857b-3b395ceb2146",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9b6fc46b-91e4-41ba-a7f2-7746bf5dda06"
        },
        "item": {
          "id": "0c033dad-ca53-4234-9788-671cc1e761aa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b60ca017-2a8b-400a-9bef-1cf959c6952e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c20a94-43a4-4b91-ad75-c01e9709f779",
        "cursor": {
          "ref": "f8ed1d02-18cf-4918-a2d3-1e20c2f46464",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "41c4e85f-9a02-4a7b-a693-fdaf2a9632d2"
        },
        "item": {
          "id": "50c20a94-43a4-4b91-ad75-c01e9709f779",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e59818d-0c32-4c43-bd5f-d3838c57e8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a2090a-1a38-4c44-8843-896d6c6c0784",
        "cursor": {
          "ref": "b1946e55-3c00-4416-843b-7022700e4060",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "02d1b33b-704d-4314-b081-970ce4845af9"
        },
        "item": {
          "id": "c7a2090a-1a38-4c44-8843-896d6c6c0784",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aa64c7e4-6c56-4950-9654-2a6a3ff186b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b763e83-487d-47c8-9841-d7245686b7b2",
        "cursor": {
          "ref": "62787071-c0ac-4175-8ab9-8e29a1acad08",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "216e677b-fb60-4457-ad35-b94e3a5da7ea"
        },
        "item": {
          "id": "8b763e83-487d-47c8-9841-d7245686b7b2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "10ccfec2-bc9e-472f-a17a-37b0cadb8691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0175ea9c-f14a-49d7-b899-9042c51788d5",
        "cursor": {
          "ref": "b4218810-f09b-4e0e-86f0-47539b9aa98d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "86034928-63d5-4d75-9534-de4d195acf01"
        },
        "item": {
          "id": "0175ea9c-f14a-49d7-b899-9042c51788d5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f3158f64-a5ab-4adb-b786-f4417c85aecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b337670-6757-4c01-b2a0-ec1bb711d25e",
        "cursor": {
          "ref": "3fb7b51b-1f4c-408a-8127-647c77dda2d1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "918e6b64-78a4-451e-97d3-38b4cdfbce05"
        },
        "item": {
          "id": "3b337670-6757-4c01-b2a0-ec1bb711d25e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4dfadbb7-edcd-42a5-b23c-28334baa43d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b1f8bb-3567-465b-9b09-31ec83751c94",
        "cursor": {
          "ref": "819d9e54-6cf4-443f-8d68-89b40db5c2f1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4bcaf47f-e681-4acc-9ed1-7f30760862ff"
        },
        "item": {
          "id": "00b1f8bb-3567-465b-9b09-31ec83751c94",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "09bfff01-0801-4a04-817c-90c5bea673b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c90b1a4-2dbd-4fc7-982e-0d60ba78e61d",
        "cursor": {
          "ref": "5113ac13-6413-4849-b4e7-18ac0413aaf4",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f30843ba-2ff3-4c0b-a3af-db4fb3544f28"
        },
        "item": {
          "id": "9c90b1a4-2dbd-4fc7-982e-0d60ba78e61d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5d388a1c-621e-4d5c-b0f7-032136641c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb33e76-62f1-48c0-b78b-6163f3d8bf4e",
        "cursor": {
          "ref": "816ebe3b-d452-4ce0-9e54-bda198380f9c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7c93297f-2469-42c7-90f9-e954e3a43ed7"
        },
        "item": {
          "id": "9eb33e76-62f1-48c0-b78b-6163f3d8bf4e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1cf61f10-0148-4e11-ae0c-4b2372c82d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f18c93-47d8-46c6-ba91-381963adb4cc",
        "cursor": {
          "ref": "ffc2a69d-922c-4637-80af-6b4d325ca350",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "50684669-b1b7-43d6-b610-b23014d419e6"
        },
        "item": {
          "id": "58f18c93-47d8-46c6-ba91-381963adb4cc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "11cb30c6-7917-4045-bb6a-7eb4faf9ee63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6b04ce-8ad1-4700-bbda-51ad983398d9",
        "cursor": {
          "ref": "a959f81b-239d-4143-8d0b-3ca7d0a5cbe7",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9951348d-2739-44e8-865a-d161d9aaa9b3"
        },
        "item": {
          "id": "1b6b04ce-8ad1-4700-bbda-51ad983398d9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d40e4ca1-3146-4778-8cf2-e10a08ea01e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090d5e08-3cd8-4139-8ba0-43caca30e302",
        "cursor": {
          "ref": "f56b5876-815a-440b-ad5a-915532cfee19",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9b0de70e-3296-4ad2-a937-61331fd21057"
        },
        "item": {
          "id": "090d5e08-3cd8-4139-8ba0-43caca30e302",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1e07b4e6-e5a5-4406-82a3-1568c7b2ee23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bbc1c8-1b24-4f04-a482-70777a190e5c",
        "cursor": {
          "ref": "2d39b430-bfb0-41e4-8059-dd5549012702",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e139301f-51d9-488f-b8af-ded5fab3cd3d"
        },
        "item": {
          "id": "71bbc1c8-1b24-4f04-a482-70777a190e5c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "299926e3-e53c-4f1a-9dff-610805ad24cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312ee453-400f-4818-aa73-7a1d7094eba3",
        "cursor": {
          "ref": "a9562227-8b1c-4807-a4c3-ce0c169627fb",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f8361f52-935d-4bfa-9b24-6855a2b3d39d"
        },
        "item": {
          "id": "312ee453-400f-4818-aa73-7a1d7094eba3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b10338ae-1dfe-4b1c-ae58-c105fd24e52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a41032a-cbfd-4352-93d6-b26c320d69a7",
        "cursor": {
          "ref": "8499b746-87c6-4459-82a4-eb1172235add",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c5939d1f-bd1a-4cc6-a7b6-e66314846fcd"
        },
        "item": {
          "id": "3a41032a-cbfd-4352-93d6-b26c320d69a7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e3bc5eea-c4ae-482a-beda-0b4b2332d9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597a5c06-a49b-4689-938b-008ab59d9862",
        "cursor": {
          "ref": "5537efa7-a84e-4cb7-b59b-2c57d7a7972a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "168961dd-c943-429e-8c62-748d9804ab30"
        },
        "item": {
          "id": "597a5c06-a49b-4689-938b-008ab59d9862",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "34450405-c31c-4bae-8877-a68d63c201e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b1460f-e7a9-4228-a072-ba5b62631cad",
        "cursor": {
          "ref": "60f6db56-30ff-464a-9a5f-780b686e50ea",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9ffae106-2b39-4452-b1ba-3f65b20db3cf"
        },
        "item": {
          "id": "b9b1460f-e7a9-4228-a072-ba5b62631cad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3f04bed8-5ca0-4490-b7af-043ea2989eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e8fa4a-a94d-46d8-b530-f65416f04994",
        "cursor": {
          "ref": "fca94ad7-c874-4645-a822-a87042f1e735",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "93a978a4-0d48-4fb5-bcaa-07309ff7f597"
        },
        "item": {
          "id": "94e8fa4a-a94d-46d8-b530-f65416f04994",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4d78dbe0-4460-490d-8ddf-3e68a263f53b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "d362cecd-9756-460d-88bf-71cd32ef9591",
        "cursor": {
          "ref": "7a0bb6f8-5fc9-40a0-a267-86b03f6b06ee",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2c5e5b97-25f9-4bad-913a-cf9bee260cdb"
        },
        "item": {
          "id": "d362cecd-9756-460d-88bf-71cd32ef9591",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "37e0714c-148c-4625-90e6-e44526b5abd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e32ccc-21c6-48a6-9b26-66a016e41f13",
        "cursor": {
          "ref": "4a3ec028-a778-49a6-92f5-d0e4d03bde63",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6bea7b7a-234e-46ab-bf9c-18dd76233276"
        },
        "item": {
          "id": "07e32ccc-21c6-48a6-9b26-66a016e41f13",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cb57c13c-81a7-4b70-89b8-c0ed8b1fb489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cc119c-8b8f-4b95-8420-2dcfaf7a46e9",
        "cursor": {
          "ref": "a4e13253-04f9-4fe0-8579-0340e947176f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bf709a02-2fb8-4a42-8044-04e2c7465e50"
        },
        "item": {
          "id": "d6cc119c-8b8f-4b95-8420-2dcfaf7a46e9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fc1ba0ca-80ff-4837-a344-c1bb877d2acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11567769-76d7-4086-9954-d006d889a4a8",
        "cursor": {
          "ref": "f1860ec4-65e3-4ff3-8f38-7b197c02d6c3",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "650b33b3-be02-4165-8aa7-cc19411894f1"
        },
        "item": {
          "id": "11567769-76d7-4086-9954-d006d889a4a8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "210cd902-0862-421c-9b41-8f506455d168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3f8dce-e53c-4aa6-9ca9-6e0561624904",
        "cursor": {
          "ref": "71061282-b82e-49d8-94e6-6db7613e1cda",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "559ffd4c-760a-4d8d-be29-d18d423d75f5"
        },
        "item": {
          "id": "2f3f8dce-e53c-4aa6-9ca9-6e0561624904",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "443f814f-8c85-46ec-8e49-a727d273d5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd163c7-08bf-4cbe-b54e-c91212e4d638",
        "cursor": {
          "ref": "2f428409-7f67-4012-8c8f-71ca2ad5ab7e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b1a32162-78b2-49f5-baaa-3830dd4c2ea1"
        },
        "item": {
          "id": "7cd163c7-08bf-4cbe-b54e-c91212e4d638",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0318aad3-a198-4005-8a51-3ac9952ed6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe89436-b69e-4853-9e65-32c57eb8502e",
        "cursor": {
          "ref": "7ff30b9e-a147-4248-b4cc-8cff428394af",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "37780641-a1d6-4bc2-a7e4-bab75d471b02"
        },
        "item": {
          "id": "dbe89436-b69e-4853-9e65-32c57eb8502e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e36af2ae-7add-4700-a3a5-2f01c259ae53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cf7a45-9301-402a-a71a-0cebf5c4dfa5",
        "cursor": {
          "ref": "29ae49bd-ed52-4456-8ec9-eb8ff30dbb69",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "09209097-c15a-42ba-b1a4-cd4175e94b25"
        },
        "item": {
          "id": "30cf7a45-9301-402a-a71a-0cebf5c4dfa5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7f376630-60a1-4dc0-b376-b82d64197228",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "24768d5a-0747-4ff8-9015-17ef46ea95d9",
        "cursor": {
          "ref": "d79b7906-2287-43dd-be08-8aba047554b9",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8bb7d7f5-e67d-47af-94b9-0d48499fd63a"
        },
        "item": {
          "id": "24768d5a-0747-4ff8-9015-17ef46ea95d9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "03652ff3-6c33-4622-abd4-15ab4339e5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4302c598-6ddc-4993-9caa-2f109b6afd9b",
        "cursor": {
          "ref": "a0224301-de7d-4a82-8d5b-d27ae59479d3",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "afc6d594-e295-4f60-acae-cc1378fce466"
        },
        "item": {
          "id": "4302c598-6ddc-4993-9caa-2f109b6afd9b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5740fa8c-57e6-4ede-a724-cd21eb0b3e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b0a0bc-4786-4125-bffd-01218ef58c74",
        "cursor": {
          "ref": "7b24ffdc-0550-4225-92cd-b9f1fa62d0e8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "aa15379d-0121-4032-a847-3cb4168570a0"
        },
        "item": {
          "id": "d4b0a0bc-4786-4125-bffd-01218ef58c74",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e94ac0de-218b-4ccd-81d9-2cb442341ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb3e339-5fb6-46b0-99f1-f263227b7af9",
        "cursor": {
          "ref": "d5c87073-6604-4c45-9c0e-e877de457deb",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d29964c5-e93c-4d5c-bcb3-3a82812229b3"
        },
        "item": {
          "id": "8eb3e339-5fb6-46b0-99f1-f263227b7af9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "96239d74-1eaa-427a-83b0-32ce645a1010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065457da-fcd6-4e5a-96fc-206d83812f5b",
        "cursor": {
          "ref": "ce9c97bc-a8dd-49dd-af14-5301b07bbf3d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fa77a404-da99-4af4-94ab-77caa01024c1"
        },
        "item": {
          "id": "065457da-fcd6-4e5a-96fc-206d83812f5b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b91bfdd8-2ca8-4656-82d1-adf5de0b84ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7ce2a2-0ddd-45d3-be86-11706815a528",
        "cursor": {
          "ref": "ead9bab5-29ca-4250-8626-7de8087b3afe",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "153d9e23-3ec4-45b5-ab62-87d248ad9807"
        },
        "item": {
          "id": "ea7ce2a2-0ddd-45d3-be86-11706815a528",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f15d6f8c-b928-4ebd-841f-56fb42c13bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70004a6b-c067-459c-8b48-11b3ac9451ab",
        "cursor": {
          "ref": "367ddcd9-4186-4036-8c51-4d2acb10c2e2",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c0aed954-a219-46d4-84b8-7b1beefd2f6a"
        },
        "item": {
          "id": "70004a6b-c067-459c-8b48-11b3ac9451ab",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "366e5239-1a28-4dad-874b-9d2ee82072df",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "1bf0b4a7-af10-4517-8767-580e6617e5c5",
        "cursor": {
          "ref": "695d5773-cc91-4743-9d51-9426d362078f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a0d7c632-9965-4169-b0aa-2c1f1335faf7"
        },
        "item": {
          "id": "1bf0b4a7-af10-4517-8767-580e6617e5c5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e3e146f2-2fb2-46fc-9fd8-b5d05f6428b8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "e7d1207d-2881-4852-bbeb-0f280f98b102",
        "cursor": {
          "ref": "0a93d146-445b-4ec3-a9b1-668b9c331e24",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fe2ed547-d7c9-46b9-b0f4-04efbc3645da"
        },
        "item": {
          "id": "e7d1207d-2881-4852-bbeb-0f280f98b102",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "73036092-3c84-4f56-8897-af1f0aaa7162",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "5b0fdbb6-df45-4797-b38d-3a0917bd3c1a",
        "cursor": {
          "ref": "c3a6e693-40b7-4937-a8b8-0105689f393a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7b7df22e-887a-40b2-a5a1-61e42bb96244"
        },
        "item": {
          "id": "5b0fdbb6-df45-4797-b38d-3a0917bd3c1a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "43ab40f4-f250-44c9-9d16-cc122685bb26",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "4d893f97-b88b-4982-94dc-a67c61c927d1",
        "cursor": {
          "ref": "b87db3eb-94a8-424f-9186-bc38ed8abec8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f3ac3202-a95d-47e5-9489-45953a12e2c3"
        },
        "item": {
          "id": "4d893f97-b88b-4982-94dc-a67c61c927d1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7459624d-02e5-408e-a4ce-1d04688cc33b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "6141edee-e313-40bb-be79-9623ba55b677",
        "cursor": {
          "ref": "6d9eb48b-e61d-4e98-8234-d5a472f9a126",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e18d6519-fae2-468e-85d5-9b4a1aa97b00"
        },
        "item": {
          "id": "6141edee-e313-40bb-be79-9623ba55b677",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "573c7def-0b57-45d8-8a8b-34432eb23478",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "274073d2-06fb-4d6a-a268-b249fbabe8ae",
        "cursor": {
          "ref": "869bcf4a-04fe-4988-9397-3c878b9e9bbf",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "97acbbad-a434-4429-8ea5-2f4b0ca8d07c"
        },
        "item": {
          "id": "274073d2-06fb-4d6a-a268-b249fbabe8ae",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6e60f7e5-a455-4747-b156-282152baf529",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93758b33-49e3-403c-a136-1741a465479c",
        "cursor": {
          "ref": "f85c95e0-8d93-4561-977e-4305dc0499fb",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3fc56f23-e154-4421-80a8-a3c5bf3e147c"
        },
        "item": {
          "id": "93758b33-49e3-403c-a136-1741a465479c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4034c375-5317-491b-817f-84cdb38ad401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03af0eb4-721f-4311-bbcd-8e20503cf9e3",
        "cursor": {
          "ref": "cb96f9bb-de33-4a5e-90c8-a58a24a2c3d2",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b6e84226-c674-47c5-928e-975d91443c77"
        },
        "item": {
          "id": "03af0eb4-721f-4311-bbcd-8e20503cf9e3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d2dfe8ef-570e-4c4f-990d-a6647168e099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73f0cbb-7449-4c34-a37a-72ea539bf784",
        "cursor": {
          "ref": "14508baf-96ef-40a4-8442-ffbaa95a2f6e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c86599de-5a1a-4c10-9800-9be8b8da4f58"
        },
        "item": {
          "id": "d73f0cbb-7449-4c34-a37a-72ea539bf784",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0c9af1c7-64b5-4670-88b0-752efbb3a631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f213544-863f-4981-a894-0f444cf5215f",
        "cursor": {
          "ref": "b9581fff-31e0-4444-b207-c1fbb6170cad",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "339f1ff1-088e-4082-b4d7-e6a73142b2bd"
        },
        "item": {
          "id": "2f213544-863f-4981-a894-0f444cf5215f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4e559900-17cc-48d2-8d3c-e1cd612de6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10df23c5-dcd3-4311-9c26-13b8b94a27b3",
        "cursor": {
          "ref": "7d389521-0a2b-497c-a530-0280a186b000",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "137d7cf8-60fd-4077-b328-680721b3fbc4"
        },
        "item": {
          "id": "10df23c5-dcd3-4311-9c26-13b8b94a27b3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2c2894a3-9635-4703-9551-bd89859042c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bbbf25-a777-4cd9-867e-5c61e4d3aa16",
        "cursor": {
          "ref": "1729ab32-dddf-4e8a-9587-6a4360f83910",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f0a0c40f-2ca8-4d88-8c64-0be52575e761"
        },
        "item": {
          "id": "97bbbf25-a777-4cd9-867e-5c61e4d3aa16",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c3171e0f-d093-4614-a31d-2cbd4120938e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c4ee1f-18f0-4606-b142-61cf68370e88",
        "cursor": {
          "ref": "7672de94-7867-4edc-b38c-08a8d144bdee",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "484f2411-700e-4b9d-9ea0-aeea38955dc7"
        },
        "item": {
          "id": "b2c4ee1f-18f0-4606-b142-61cf68370e88",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ed23f183-0879-4eae-9906-4c678f1e1de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ff391d-f2ef-4bcf-bcf6-8ab0633bfa4d",
        "cursor": {
          "ref": "be4a5149-bbe7-4609-a9a6-6c5d8007dc3d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e6e70349-ddb3-4696-9ee4-d26bea558064"
        },
        "item": {
          "id": "02ff391d-f2ef-4bcf-bcf6-8ab0633bfa4d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e27be1f4-349e-41e7-8098-58ef0f754b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe78cba-156a-4d9b-a556-742a6c191418",
        "cursor": {
          "ref": "e21e8a36-a083-4e6f-8070-f76752c6ccf3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "81ff9e7d-b5ef-4715-8b6c-b10a7d9a2c5c"
        },
        "item": {
          "id": "ffe78cba-156a-4d9b-a556-742a6c191418",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4b12efc1-17e5-43d2-9de3-96908dacca01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9904c7-89d6-4e6f-a54b-c5ff317de081",
        "cursor": {
          "ref": "33d475f7-3fb4-432a-a062-7c552e4f0fad",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "db4dbbc0-2cab-457c-8995-d31fbce436fd"
        },
        "item": {
          "id": "fa9904c7-89d6-4e6f-a54b-c5ff317de081",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "041086e2-b457-40bd-b34d-49386ef9d9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c306ef-3044-46f6-a160-4cfeda4fca3a",
        "cursor": {
          "ref": "dc3f641b-fce1-4fcf-a525-16cdcf985f80",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4c350f92-cd22-4c32-8b76-1e56ccc85619"
        },
        "item": {
          "id": "57c306ef-3044-46f6-a160-4cfeda4fca3a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "df299de2-94b8-46e4-bbc3-0b3ee339956f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcffd51-55ba-4fac-8d36-c5524384cbfc",
        "cursor": {
          "ref": "bf901651-97e3-48c5-9145-2d7de42654ff",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7154002b-9ebf-4387-996d-d19718e4e68a"
        },
        "item": {
          "id": "ebcffd51-55ba-4fac-8d36-c5524384cbfc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a6cdefb9-4aa9-4c71-9a1e-3957c03b0a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8d0f11-4542-48d3-9a20-5d6b4ee2efb5",
        "cursor": {
          "ref": "c864ed69-5cf9-400e-9055-ecf4da25f3f7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0ef4c141-93fa-43e1-a141-11f53435e2bc"
        },
        "item": {
          "id": "bb8d0f11-4542-48d3-9a20-5d6b4ee2efb5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5782bf3a-f373-4ca2-82b2-c7f1766b03e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19291e0e-5daf-4aad-8001-7a8cceddad0e",
        "cursor": {
          "ref": "b1b54cda-6281-4323-bfaa-56c58f659879",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f8b1dce7-7205-4ad9-b133-1b3975522d16"
        },
        "item": {
          "id": "19291e0e-5daf-4aad-8001-7a8cceddad0e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bc542d68-da9a-4c50-aa63-27238f435ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8227eee4-6fb6-4f88-a3d3-f9f6f7485c02",
        "cursor": {
          "ref": "1e289f1c-0e90-49ed-b255-dbdb97212027",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9e2cfc5b-a70e-4ac3-a0fe-cf5eb118b71d"
        },
        "item": {
          "id": "8227eee4-6fb6-4f88-a3d3-f9f6f7485c02",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "19d29389-6554-432f-bb81-626c8282f9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea88685-f8a0-4f6d-aab4-212b25abf952",
        "cursor": {
          "ref": "7b67081f-7db8-4561-8303-a9ea27397763",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "97c96d3c-a354-464e-aa1a-3a35a9c8323d"
        },
        "item": {
          "id": "3ea88685-f8a0-4f6d-aab4-212b25abf952",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c4143269-59bf-4585-80d7-03ed84df1a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b8bd5b-b52f-40e9-9350-da076ffecca0",
        "cursor": {
          "ref": "1b49de04-e5dd-4665-b179-fcb49f32b8aa",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1402a1aa-aa04-4588-a29b-954d119872b6"
        },
        "item": {
          "id": "c5b8bd5b-b52f-40e9-9350-da076ffecca0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e43c183b-168b-4a31-9ac1-644b1dbfd4b0",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "4897bcca-6d98-4979-83be-a95d98fbea5f",
        "cursor": {
          "ref": "dbfe33c5-dd04-4d9a-9b71-3d46fdfebae9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6f042117-971d-493c-a963-994dbec4b78e"
        },
        "item": {
          "id": "4897bcca-6d98-4979-83be-a95d98fbea5f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cbd2037e-e073-4be1-99a3-64d4353bbd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ab7efb-be50-4376-981a-745e80d3e204",
        "cursor": {
          "ref": "3d89c470-5c48-41a9-8bf1-18ac36b31047",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a05d9719-4b32-46b8-9004-733ebc3d14cf"
        },
        "item": {
          "id": "f6ab7efb-be50-4376-981a-745e80d3e204",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fccd629c-a2a5-4b0e-9706-156c1776ab36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e0a445-3a77-426c-8817-c8df1f39970b",
        "cursor": {
          "ref": "81387158-fb52-4776-939d-edc97bc6df0e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "43b53473-91d3-46f0-906f-84a0a7b09095"
        },
        "item": {
          "id": "46e0a445-3a77-426c-8817-c8df1f39970b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d2fe53e8-b255-44d5-b72b-51dbd1b3b658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c754998-1f73-4f04-9921-d38e957432d7",
        "cursor": {
          "ref": "842a886f-de8d-4b3e-8c3a-c3fe58eafb87",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "aa16a381-d0e9-4a29-b5e8-0ef0745ddda4"
        },
        "item": {
          "id": "0c754998-1f73-4f04-9921-d38e957432d7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4be17f32-0dbc-43d4-abd2-ab87a2a770ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a4b752-f67f-495c-9d33-7f2419630bb6",
        "cursor": {
          "ref": "49e564e4-6f8c-4b9a-88b0-4c3c3666daee",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "460524fa-c048-4957-af72-88585ed9c1a8"
        },
        "item": {
          "id": "a2a4b752-f67f-495c-9d33-7f2419630bb6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0d6fc4b4-4710-409d-b5d0-0eb34af0f77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5681d3fe-5555-4873-bd04-8cff10821053",
        "cursor": {
          "ref": "6057839e-9076-4826-be19-71551645596b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5b5ea2b4-0cb0-4706-b4f9-a0a8762cde8e"
        },
        "item": {
          "id": "5681d3fe-5555-4873-bd04-8cff10821053",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b239995b-cada-4eb9-9925-b00d5da935c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60308469-042d-4d38-bfe6-cea59eb662ec",
        "cursor": {
          "ref": "5b50e75d-a0ca-45dd-af94-37c0e7150746",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ce2e0f26-9fe5-4484-936a-b7a2d4826da6"
        },
        "item": {
          "id": "60308469-042d-4d38-bfe6-cea59eb662ec",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d7c94277-ef84-4ac3-adda-095d9a628592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6c5cab-1b62-4615-8acc-1bf7dc564a8e",
        "cursor": {
          "ref": "c73c4c2c-82ca-409d-83c4-bd450503dc0a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0f420b9f-0e7d-461f-81a6-b9892b5dee29"
        },
        "item": {
          "id": "4f6c5cab-1b62-4615-8acc-1bf7dc564a8e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c806d55b-b6cb-42f0-b29b-0025219088bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e000245-8735-4994-aea3-04369ea34748",
        "cursor": {
          "ref": "ee526533-0fe3-4b7e-8d92-9d7c34e98507",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "57be7d0c-4218-4f19-b66f-4ffdd22dfe35"
        },
        "item": {
          "id": "6e000245-8735-4994-aea3-04369ea34748",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bae0576f-61a2-4912-ad08-097fb7a9b772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df64d9a9-927b-4d6a-8920-90ad9ca8cfb0",
        "cursor": {
          "ref": "bbfbba0e-d8be-4f85-9dd9-6cacc38d1653",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "77b12dce-a95a-443a-be2f-42ddc2e764d0"
        },
        "item": {
          "id": "df64d9a9-927b-4d6a-8920-90ad9ca8cfb0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "37891bbf-ff6f-47d0-8a2d-50d6df2a50cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1935bed-42d9-46c0-98a7-099386197b0e",
        "cursor": {
          "ref": "9e930a4b-0c7b-4aba-a21e-5224987a1e5b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "979d4b90-b76c-4676-808c-605fbfdedec5"
        },
        "item": {
          "id": "b1935bed-42d9-46c0-98a7-099386197b0e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a57fec62-7e8d-4e14-9ab1-f5cbf45c4bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5921c175-402c-41d3-8c79-66d92943c97c",
        "cursor": {
          "ref": "0ca77ea9-0ddc-4e47-83b7-706cf0909ba4",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0b2740b6-e5e4-46d6-a104-cb1531e02885"
        },
        "item": {
          "id": "5921c175-402c-41d3-8c79-66d92943c97c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ee5aac42-b1c1-47f0-9ca1-a62bc5fc4092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4907ec5-bcfa-4a7b-b2c1-ddabde2ea81c",
        "cursor": {
          "ref": "fe4da1e3-7126-4030-8524-996b220ca1c5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b8286c10-22ba-4082-93b1-5f542c5c1dcd"
        },
        "item": {
          "id": "b4907ec5-bcfa-4a7b-b2c1-ddabde2ea81c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2e4c97ce-a411-499e-8327-9603171d834a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0ee53f-2163-4e3c-aa6d-b166da2ed148",
        "cursor": {
          "ref": "f6b78eff-fcb1-4d89-a2c7-8fc162649b76",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bf20acb7-0ec2-4ce2-bcf2-fcd9c1fe9d28"
        },
        "item": {
          "id": "dd0ee53f-2163-4e3c-aa6d-b166da2ed148",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "329cdfca-182c-4ec3-a0f7-74c512ba7051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dad431d-5473-4b8b-8947-e17b513a7b6e",
        "cursor": {
          "ref": "411e1e17-b1b1-4dd5-9ef0-8b4ae5610473",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3c016870-fe4b-406d-970a-73e8bba2db05"
        },
        "item": {
          "id": "5dad431d-5473-4b8b-8947-e17b513a7b6e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "256d4d6b-9b82-4130-87c4-cae7b90f4051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81860f7b-026d-4a46-af1d-d8b4696c2c27",
        "cursor": {
          "ref": "e11be10e-8876-4c02-94b3-784145f44f7f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "910cace0-1af2-4b31-b62b-f5b1c35349ec"
        },
        "item": {
          "id": "81860f7b-026d-4a46-af1d-d8b4696c2c27",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "23be5902-7122-4139-b020-7c3dd41310b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070d6aa4-2fc1-4bf8-ba75-a98dab7525bb",
        "cursor": {
          "ref": "dfecdb44-f257-415e-83b3-80049f4f02e9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ab2305dc-d89a-40cf-918b-f636a99f305d"
        },
        "item": {
          "id": "070d6aa4-2fc1-4bf8-ba75-a98dab7525bb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0ebf872b-fff7-4cb7-9a30-b58d081e654f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f1b2de-ac99-487a-bbc8-435f94178550",
        "cursor": {
          "ref": "06bd0a06-56d9-4274-8117-d65e019a715c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8bb49881-7163-4887-a8a3-6d26a1cdd957"
        },
        "item": {
          "id": "43f1b2de-ac99-487a-bbc8-435f94178550",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2ff5e649-0037-440e-b7d9-1976d87d9ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c555168b-41c1-4be3-9c5f-813ff1d1c1c9",
        "cursor": {
          "ref": "39263d81-0c59-4128-b113-fa6927e2edb7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6679a148-ef1d-46f9-8415-99ca700c9539"
        },
        "item": {
          "id": "c555168b-41c1-4be3-9c5f-813ff1d1c1c9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1d92dff5-a4cf-4b50-a9b7-f0e2a96fb242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f6ac80-9daa-4376-b4d7-59842819ea1c",
        "cursor": {
          "ref": "117aff0a-251b-438e-8be6-a8da5373b29e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "85a1ae56-5763-4589-b382-e7ae2fa73a8e"
        },
        "item": {
          "id": "60f6ac80-9daa-4376-b4d7-59842819ea1c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4c0b34d8-1fd6-4387-aa97-a52057c1edcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ff6fe7-5264-4970-9df2-1005429e3fa0",
        "cursor": {
          "ref": "ee6ad67f-2255-4483-b9aa-590f6b23edd7",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "58405f97-b7b2-4aed-bac6-793e9662316c"
        },
        "item": {
          "id": "b1ff6fe7-5264-4970-9df2-1005429e3fa0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8fb2fa8d-2b5d-430e-ada5-0cfb7fcd26e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1906bcea-5805-4ca7-964b-67e6186ec5cb",
        "cursor": {
          "ref": "4c86b7c9-d9d3-4482-9167-e1118c528c9a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "81dba81a-27eb-4a81-957b-e254d4b0fedf"
        },
        "item": {
          "id": "1906bcea-5805-4ca7-964b-67e6186ec5cb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e9aba2cb-8f19-4c16-8683-3d21a241796d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a99db1-e940-41d5-be8c-5b07bd9baf2a",
        "cursor": {
          "ref": "0f94dceb-37e0-46cb-b299-2b6435d2bdc0",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7904d0a6-523f-4df5-998f-9866c9b43d61"
        },
        "item": {
          "id": "31a99db1-e940-41d5-be8c-5b07bd9baf2a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a2c54cce-3024-4ae8-9322-98a586c94c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f400347-4af2-4a84-ae03-f134b8e90efe",
        "cursor": {
          "ref": "92c0175b-639e-4301-8138-15820d1a8eb7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e0b7ac00-f9b0-408e-ae25-d4a69562cd13"
        },
        "item": {
          "id": "1f400347-4af2-4a84-ae03-f134b8e90efe",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "23e21382-0c21-49f5-a41e-d02fd4718a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fde480-8305-4b77-8f41-96bc3cec9625",
        "cursor": {
          "ref": "f917004a-1e55-4a0b-bf4f-cfe191c6b267",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b169e3b0-be04-4e99-a05a-a614df713c5d"
        },
        "item": {
          "id": "b7fde480-8305-4b77-8f41-96bc3cec9625",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0ab3c670-3530-4ebf-85ab-50b37af6f4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ce8b2a-5d0d-4803-ba35-fc262f9c84c4",
        "cursor": {
          "ref": "340733b8-3feb-4951-a7e4-6271c72e0b22",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "959e26ea-a0d1-425e-8f7e-a491d50a56e7"
        },
        "item": {
          "id": "e2ce8b2a-5d0d-4803-ba35-fc262f9c84c4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "581a9492-bcf9-4166-b955-6a0ddc54b8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866a1521-e9aa-4ba0-b488-9bbc6e24a2a6",
        "cursor": {
          "ref": "2f4436bc-626b-417d-9a86-116090ba6620",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "87b55969-149a-40b9-8519-ba3340ca7ef9"
        },
        "item": {
          "id": "866a1521-e9aa-4ba0-b488-9bbc6e24a2a6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "43dcc212-37cc-4473-9066-4b7f8fcca3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610dfe49-f92a-4df1-a3d9-de4895805a81",
        "cursor": {
          "ref": "b8312675-d203-46ef-9d7a-e1bd9bec7c6a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "38856f66-5c98-4ddb-90f6-9fc64dd833a5"
        },
        "item": {
          "id": "610dfe49-f92a-4df1-a3d9-de4895805a81",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "40df7f93-9f0d-44b5-a17c-da09aade5033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa377855-4e58-4f92-9a97-e0b55a66c92a",
        "cursor": {
          "ref": "58d2fd1a-fd5f-4706-80f0-4c5b14fa8388",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b545f0f1-c79f-4f93-8c63-6d66e89603eb"
        },
        "item": {
          "id": "aa377855-4e58-4f92-9a97-e0b55a66c92a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b2c43d6b-7ca4-4387-82ed-2b5524ed90f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7489cbf-9c72-4821-8397-7218f2a69f17",
        "cursor": {
          "ref": "b35b35c5-262f-410d-9c88-d6546bf90744",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0da0ab37-d8db-4c96-ac02-c4362151aebb"
        },
        "item": {
          "id": "f7489cbf-9c72-4821-8397-7218f2a69f17",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "42694818-a003-4db4-9636-0d661dca6ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f906a6-beca-4831-8738-468bf636b5be",
        "cursor": {
          "ref": "1b884a38-247a-47bf-addc-328a385de763",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3de0ff1e-57d0-4a1d-bd2f-f5de7a94d19e"
        },
        "item": {
          "id": "f5f906a6-beca-4831-8738-468bf636b5be",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d676f6f0-f3fb-45f6-9f2d-885294bb9446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed46158d-b950-4689-baed-f501b404da86",
        "cursor": {
          "ref": "ea215732-3d9a-4bb6-8b39-eb2266ba1d7d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0dd3acc3-5e39-4cfc-b413-6e7e506aca7b"
        },
        "item": {
          "id": "ed46158d-b950-4689-baed-f501b404da86",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "49e97b38-7276-44c9-a1c8-3494978bb854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a62d32c-7afb-4575-a094-131a55c9f47c",
        "cursor": {
          "ref": "f4ae91c1-4353-4a99-81a3-6af23ea5912b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7a9884b0-7019-45f7-9e1c-e53a32a856a7"
        },
        "item": {
          "id": "4a62d32c-7afb-4575-a094-131a55c9f47c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "54cc57a8-2c3c-4f5f-b4ac-762897853527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f88e8df-3713-496e-9930-c470c6fac201",
        "cursor": {
          "ref": "fefd4b4c-f27e-4759-bf3c-3a32f29b84bb",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "165202b5-fcb5-4c5a-bccd-dbc512cf9861"
        },
        "item": {
          "id": "2f88e8df-3713-496e-9930-c470c6fac201",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "222509b5-9bd8-4f9e-aa4c-dd10d0b8f833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce10921a-5ec9-4657-a1e0-273ae7669199",
        "cursor": {
          "ref": "aff656d9-ea6a-433b-83e8-7df90c185b26",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4c7479b6-48b3-4a63-b12b-2a2b025cee93"
        },
        "item": {
          "id": "ce10921a-5ec9-4657-a1e0-273ae7669199",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "889c477c-3cc8-4a1e-a638-6f9a8eba8b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57146e66-e25a-4860-a7c0-4871cb896817",
        "cursor": {
          "ref": "087295bc-8fca-4cf5-b9c4-488ca9bc59b3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "30850149-51b1-4290-9d2a-cfada839c177"
        },
        "item": {
          "id": "57146e66-e25a-4860-a7c0-4871cb896817",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cabac634-32ab-47fb-bf42-3ee3c9f84f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93b78df-892d-465f-a919-75db074483c1",
        "cursor": {
          "ref": "99eb37f3-2aad-4436-a237-b2fae8699fff",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "48a1009d-228b-4800-83ee-114f5d9a8f0a"
        },
        "item": {
          "id": "c93b78df-892d-465f-a919-75db074483c1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ac47d80f-0206-4fe3-90b5-e5c528f4652a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b191e63f-adf8-434a-9a62-97cd4b7adccd",
        "cursor": {
          "ref": "d0685c6e-f81d-4e40-bc0d-c5cc7cf531c1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d6afe999-4416-433a-8c73-adc1aee21919"
        },
        "item": {
          "id": "b191e63f-adf8-434a-9a62-97cd4b7adccd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "34282dc2-9a46-421a-bbc7-87fb97caac8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a72427-3e1a-4e4f-8b91-ab0ccc7be315",
        "cursor": {
          "ref": "92b063e4-03a5-46cf-856d-730a07138e0e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "155d099f-830a-4a88-8d18-9f0ea9670758"
        },
        "item": {
          "id": "f5a72427-3e1a-4e4f-8b91-ab0ccc7be315",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3c29c268-cb9f-4fc6-ac3c-9a7f397fb7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc0cf6f-d299-46c7-81ce-250984a6c072",
        "cursor": {
          "ref": "d64a1a01-a752-4399-8517-8eb113c6ff39",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "375b0ded-1d2d-4e16-9c11-fedd4d32adc2"
        },
        "item": {
          "id": "6dc0cf6f-d299-46c7-81ce-250984a6c072",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "95c449f7-e759-488b-9266-6d347a7cb4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95b5a9f-8956-4fb0-a953-816945a4df49",
        "cursor": {
          "ref": "1b4be2f8-d57a-4d46-8375-e1ecfcb089ec",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2f95de08-6e6c-459a-ba31-2eafa02f5a01"
        },
        "item": {
          "id": "d95b5a9f-8956-4fb0-a953-816945a4df49",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "564da1fc-6aa1-4d3a-9208-31ff58ced1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7c8851-d6d7-466a-8c03-445ba0970f56",
        "cursor": {
          "ref": "302007d9-8d5b-4867-a3a3-9e263e7dc740",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "256c21e9-8801-4089-afd8-e51ad5d6b5c6"
        },
        "item": {
          "id": "ed7c8851-d6d7-466a-8c03-445ba0970f56",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5a2edd93-dc03-4a17-b4e5-7ba19e8d43b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f829be-9f88-4072-96f5-b73b55a63628",
        "cursor": {
          "ref": "71b72542-0ca9-4824-b4d6-b0195c778c8a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c74c5e3d-846a-4698-9110-58ce297784b9"
        },
        "item": {
          "id": "31f829be-9f88-4072-96f5-b73b55a63628",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "77e21cfc-83c2-49e4-aaac-bbf079b66f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a08364-fe7f-4441-a8d0-a626177b7ed1",
        "cursor": {
          "ref": "fce4e819-c226-40a1-b066-c8e9afdbe21b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fd561934-30da-4b75-ac4a-8c36a70e93e0"
        },
        "item": {
          "id": "59a08364-fe7f-4441-a8d0-a626177b7ed1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0cc94e45-2fdc-4be3-ab98-01b6e8400d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a526cc0e-6e66-4471-9966-1097f224f8a6",
        "cursor": {
          "ref": "7ee469da-1459-439f-81a4-896786cd0ef2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "84ca6c3e-49c2-43bc-b682-7302e227801d"
        },
        "item": {
          "id": "a526cc0e-6e66-4471-9966-1097f224f8a6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "288c35d1-0a2d-4141-b165-719c3c1facad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711a77f0-90e2-48fe-aa02-499590e5ce8f",
        "cursor": {
          "ref": "e6fc38b2-b078-45d4-bbff-9f302c312b31",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ab2becac-ed34-43c5-b153-662d1e16b626"
        },
        "item": {
          "id": "711a77f0-90e2-48fe-aa02-499590e5ce8f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8985131e-f957-4108-8a08-549ec861b7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c730b662-674a-4889-9a9b-18454d6d799f",
        "cursor": {
          "ref": "581d719f-90fb-4669-9746-0295dd55abc3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "aba40438-955c-4dd7-8dfa-ed364691994a"
        },
        "item": {
          "id": "c730b662-674a-4889-9a9b-18454d6d799f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1f5a0ce5-d738-4da1-a555-c3f92c7e70d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5db727f-b144-4f26-8b6b-62a29e9ca9ec",
        "cursor": {
          "ref": "33edb79e-9a8d-47eb-843a-4fc037544197",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d8be2a2c-2133-402e-89aa-f4f4db6e5147"
        },
        "item": {
          "id": "d5db727f-b144-4f26-8b6b-62a29e9ca9ec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "df2e3d4f-048b-4605-a7fc-3e00c3fa8b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c14d489-76e6-4d01-9dd1-0c6b26e215f3",
        "cursor": {
          "ref": "55b0fcda-98d6-4107-87e4-94a87ac46969",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7da561a6-4e75-490f-bec9-005a9758b75a"
        },
        "item": {
          "id": "9c14d489-76e6-4d01-9dd1-0c6b26e215f3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "de2745c0-4902-4c4b-a3a9-47ee7de99f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df3d74f-2540-4516-9b4a-f6f1d6ca5288",
        "cursor": {
          "ref": "3f4d4321-0d78-43d2-b1aa-936b6bc18531",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c6333573-8561-4c64-9dad-089fac353256"
        },
        "item": {
          "id": "0df3d74f-2540-4516-9b4a-f6f1d6ca5288",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "32fca429-3d52-473d-b36f-ce3be9019fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f49468d-941c-4f52-b16e-5f7711cc210e",
        "cursor": {
          "ref": "5632b465-65be-48fc-bfad-9c01a00da98f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8f845302-2f2b-45eb-96a6-7a4bd7426598"
        },
        "item": {
          "id": "0f49468d-941c-4f52-b16e-5f7711cc210e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f4c3c823-ce04-48b8-abca-5a9bf1881779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca6aa15-2b3b-4db0-b24d-8875c75a3a33",
        "cursor": {
          "ref": "3f5b1329-c06e-460d-b4b8-ce052f085050",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f396cd85-44a3-4e21-9a53-db62e39ae381"
        },
        "item": {
          "id": "1ca6aa15-2b3b-4db0-b24d-8875c75a3a33",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f66bffa9-54f3-4365-ad60-1a8ba657dbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eff56d0-d6d2-409d-be0c-eb009f7f25af",
        "cursor": {
          "ref": "8e314cf7-9f9e-4194-8e19-0cddddba9ba7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "245b2a14-0396-4b3e-b995-d24b3e36733f"
        },
        "item": {
          "id": "1eff56d0-d6d2-409d-be0c-eb009f7f25af",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "916e3c3b-e833-47c1-889b-4665ab599b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f680b5-ecdb-4c55-a740-220cf094ce14",
        "cursor": {
          "ref": "e1a60205-f1ec-4bc6-be1b-29e1d3ac4d8a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3a9cae53-f78c-49f5-ba86-7f51aafef748"
        },
        "item": {
          "id": "82f680b5-ecdb-4c55-a740-220cf094ce14",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6f191f72-7bee-48bb-853b-2a05b6176874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026f370c-5604-4e45-8a49-90e276d8b7f6",
        "cursor": {
          "ref": "61b67212-b079-4efb-bd2f-71071af7313d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b8479ac4-2691-47d2-a2b5-d1171e945073"
        },
        "item": {
          "id": "026f370c-5604-4e45-8a49-90e276d8b7f6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c62d32a2-f39a-47e6-91fe-81aaa9e754d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608b42c4-27b9-4709-862f-1dd06043872b",
        "cursor": {
          "ref": "2083c2f2-5b6e-4d39-8841-96460c1faf93",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3e3f8ce3-1874-402f-9b9f-7e7acd4218ba"
        },
        "item": {
          "id": "608b42c4-27b9-4709-862f-1dd06043872b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "09671d10-a560-4e24-8958-677de5c2718f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60655384-80d4-4f52-8e66-0ab2c089e254",
        "cursor": {
          "ref": "1178928f-0e23-40f3-a371-da5f08f81a89",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5efc7717-f948-4dd7-86ef-7922facbed6f"
        },
        "item": {
          "id": "60655384-80d4-4f52-8e66-0ab2c089e254",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "abc3c73f-72cb-48d0-aff0-11167aec26d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e4f30e-702d-4115-841d-8dedf1f16fbb",
        "cursor": {
          "ref": "903f13e7-61d3-4e0e-ba63-1320ee15f492",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d1db632b-faee-4b9b-b37b-7f37da2f70b4"
        },
        "item": {
          "id": "b2e4f30e-702d-4115-841d-8dedf1f16fbb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3a8e3244-dc7b-44ae-b078-2973814777c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cc0e74-7d8b-4d4a-ab9f-863b2aa62808",
        "cursor": {
          "ref": "9beca11f-8bf4-4e63-95c4-e91827330585",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "13641102-dc83-49a5-bcc7-cbaf05092a98"
        },
        "item": {
          "id": "97cc0e74-7d8b-4d4a-ab9f-863b2aa62808",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c854c02e-bbb2-400d-a113-2f34afa60b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a99239-29a6-45e1-b249-64537153569a",
        "cursor": {
          "ref": "49ce293f-28fd-47c5-a53f-5ea875eaa3a3",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d90de810-a0b3-45ba-ac3c-a0e8676fda38"
        },
        "item": {
          "id": "24a99239-29a6-45e1-b249-64537153569a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1d6b350c-e55d-4a4d-8422-b599bd22a8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cf987f-abdc-4419-8527-daa27256b167",
        "cursor": {
          "ref": "bf9a4e79-8e1e-4cb9-a556-c940f706d2fb",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "66b6e50a-2650-42d9-b244-23f0cb4693fa"
        },
        "item": {
          "id": "52cf987f-abdc-4419-8527-daa27256b167",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "574a2552-a4e1-48d7-a7ef-ab5e3b0e2ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea9e916-0dab-4f8c-812e-a9568f503f12",
        "cursor": {
          "ref": "bc1d0813-ad69-4f5c-9d53-cc3a4ea2bad4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3f07bbef-8139-43d0-a306-6f70dd96893a"
        },
        "item": {
          "id": "5ea9e916-0dab-4f8c-812e-a9568f503f12",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0cd570da-555e-458f-bb02-57712ad5418d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6671ab65-d180-4c97-a696-2cdc9a63ed1f",
        "cursor": {
          "ref": "a8ac4499-5a09-4f75-b0cf-63cfded5b37c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b8196d53-fe0c-4224-baaf-51a324cfbe1a"
        },
        "item": {
          "id": "6671ab65-d180-4c97-a696-2cdc9a63ed1f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0c73d856-1db0-4773-8bb1-c00e7e49d26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b485f902-87d0-4713-9974-d5177c8e6a08",
        "cursor": {
          "ref": "cbd4454c-62ed-4cde-b6ed-6e803fc04e3c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3be5563b-acd8-453b-b791-89e4f2223623"
        },
        "item": {
          "id": "b485f902-87d0-4713-9974-d5177c8e6a08",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "efc3a6d6-99c4-47f8-80a6-113d53259740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca03cfa-d55a-4a69-a007-1f27edac143b",
        "cursor": {
          "ref": "6b5d1ebd-004a-4d71-bbec-c6d096d83b3f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "60ffa272-4bfd-46b9-99a1-f4e55f245b66"
        },
        "item": {
          "id": "7ca03cfa-d55a-4a69-a007-1f27edac143b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3f408706-74b1-47f7-9fcb-15b4b9845ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ef2b43-ab98-4ec1-b09a-d992980ace39",
        "cursor": {
          "ref": "27cc0c11-42e8-466f-a004-b42b93db91e1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9efed28f-b78c-41e2-be20-fc59b7f28614"
        },
        "item": {
          "id": "b7ef2b43-ab98-4ec1-b09a-d992980ace39",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f552bfb1-d01d-4ffa-a989-f22dfdbfe350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133a412e-03bd-43cb-8a04-a93069a8a2cd",
        "cursor": {
          "ref": "30cdaaf2-a4da-4267-bbcf-ece7f95de70e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "33cb5f8d-02bf-4782-8b24-6352d2697066"
        },
        "item": {
          "id": "133a412e-03bd-43cb-8a04-a93069a8a2cd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "21b76b16-66d5-434a-9313-34cf7116b0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6e11e2-7129-43bf-9ac9-640a8dcd8217",
        "cursor": {
          "ref": "5a03a5ee-6c8b-44da-8d49-5881918428a5",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "46bbc20d-c245-47ed-86e7-be9678ac6dfd"
        },
        "item": {
          "id": "5e6e11e2-7129-43bf-9ac9-640a8dcd8217",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3ded20fd-c6f4-4b85-9a51-12f7dc57fb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078acd8d-86fe-4a25-a6f6-552bc0c1d622",
        "cursor": {
          "ref": "bb8defe3-2c71-4342-bc22-b1c4ac6aecfa",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c59d2814-3521-41b8-934f-d9d2294c62f6"
        },
        "item": {
          "id": "078acd8d-86fe-4a25-a6f6-552bc0c1d622",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "703db9c0-af81-4b6a-b836-dfc6e7b8a3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122dbb20-40d7-4605-806c-c1493fe0ddef",
        "cursor": {
          "ref": "fc76b123-de74-4e82-98b6-4a0ee9299152",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "278d61a8-51fe-4fb8-90a2-d0bf4862a203"
        },
        "item": {
          "id": "122dbb20-40d7-4605-806c-c1493fe0ddef",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "55d8e409-7ba2-4195-9c96-782750e16c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1899e4c6-c053-426a-8722-c70282ae6570",
        "cursor": {
          "ref": "3532e29d-a2b3-4086-b1f7-e58dbb77984e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3bf53380-91a7-476b-b126-dd0914972b80"
        },
        "item": {
          "id": "1899e4c6-c053-426a-8722-c70282ae6570",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e1daee6b-5841-4d1f-8f75-568c2dc90915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8ba47a-7e3a-4add-8d1e-37c1687e92d3",
        "cursor": {
          "ref": "e1af86c6-1138-498d-9157-7f1f1511affa",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c5c9c665-d23e-477e-98f5-a32875c3302d"
        },
        "item": {
          "id": "6a8ba47a-7e3a-4add-8d1e-37c1687e92d3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d17db144-9fec-4a2c-a52d-9fc7149506a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4d3180-6b1f-4ef3-93d8-0f3877b7acf9",
        "cursor": {
          "ref": "9669f85f-42cd-4a6b-8d67-c372488f0fd0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5885233c-ab2f-4dd1-b8fd-bd7afb50d194"
        },
        "item": {
          "id": "3c4d3180-6b1f-4ef3-93d8-0f3877b7acf9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f391df59-ddeb-4043-8ec1-5ee89b7491fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038858cd-b8c7-48a8-adbb-38ac90d87126",
        "cursor": {
          "ref": "1105b23d-7058-4819-a68e-3edbcf98c7c4",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7e6aa73b-0cd1-45fb-9aa1-f1c8990815b2"
        },
        "item": {
          "id": "038858cd-b8c7-48a8-adbb-38ac90d87126",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d940e5d5-bc29-444e-ab88-dd456d01f017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dd7fb1-56ca-439e-ba2a-7927e417f92b",
        "cursor": {
          "ref": "3f5443a4-c5a5-4e15-b0ba-827ba1d88662",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f64c3781-0509-4258-8d6f-54d3ed8745ef"
        },
        "item": {
          "id": "b3dd7fb1-56ca-439e-ba2a-7927e417f92b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b6fc1a8f-404d-4014-8f4f-2853fdcdfc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db87a4e5-0329-4fc3-bfeb-bebeb44b0d1d",
        "cursor": {
          "ref": "d8549189-168c-4d89-80ed-9c6ac9b7fb8d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "75cf6d15-ade9-4cf7-a945-31f447065149"
        },
        "item": {
          "id": "db87a4e5-0329-4fc3-bfeb-bebeb44b0d1d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "acc4f4f8-0ab5-4457-821e-9f2767dc3dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d611d3-21f6-479d-9001-d09144f6c999",
        "cursor": {
          "ref": "0bd0202a-be60-4029-9e2e-455725d37341",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d894f4ef-6f14-4046-891e-e080cbde2495"
        },
        "item": {
          "id": "f7d611d3-21f6-479d-9001-d09144f6c999",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "17203f75-1712-4eab-b8cc-0e42e2115e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95115a55-e3f3-485d-b47f-592a7f09a4e7",
        "cursor": {
          "ref": "10cb132b-fccd-4ee4-a08d-83f3fa52a1d2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "be886aee-27c2-4af6-9f4c-ef00db4c9209"
        },
        "item": {
          "id": "95115a55-e3f3-485d-b47f-592a7f09a4e7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4a9d0571-bdd8-4839-bf0b-71bcb279180c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282dc400-c0a3-468b-9c50-51b6e03efcba",
        "cursor": {
          "ref": "5c80905c-f899-4af5-833f-03dfe86bafb1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d3be1363-cbd3-4577-ad42-4e3b6323fbd8"
        },
        "item": {
          "id": "282dc400-c0a3-468b-9c50-51b6e03efcba",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "221447da-4ac8-430f-a8e8-07871d054efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3e9ad6-f75e-43c7-b53c-8373474d2e9a",
        "cursor": {
          "ref": "d5c1557f-9491-456c-937e-175e9d8a9008",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "77f74998-50ad-444c-ae65-54117ba748d4"
        },
        "item": {
          "id": "8c3e9ad6-f75e-43c7-b53c-8373474d2e9a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cfeb5dc3-5896-458e-9125-baf5f60e02e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e4324b-d7f2-47bc-b8af-693a762ea463",
        "cursor": {
          "ref": "3b813fbb-2894-49ad-bef6-ee33aabc1cce",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4b82f156-0b87-43f6-b42d-8d7d32a3fcd6"
        },
        "item": {
          "id": "99e4324b-d7f2-47bc-b8af-693a762ea463",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "abe22685-6eee-47be-9101-f7d2e3d4bf1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a5b2b3-0acb-4e97-80dc-96f7cc8dba97",
        "cursor": {
          "ref": "7b4a2fea-c149-4e06-bba4-231d51078d9f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "13bd17df-2a5c-4ba9-8e27-f65869a4eb83"
        },
        "item": {
          "id": "43a5b2b3-0acb-4e97-80dc-96f7cc8dba97",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "27bf574b-459e-4464-8b62-d113d8b72626",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "50001233-4a80-41ff-9bce-46dff33224c9",
        "cursor": {
          "ref": "3254b6a8-f5b3-424c-9252-595d69969c69",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2b047a82-78e5-4b7b-ba6a-2908913be434"
        },
        "item": {
          "id": "50001233-4a80-41ff-9bce-46dff33224c9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fe16bc3a-5a80-4caf-9155-5a63ec10e48f",
          "status": "OK",
          "code": 200,
          "responseTime": 2891,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2982a7c9-1db1-4604-86df-482881fb6e23",
        "cursor": {
          "ref": "c59a80a2-b8dc-46a0-b563-03667cf6313d",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f8f751b6-99c4-4953-b2bc-e3f45ecc8de7"
        },
        "item": {
          "id": "2982a7c9-1db1-4604-86df-482881fb6e23",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "375d40d6-f49a-4b06-8d16-58445b061209",
          "status": "OK",
          "code": 200,
          "responseTime": 2753,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73e3597-07b8-4500-9225-ae554bceee6a",
        "cursor": {
          "ref": "a434de91-3828-451c-a7b5-741b7b225111",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "33d26773-869b-4942-a9ca-6e0b2cb51ecc"
        },
        "item": {
          "id": "f73e3597-07b8-4500-9225-ae554bceee6a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "251a6ce1-a998-4506-a332-b552ba71f592",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73e3597-07b8-4500-9225-ae554bceee6a",
        "cursor": {
          "ref": "a434de91-3828-451c-a7b5-741b7b225111",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "33d26773-869b-4942-a9ca-6e0b2cb51ecc"
        },
        "item": {
          "id": "f73e3597-07b8-4500-9225-ae554bceee6a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "251a6ce1-a998-4506-a332-b552ba71f592",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d62be7-c608-4160-8081-fc9cf0d26f86",
        "cursor": {
          "ref": "ea8366af-a225-470e-bce7-7591d8cf53cb",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "42c5fc1d-3e12-4b4a-a3a4-7a2c3f1eadf4"
        },
        "item": {
          "id": "56d62be7-c608-4160-8081-fc9cf0d26f86",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79f29a5b-2df2-4963-884f-13f78ada5855",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec836ff-8884-4502-8514-3a308ac34a0b",
        "cursor": {
          "ref": "0e7b787d-71fd-4093-97e7-e7caa4902c45",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ca1b486d-4989-4485-a5b0-2110a3db6200"
        },
        "item": {
          "id": "8ec836ff-8884-4502-8514-3a308ac34a0b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6deb3f63-af81-408f-8e7f-c5d66360444c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}